/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/../node_modules/@walletconnect/core/dist/index.es.js":
/*!************************************************************!*\
  !*** ../node_modules/@walletconnect/core/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ X),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Xe),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ ue),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Qe),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ O),\n/* harmony export */   CORE_VERSION: () => (/* binding */ We),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ le),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ Ze),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ et),\n/* harmony export */   Core: () => (/* binding */ Ar),\n/* harmony export */   Crypto: () => (/* binding */ _t),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ It),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ pr),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ v),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ Ct),\n/* harmony export */   Expirer: () => (/* binding */ kt),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ wt),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ R),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ vt),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ Mt),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ tt),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ it),\n/* harmony export */   KeyChain: () => (/* binding */ Rt),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ st),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ rt),\n/* harmony export */   MessageTracker: () => (/* binding */ St),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ ft),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ gr),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ B),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ F),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ Et),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ bt),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ at),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ nt),\n/* harmony export */   Pairing: () => (/* binding */ $t),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ ct),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ ht),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ ot),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ de),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ D),\n/* harmony export */   RELAYER_FAILOVER_RELAY_URL: () => (/* binding */ ge),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ T),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ lt),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ dt),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ lr),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ ut),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ gt),\n/* harmony export */   Relayer: () => (/* binding */ zt),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ pt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ yt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ dr),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ w),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ mt),\n/* harmony export */   Store: () => (/* binding */ Ft),\n/* harmony export */   Subscriber: () => (/* binding */ xt),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ Q),\n/* harmony export */   VERIFY_FALLBACK_SERVER: () => (/* binding */ pe),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ Z),\n/* harmony export */   Verify: () => (/* binding */ Kt),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ Dt),\n/* harmony export */   \"default\": () => (/* binding */ ee)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/../node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/../node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/../node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Ki(r, e) {\n    if (r.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), i = 0; i < t.length; i++)t[i] = 255;\n    for(var s = 0; s < r.length; s++){\n        var n = r.charAt(s), a = n.charCodeAt(0);\n        if (t[a] !== 255) throw new TypeError(n + \" is ambiguous\");\n        t[a] = s;\n    }\n    var o = r.length, h = r.charAt(0), u = Math.log(o) / Math.log(256), d = Math.log(256) / Math.log(o);\n    function p(c) {\n        if (c instanceof Uint8Array || (ArrayBuffer.isView(c) ? c = new Uint8Array(c.buffer, c.byteOffset, c.byteLength) : Array.isArray(c) && (c = Uint8Array.from(c))), !(c instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (c.length === 0) return \"\";\n        for(var m = 0, z = 0, I = 0, _ = c.length; I !== _ && c[I] === 0;)I++, m++;\n        for(var S = (_ - I) * d + 1 >>> 0, b = new Uint8Array(S); I !== _;){\n            for(var P = c[I], A = 0, C = S - 1; (P !== 0 || A < z) && C !== -1; C--, A++)P += 256 * b[C] >>> 0, b[C] = P % o >>> 0, P = P / o >>> 0;\n            if (P !== 0) throw new Error(\"Non-zero carry\");\n            z = A, I++;\n        }\n        for(var x = S - z; x !== S && b[x] === 0;)x++;\n        for(var q = h.repeat(m); x < S; ++x)q += r.charAt(b[x]);\n        return q;\n    }\n    function y(c) {\n        if (typeof c != \"string\") throw new TypeError(\"Expected String\");\n        if (c.length === 0) return new Uint8Array;\n        var m = 0;\n        if (c[m] !== \" \") {\n            for(var z = 0, I = 0; c[m] === h;)z++, m++;\n            for(var _ = (c.length - m) * u + 1 >>> 0, S = new Uint8Array(_); c[m];){\n                var b = t[c.charCodeAt(m)];\n                if (b === 255) return;\n                for(var P = 0, A = _ - 1; (b !== 0 || P < I) && A !== -1; A--, P++)b += o * S[A] >>> 0, S[A] = b % 256 >>> 0, b = b / 256 >>> 0;\n                if (b !== 0) throw new Error(\"Non-zero carry\");\n                I = P, m++;\n            }\n            if (c[m] !== \" \") {\n                for(var C = _ - I; C !== _ && S[C] === 0;)C++;\n                for(var x = new Uint8Array(z + (_ - C)), q = z; C !== _;)x[q++] = S[C++];\n                return x;\n            }\n        }\n    }\n    function $(c) {\n        var m = y(c);\n        if (m) return m;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: p,\n        decodeUnsafe: y,\n        decode: $\n    };\n}\nvar Bi = Ki, Vi = Bi;\nconst ze = (r)=>{\n    if (r instanceof Uint8Array && r.constructor.name === \"Uint8Array\") return r;\n    if (r instanceof ArrayBuffer) return new Uint8Array(r);\n    if (ArrayBuffer.isView(r)) return new Uint8Array(r.buffer, r.byteOffset, r.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, qi = (r)=>new TextEncoder().encode(r), ji = (r)=>new TextDecoder().decode(r);\nclass Yi {\n    constructor(e, t, i){\n        this.name = e, this.prefix = t, this.baseEncode = i;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass Gi {\n    constructor(e, t, i){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return Ne(this, e);\n    }\n}\nclass Hi {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return Ne(this, e);\n    }\n    decode(e) {\n        const t = e[0], i = this.decoders[t];\n        if (i) return i.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst Ne = (r, e)=>new Hi({\n        ...r.decoders || {\n            [r.prefix]: r\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass Ji {\n    constructor(e, t, i, s){\n        this.name = e, this.prefix = t, this.baseEncode = i, this.baseDecode = s, this.encoder = new Yi(e, t, i), this.decoder = new Gi(e, t, s);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst W = ({ name: r, prefix: e, encode: t, decode: i })=>new Ji(r, e, t, i), K = ({ prefix: r, name: e, alphabet: t })=>{\n    const { encode: i, decode: s } = Vi(t, e);\n    return W({\n        prefix: r,\n        name: e,\n        encode: i,\n        decode: (n)=>ze(s(n))\n    });\n}, Wi = (r, e, t, i)=>{\n    const s = {};\n    for(let d = 0; d < e.length; ++d)s[e[d]] = d;\n    let n = r.length;\n    for(; r[n - 1] === \"=\";)--n;\n    const a = new Uint8Array(n * t / 8 | 0);\n    let o = 0, h = 0, u = 0;\n    for(let d = 0; d < n; ++d){\n        const p = s[r[d]];\n        if (p === void 0) throw new SyntaxError(`Non-${i} character`);\n        h = h << t | p, o += t, o >= 8 && (o -= 8, a[u++] = 255 & h >> o);\n    }\n    if (o >= t || 255 & h << 8 - o) throw new SyntaxError(\"Unexpected end of data\");\n    return a;\n}, Xi = (r, e, t)=>{\n    const i = e[e.length - 1] === \"=\", s = (1 << t) - 1;\n    let n = \"\", a = 0, o = 0;\n    for(let h = 0; h < r.length; ++h)for(o = o << 8 | r[h], a += 8; a > t;)a -= t, n += e[s & o >> a];\n    if (a && (n += e[s & o << t - a]), i) for(; n.length * t & 7;)n += \"=\";\n    return n;\n}, g = ({ name: r, prefix: e, bitsPerChar: t, alphabet: i })=>W({\n        prefix: e,\n        name: r,\n        encode (s) {\n            return Xi(s, i, t);\n        },\n        decode (s) {\n            return Wi(s, i, t, r);\n        }\n    }), Qi = W({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (r)=>ji(r),\n    decode: (r)=>qi(r)\n});\nvar Zi = Object.freeze({\n    __proto__: null,\n    identity: Qi\n});\nconst es = g({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar ts = Object.freeze({\n    __proto__: null,\n    base2: es\n});\nconst is = g({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar ss = Object.freeze({\n    __proto__: null,\n    base8: is\n});\nconst rs = K({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar ns = Object.freeze({\n    __proto__: null,\n    base10: rs\n});\nconst as = g({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), os = g({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar hs = Object.freeze({\n    __proto__: null,\n    base16: as,\n    base16upper: os\n});\nconst cs = g({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), us = g({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), ls = g({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), ds = g({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), gs = g({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), ps = g({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), Ds = g({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), ys = g({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), ms = g({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar bs = Object.freeze({\n    __proto__: null,\n    base32: cs,\n    base32upper: us,\n    base32pad: ls,\n    base32padupper: ds,\n    base32hex: gs,\n    base32hexupper: ps,\n    base32hexpad: Ds,\n    base32hexpadupper: ys,\n    base32z: ms\n});\nconst fs = K({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), Es = K({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar ws = Object.freeze({\n    __proto__: null,\n    base36: fs,\n    base36upper: Es\n});\nconst vs = K({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), Is = K({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar Cs = Object.freeze({\n    __proto__: null,\n    base58btc: vs,\n    base58flickr: Is\n});\nconst Rs = g({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), _s = g({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), Ss = g({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), Ps = g({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar Ts = Object.freeze({\n    __proto__: null,\n    base64: Rs,\n    base64pad: _s,\n    base64url: Ss,\n    base64urlpad: Ps\n});\nconst Le = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), xs = Le.reduce((r, e, t)=>(r[t] = e, r), []), Os = Le.reduce((r, e, t)=>(r[e.codePointAt(0)] = t, r), []);\nfunction As(r) {\n    return r.reduce((e, t)=>(e += xs[t], e), \"\");\n}\nfunction zs(r) {\n    const e = [];\n    for (const t of r){\n        const i = Os[t.codePointAt(0)];\n        if (i === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(i);\n    }\n    return new Uint8Array(e);\n}\nconst Ns = W({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: As,\n    decode: zs\n});\nvar Ls = Object.freeze({\n    __proto__: null,\n    base256emoji: Ns\n}), Us = Fe, Ue = 128, Fs = 127, $s = ~Fs, Ms = Math.pow(2, 31);\nfunction Fe(r, e, t) {\n    e = e || [], t = t || 0;\n    for(var i = t; r >= Ms;)e[t++] = r & 255 | Ue, r /= 128;\n    for(; r & $s;)e[t++] = r & 255 | Ue, r >>>= 7;\n    return e[t] = r | 0, Fe.bytes = t - i + 1, e;\n}\nvar ks = oe, Ks = 128, $e = 127;\nfunction oe(r, i) {\n    var t = 0, i = i || 0, s = 0, n = i, a, o = r.length;\n    do {\n        if (n >= o) throw oe.bytes = 0, new RangeError(\"Could not decode varint\");\n        a = r[n++], t += s < 28 ? (a & $e) << s : (a & $e) * Math.pow(2, s), s += 7;\n    }while (a >= Ks);\n    return oe.bytes = n - i, t;\n}\nvar Bs = Math.pow(2, 7), Vs = Math.pow(2, 14), qs = Math.pow(2, 21), js = Math.pow(2, 28), Ys = Math.pow(2, 35), Gs = Math.pow(2, 42), Hs = Math.pow(2, 49), Js = Math.pow(2, 56), Ws = Math.pow(2, 63), Xs = function(r) {\n    return r < Bs ? 1 : r < Vs ? 2 : r < qs ? 3 : r < js ? 4 : r < Ys ? 5 : r < Gs ? 6 : r < Hs ? 7 : r < Js ? 8 : r < Ws ? 9 : 10;\n}, Qs = {\n    encode: Us,\n    decode: ks,\n    encodingLength: Xs\n}, Me = Qs;\nconst ke = (r, e, t = 0)=>(Me.encode(r, e, t), e), Ke = (r)=>Me.encodingLength(r), he = (r, e)=>{\n    const t = e.byteLength, i = Ke(r), s = i + Ke(t), n = new Uint8Array(s + t);\n    return ke(r, n, 0), ke(t, n, i), n.set(e, s), new Zs(r, t, e, n);\n};\nclass Zs {\n    constructor(e, t, i, s){\n        this.code = e, this.size = t, this.digest = i, this.bytes = s;\n    }\n}\nconst Be = ({ name: r, code: e, encode: t })=>new er(r, e, t);\nclass er {\n    constructor(e, t, i){\n        this.name = e, this.code = t, this.encode = i;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? he(this.code, t) : t.then((i)=>he(this.code, i));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst Ve = (r)=>async (e)=>new Uint8Array(await crypto.subtle.digest(r, e)), tr = Be({\n    name: \"sha2-256\",\n    code: 18,\n    encode: Ve(\"SHA-256\")\n}), ir = Be({\n    name: \"sha2-512\",\n    code: 19,\n    encode: Ve(\"SHA-512\")\n});\nvar sr = Object.freeze({\n    __proto__: null,\n    sha256: tr,\n    sha512: ir\n});\nconst qe = 0, rr = \"identity\", je = ze, nr = (r)=>he(qe, je(r)), ar = {\n    code: qe,\n    name: rr,\n    encode: je,\n    digest: nr\n};\nvar or = Object.freeze({\n    __proto__: null,\n    identity: ar\n});\nnew TextEncoder, new TextDecoder;\nconst Ye = {\n    ...Zi,\n    ...ts,\n    ...ss,\n    ...ns,\n    ...hs,\n    ...bs,\n    ...ws,\n    ...Cs,\n    ...Ts,\n    ...Ls\n};\n({\n    ...sr,\n    ...or\n});\nfunction Ge(r) {\n    return globalThis.Buffer != null ? new Uint8Array(r.buffer, r.byteOffset, r.byteLength) : r;\n}\nfunction hr(r = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Ge(globalThis.Buffer.allocUnsafe(r)) : new Uint8Array(r);\n}\nfunction He(r, e, t, i) {\n    return {\n        name: r,\n        prefix: e,\n        encoder: {\n            name: r,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: i\n        }\n    };\n}\nconst Je = He(\"utf8\", \"u\", (r)=>\"u\" + new TextDecoder(\"utf8\").decode(r), (r)=>new TextEncoder().encode(r.substring(1))), ce = He(\"ascii\", \"a\", (r)=>{\n    let e = \"a\";\n    for(let t = 0; t < r.length; t++)e += String.fromCharCode(r[t]);\n    return e;\n}, (r)=>{\n    r = r.substring(1);\n    const e = hr(r.length);\n    for(let t = 0; t < r.length; t++)e[t] = r.charCodeAt(t);\n    return e;\n}), cr = {\n    utf8: Je,\n    \"utf-8\": Je,\n    hex: Ye.base16,\n    latin1: ce,\n    ascii: ce,\n    binary: ce,\n    ...Ye\n};\nfunction ur(r, e = \"utf8\") {\n    const t = cr[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Ge(globalThis.Buffer.from(r, \"utf-8\")) : t.decoder.decode(`${t.prefix}${r}`);\n}\nconst ue = \"wc\", We = 2, X = \"core\", O = `${ue}@2:${X}:`, Xe = {\n    name: X,\n    logger: \"error\"\n}, Qe = {\n    database: \":memory:\"\n}, Ze = \"crypto\", le = \"client_ed25519_seed\", et = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, tt = \"keychain\", it = \"0.3\", st = \"messages\", rt = \"0.3\", nt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.SIX_HOURS, at = \"publisher\", ot = \"irn\", ht = \"error\", de = \"wss://relay.walletconnect.com\", ge = \"wss://relay.walletconnect.org\", ct = \"relayer\", D = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, ut = \"_subscription\", T = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, lt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND, lr = {\n    database: \":memory:\"\n}, dt = \"2.10.2\", gt = 1e4, pt = \"0.3\", Dt = \"WALLETCONNECT_CLIENT_ID\", w = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, dr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, yt = \"subscription\", mt = \"0.3\", bt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS * 1e3, ft = \"pairing\", Et = \"0.3\", gr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, F = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, B = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, R = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, wt = \"history\", vt = \"0.3\", It = \"expirer\", v = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, Ct = \"0.3\", pr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, Q = \"verify-api\", Z = \"https://verify.walletconnect.com\", pe = \"https://verify.walletconnect.org\";\nclass Rt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = tt, this.version = it, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                const i = await this.getKeyChain();\n                typeof i < \"u\" && (this.keychain = i), this.initialized = !0;\n            }\n        }, this.has = (i)=>(this.isInitialized(), this.keychain.has(i)), this.set = async (i, s)=>{\n            this.isInitialized(), this.keychain.set(i, s), await this.persist();\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.keychain.get(i);\n            if (typeof s > \"u\") {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${i}`);\n                throw new Error(n);\n            }\n            return s;\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.keychain.delete(i), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass _t {\n    constructor(e, t, i){\n        this.core = e, this.logger = t, this.name = Ze, this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (s)=>(this.isInitialized(), this.keychain.has(s)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const s = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(s);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.encodeIss(n.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateKeyPair)();\n            return this.setPrivateKey(s.publicKey, s.privateKey);\n        }, this.signJWT = async (s)=>{\n            this.isInitialized();\n            const n = await this.getClientSeed(), a = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(n), o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), h = et;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.signJWT(o, s, h, a);\n        }, this.generateSharedKey = (s, n, a)=>{\n            this.isInitialized();\n            const o = this.getPrivateKey(s), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deriveSymKey)(o, n);\n            return this.setSymKey(h, a);\n        }, this.setSymKey = async (s, n)=>{\n            this.isInitialized();\n            const a = n || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashKey)(s);\n            return await this.keychain.set(a, s), a;\n        }, this.deleteKeyPair = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.deleteSymKey = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.encode = async (s, n, a)=>{\n            this.isInitialized();\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateEncoding)(a), h = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonStringify)(n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(o)) {\n                const y = o.senderPublicKey, $ = o.receiverPublicKey;\n                s = await this.generateSharedKey(y, $);\n            }\n            const u = this.getSymKey(s), { type: d, senderPublicKey: p } = o;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.encrypt)({\n                type: d,\n                symKey: u,\n                message: h,\n                senderPublicKey: p\n            });\n        }, this.decode = async (s, n, a)=>{\n            this.isInitialized();\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateDecoding)(n, a);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(o)) {\n                const h = o.receiverPublicKey, u = o.senderPublicKey;\n                s = await this.generateSharedKey(h, u);\n            }\n            try {\n                const h = this.getSymKey(s), u = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decrypt)({\n                    symKey: h,\n                    encoded: n\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonParse)(u);\n            } catch (h) {\n                this.logger.error(`Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`), this.logger.error(h);\n            }\n        }, this.getPayloadType = (s)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)(s);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decodeTypeByte)(n.type);\n        }, this.getPayloadSenderPublicKey = (s)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)(s);\n            return n.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_6__.toString)(n.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = i || new Rt(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(le);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), await this.keychain.set(le, e);\n        }\n        return ur(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass St extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = st, this.version = rt, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const i = await this.getRelayerMessages();\n                    typeof i < \"u\" && (this.messages = i), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (i) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (i, s)=>{\n            this.isInitialized();\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(s);\n            let a = this.messages.get(i);\n            return typeof a > \"u\" && (a = {}), typeof a[n] < \"u\" || (a[n] = s, this.messages.set(i, a), await this.persist()), n;\n        }, this.get = (i)=>{\n            this.isInitialized();\n            let s = this.messages.get(i);\n            return typeof s > \"u\" && (s = {}), s;\n        }, this.has = (i, s)=>{\n            this.isInitialized();\n            const n = this.get(i), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(s);\n            return typeof n[a] < \"u\";\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.messages.delete(i), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Dr extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = at, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.TEN_SECONDS), this.needsTransportRestart = !1, this.publish = async (i, s, n)=>{\n            var a;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: i,\n                    message: s,\n                    opts: n\n                }\n            });\n            try {\n                const o = n?.ttl || nt, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(n), u = n?.prompt || !1, d = n?.tag || 0, p = n?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), y = {\n                    topic: i,\n                    message: s,\n                    opts: {\n                        ttl: o,\n                        relay: h,\n                        prompt: u,\n                        tag: d,\n                        id: p\n                    }\n                }, $ = setTimeout(()=>this.queue.set(p, y), this.publishTimeout);\n                try {\n                    await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.rpcPublish(i, s, o, h, u, d, p), this.publishTimeout, \"Failed to publish payload, please try again.\"), this.removeRequestFromQueue(p), this.relayer.events.emit(D.publish, y);\n                } catch (c) {\n                    if (this.logger.debug(\"Publishing Payload stalled\"), this.needsTransportRestart = !0, (a = n?.internal) != null && a.throwOnFailedPublish) throw this.removeRequestFromQueue(p), c;\n                    return;\n                } finally{\n                    clearTimeout($);\n                }\n                this.logger.debug(\"Successfully Published Payload\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        topic: i,\n                        message: s,\n                        opts: n\n                    }\n                });\n            } catch (o) {\n                throw this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(o), o;\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    rpcPublish(e, t, i, s, n, a, o) {\n        var h, u, d, p;\n        const y = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(s.protocol).publish,\n            params: {\n                topic: e,\n                message: t,\n                ttl: i,\n                prompt: n,\n                tag: a\n            },\n            id: o\n        };\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((h = y.params) == null ? void 0 : h.prompt) && ((u = y.params) == null || delete u.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((d = y.params) == null ? void 0 : d.tag) && ((p = y.params) == null || delete p.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: y\n        }), this.relayer.request(y);\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e)=>{\n            const { topic: t, message: i, opts: s } = e;\n            await this.publish(t, i, s);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(D.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(D.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass yr {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const i = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...i,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const i = this.get(e);\n            if (!this.exists(e, t)) return;\n            const s = i.filter((n)=>n !== t);\n            if (!s.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, s);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar mr = Object.defineProperty, br = Object.defineProperties, fr = Object.getOwnPropertyDescriptors, Pt = Object.getOwnPropertySymbols, Er = Object.prototype.hasOwnProperty, wr = Object.prototype.propertyIsEnumerable, Tt = (r, e, t)=>e in r ? mr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, V = (r, e)=>{\n    for(var t in e || (e = {}))Er.call(e, t) && Tt(r, t, e[t]);\n    if (Pt) for (var t of Pt(e))wr.call(e, t) && Tt(r, t, e[t]);\n    return r;\n}, De = (r, e)=>br(r, fr(e));\nclass xt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new yr, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = yt, this.version = mt, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = O, this.subscribeTimeout = 1e4, this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());\n        }, this.subscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: i,\n                    opts: s\n                }\n            });\n            try {\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(s), a = {\n                    topic: i,\n                    relay: n\n                };\n                this.pending.set(i, a);\n                const o = await this.rpcSubscribe(i, n);\n                return this.onSubscribe(o, a), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: i,\n                        opts: s\n                    }\n                }), o;\n            } catch (n) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(n), n;\n            }\n        }, this.unsubscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof s?.id < \"u\" ? await this.unsubscribeById(i, s.id, s) : await this.unsubscribeByTopic(i, s);\n        }, this.isSubscribed = async (i)=>this.topics.includes(i) ? !0 : await new Promise((s, n)=>{\n                const a = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.Watch;\n                a.start(this.pendingSubscriptionWatchLabel);\n                const o = setInterval(()=>{\n                    !this.pending.has(i) && this.topics.includes(i) && (clearInterval(o), a.stop(this.pendingSubscriptionWatchLabel), s(!0)), a.elapsed(this.pendingSubscriptionWatchLabel) >= bt && (clearInterval(o), a.stop(this.pendingSubscriptionWatchLabel), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1), this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.restart = async ()=>{\n            this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1;\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let i = !1;\n        try {\n            i = this.getSubscription(e).topic === t;\n        } catch  {}\n        return i;\n    }\n    onEnable() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const i = this.topicMap.get(e);\n        await Promise.all(i.map(async (s)=>await this.unsubscribeById(e, s, t)));\n    }\n    async unsubscribeById(e, t, i) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: i\n            }\n        });\n        try {\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(i);\n            await this.rpcUnsubscribe(e, t, s);\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, n), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: i\n                }\n            });\n        } catch (s) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(s), s;\n        }\n    }\n    async rpcSubscribe(e, t) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(i), this.subscribeTimeout);\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(D.connection_stalled);\n        }\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(e + this.clientId);\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((s)=>s.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(i), this.subscribeTimeout);\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Payload stalled\"), this.relayer.events.emit(D.connection_stalled);\n        }\n    }\n    rpcUnsubscribe(e, t, i) {\n        const s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(i.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        }), this.relayer.request(s);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, De(V({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, V({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, i) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.subscriptions.has(e) || (this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t));\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, V({}, t)), this.topicMap.set(t.topic, e), this.events.emit(w.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const i = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(i.topic, e), this.events.emit(w.deleted, De(V({}, i), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(w.sync);\n    }\n    async reset() {\n        if (this.cached.length) {\n            const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let t = 0; t < e; t++){\n                const i = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchSubscribe(i);\n            }\n        }\n        this.events.emit(w.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        if (!e.length) return;\n        const t = await this.rpcBatchSubscribe(e);\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidArray)(t) && this.onBatchSubscribe(t.map((i, s)=>De(V({}, e[s]), {\n                id: i\n            })));\n    }\n    async onConnect() {\n        this.restartInProgress || (await this.restart(), this.onEnable());\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    async checkPending() {\n        if (!this.initialized || this.relayer.transportExplicitlyClosed) return;\n        const e = [];\n        this.pending.forEach((t)=>{\n            e.push(t);\n        }), await this.batchSubscribe(e);\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, async ()=>{\n            await this.checkPending();\n        }), this.relayer.on(D.connect, async ()=>{\n            await this.onConnect();\n        }), this.relayer.on(D.disconnect, ()=>{\n            this.onDisconnect();\n        }), this.events.on(w.created, async (e)=>{\n            const t = w.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        }), this.events.on(w.deleted, async (e)=>{\n            const t = w.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        this.restartInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.restartInProgress || (clearInterval(t), e());\n            }, this.pollingInterval);\n        });\n    }\n}\nvar vr = Object.defineProperty, Ot = Object.getOwnPropertySymbols, Ir = Object.prototype.hasOwnProperty, Cr = Object.prototype.propertyIsEnumerable, At = (r, e, t)=>e in r ? vr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, Rr = (r, e)=>{\n    for(var t in e || (e = {}))Ir.call(e, t) && At(r, t, e[t]);\n    if (Ot) for (var t of Ot(e))Cr.call(e, t) && At(r, t, e[t]);\n    return r;\n};\nclass zt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ct, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = [\n            \"socket hang up\",\n            \"socket stalled\"\n        ], this.hasExperiencedNetworkDisruption = !1, this.request = async (t)=>{\n            this.logger.debug(\"Publishing Request Payload\");\n            try {\n                return await this.toEstablishConnection(), await this.provider.request(t);\n            } catch (i) {\n                throw this.logger.debug(\"Failed to Publish Request\"), this.logger.error(i), i;\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t);\n        }, this.onConnectHandler = ()=>{\n            this.events.emit(D.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.error(t), this.events.emit(D.error, t), this.logger.info(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(T.payload, this.onPayloadHandler), this.provider.on(T.connect, this.onConnectHandler), this.provider.on(T.disconnect, this.onDisconnectHandler), this.provider.on(T.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || ht\n        })), this.messages = new St(this.logger, e.core), this.subscriber = new xt(this, this.logger), this.publisher = new Dr(this, this.logger), this.relayUrl = e?.relayUrl || de, this.projectId = e.projectId, this.provider = {};\n    }\n    async init() {\n        this.logger.trace(\"Initialized\"), this.registerEventListeners(), await this.createProvider(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]);\n        try {\n            await this.transportOpen();\n        } catch  {\n            this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${ge}...`), await this.restartTransport(ge);\n        }\n        this.initialized = !0, setTimeout(async ()=>{\n            this.subscriber.topics.length === 0 && (this.logger.info(\"No topics subscribed to after init, closing transport\"), await this.transportClose(), this.transportExplicitlyClosed = !1);\n        }, gt);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        return this.provider.connection.connected;\n    }\n    get connecting() {\n        return this.provider.connection.connecting;\n    }\n    async publish(e, t, i) {\n        this.isInitialized(), await this.publisher.publish(e, t, i), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now()\n        });\n    }\n    async subscribe(e, t) {\n        var i;\n        this.isInitialized();\n        let s = ((i = this.subscriber.topicMap.get(e)) == null ? void 0 : i[0]) || \"\";\n        if (s) return s;\n        let n;\n        const a = (o)=>{\n            o.topic === e && (this.subscriber.off(w.created, a), n());\n        };\n        return await Promise.all([\n            new Promise((o)=>{\n                n = o, this.subscriber.on(w.created, a);\n            }),\n            new Promise(async (o)=>{\n                s = await this.subscriber.subscribe(e, t), o();\n            })\n        ]), s;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, this.hasExperiencedNetworkDisruption && this.connected ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.disconnect(), 1e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.connected && await this.provider.disconnect();\n    }\n    async transportOpen(e) {\n        if (this.transportExplicitlyClosed = !1, await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress) {\n            e && e !== this.relayUrl && (this.relayUrl = e, await this.transportClose(), await this.createProvider()), this.connectionAttemptInProgress = !0;\n            try {\n                await Promise.all([\n                    new Promise((t)=>{\n                        if (!this.initialized) return t();\n                        this.subscriber.once(w.resubscribed, ()=>{\n                            t();\n                        });\n                    }),\n                    new Promise(async (t, i)=>{\n                        try {\n                            await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.connect(), 1e4, `Socket stalled when trying to connect to ${this.relayUrl}`);\n                        } catch (s) {\n                            i(s);\n                            return;\n                        }\n                        t();\n                    })\n                ]);\n            } catch (t) {\n                this.logger.error(t);\n                const i = t;\n                if (!this.isConnectionStalled(i.message)) throw t;\n                this.provider.events.emit(T.disconnect);\n            } finally{\n                this.connectionAttemptInProgress = !1, this.hasExperiencedNetworkDisruption = !1;\n            }\n        }\n    }\n    async restartTransport(e) {\n        await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.transportClose(), await this.createProvider(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    isConnectionStalled(e) {\n        return this.staleConnectionErrors.some((t)=>e.includes(t));\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatRelayRpcUrl)({\n            sdkVersion: dt,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        await this.messages.set(t, i);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        if (!i || i.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const s = this.messages.has(t, i);\n        return s && this.logger.debug(`Ignoring duplicate message: ${i}`), s;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(ut)) return;\n            const t = e.params, { topic: i, message: s, publishedAt: n } = t.data, a = {\n                topic: i,\n                message: s,\n                publishedAt: n\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(Rr({\n                type: \"event\",\n                event: t.id\n            }, a)), this.events.emit(t.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(D.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(D.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(T.payload, this.onPayloadHandler), this.provider.off(T.connect, this.onConnectHandler), this.provider.off(T.disconnect, this.onDisconnectHandler), this.provider.off(T.error, this.onProviderErrorHandler);\n    }\n    async registerEventListeners() {\n        this.events.on(D.connection_stalled, ()=>{\n            this.restartTransport().catch((t)=>this.logger.error(t));\n        });\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.subscribeToNetworkChange)(async (t)=>{\n            this.initialized && e !== t && (e = t, t ? await this.restartTransport().catch((i)=>this.logger.error(i)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportClose().catch((i)=>this.logger.error(i))));\n        });\n    }\n    onProviderDisconnect() {\n        this.events.emit(D.disconnect), this.attemptToReconnect();\n    }\n    attemptToReconnect() {\n        this.transportExplicitlyClosed || (this.logger.info(\"attemptToReconnect called. Connecting...\"), setTimeout(async ()=>{\n            await this.restartTransport().catch((e)=>this.logger.error(e));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(lt)));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        if (await this.confirmOnlineStateOrThrow(), !this.connected) {\n            if (this.connectionAttemptInProgress) return await new Promise((e)=>{\n                const t = setInterval(()=>{\n                    this.connected && (clearInterval(t), e());\n                }, this.connectionStatusPollingInterval);\n            });\n            await this.restartTransport();\n        }\n    }\n}\nvar _r = Object.defineProperty, Nt = Object.getOwnPropertySymbols, Sr = Object.prototype.hasOwnProperty, Pr = Object.prototype.propertyIsEnumerable, Lt = (r, e, t)=>e in r ? _r(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, Ut = (r, e)=>{\n    for(var t in e || (e = {}))Sr.call(e, t) && Lt(r, t, e[t]);\n    if (Nt) for (var t of Nt(e))Pr.call(e, t) && Lt(r, t, e[t]);\n    return r;\n};\nclass Ft extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IStore {\n    constructor(e, t, i, s = O, n = void 0){\n        super(e, t, i, s), this.core = e, this.logger = t, this.name = i, this.map = new Map, this.version = pt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((a)=>{\n                this.getKey && a !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)(a) ? this.map.set(this.getKey(a), a) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isProposalStruct)(a) ? this.map.set(a.id, a) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isSessionStruct)(a) && this.map.set(a.topic, a);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (a, o)=>{\n            this.isInitialized(), this.map.has(a) ? await this.update(a, o) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: a,\n                value: o\n            }), this.map.set(a, o), await this.persist());\n        }, this.get = (a)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: a\n            }), this.getData(a)), this.getAll = (a)=>(this.isInitialized(), a ? this.values.filter((o)=>Object.keys(a).every((h)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(o[h], a[h]))) : this.values), this.update = async (a, o)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: a,\n                update: o\n            });\n            const h = Ut(Ut({}, this.getData(a)), o);\n            this.map.set(a, h), await this.persist();\n        }, this.delete = async (a, o)=>{\n            this.isInitialized(), this.map.has(a) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: a,\n                reason: o\n            }), this.map.delete(a), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = s, this.getKey = n;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(i), new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass $t {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = ft, this.version = Et, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = O, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: i })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...i\n                ])\n            ];\n        }, this.create = async ()=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), s = await this.core.crypto.setSymKey(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), a = {\n                protocol: ot\n            }, o = {\n                topic: s,\n                expiry: n,\n                relay: a,\n                active: !1\n            }, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: s,\n                symKey: i,\n                relay: a\n            });\n            return await this.pairings.set(s, o), await this.core.relayer.subscribe(s), this.core.expirer.set(s, n), {\n                topic: s,\n                uri: h\n            };\n        }, this.pair = async (i)=>{\n            this.isInitialized(), this.isValidPair(i);\n            const { topic: s, symKey: n, relay: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseUri)(i.uri);\n            let o;\n            if (this.pairings.keys.includes(s) && (o = this.pairings.get(s), o.active)) throw new Error(`Pairing already exists: ${s}. Please try again with a new connection URI.`);\n            this.core.crypto.keychain.has(s) || (await this.core.crypto.setSymKey(n, s), await this.core.relayer.subscribe(s, {\n                relay: a\n            }));\n            const h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), u = {\n                topic: s,\n                relay: a,\n                expiry: h,\n                active: !1\n            };\n            return await this.pairings.set(s, u), this.core.expirer.set(s, h), i.activatePairing && await this.activate({\n                topic: s\n            }), this.events.emit(B.create, u), u;\n        }, this.activate = async ({ topic: i })=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS);\n            await this.pairings.update(i, {\n                active: !0,\n                expiry: s\n            }), this.core.expirer.set(i, s);\n        }, this.ping = async (i)=>{\n            this.isInitialized(), await this.isValidPing(i);\n            const { topic: s } = i;\n            if (this.pairings.keys.includes(s)) {\n                const n = await this.sendRequest(s, \"wc_pairingPing\", {}), { done: a, resolve: o, reject: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", n), ({ error: u })=>{\n                    u ? h(u) : o();\n                }), await a();\n            }\n        }, this.updateExpiry = async ({ topic: i, expiry: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                expiry: s\n            });\n        }, this.updateMetadata = async ({ topic: i, metadata: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                peerMetadata: s\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (i)=>{\n            this.isInitialized(), await this.isValidDisconnect(i);\n            const { topic: s } = i;\n            this.pairings.keys.includes(s) && (await this.sendRequest(s, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(s));\n        }, this.sendRequest = async (i, s, n)=>{\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(s, n), o = await this.core.crypto.encode(i, a), h = F[s].req;\n            return this.core.history.set(i, a), this.core.relayer.publish(i, o, h), a.id;\n        }, this.sendResult = async (i, s, n)=>{\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(i, n), o = await this.core.crypto.encode(s, a), h = await this.core.history.get(s, i), u = F[h.request.method].res;\n            await this.core.relayer.publish(s, o, u), await this.core.history.resolve(a);\n        }, this.sendError = async (i, s, n)=>{\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(i, n), o = await this.core.crypto.encode(s, a), h = await this.core.history.get(s, i), u = F[h.request.method] ? F[h.request.method].res : F.unregistered_method.res;\n            await this.core.relayer.publish(s, o, u), await this.core.history.resolve(a);\n        }, this.deletePairing = async (i, s)=>{\n            await this.core.relayer.unsubscribe(i), await Promise.all([\n                this.pairings.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(i),\n                s ? Promise.resolve() : this.core.expirer.del(i)\n            ]);\n        }, this.cleanup = async ()=>{\n            const i = this.pairings.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(s.expiry));\n            await Promise.all(i.map((s)=>this.deletePairing(s.topic)));\n        }, this.onRelayEventRequest = (i)=>{\n            const { topic: s, payload: n } = i;\n            switch(n.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(s, n);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(s, n);\n                default:\n                    return this.onUnknownRpcMethodRequest(s, n);\n            }\n        }, this.onRelayEventResponse = async (i)=>{\n            const { topic: s, payload: n } = i, a = (await this.core.history.get(s, n.id)).request.method;\n            switch(a){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(s, n);\n                default:\n                    return this.onUnknownRpcMethodResponse(a);\n            }\n        }, this.onPairingPingRequest = async (i, s)=>{\n            const { id: n } = s;\n            try {\n                this.isValidPing({\n                    topic: i\n                }), await this.sendResult(n, i, !0), this.events.emit(B.ping, {\n                    id: n,\n                    topic: i\n                });\n            } catch (a) {\n                await this.sendError(n, i, a), this.logger.error(a);\n            }\n        }, this.onPairingPingResponse = (i, s)=>{\n            const { id: n } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", n), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", n), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (i, s)=>{\n            const { id: n } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: i\n                }), await this.deletePairing(i), this.events.emit(B.delete, {\n                    id: n,\n                    topic: i\n                });\n            } catch (a) {\n                await this.sendError(n, i, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodRequest = async (i, s)=>{\n            const { id: n, method: a } = s;\n            try {\n                if (this.registeredMethods.includes(a)) return;\n                const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", a);\n                await this.sendError(n, i, o), this.logger.error(o);\n            } catch (o) {\n                await this.sendError(n, i, o), this.logger.error(o);\n            }\n        }, this.onUnknownRpcMethodResponse = (i)=>{\n            this.registeredMethods.includes(i) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", i));\n        }, this.isValidPair = (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(i)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${i}`);\n                throw new Error(s);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidUrl)(i.uri)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${i.uri}`);\n                throw new Error(s);\n            }\n        }, this.isValidPing = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${i}`);\n                throw new Error(n);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidDisconnect = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${i}`);\n                throw new Error(n);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidPairingTopic = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidString)(i, !1)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${i}`);\n                throw new Error(s);\n            }\n            if (!this.pairings.keys.includes(i)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${i}`);\n                throw new Error(s);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(this.pairings.get(i).expiry)) {\n                await this.deletePairing(i);\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"EXPIRED\", `pairing topic: ${i}`);\n                throw new Error(s);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new Ft(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(D.message, async (e)=>{\n            const { topic: t, message: i } = e;\n            if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i))) return;\n            const s = await this.core.crypto.decode(t, i);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(s) ? (this.core.history.set(t, s), this.onRelayEventRequest({\n                    topic: t,\n                    payload: s\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(s) && (await this.core.history.resolve(s), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: s\n                }), this.core.history.delete(t, s.id));\n            } catch (n) {\n                this.logger.error(n);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(v.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(B.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass Mt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = wt, this.version = vt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.records.set(i.id, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (i, s, n)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: i,\n                request: s,\n                chainId: n\n            }), this.records.has(s.id)) return;\n            const a = {\n                id: s.id,\n                topic: i,\n                request: {\n                    method: s.method,\n                    params: s.params || null\n                },\n                chainId: n,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS)\n            };\n            this.records.set(a.id, a), this.events.emit(R.created, a);\n        }, this.resolve = async (i)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: i\n            }), !this.records.has(i.id)) return;\n            const s = await this.getRecord(i.id);\n            typeof s.response > \"u\" && (s.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) ? {\n                error: i.error\n            } : {\n                result: i.result\n            }, this.records.set(s.id, s), this.events.emit(R.updated, s));\n        }, this.get = async (i, s)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: i,\n                id: s\n            }), await this.getRecord(s)), this.delete = (i, s)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: s\n            }), this.values.forEach((n)=>{\n                if (n.topic === i) {\n                    if (typeof s < \"u\" && n.id !== s) return;\n                    this.records.delete(n.id), this.events.emit(R.deleted, n);\n                }\n            });\n        }, this.exists = async (i, s)=>(this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i : !1), this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const i = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(i);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(R.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(R.created, (e)=>{\n            const t = R.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.events.on(R.updated, (e)=>{\n            const t = R.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.events.on(R.deleted, (e)=>{\n            const t = R.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.records.forEach((e)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(e.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e.id}`), this.delete(e.topic, e.id));\n            });\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass kt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = It, this.version = Ct, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.expirations.set(i.target, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (i)=>{\n            try {\n                const s = this.formatTarget(i);\n                return typeof this.getExpiration(s) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (i, s)=>{\n            this.isInitialized();\n            const n = this.formatTarget(i), a = {\n                target: n,\n                expiry: s\n            };\n            this.expirations.set(n, a), this.checkExpiry(n, a), this.events.emit(v.created, {\n                target: n,\n                expiration: a\n            });\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.formatTarget(i);\n            return this.getExpiration(s);\n        }, this.del = (i)=>{\n            if (this.isInitialized(), this.has(i)) {\n                const s = this.formatTarget(i), n = this.getExpiration(s);\n                this.expirations.delete(s), this.events.emit(v.deleted, {\n                    target: s,\n                    expiration: n\n                });\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(v.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(i), new Error(i);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: i } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(i) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(v.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(v.created, (e)=>{\n            const t = v.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(v.expired, (e)=>{\n            const t = v.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(v.deleted, (e)=>{\n            const t = v.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Kt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IVerify {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.name = Q, this.initialized = !1, this.queue = [], this.verifyDisabled = !1, this.init = async ()=>{\n            if (this.verifyDisabled || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isReactNative)() || !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isBrowser)()) return;\n            const i = Z;\n            this.verifyUrl !== i && this.removeIframe(), this.verifyUrl = i;\n            try {\n                await this.createIframe();\n            } catch (s) {\n                this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(s);\n            }\n            if (!this.initialized) {\n                this.removeIframe(), this.verifyUrl = pe;\n                try {\n                    await this.createIframe();\n                } catch (s) {\n                    this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(s), this.verifyDisabled = !0;\n                }\n            }\n        }, this.register = async (i)=>{\n            this.initialized ? this.sendPost(i.attestationId) : (this.addToQueue(i.attestationId), await this.init());\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const s = i?.verifyUrl || Z;\n            let n;\n            try {\n                n = await this.fetchAttestation(i.attestationId, s);\n            } catch (a) {\n                this.logger.info(`failed to resolve attestation: ${i.attestationId} from url: ${s}`), this.logger.info(a), n = await this.fetchAttestation(i.attestationId, pe);\n            }\n            return n;\n        }, this.fetchAttestation = async (i, s)=>{\n            this.logger.info(`resolving attestation: ${i} from url: ${s}`);\n            const n = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND * 2), a = await fetch(`${s}/attestation/${i}`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(n), a.status === 200 ? await a.json() : void 0;\n        }, this.addToQueue = (i)=>{\n            this.queue.push(i);\n        }, this.processQueue = ()=>{\n            this.queue.length !== 0 && (this.queue.forEach((i)=>this.sendPost(i)), this.queue = []);\n        }, this.sendPost = (i)=>{\n            var s;\n            try {\n                if (!this.iframe) return;\n                (s = this.iframe.contentWindow) == null || s.postMessage(i, \"*\"), this.logger.info(`postMessage sent: ${i} ${this.verifyUrl}`);\n            } catch  {}\n        }, this.createIframe = async ()=>{\n            let i;\n            const s = (n)=>{\n                n.data === \"verify_ready\" && (this.initialized = !0, this.processQueue(), window.removeEventListener(\"message\", s), i());\n            };\n            await Promise.race([\n                new Promise((n)=>{\n                    if (document.getElementById(Q)) return n();\n                    window.addEventListener(\"message\", s);\n                    const a = document.createElement(\"iframe\");\n                    a.id = Q, a.src = `${this.verifyUrl}/${this.projectId}`, a.style.display = \"none\", document.body.append(a), this.iframe = a, i = n;\n                }),\n                new Promise((n, a)=>setTimeout(()=>{\n                        window.removeEventListener(\"message\", s), a(\"verify iframe load timeout\");\n                    }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS)))\n            ]);\n        }, this.removeIframe = ()=>{\n            this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = !1);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.verifyUrl = Z, this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isNode)() && process.env.IS_VITEST;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(e));\n    }\n}\nvar Tr = Object.defineProperty, Bt = Object.getOwnPropertySymbols, xr = Object.prototype.hasOwnProperty, Or = Object.prototype.propertyIsEnumerable, Vt = (r, e, t)=>e in r ? Tr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, qt = (r, e)=>{\n    for(var t in e || (e = {}))xr.call(e, t) && Vt(r, t, e[t]);\n    if (Bt) for (var t of Bt(e))Or.call(e, t) && Vt(r, t, e[t]);\n    return r;\n};\nclass ee extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ICore {\n    constructor(e){\n        super(e), this.protocol = ue, this.version = We, this.name = X, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (i, s)=>this.events.on(i, s), this.once = (i, s)=>this.events.once(i, s), this.off = (i, s)=>this.events.off(i, s), this.removeListener = (i, s)=>this.events.removeListener(i, s), this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || de, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const t = typeof e?.logger < \"u\" && typeof e?.logger != \"string\" ? e.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e?.logger || Xe.logger\n        }));\n        this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HeartBeat, this.crypto = new _t(this, this.logger, e?.keychain), this.history = new Mt(this, this.logger), this.expirer = new kt(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"](qt(qt({}, Qe), e?.storageOptions)), this.relayer = new zt({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new $t(this, this.logger), this.verify = new Kt(this.projectId || \"\", this.logger);\n    }\n    static async init(e) {\n        const t = new ee(e);\n        await t.initialize();\n        const i = await t.crypto.getClientId();\n        return await t.storage.setItem(Dt, i), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst Ar = ee;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUErQztBQUE0RTtBQUEySDtBQUFzTDtBQUFrRjtBQUE0QztBQUFrM0I7QUFBd0M7QUFBNE07QUFBbUU7QUFBdU87QUFBcUQ7QUFBK0I7QUFBQSxTQUFTdUssR0FBR0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBR0QsRUFBRUUsTUFBTSxJQUFFLEtBQUksTUFBTSxJQUFJQyxVQUFVO0lBQXFCLElBQUksSUFBSUMsSUFBRSxJQUFJQyxXQUFXLE1BQUtDLElBQUUsR0FBRUEsSUFBRUYsRUFBRUYsTUFBTSxFQUFDSSxJQUFJRixDQUFDLENBQUNFLEVBQUUsR0FBQztJQUFJLElBQUksSUFBSUMsSUFBRSxHQUFFQSxJQUFFUCxFQUFFRSxNQUFNLEVBQUNLLElBQUk7UUFBQyxJQUFJQyxJQUFFUixFQUFFUyxNQUFNLENBQUNGLElBQUdHLElBQUVGLEVBQUVHLFVBQVUsQ0FBQztRQUFHLElBQUdQLENBQUMsQ0FBQ00sRUFBRSxLQUFHLEtBQUksTUFBTSxJQUFJUCxVQUFVSyxJQUFFO1FBQWlCSixDQUFDLENBQUNNLEVBQUUsR0FBQ0g7SUFBQztJQUFDLElBQUlLLElBQUVaLEVBQUVFLE1BQU0sRUFBQ1csSUFBRWIsRUFBRVMsTUFBTSxDQUFDLElBQUdLLElBQUVDLEtBQUtDLEdBQUcsQ0FBQ0osS0FBR0csS0FBS0MsR0FBRyxDQUFDLE1BQUtDLElBQUVGLEtBQUtDLEdBQUcsQ0FBQyxPQUFLRCxLQUFLQyxHQUFHLENBQUNKO0lBQUcsU0FBU00sRUFBRUMsQ0FBQztRQUFFLElBQUdBLGFBQWFkLGNBQWFlLENBQUFBLFlBQVlDLE1BQU0sQ0FBQ0YsS0FBR0EsSUFBRSxJQUFJZCxXQUFX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QUN2RSxJQUFJLElBQUcsTUFBTSxJQUFJLENBQUMwVSxPQUFPLENBQUMxVSxJQUFJLElBQUcsSUFBSSxDQUFDRixXQUFXLEdBQUMsQ0FBQyxHQUFFLElBQUksQ0FBQy9FLE1BQU0sQ0FBQzZPLElBQUksQ0FBQztRQUE4QixFQUFDLE9BQU0zYyxHQUFFO1lBQUMsTUFBTSxJQUFJLENBQUM4TixNQUFNLENBQUM0USxJQUFJLENBQUMsQ0FBQyxxQ0FBcUMsRUFBRU8sS0FBS0MsR0FBRyxHQUFHLENBQUMsRUFBQ2xmLElBQUcsSUFBSSxDQUFDOE4sTUFBTSxDQUFDc0IsS0FBSyxDQUFDcFAsRUFBRWdQLE9BQU8sR0FBRWhQO1FBQUM7SUFBQztBQUFDO0FBQUMsTUFBTTRuQixLQUFHTDtBQUErNkMsQ0FDdjQ3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL2Rpc3QvaW5kZXguZXMuanM/ZGY1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQganQse0V2ZW50RW1pdHRlciBhcyBOfWZyb21cImV2ZW50c1wiO2ltcG9ydCBZdCBmcm9tXCJAd2FsbGV0Y29ubmVjdC9rZXl2YWx1ZXN0b3JhZ2VcIjtpbXBvcnR7SEVBUlRCRUFUX0VWRU5UUyBhcyBqLEhlYXJ0QmVhdCBhcyBHdH1mcm9tXCJAd2FsbGV0Y29ubmVjdC9oZWFydGJlYXRcIjtpbXBvcnR7Z2VuZXJhdGVDaGlsZExvZ2dlciBhcyBmLGdldExvZ2dlckNvbnRleHQgYXMgRSxwaW5vIGFzIHllLGdldERlZmF1bHRMb2dnZXJPcHRpb25zIGFzIG1lfWZyb21cIkB3YWxsZXRjb25uZWN0L2xvZ2dlclwiO2ltcG9ydHtJTWVzc2FnZVRyYWNrZXIgYXMgSHQsSVB1Ymxpc2hlciBhcyBKdCxJU3Vic2NyaWJlciBhcyBXdCxJUmVsYXllciBhcyBYdCxJU3RvcmUgYXMgUXQsSUpzb25ScGNIaXN0b3J5IGFzIFp0LElFeHBpcmVyIGFzIGVpLElWZXJpZnkgYXMgdGksSUNvcmUgYXMgaWl9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdHlwZXNcIjtpbXBvcnR7c2FmZUpzb25TdHJpbmdpZnkgYXMgc2ksc2FmZUpzb25QYXJzZSBhcyByaX1mcm9tXCJAd2FsbGV0Y29ubmVjdC9zYWZlLWpzb25cIjtpbXBvcnQqYXMgWSBmcm9tXCJAd2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoXCI7aW1wb3J0e2dldEludGVybmFsRXJyb3IgYXMgbCxtYXBUb09iaiBhcyBiZSxvYmpUb01hcCBhcyBmZSxnZW5lcmF0ZUtleVBhaXIgYXMgbmksZ2VuZXJhdGVSYW5kb21CeXRlczMyIGFzIHRlLGRlcml2ZVN5bUtleSBhcyBhaSxoYXNoS2V5IGFzIG9pLHZhbGlkYXRlRW5jb2RpbmcgYXMgaGksaXNUeXBlT25lRW52ZWxvcGUgYXMgRWUsZW5jcnlwdCBhcyBjaSx2YWxpZGF0ZURlY29kaW5nIGFzIHVpLGRlY3J5cHQgYXMgbGksZGVzZXJpYWxpemUgYXMgd2UsZGVjb2RlVHlwZUJ5dGUgYXMgZGksQkFTRTE2IGFzIGdpLGhhc2hNZXNzYWdlIGFzIGllLGdldFJlbGF5UHJvdG9jb2xOYW1lIGFzIHNlLGNyZWF0ZUV4cGlyaW5nUHJvbWlzZSBhcyBNLGdldFJlbGF5UHJvdG9jb2xBcGkgYXMgRyxpc1VuZGVmaW5lZCBhcyByZSxnZXRTZGtFcnJvciBhcyBrLGlzVmFsaWRBcnJheSBhcyBwaSxpc09ubGluZSBhcyB2ZSxmb3JtYXRSZWxheVJwY1VybCBhcyBEaSxzdWJzY3JpYmVUb05ldHdvcmtDaGFuZ2UgYXMgeWksaXNQcm9wb3NhbFN0cnVjdCBhcyBtaSxpc1Nlc3Npb25TdHJ1Y3QgYXMgYmksVFlQRV8xIGFzIGZpLGNhbGNFeHBpcnkgYXMgSCxmb3JtYXRVcmkgYXMgRWkscGFyc2VVcmkgYXMgd2ksY3JlYXRlRGVsYXllZFByb21pc2UgYXMgdmksZW5naW5lRXZlbnQgYXMgbmUsaXNFeHBpcmVkIGFzIEllLGlzVmFsaWRQYXJhbXMgYXMgYWUsaXNWYWxpZFVybCBhcyBJaSxpc1ZhbGlkU3RyaW5nIGFzIENpLHBhcnNlRXhwaXJlclRhcmdldCBhcyBSaSxmb3JtYXRUb3BpY1RhcmdldCBhcyBfaSxmb3JtYXRJZFRhcmdldCBhcyBTaSxpc1JlYWN0TmF0aXZlIGFzIFBpLGlzQnJvd3NlciBhcyBUaSxpc05vZGUgYXMgeGl9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdXRpbHNcIjtpbXBvcnR7dG9TdHJpbmcgYXMgT2l9ZnJvbVwidWludDhhcnJheXNcIjtpbXBvcnR7T05FX0RBWSBhcyBMLFNJWF9IT1VSUyBhcyBBaSxPTkVfU0VDT05EIGFzIENlLFRISVJUWV9EQVlTIGFzIEosRklWRV9TRUNPTkRTIGFzIFJlLFRISVJUWV9TRUNPTkRTIGFzIF9lLHRvTWlsaXNlY29uZHMgYXMgVSxURU5fU0VDT05EUyBhcyB6aSxXYXRjaCBhcyBOaSxGSVZFX01JTlVURVMgYXMgU2V9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdGltZVwiO2ltcG9ydHtKc29uUnBjUHJvdmlkZXIgYXMgTGl9ZnJvbVwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlclwiO2ltcG9ydHtnZXRCaWdJbnRScGNJZCBhcyBVaSxpc0pzb25ScGNSZXF1ZXN0IGFzIFBlLGlzSnNvblJwY1Jlc3BvbnNlIGFzIFRlLGZvcm1hdEpzb25ScGNSZXN1bHQgYXMgeGUsZm9ybWF0SnNvblJwY1JlcXVlc3QgYXMgT2UsZm9ybWF0SnNvblJwY0Vycm9yIGFzIEZpLGlzSnNvblJwY1Jlc3VsdCBhcyAkaSxpc0pzb25ScGNFcnJvciBhcyBBZX1mcm9tXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7aW1wb3J0IE1pIGZyb21cIkB3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvblwiO2ltcG9ydCBraSBmcm9tXCJsb2Rhc2guaXNlcXVhbFwiO2Z1bmN0aW9uIEtpKHIsZSl7aWYoci5sZW5ndGg+PTI1NSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQWxwaGFiZXQgdG9vIGxvbmdcIik7Zm9yKHZhciB0PW5ldyBVaW50OEFycmF5KDI1NiksaT0wO2k8dC5sZW5ndGg7aSsrKXRbaV09MjU1O2Zvcih2YXIgcz0wO3M8ci5sZW5ndGg7cysrKXt2YXIgbj1yLmNoYXJBdChzKSxhPW4uY2hhckNvZGVBdCgwKTtpZih0W2FdIT09MjU1KXRocm93IG5ldyBUeXBlRXJyb3IobitcIiBpcyBhbWJpZ3VvdXNcIik7dFthXT1zfXZhciBvPXIubGVuZ3RoLGg9ci5jaGFyQXQoMCksdT1NYXRoLmxvZyhvKS9NYXRoLmxvZygyNTYpLGQ9TWF0aC5sb2coMjU2KS9NYXRoLmxvZyhvKTtmdW5jdGlvbiBwKGMpe2lmKGMgaW5zdGFuY2VvZiBVaW50OEFycmF5fHwoQXJyYXlCdWZmZXIuaXNWaWV3KGMpP2M9bmV3IFVpbnQ4QXJyYXkoYy5idWZmZXIsYy5ieXRlT2Zmc2V0LGMuYnl0ZUxlbmd0aCk6QXJyYXkuaXNBcnJheShjKSYmKGM9VWludDhBcnJheS5mcm9tKGMpKSksIShjIGluc3RhbmNlb2YgVWludDhBcnJheSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIFVpbnQ4QXJyYXlcIik7aWYoYy5sZW5ndGg9PT0wKXJldHVyblwiXCI7Zm9yKHZhciBtPTAsej0wLEk9MCxfPWMubGVuZ3RoO0khPT1fJiZjW0ldPT09MDspSSsrLG0rKztmb3IodmFyIFM9KF8tSSkqZCsxPj4+MCxiPW5ldyBVaW50OEFycmF5KFMpO0khPT1fOyl7Zm9yKHZhciBQPWNbSV0sQT0wLEM9Uy0xOyhQIT09MHx8QTx6KSYmQyE9PS0xO0MtLSxBKyspUCs9MjU2KmJbQ10+Pj4wLGJbQ109UCVvPj4+MCxQPVAvbz4+PjA7aWYoUCE9PTApdGhyb3cgbmV3IEVycm9yKFwiTm9uLXplcm8gY2FycnlcIik7ej1BLEkrK31mb3IodmFyIHg9Uy16O3ghPT1TJiZiW3hdPT09MDspeCsrO2Zvcih2YXIgcT1oLnJlcGVhdChtKTt4PFM7Kyt4KXErPXIuY2hhckF0KGJbeF0pO3JldHVybiBxfWZ1bmN0aW9uIHkoYyl7aWYodHlwZW9mIGMhPVwic3RyaW5nXCIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIFN0cmluZ1wiKTtpZihjLmxlbmd0aD09PTApcmV0dXJuIG5ldyBVaW50OEFycmF5O3ZhciBtPTA7aWYoY1ttXSE9PVwiIFwiKXtmb3IodmFyIHo9MCxJPTA7Y1ttXT09PWg7KXorKyxtKys7Zm9yKHZhciBfPShjLmxlbmd0aC1tKSp1KzE+Pj4wLFM9bmV3IFVpbnQ4QXJyYXkoXyk7Y1ttXTspe3ZhciBiPXRbYy5jaGFyQ29kZUF0KG0pXTtpZihiPT09MjU1KXJldHVybjtmb3IodmFyIFA9MCxBPV8tMTsoYiE9PTB8fFA8SSkmJkEhPT0tMTtBLS0sUCsrKWIrPW8qU1tBXT4+PjAsU1tBXT1iJTI1Nj4+PjAsYj1iLzI1Nj4+PjA7aWYoYiE9PTApdGhyb3cgbmV3IEVycm9yKFwiTm9uLXplcm8gY2FycnlcIik7ST1QLG0rK31pZihjW21dIT09XCIgXCIpe2Zvcih2YXIgQz1fLUk7QyE9PV8mJlNbQ109PT0wOylDKys7Zm9yKHZhciB4PW5ldyBVaW50OEFycmF5KHorKF8tQykpLHE9ejtDIT09XzspeFtxKytdPVNbQysrXTtyZXR1cm4geH19fWZ1bmN0aW9uICQoYyl7dmFyIG09eShjKTtpZihtKXJldHVybiBtO3Rocm93IG5ldyBFcnJvcihgTm9uLSR7ZX0gY2hhcmFjdGVyYCl9cmV0dXJue2VuY29kZTpwLGRlY29kZVVuc2FmZTp5LGRlY29kZTokfX12YXIgQmk9S2ksVmk9Qmk7Y29uc3QgemU9cj0+e2lmKHIgaW5zdGFuY2VvZiBVaW50OEFycmF5JiZyLmNvbnN0cnVjdG9yLm5hbWU9PT1cIlVpbnQ4QXJyYXlcIilyZXR1cm4gcjtpZihyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIG5ldyBVaW50OEFycmF5KHIpO2lmKEFycmF5QnVmZmVyLmlzVmlldyhyKSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoci5idWZmZXIsci5ieXRlT2Zmc2V0LHIuYnl0ZUxlbmd0aCk7dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlXCIpfSxxaT1yPT5uZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUociksamk9cj0+bmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKHIpO2NsYXNzIFlpe2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLm5hbWU9ZSx0aGlzLnByZWZpeD10LHRoaXMuYmFzZUVuY29kZT1pfWVuY29kZShlKXtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSlyZXR1cm5gJHt0aGlzLnByZWZpeH0ke3RoaXMuYmFzZUVuY29kZShlKX1gO3Rocm93IEVycm9yKFwiVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlXCIpfX1jbGFzcyBHaXtjb25zdHJ1Y3RvcihlLHQsaSl7aWYodGhpcy5uYW1lPWUsdGhpcy5wcmVmaXg9dCx0LmNvZGVQb2ludEF0KDApPT09dm9pZCAwKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcHJlZml4IGNoYXJhY3RlclwiKTt0aGlzLnByZWZpeENvZGVQb2ludD10LmNvZGVQb2ludEF0KDApLHRoaXMuYmFzZURlY29kZT1pfWRlY29kZShlKXtpZih0eXBlb2YgZT09XCJzdHJpbmdcIil7aWYoZS5jb2RlUG9pbnRBdCgwKSE9PXRoaXMucHJlZml4Q29kZVBvaW50KXRocm93IEVycm9yKGBVbmFibGUgdG8gZGVjb2RlIG11bHRpYmFzZSBzdHJpbmcgJHtKU09OLnN0cmluZ2lmeShlKX0sICR7dGhpcy5uYW1lfSBkZWNvZGVyIG9ubHkgc3VwcG9ydHMgaW5wdXRzIHByZWZpeGVkIHdpdGggJHt0aGlzLnByZWZpeH1gKTtyZXR1cm4gdGhpcy5iYXNlRGVjb2RlKGUuc2xpY2UodGhpcy5wcmVmaXgubGVuZ3RoKSl9ZWxzZSB0aHJvdyBFcnJvcihcIkNhbiBvbmx5IG11bHRpYmFzZSBkZWNvZGUgc3RyaW5nc1wiKX1vcihlKXtyZXR1cm4gTmUodGhpcyxlKX19Y2xhc3MgSGl7Y29uc3RydWN0b3IoZSl7dGhpcy5kZWNvZGVycz1lfW9yKGUpe3JldHVybiBOZSh0aGlzLGUpfWRlY29kZShlKXtjb25zdCB0PWVbMF0saT10aGlzLmRlY29kZXJzW3RdO2lmKGkpcmV0dXJuIGkuZGVjb2RlKGUpO3Rocm93IFJhbmdlRXJyb3IoYFVuYWJsZSB0byBkZWNvZGUgbXVsdGliYXNlIHN0cmluZyAke0pTT04uc3RyaW5naWZ5KGUpfSwgb25seSBpbnB1dHMgcHJlZml4ZWQgd2l0aCAke09iamVjdC5rZXlzKHRoaXMuZGVjb2RlcnMpfSBhcmUgc3VwcG9ydGVkYCl9fWNvbnN0IE5lPShyLGUpPT5uZXcgSGkoey4uLnIuZGVjb2RlcnN8fHtbci5wcmVmaXhdOnJ9LC4uLmUuZGVjb2RlcnN8fHtbZS5wcmVmaXhdOmV9fSk7Y2xhc3MgSml7Y29uc3RydWN0b3IoZSx0LGkscyl7dGhpcy5uYW1lPWUsdGhpcy5wcmVmaXg9dCx0aGlzLmJhc2VFbmNvZGU9aSx0aGlzLmJhc2VEZWNvZGU9cyx0aGlzLmVuY29kZXI9bmV3IFlpKGUsdCxpKSx0aGlzLmRlY29kZXI9bmV3IEdpKGUsdCxzKX1lbmNvZGUoZSl7cmV0dXJuIHRoaXMuZW5jb2Rlci5lbmNvZGUoZSl9ZGVjb2RlKGUpe3JldHVybiB0aGlzLmRlY29kZXIuZGVjb2RlKGUpfX1jb25zdCBXPSh7bmFtZTpyLHByZWZpeDplLGVuY29kZTp0LGRlY29kZTppfSk9Pm5ldyBKaShyLGUsdCxpKSxLPSh7cHJlZml4OnIsbmFtZTplLGFscGhhYmV0OnR9KT0+e2NvbnN0e2VuY29kZTppLGRlY29kZTpzfT1WaSh0LGUpO3JldHVybiBXKHtwcmVmaXg6cixuYW1lOmUsZW5jb2RlOmksZGVjb2RlOm49PnplKHMobikpfSl9LFdpPShyLGUsdCxpKT0+e2NvbnN0IHM9e307Zm9yKGxldCBkPTA7ZDxlLmxlbmd0aDsrK2Qpc1tlW2RdXT1kO2xldCBuPXIubGVuZ3RoO2Zvcig7cltuLTFdPT09XCI9XCI7KS0tbjtjb25zdCBhPW5ldyBVaW50OEFycmF5KG4qdC84fDApO2xldCBvPTAsaD0wLHU9MDtmb3IobGV0IGQ9MDtkPG47KytkKXtjb25zdCBwPXNbcltkXV07aWYocD09PXZvaWQgMCl0aHJvdyBuZXcgU3ludGF4RXJyb3IoYE5vbi0ke2l9IGNoYXJhY3RlcmApO2g9aDw8dHxwLG8rPXQsbz49OCYmKG8tPTgsYVt1KytdPTI1NSZoPj5vKX1pZihvPj10fHwyNTUmaDw8OC1vKXRocm93IG5ldyBTeW50YXhFcnJvcihcIlVuZXhwZWN0ZWQgZW5kIG9mIGRhdGFcIik7cmV0dXJuIGF9LFhpPShyLGUsdCk9Pntjb25zdCBpPWVbZS5sZW5ndGgtMV09PT1cIj1cIixzPSgxPDx0KS0xO2xldCBuPVwiXCIsYT0wLG89MDtmb3IobGV0IGg9MDtoPHIubGVuZ3RoOysraClmb3Iobz1vPDw4fHJbaF0sYSs9ODthPnQ7KWEtPXQsbis9ZVtzJm8+PmFdO2lmKGEmJihuKz1lW3Mmbzw8dC1hXSksaSlmb3IoO24ubGVuZ3RoKnQmNzspbis9XCI9XCI7cmV0dXJuIG59LGc9KHtuYW1lOnIscHJlZml4OmUsYml0c1BlckNoYXI6dCxhbHBoYWJldDppfSk9Plcoe3ByZWZpeDplLG5hbWU6cixlbmNvZGUocyl7cmV0dXJuIFhpKHMsaSx0KX0sZGVjb2RlKHMpe3JldHVybiBXaShzLGksdCxyKX19KSxRaT1XKHtwcmVmaXg6XCJcXDBcIixuYW1lOlwiaWRlbnRpdHlcIixlbmNvZGU6cj0+amkociksZGVjb2RlOnI9PnFpKHIpfSk7dmFyIFppPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGlkZW50aXR5OlFpfSk7Y29uc3QgZXM9Zyh7cHJlZml4OlwiMFwiLG5hbWU6XCJiYXNlMlwiLGFscGhhYmV0OlwiMDFcIixiaXRzUGVyQ2hhcjoxfSk7dmFyIHRzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJhc2UyOmVzfSk7Y29uc3QgaXM9Zyh7cHJlZml4OlwiN1wiLG5hbWU6XCJiYXNlOFwiLGFscGhhYmV0OlwiMDEyMzQ1NjdcIixiaXRzUGVyQ2hhcjozfSk7dmFyIHNzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJhc2U4OmlzfSk7Y29uc3QgcnM9Syh7cHJlZml4OlwiOVwiLG5hbWU6XCJiYXNlMTBcIixhbHBoYWJldDpcIjAxMjM0NTY3ODlcIn0pO3ZhciBucz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxiYXNlMTA6cnN9KTtjb25zdCBhcz1nKHtwcmVmaXg6XCJmXCIsbmFtZTpcImJhc2UxNlwiLGFscGhhYmV0OlwiMDEyMzQ1Njc4OWFiY2RlZlwiLGJpdHNQZXJDaGFyOjR9KSxvcz1nKHtwcmVmaXg6XCJGXCIsbmFtZTpcImJhc2UxNnVwcGVyXCIsYWxwaGFiZXQ6XCIwMTIzNDU2Nzg5QUJDREVGXCIsYml0c1BlckNoYXI6NH0pO3ZhciBocz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxiYXNlMTY6YXMsYmFzZTE2dXBwZXI6b3N9KTtjb25zdCBjcz1nKHtwcmVmaXg6XCJiXCIsbmFtZTpcImJhc2UzMlwiLGFscGhhYmV0OlwiYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjdcIixiaXRzUGVyQ2hhcjo1fSksdXM9Zyh7cHJlZml4OlwiQlwiLG5hbWU6XCJiYXNlMzJ1cHBlclwiLGFscGhhYmV0OlwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1NjdcIixiaXRzUGVyQ2hhcjo1fSksbHM9Zyh7cHJlZml4OlwiY1wiLG5hbWU6XCJiYXNlMzJwYWRcIixhbHBoYWJldDpcImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3PVwiLGJpdHNQZXJDaGFyOjV9KSxkcz1nKHtwcmVmaXg6XCJDXCIsbmFtZTpcImJhc2UzMnBhZHVwcGVyXCIsYWxwaGFiZXQ6XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjIzNDU2Nz1cIixiaXRzUGVyQ2hhcjo1fSksZ3M9Zyh7cHJlZml4OlwidlwiLG5hbWU6XCJiYXNlMzJoZXhcIixhbHBoYWJldDpcIjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2XCIsYml0c1BlckNoYXI6NX0pLHBzPWcoe3ByZWZpeDpcIlZcIixuYW1lOlwiYmFzZTMyaGV4dXBwZXJcIixhbHBoYWJldDpcIjAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWXCIsYml0c1BlckNoYXI6NX0pLERzPWcoe3ByZWZpeDpcInRcIixuYW1lOlwiYmFzZTMyaGV4cGFkXCIsYWxwaGFiZXQ6XCIwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj1cIixiaXRzUGVyQ2hhcjo1fSkseXM9Zyh7cHJlZml4OlwiVFwiLG5hbWU6XCJiYXNlMzJoZXhwYWR1cHBlclwiLGFscGhhYmV0OlwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVY9XCIsYml0c1BlckNoYXI6NX0pLG1zPWcoe3ByZWZpeDpcImhcIixuYW1lOlwiYmFzZTMyelwiLGFscGhhYmV0OlwieWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjlcIixiaXRzUGVyQ2hhcjo1fSk7dmFyIGJzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJhc2UzMjpjcyxiYXNlMzJ1cHBlcjp1cyxiYXNlMzJwYWQ6bHMsYmFzZTMycGFkdXBwZXI6ZHMsYmFzZTMyaGV4OmdzLGJhc2UzMmhleHVwcGVyOnBzLGJhc2UzMmhleHBhZDpEcyxiYXNlMzJoZXhwYWR1cHBlcjp5cyxiYXNlMzJ6Om1zfSk7Y29uc3QgZnM9Syh7cHJlZml4Olwia1wiLG5hbWU6XCJiYXNlMzZcIixhbHBoYWJldDpcIjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwifSksRXM9Syh7cHJlZml4OlwiS1wiLG5hbWU6XCJiYXNlMzZ1cHBlclwiLGFscGhhYmV0OlwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCJ9KTt2YXIgd3M9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsYmFzZTM2OmZzLGJhc2UzNnVwcGVyOkVzfSk7Y29uc3QgdnM9Syh7bmFtZTpcImJhc2U1OGJ0Y1wiLHByZWZpeDpcInpcIixhbHBoYWJldDpcIjEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpcIn0pLElzPUsoe25hbWU6XCJiYXNlNThmbGlja3JcIixwcmVmaXg6XCJaXCIsYWxwaGFiZXQ6XCIxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaXCJ9KTt2YXIgQ3M9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsYmFzZTU4YnRjOnZzLGJhc2U1OGZsaWNrcjpJc30pO2NvbnN0IFJzPWcoe3ByZWZpeDpcIm1cIixuYW1lOlwiYmFzZTY0XCIsYWxwaGFiZXQ6XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIsYml0c1BlckNoYXI6Nn0pLF9zPWcoe3ByZWZpeDpcIk1cIixuYW1lOlwiYmFzZTY0cGFkXCIsYWxwaGFiZXQ6XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPVwiLGJpdHNQZXJDaGFyOjZ9KSxTcz1nKHtwcmVmaXg6XCJ1XCIsbmFtZTpcImJhc2U2NHVybFwiLGFscGhhYmV0OlwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktX1wiLGJpdHNQZXJDaGFyOjZ9KSxQcz1nKHtwcmVmaXg6XCJVXCIsbmFtZTpcImJhc2U2NHVybHBhZFwiLGFscGhhYmV0OlwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz1cIixiaXRzUGVyQ2hhcjo2fSk7dmFyIFRzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJhc2U2NDpScyxiYXNlNjRwYWQ6X3MsYmFzZTY0dXJsOlNzLGJhc2U2NHVybHBhZDpQc30pO2NvbnN0IExlPUFycmF5LmZyb20oXCJcXHV7MUY2ODB9XFx1ezFGQTkwfVxcdTI2MDRcXHV7MUY2RjB9XFx1ezFGMzBDfVxcdXsxRjMxMX1cXHV7MUYzMTJ9XFx1ezFGMzEzfVxcdXsxRjMxNH1cXHV7MUYzMTV9XFx1ezFGMzE2fVxcdXsxRjMxN31cXHV7MUYzMTh9XFx1ezFGMzBEfVxcdXsxRjMwRn1cXHV7MUYzMEV9XFx1ezFGNDA5fVxcdTI2MDBcXHV7MUY0QkJ9XFx1ezFGNUE1fVxcdXsxRjRCRX1cXHV7MUY0QkZ9XFx1ezFGNjAyfVxcdTI3NjRcXHV7MUY2MER9XFx1ezFGOTIzfVxcdXsxRjYwQX1cXHV7MUY2NEZ9XFx1ezFGNDk1fVxcdXsxRjYyRH1cXHV7MUY2MTh9XFx1ezFGNDREfVxcdXsxRjYwNX1cXHV7MUY0NEZ9XFx1ezFGNjAxfVxcdXsxRjUyNX1cXHV7MUY5NzB9XFx1ezFGNDk0fVxcdXsxRjQ5Nn1cXHV7MUY0OTl9XFx1ezFGNjIyfVxcdXsxRjkxNH1cXHV7MUY2MDZ9XFx1ezFGNjQ0fVxcdXsxRjRBQX1cXHV7MUY2MDl9XFx1MjYzQVxcdXsxRjQ0Q31cXHV7MUY5MTd9XFx1ezFGNDlDfVxcdXsxRjYxNH1cXHV7MUY2MEV9XFx1ezFGNjA3fVxcdXsxRjMzOX1cXHV7MUY5MjZ9XFx1ezFGMzg5fVxcdXsxRjQ5RX1cXHUyNzBDXFx1MjcyOFxcdXsxRjkzN31cXHV7MUY2MzF9XFx1ezFGNjBDfVxcdXsxRjMzOH1cXHV7MUY2NEN9XFx1ezFGNjBCfVxcdXsxRjQ5N31cXHV7MUY0OUF9XFx1ezFGNjBGfVxcdXsxRjQ5Qn1cXHV7MUY2NDJ9XFx1ezFGNDkzfVxcdXsxRjkyOX1cXHV7MUY2MDR9XFx1ezFGNjAwfVxcdXsxRjVBNH1cXHV7MUY2MDN9XFx1ezFGNEFGfVxcdXsxRjY0OH1cXHV7MUY0NDd9XFx1ezFGM0I2fVxcdXsxRjYxMn1cXHV7MUY5MkR9XFx1Mjc2M1xcdXsxRjYxQ31cXHV7MUY0OEJ9XFx1ezFGNDQwfVxcdXsxRjYyQX1cXHV7MUY2MTF9XFx1ezFGNEE1fVxcdXsxRjY0Qn1cXHV7MUY2MUV9XFx1ezFGNjI5fVxcdXsxRjYyMX1cXHV7MUY5MkF9XFx1ezFGNDRBfVxcdXsxRjk3M31cXHV7MUY2MjV9XFx1ezFGOTI0fVxcdXsxRjQ0OX1cXHV7MUY0ODN9XFx1ezFGNjMzfVxcdTI3MEJcXHV7MUY2MUF9XFx1ezFGNjFEfVxcdXsxRjYzNH1cXHV7MUYzMUZ9XFx1ezFGNjJDfVxcdXsxRjY0M31cXHV7MUYzNDB9XFx1ezFGMzM3fVxcdXsxRjYzQn1cXHV7MUY2MTN9XFx1MkI1MFxcdTI3MDVcXHV7MUY5N0F9XFx1ezFGMzA4fVxcdXsxRjYwOH1cXHV7MUY5MTh9XFx1ezFGNEE2fVxcdTI3MTRcXHV7MUY2MjN9XFx1ezFGM0MzfVxcdXsxRjQ5MH1cXHUyNjM5XFx1ezFGMzhBfVxcdXsxRjQ5OH1cXHV7MUY2MjB9XFx1MjYxRFxcdXsxRjYxNX1cXHV7MUYzM0F9XFx1ezFGMzgyfVxcdXsxRjMzQn1cXHV7MUY2MTB9XFx1ezFGNTk1fVxcdXsxRjQ5RH1cXHV7MUY2NEF9XFx1ezFGNjM5fVxcdXsxRjVFM31cXHV7MUY0QUJ9XFx1ezFGNDgwfVxcdXsxRjQ1MX1cXHV7MUYzQjV9XFx1ezFGOTFFfVxcdXsxRjYxQn1cXHV7MUY1MzR9XFx1ezFGNjI0fVxcdXsxRjMzQ31cXHV7MUY2MkJ9XFx1MjZCRFxcdXsxRjkxOX1cXHUyNjE1XFx1ezFGM0M2fVxcdXsxRjkyQn1cXHV7MUY0NDh9XFx1ezFGNjJFfVxcdXsxRjY0Nn1cXHV7MUYzN0J9XFx1ezFGMzQzfVxcdXsxRjQzNn1cXHV7MUY0ODF9XFx1ezFGNjMyfVxcdXsxRjMzRn1cXHV7MUY5RTF9XFx1ezFGMzgxfVxcdTI2QTFcXHV7MUYzMUV9XFx1ezFGMzg4fVxcdTI3NENcXHUyNzBBXFx1ezFGNDRCfVxcdXsxRjYzMH1cXHV7MUY5Mjh9XFx1ezFGNjM2fVxcdXsxRjkxRH1cXHV7MUY2QjZ9XFx1ezFGNEIwfVxcdXsxRjM1M31cXHV7MUY0QTJ9XFx1ezFGOTFGfVxcdXsxRjY0MX1cXHV7MUY2QTh9XFx1ezFGNEE4fVxcdXsxRjkyQ31cXHUyNzA4XFx1ezFGMzgwfVxcdXsxRjM3QX1cXHV7MUY5MTN9XFx1ezFGNjE5fVxcdXsxRjQ5Rn1cXHV7MUYzMzF9XFx1ezFGNjE2fVxcdXsxRjQ3Nn1cXHV7MUY5NzR9XFx1MjVCNlxcdTI3QTFcXHUyNzUzXFx1ezFGNDhFfVxcdXsxRjRCOH1cXHUyQjA3XFx1ezFGNjI4fVxcdXsxRjMxQX1cXHV7MUY5OEJ9XFx1ezFGNjM3fVxcdXsxRjU3QX1cXHUyNkEwXFx1ezFGNjQ1fVxcdXsxRjYxRn1cXHV7MUY2MzV9XFx1ezFGNDRFfVxcdXsxRjkzMn1cXHV7MUY5MjB9XFx1ezFGOTI3fVxcdXsxRjRDQ31cXHV7MUY1MzV9XFx1ezFGNDg1fVxcdXsxRjlEMH1cXHV7MUY0M0V9XFx1ezFGMzUyfVxcdXsxRjYxN31cXHV7MUY5MTF9XFx1ezFGMzBBfVxcdXsxRjkyRn1cXHV7MUY0Mzd9XFx1MjYwRVxcdXsxRjRBN31cXHV7MUY2MkZ9XFx1ezFGNDg2fVxcdXsxRjQ0Nn1cXHV7MUYzQTR9XFx1ezFGNjQ3fVxcdXsxRjM1MX1cXHUyNzQ0XFx1ezFGMzM0fVxcdXsxRjRBM31cXHV7MUY0Mzh9XFx1ezFGNDhDfVxcdXsxRjRDRH1cXHV7MUY5NDB9XFx1ezFGOTIyfVxcdXsxRjQ0NX1cXHV7MUY0QTF9XFx1ezFGNEE5fVxcdXsxRjQ1MH1cXHV7MUY0Rjh9XFx1ezFGNDdCfVxcdXsxRjkxMH1cXHV7MUY5MkV9XFx1ezFGM0JDfVxcdXsxRjk3NX1cXHV7MUY2QTl9XFx1ezFGMzRFfVxcdXsxRjM0QX1cXHV7MUY0N0N9XFx1ezFGNDhEfVxcdXsxRjRFM31cXHV7MUY5NDJ9XCIpLHhzPUxlLnJlZHVjZSgocixlLHQpPT4oclt0XT1lLHIpLFtdKSxPcz1MZS5yZWR1Y2UoKHIsZSx0KT0+KHJbZS5jb2RlUG9pbnRBdCgwKV09dCxyKSxbXSk7ZnVuY3Rpb24gQXMocil7cmV0dXJuIHIucmVkdWNlKChlLHQpPT4oZSs9eHNbdF0sZSksXCJcIil9ZnVuY3Rpb24genMocil7Y29uc3QgZT1bXTtmb3IoY29uc3QgdCBvZiByKXtjb25zdCBpPU9zW3QuY29kZVBvaW50QXQoMCldO2lmKGk9PT12b2lkIDApdGhyb3cgbmV3IEVycm9yKGBOb24tYmFzZTI1NmVtb2ppIGNoYXJhY3RlcjogJHt0fWApO2UucHVzaChpKX1yZXR1cm4gbmV3IFVpbnQ4QXJyYXkoZSl9Y29uc3QgTnM9Vyh7cHJlZml4OlwiXFx1ezFGNjgwfVwiLG5hbWU6XCJiYXNlMjU2ZW1vamlcIixlbmNvZGU6QXMsZGVjb2RlOnpzfSk7dmFyIExzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGJhc2UyNTZlbW9qaTpOc30pLFVzPUZlLFVlPTEyOCxGcz0xMjcsJHM9fkZzLE1zPU1hdGgucG93KDIsMzEpO2Z1bmN0aW9uIEZlKHIsZSx0KXtlPWV8fFtdLHQ9dHx8MDtmb3IodmFyIGk9dDtyPj1NczspZVt0KytdPXImMjU1fFVlLHIvPTEyODtmb3IoO3ImJHM7KWVbdCsrXT1yJjI1NXxVZSxyPj4+PTc7cmV0dXJuIGVbdF09cnwwLEZlLmJ5dGVzPXQtaSsxLGV9dmFyIGtzPW9lLEtzPTEyOCwkZT0xMjc7ZnVuY3Rpb24gb2UocixpKXt2YXIgdD0wLGk9aXx8MCxzPTAsbj1pLGEsbz1yLmxlbmd0aDtkb3tpZihuPj1vKXRocm93IG9lLmJ5dGVzPTAsbmV3IFJhbmdlRXJyb3IoXCJDb3VsZCBub3QgZGVjb2RlIHZhcmludFwiKTthPXJbbisrXSx0Kz1zPDI4PyhhJiRlKTw8czooYSYkZSkqTWF0aC5wb3coMixzKSxzKz03fXdoaWxlKGE+PUtzKTtyZXR1cm4gb2UuYnl0ZXM9bi1pLHR9dmFyIEJzPU1hdGgucG93KDIsNyksVnM9TWF0aC5wb3coMiwxNCkscXM9TWF0aC5wb3coMiwyMSksanM9TWF0aC5wb3coMiwyOCksWXM9TWF0aC5wb3coMiwzNSksR3M9TWF0aC5wb3coMiw0MiksSHM9TWF0aC5wb3coMiw0OSksSnM9TWF0aC5wb3coMiw1NiksV3M9TWF0aC5wb3coMiw2MyksWHM9ZnVuY3Rpb24ocil7cmV0dXJuIHI8QnM/MTpyPFZzPzI6cjxxcz8zOnI8anM/NDpyPFlzPzU6cjxHcz82OnI8SHM/NzpyPEpzPzg6cjxXcz85OjEwfSxRcz17ZW5jb2RlOlVzLGRlY29kZTprcyxlbmNvZGluZ0xlbmd0aDpYc30sTWU9UXM7Y29uc3Qga2U9KHIsZSx0PTApPT4oTWUuZW5jb2RlKHIsZSx0KSxlKSxLZT1yPT5NZS5lbmNvZGluZ0xlbmd0aChyKSxoZT0ocixlKT0+e2NvbnN0IHQ9ZS5ieXRlTGVuZ3RoLGk9S2Uocikscz1pK0tlKHQpLG49bmV3IFVpbnQ4QXJyYXkocyt0KTtyZXR1cm4ga2UocixuLDApLGtlKHQsbixpKSxuLnNldChlLHMpLG5ldyBacyhyLHQsZSxuKX07Y2xhc3MgWnN7Y29uc3RydWN0b3IoZSx0LGkscyl7dGhpcy5jb2RlPWUsdGhpcy5zaXplPXQsdGhpcy5kaWdlc3Q9aSx0aGlzLmJ5dGVzPXN9fWNvbnN0IEJlPSh7bmFtZTpyLGNvZGU6ZSxlbmNvZGU6dH0pPT5uZXcgZXIocixlLHQpO2NsYXNzIGVye2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLm5hbWU9ZSx0aGlzLmNvZGU9dCx0aGlzLmVuY29kZT1pfWRpZ2VzdChlKXtpZihlIGluc3RhbmNlb2YgVWludDhBcnJheSl7Y29uc3QgdD10aGlzLmVuY29kZShlKTtyZXR1cm4gdCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/aGUodGhpcy5jb2RlLHQpOnQudGhlbihpPT5oZSh0aGlzLmNvZGUsaSkpfWVsc2UgdGhyb3cgRXJyb3IoXCJVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGVcIil9fWNvbnN0IFZlPXI9PmFzeW5jIGU9Pm5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KHIsZSkpLHRyPUJlKHtuYW1lOlwic2hhMi0yNTZcIixjb2RlOjE4LGVuY29kZTpWZShcIlNIQS0yNTZcIil9KSxpcj1CZSh7bmFtZTpcInNoYTItNTEyXCIsY29kZToxOSxlbmNvZGU6VmUoXCJTSEEtNTEyXCIpfSk7dmFyIHNyPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLHNoYTI1Njp0cixzaGE1MTI6aXJ9KTtjb25zdCBxZT0wLHJyPVwiaWRlbnRpdHlcIixqZT16ZSxucj1yPT5oZShxZSxqZShyKSksYXI9e2NvZGU6cWUsbmFtZTpycixlbmNvZGU6amUsZGlnZXN0Om5yfTt2YXIgb3I9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsaWRlbnRpdHk6YXJ9KTtuZXcgVGV4dEVuY29kZXIsbmV3IFRleHREZWNvZGVyO2NvbnN0IFllPXsuLi5aaSwuLi50cywuLi5zcywuLi5ucywuLi5ocywuLi5icywuLi53cywuLi5DcywuLi5UcywuLi5Mc307KHsuLi5zciwuLi5vcn0pO2Z1bmN0aW9uIEdlKHIpe3JldHVybiBnbG9iYWxUaGlzLkJ1ZmZlciE9bnVsbD9uZXcgVWludDhBcnJheShyLmJ1ZmZlcixyLmJ5dGVPZmZzZXQsci5ieXRlTGVuZ3RoKTpyfWZ1bmN0aW9uIGhyKHI9MCl7cmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyIT1udWxsJiZnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZSE9bnVsbD9HZShnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZShyKSk6bmV3IFVpbnQ4QXJyYXkocil9ZnVuY3Rpb24gSGUocixlLHQsaSl7cmV0dXJue25hbWU6cixwcmVmaXg6ZSxlbmNvZGVyOntuYW1lOnIscHJlZml4OmUsZW5jb2RlOnR9LGRlY29kZXI6e2RlY29kZTppfX19Y29uc3QgSmU9SGUoXCJ1dGY4XCIsXCJ1XCIscj0+XCJ1XCIrbmV3IFRleHREZWNvZGVyKFwidXRmOFwiKS5kZWNvZGUocikscj0+bmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHIuc3Vic3RyaW5nKDEpKSksY2U9SGUoXCJhc2NpaVwiLFwiYVwiLHI9PntsZXQgZT1cImFcIjtmb3IobGV0IHQ9MDt0PHIubGVuZ3RoO3QrKyllKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHJbdF0pO3JldHVybiBlfSxyPT57cj1yLnN1YnN0cmluZygxKTtjb25zdCBlPWhyKHIubGVuZ3RoKTtmb3IobGV0IHQ9MDt0PHIubGVuZ3RoO3QrKyllW3RdPXIuY2hhckNvZGVBdCh0KTtyZXR1cm4gZX0pLGNyPXt1dGY4OkplLFwidXRmLThcIjpKZSxoZXg6WWUuYmFzZTE2LGxhdGluMTpjZSxhc2NpaTpjZSxiaW5hcnk6Y2UsLi4uWWV9O2Z1bmN0aW9uIHVyKHIsZT1cInV0ZjhcIil7Y29uc3QgdD1jcltlXTtpZighdCl0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHtlfVwiYCk7cmV0dXJuKGU9PT1cInV0ZjhcInx8ZT09PVwidXRmLThcIikmJmdsb2JhbFRoaXMuQnVmZmVyIT1udWxsJiZnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tIT1udWxsP0dlKGdsb2JhbFRoaXMuQnVmZmVyLmZyb20ocixcInV0Zi04XCIpKTp0LmRlY29kZXIuZGVjb2RlKGAke3QucHJlZml4fSR7cn1gKX1jb25zdCB1ZT1cIndjXCIsV2U9MixYPVwiY29yZVwiLE89YCR7dWV9QDI6JHtYfTpgLFhlPXtuYW1lOlgsbG9nZ2VyOlwiZXJyb3JcIn0sUWU9e2RhdGFiYXNlOlwiOm1lbW9yeTpcIn0sWmU9XCJjcnlwdG9cIixsZT1cImNsaWVudF9lZDI1NTE5X3NlZWRcIixldD1MLHR0PVwia2V5Y2hhaW5cIixpdD1cIjAuM1wiLHN0PVwibWVzc2FnZXNcIixydD1cIjAuM1wiLG50PUFpLGF0PVwicHVibGlzaGVyXCIsb3Q9XCJpcm5cIixodD1cImVycm9yXCIsZGU9XCJ3c3M6Ly9yZWxheS53YWxsZXRjb25uZWN0LmNvbVwiLGdlPVwid3NzOi8vcmVsYXkud2FsbGV0Y29ubmVjdC5vcmdcIixjdD1cInJlbGF5ZXJcIixEPXttZXNzYWdlOlwicmVsYXllcl9tZXNzYWdlXCIsbWVzc2FnZV9hY2s6XCJyZWxheWVyX21lc3NhZ2VfYWNrXCIsY29ubmVjdDpcInJlbGF5ZXJfY29ubmVjdFwiLGRpc2Nvbm5lY3Q6XCJyZWxheWVyX2Rpc2Nvbm5lY3RcIixlcnJvcjpcInJlbGF5ZXJfZXJyb3JcIixjb25uZWN0aW9uX3N0YWxsZWQ6XCJyZWxheWVyX2Nvbm5lY3Rpb25fc3RhbGxlZFwiLHRyYW5zcG9ydF9jbG9zZWQ6XCJyZWxheWVyX3RyYW5zcG9ydF9jbG9zZWRcIixwdWJsaXNoOlwicmVsYXllcl9wdWJsaXNoXCJ9LHV0PVwiX3N1YnNjcmlwdGlvblwiLFQ9e3BheWxvYWQ6XCJwYXlsb2FkXCIsY29ubmVjdDpcImNvbm5lY3RcIixkaXNjb25uZWN0OlwiZGlzY29ubmVjdFwiLGVycm9yOlwiZXJyb3JcIn0sbHQ9Q2UsbHI9e2RhdGFiYXNlOlwiOm1lbW9yeTpcIn0sZHQ9XCIyLjEwLjJcIixndD0xZTQscHQ9XCIwLjNcIixEdD1cIldBTExFVENPTk5FQ1RfQ0xJRU5UX0lEXCIsdz17Y3JlYXRlZDpcInN1YnNjcmlwdGlvbl9jcmVhdGVkXCIsZGVsZXRlZDpcInN1YnNjcmlwdGlvbl9kZWxldGVkXCIsZXhwaXJlZDpcInN1YnNjcmlwdGlvbl9leHBpcmVkXCIsZGlzYWJsZWQ6XCJzdWJzY3JpcHRpb25fZGlzYWJsZWRcIixzeW5jOlwic3Vic2NyaXB0aW9uX3N5bmNcIixyZXN1YnNjcmliZWQ6XCJzdWJzY3JpcHRpb25fcmVzdWJzY3JpYmVkXCJ9LGRyPUoseXQ9XCJzdWJzY3JpcHRpb25cIixtdD1cIjAuM1wiLGJ0PVJlKjFlMyxmdD1cInBhaXJpbmdcIixFdD1cIjAuM1wiLGdyPUosRj17d2NfcGFpcmluZ0RlbGV0ZTp7cmVxOnt0dGw6TCxwcm9tcHQ6ITEsdGFnOjFlM30scmVzOnt0dGw6TCxwcm9tcHQ6ITEsdGFnOjEwMDF9fSx3Y19wYWlyaW5nUGluZzp7cmVxOnt0dGw6X2UscHJvbXB0OiExLHRhZzoxMDAyfSxyZXM6e3R0bDpfZSxwcm9tcHQ6ITEsdGFnOjEwMDN9fSx1bnJlZ2lzdGVyZWRfbWV0aG9kOntyZXE6e3R0bDpMLHByb21wdDohMSx0YWc6MH0scmVzOnt0dGw6TCxwcm9tcHQ6ITEsdGFnOjB9fX0sQj17Y3JlYXRlOlwicGFpcmluZ19jcmVhdGVcIixleHBpcmU6XCJwYWlyaW5nX2V4cGlyZVwiLGRlbGV0ZTpcInBhaXJpbmdfZGVsZXRlXCIscGluZzpcInBhaXJpbmdfcGluZ1wifSxSPXtjcmVhdGVkOlwiaGlzdG9yeV9jcmVhdGVkXCIsdXBkYXRlZDpcImhpc3RvcnlfdXBkYXRlZFwiLGRlbGV0ZWQ6XCJoaXN0b3J5X2RlbGV0ZWRcIixzeW5jOlwiaGlzdG9yeV9zeW5jXCJ9LHd0PVwiaGlzdG9yeVwiLHZ0PVwiMC4zXCIsSXQ9XCJleHBpcmVyXCIsdj17Y3JlYXRlZDpcImV4cGlyZXJfY3JlYXRlZFwiLGRlbGV0ZWQ6XCJleHBpcmVyX2RlbGV0ZWRcIixleHBpcmVkOlwiZXhwaXJlcl9leHBpcmVkXCIsc3luYzpcImV4cGlyZXJfc3luY1wifSxDdD1cIjAuM1wiLHByPUwsUT1cInZlcmlmeS1hcGlcIixaPVwiaHR0cHM6Ly92ZXJpZnkud2FsbGV0Y29ubmVjdC5jb21cIixwZT1cImh0dHBzOi8vdmVyaWZ5LndhbGxldGNvbm5lY3Qub3JnXCI7Y2xhc3MgUnR7Y29uc3RydWN0b3IoZSx0KXt0aGlzLmNvcmU9ZSx0aGlzLmxvZ2dlcj10LHRoaXMua2V5Y2hhaW49bmV3IE1hcCx0aGlzLm5hbWU9dHQsdGhpcy52ZXJzaW9uPWl0LHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5zdG9yYWdlUHJlZml4PU8sdGhpcy5pbml0PWFzeW5jKCk9PntpZighdGhpcy5pbml0aWFsaXplZCl7Y29uc3QgaT1hd2FpdCB0aGlzLmdldEtleUNoYWluKCk7dHlwZW9mIGk8XCJ1XCImJih0aGlzLmtleWNoYWluPWkpLHRoaXMuaW5pdGlhbGl6ZWQ9ITB9fSx0aGlzLmhhcz1pPT4odGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5rZXljaGFpbi5oYXMoaSkpLHRoaXMuc2V0PWFzeW5jKGkscyk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmtleWNoYWluLnNldChpLHMpLGF3YWl0IHRoaXMucGVyc2lzdCgpfSx0aGlzLmdldD1pPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgcz10aGlzLmtleWNoYWluLmdldChpKTtpZih0eXBlb2Ygcz5cInVcIil7Y29uc3R7bWVzc2FnZTpufT1sKFwiTk9fTUFUQ0hJTkdfS0VZXCIsYCR7dGhpcy5uYW1lfTogJHtpfWApO3Rocm93IG5ldyBFcnJvcihuKX1yZXR1cm4gc30sdGhpcy5kZWw9YXN5bmMgaT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMua2V5Y2hhaW4uZGVsZXRlKGkpLGF3YWl0IHRoaXMucGVyc2lzdCgpfSx0aGlzLmNvcmU9ZSx0aGlzLmxvZ2dlcj1mKHQsdGhpcy5uYW1lKX1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1nZXQgc3RvcmFnZUtleSgpe3JldHVybiB0aGlzLnN0b3JhZ2VQcmVmaXgrdGhpcy52ZXJzaW9uK3RoaXMuY29yZS5jdXN0b21TdG9yYWdlUHJlZml4K1wiLy9cIit0aGlzLm5hbWV9YXN5bmMgc2V0S2V5Q2hhaW4oZSl7YXdhaXQgdGhpcy5jb3JlLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksYmUoZSkpfWFzeW5jIGdldEtleUNoYWluKCl7Y29uc3QgZT1hd2FpdCB0aGlzLmNvcmUuc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSk7cmV0dXJuIHR5cGVvZiBlPFwidVwiP2ZlKGUpOnZvaWQgMH1hc3luYyBwZXJzaXN0KCl7YXdhaXQgdGhpcy5zZXRLZXlDaGFpbih0aGlzLmtleWNoYWluKX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3MgX3R7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuY29yZT1lLHRoaXMubG9nZ2VyPXQsdGhpcy5uYW1lPVplLHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5pbml0PWFzeW5jKCk9Pnt0aGlzLmluaXRpYWxpemVkfHwoYXdhaXQgdGhpcy5rZXljaGFpbi5pbml0KCksdGhpcy5pbml0aWFsaXplZD0hMCl9LHRoaXMuaGFzS2V5cz1zPT4odGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5rZXljaGFpbi5oYXMocykpLHRoaXMuZ2V0Q2xpZW50SWQ9YXN5bmMoKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0IHM9YXdhaXQgdGhpcy5nZXRDbGllbnRTZWVkKCksbj1ZLmdlbmVyYXRlS2V5UGFpcihzKTtyZXR1cm4gWS5lbmNvZGVJc3Mobi5wdWJsaWNLZXkpfSx0aGlzLmdlbmVyYXRlS2V5UGFpcj0oKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0IHM9bmkoKTtyZXR1cm4gdGhpcy5zZXRQcml2YXRlS2V5KHMucHVibGljS2V5LHMucHJpdmF0ZUtleSl9LHRoaXMuc2lnbkpXVD1hc3luYyBzPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgbj1hd2FpdCB0aGlzLmdldENsaWVudFNlZWQoKSxhPVkuZ2VuZXJhdGVLZXlQYWlyKG4pLG89dGUoKSxoPWV0O3JldHVybiBhd2FpdCBZLnNpZ25KV1QobyxzLGgsYSl9LHRoaXMuZ2VuZXJhdGVTaGFyZWRLZXk9KHMsbixhKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0IG89dGhpcy5nZXRQcml2YXRlS2V5KHMpLGg9YWkobyxuKTtyZXR1cm4gdGhpcy5zZXRTeW1LZXkoaCxhKX0sdGhpcy5zZXRTeW1LZXk9YXN5bmMocyxuKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0IGE9bnx8b2kocyk7cmV0dXJuIGF3YWl0IHRoaXMua2V5Y2hhaW4uc2V0KGEscyksYX0sdGhpcy5kZWxldGVLZXlQYWlyPWFzeW5jIHM9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSxhd2FpdCB0aGlzLmtleWNoYWluLmRlbChzKX0sdGhpcy5kZWxldGVTeW1LZXk9YXN5bmMgcz0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMua2V5Y2hhaW4uZGVsKHMpfSx0aGlzLmVuY29kZT1hc3luYyhzLG4sYSk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKTtjb25zdCBvPWhpKGEpLGg9c2kobik7aWYoRWUobykpe2NvbnN0IHk9by5zZW5kZXJQdWJsaWNLZXksJD1vLnJlY2VpdmVyUHVibGljS2V5O3M9YXdhaXQgdGhpcy5nZW5lcmF0ZVNoYXJlZEtleSh5LCQpfWNvbnN0IHU9dGhpcy5nZXRTeW1LZXkocykse3R5cGU6ZCxzZW5kZXJQdWJsaWNLZXk6cH09bztyZXR1cm4gY2koe3R5cGU6ZCxzeW1LZXk6dSxtZXNzYWdlOmgsc2VuZGVyUHVibGljS2V5OnB9KX0sdGhpcy5kZWNvZGU9YXN5bmMocyxuLGEpPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgbz11aShuLGEpO2lmKEVlKG8pKXtjb25zdCBoPW8ucmVjZWl2ZXJQdWJsaWNLZXksdT1vLnNlbmRlclB1YmxpY0tleTtzPWF3YWl0IHRoaXMuZ2VuZXJhdGVTaGFyZWRLZXkoaCx1KX10cnl7Y29uc3QgaD10aGlzLmdldFN5bUtleShzKSx1PWxpKHtzeW1LZXk6aCxlbmNvZGVkOm59KTtyZXR1cm4gcmkodSl9Y2F0Y2goaCl7dGhpcy5sb2dnZXIuZXJyb3IoYEZhaWxlZCB0byBkZWNvZGUgbWVzc2FnZSBmcm9tIHRvcGljOiAnJHtzfScsIGNsaWVudElkOiAnJHthd2FpdCB0aGlzLmdldENsaWVudElkKCl9J2ApLHRoaXMubG9nZ2VyLmVycm9yKGgpfX0sdGhpcy5nZXRQYXlsb2FkVHlwZT1zPT57Y29uc3Qgbj13ZShzKTtyZXR1cm4gZGkobi50eXBlKX0sdGhpcy5nZXRQYXlsb2FkU2VuZGVyUHVibGljS2V5PXM9Pntjb25zdCBuPXdlKHMpO3JldHVybiBuLnNlbmRlclB1YmxpY0tleT9PaShuLnNlbmRlclB1YmxpY0tleSxnaSk6dm9pZCAwfSx0aGlzLmNvcmU9ZSx0aGlzLmxvZ2dlcj1mKHQsdGhpcy5uYW1lKSx0aGlzLmtleWNoYWluPWl8fG5ldyBSdCh0aGlzLmNvcmUsdGhpcy5sb2dnZXIpfWdldCBjb250ZXh0KCl7cmV0dXJuIEUodGhpcy5sb2dnZXIpfWFzeW5jIHNldFByaXZhdGVLZXkoZSx0KXtyZXR1cm4gYXdhaXQgdGhpcy5rZXljaGFpbi5zZXQoZSx0KSxlfWdldFByaXZhdGVLZXkoZSl7cmV0dXJuIHRoaXMua2V5Y2hhaW4uZ2V0KGUpfWFzeW5jIGdldENsaWVudFNlZWQoKXtsZXQgZT1cIlwiO3RyeXtlPXRoaXMua2V5Y2hhaW4uZ2V0KGxlKX1jYXRjaHtlPXRlKCksYXdhaXQgdGhpcy5rZXljaGFpbi5zZXQobGUsZSl9cmV0dXJuIHVyKGUsXCJiYXNlMTZcIil9Z2V0U3ltS2V5KGUpe3JldHVybiB0aGlzLmtleWNoYWluLmdldChlKX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3MgU3QgZXh0ZW5kcyBIdHtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy5sb2dnZXI9ZSx0aGlzLmNvcmU9dCx0aGlzLm1lc3NhZ2VzPW5ldyBNYXAsdGhpcy5uYW1lPXN0LHRoaXMudmVyc2lvbj1ydCx0aGlzLmluaXRpYWxpemVkPSExLHRoaXMuc3RvcmFnZVByZWZpeD1PLHRoaXMuaW5pdD1hc3luYygpPT57aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe3RoaXMubG9nZ2VyLnRyYWNlKFwiSW5pdGlhbGl6ZWRcIik7dHJ5e2NvbnN0IGk9YXdhaXQgdGhpcy5nZXRSZWxheWVyTWVzc2FnZXMoKTt0eXBlb2YgaTxcInVcIiYmKHRoaXMubWVzc2FnZXM9aSksdGhpcy5sb2dnZXIuZGVidWcoYFN1Y2Nlc3NmdWxseSBSZXN0b3JlZCByZWNvcmRzIGZvciAke3RoaXMubmFtZX1gKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcInJlc3RvcmVcIixzaXplOnRoaXMubWVzc2FnZXMuc2l6ZX0pfWNhdGNoKGkpe3RoaXMubG9nZ2VyLmRlYnVnKGBGYWlsZWQgdG8gUmVzdG9yZSByZWNvcmRzIGZvciAke3RoaXMubmFtZX1gKSx0aGlzLmxvZ2dlci5lcnJvcihpKX1maW5hbGx5e3RoaXMuaW5pdGlhbGl6ZWQ9ITB9fX0sdGhpcy5zZXQ9YXN5bmMoaSxzKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0IG49aWUocyk7bGV0IGE9dGhpcy5tZXNzYWdlcy5nZXQoaSk7cmV0dXJuIHR5cGVvZiBhPlwidVwiJiYoYT17fSksdHlwZW9mIGFbbl08XCJ1XCJ8fChhW25dPXMsdGhpcy5tZXNzYWdlcy5zZXQoaSxhKSxhd2FpdCB0aGlzLnBlcnNpc3QoKSksbn0sdGhpcy5nZXQ9aT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2xldCBzPXRoaXMubWVzc2FnZXMuZ2V0KGkpO3JldHVybiB0eXBlb2Ygcz5cInVcIiYmKHM9e30pLHN9LHRoaXMuaGFzPShpLHMpPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgbj10aGlzLmdldChpKSxhPWllKHMpO3JldHVybiB0eXBlb2YgblthXTxcInVcIn0sdGhpcy5kZWw9YXN5bmMgaT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMubWVzc2FnZXMuZGVsZXRlKGkpLGF3YWl0IHRoaXMucGVyc2lzdCgpfSx0aGlzLmxvZ2dlcj1mKGUsdGhpcy5uYW1lKSx0aGlzLmNvcmU9dH1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1nZXQgc3RvcmFnZUtleSgpe3JldHVybiB0aGlzLnN0b3JhZ2VQcmVmaXgrdGhpcy52ZXJzaW9uK3RoaXMuY29yZS5jdXN0b21TdG9yYWdlUHJlZml4K1wiLy9cIit0aGlzLm5hbWV9YXN5bmMgc2V0UmVsYXllck1lc3NhZ2VzKGUpe2F3YWl0IHRoaXMuY29yZS5zdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LGJlKGUpKX1hc3luYyBnZXRSZWxheWVyTWVzc2FnZXMoKXtjb25zdCBlPWF3YWl0IHRoaXMuY29yZS5zdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtyZXR1cm4gdHlwZW9mIGU8XCJ1XCI/ZmUoZSk6dm9pZCAwfWFzeW5jIHBlcnNpc3QoKXthd2FpdCB0aGlzLnNldFJlbGF5ZXJNZXNzYWdlcyh0aGlzLm1lc3NhZ2VzKX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3MgRHIgZXh0ZW5kcyBKdHtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy5yZWxheWVyPWUsdGhpcy5sb2dnZXI9dCx0aGlzLmV2ZW50cz1uZXcgTix0aGlzLm5hbWU9YXQsdGhpcy5xdWV1ZT1uZXcgTWFwLHRoaXMucHVibGlzaFRpbWVvdXQ9VSh6aSksdGhpcy5uZWVkc1RyYW5zcG9ydFJlc3RhcnQ9ITEsdGhpcy5wdWJsaXNoPWFzeW5jKGkscyxuKT0+e3ZhciBhO3RoaXMubG9nZ2VyLmRlYnVnKFwiUHVibGlzaGluZyBQYXlsb2FkXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwicHVibGlzaFwiLHBhcmFtczp7dG9waWM6aSxtZXNzYWdlOnMsb3B0czpufX0pO3RyeXtjb25zdCBvPW4/LnR0bHx8bnQsaD1zZShuKSx1PW4/LnByb21wdHx8ITEsZD1uPy50YWd8fDAscD1uPy5pZHx8VWkoKS50b1N0cmluZygpLHk9e3RvcGljOmksbWVzc2FnZTpzLG9wdHM6e3R0bDpvLHJlbGF5OmgscHJvbXB0OnUsdGFnOmQsaWQ6cH19LCQ9c2V0VGltZW91dCgoKT0+dGhpcy5xdWV1ZS5zZXQocCx5KSx0aGlzLnB1Ymxpc2hUaW1lb3V0KTt0cnl7YXdhaXQgYXdhaXQgTSh0aGlzLnJwY1B1Ymxpc2goaSxzLG8saCx1LGQscCksdGhpcy5wdWJsaXNoVGltZW91dCxcIkZhaWxlZCB0byBwdWJsaXNoIHBheWxvYWQsIHBsZWFzZSB0cnkgYWdhaW4uXCIpLHRoaXMucmVtb3ZlUmVxdWVzdEZyb21RdWV1ZShwKSx0aGlzLnJlbGF5ZXIuZXZlbnRzLmVtaXQoRC5wdWJsaXNoLHkpfWNhdGNoKGMpe2lmKHRoaXMubG9nZ2VyLmRlYnVnKFwiUHVibGlzaGluZyBQYXlsb2FkIHN0YWxsZWRcIiksdGhpcy5uZWVkc1RyYW5zcG9ydFJlc3RhcnQ9ITAsKGE9bj8uaW50ZXJuYWwpIT1udWxsJiZhLnRocm93T25GYWlsZWRQdWJsaXNoKXRocm93IHRoaXMucmVtb3ZlUmVxdWVzdEZyb21RdWV1ZShwKSxjO3JldHVybn1maW5hbGx5e2NsZWFyVGltZW91dCgkKX10aGlzLmxvZ2dlci5kZWJ1ZyhcIlN1Y2Nlc3NmdWxseSBQdWJsaXNoZWQgUGF5bG9hZFwiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcInB1Ymxpc2hcIixwYXJhbXM6e3RvcGljOmksbWVzc2FnZTpzLG9wdHM6bn19KX1jYXRjaChvKXt0aHJvdyB0aGlzLmxvZ2dlci5kZWJ1ZyhcIkZhaWxlZCB0byBQdWJsaXNoIFBheWxvYWRcIiksdGhpcy5sb2dnZXIuZXJyb3Iobyksb319LHRoaXMub249KGkscyk9Pnt0aGlzLmV2ZW50cy5vbihpLHMpfSx0aGlzLm9uY2U9KGkscyk9Pnt0aGlzLmV2ZW50cy5vbmNlKGkscyl9LHRoaXMub2ZmPShpLHMpPT57dGhpcy5ldmVudHMub2ZmKGkscyl9LHRoaXMucmVtb3ZlTGlzdGVuZXI9KGkscyk9Pnt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcihpLHMpfSx0aGlzLnJlbGF5ZXI9ZSx0aGlzLmxvZ2dlcj1mKHQsdGhpcy5uYW1lKSx0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKX1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1ycGNQdWJsaXNoKGUsdCxpLHMsbixhLG8pe3ZhciBoLHUsZCxwO2NvbnN0IHk9e21ldGhvZDpHKHMucHJvdG9jb2wpLnB1Ymxpc2gscGFyYW1zOnt0b3BpYzplLG1lc3NhZ2U6dCx0dGw6aSxwcm9tcHQ6bix0YWc6YX0saWQ6b307cmV0dXJuIHJlKChoPXkucGFyYW1zKT09bnVsbD92b2lkIDA6aC5wcm9tcHQpJiYoKHU9eS5wYXJhbXMpPT1udWxsfHxkZWxldGUgdS5wcm9tcHQpLHJlKChkPXkucGFyYW1zKT09bnVsbD92b2lkIDA6ZC50YWcpJiYoKHA9eS5wYXJhbXMpPT1udWxsfHxkZWxldGUgcC50YWcpLHRoaXMubG9nZ2VyLmRlYnVnKFwiT3V0Z29pbmcgUmVsYXkgUGF5bG9hZFwiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1lc3NhZ2VcIixkaXJlY3Rpb246XCJvdXRnb2luZ1wiLHJlcXVlc3Q6eX0pLHRoaXMucmVsYXllci5yZXF1ZXN0KHkpfXJlbW92ZVJlcXVlc3RGcm9tUXVldWUoZSl7dGhpcy5xdWV1ZS5kZWxldGUoZSl9Y2hlY2tRdWV1ZSgpe3RoaXMucXVldWUuZm9yRWFjaChhc3luYyBlPT57Y29uc3R7dG9waWM6dCxtZXNzYWdlOmksb3B0czpzfT1lO2F3YWl0IHRoaXMucHVibGlzaCh0LGkscyl9KX1yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl7dGhpcy5yZWxheWVyLmNvcmUuaGVhcnRiZWF0Lm9uKGoucHVsc2UsKCk9PntpZih0aGlzLm5lZWRzVHJhbnNwb3J0UmVzdGFydCl7dGhpcy5uZWVkc1RyYW5zcG9ydFJlc3RhcnQ9ITEsdGhpcy5yZWxheWVyLmV2ZW50cy5lbWl0KEQuY29ubmVjdGlvbl9zdGFsbGVkKTtyZXR1cm59dGhpcy5jaGVja1F1ZXVlKCl9KSx0aGlzLnJlbGF5ZXIub24oRC5tZXNzYWdlX2FjayxlPT57dGhpcy5yZW1vdmVSZXF1ZXN0RnJvbVF1ZXVlKGUuaWQudG9TdHJpbmcoKSl9KX19Y2xhc3MgeXJ7Y29uc3RydWN0b3IoKXt0aGlzLm1hcD1uZXcgTWFwLHRoaXMuc2V0PShlLHQpPT57Y29uc3QgaT10aGlzLmdldChlKTt0aGlzLmV4aXN0cyhlLHQpfHx0aGlzLm1hcC5zZXQoZSxbLi4uaSx0XSl9LHRoaXMuZ2V0PWU9PnRoaXMubWFwLmdldChlKXx8W10sdGhpcy5leGlzdHM9KGUsdCk9PnRoaXMuZ2V0KGUpLmluY2x1ZGVzKHQpLHRoaXMuZGVsZXRlPShlLHQpPT57aWYodHlwZW9mIHQ+XCJ1XCIpe3RoaXMubWFwLmRlbGV0ZShlKTtyZXR1cm59aWYoIXRoaXMubWFwLmhhcyhlKSlyZXR1cm47Y29uc3QgaT10aGlzLmdldChlKTtpZighdGhpcy5leGlzdHMoZSx0KSlyZXR1cm47Y29uc3Qgcz1pLmZpbHRlcihuPT5uIT09dCk7aWYoIXMubGVuZ3RoKXt0aGlzLm1hcC5kZWxldGUoZSk7cmV0dXJufXRoaXMubWFwLnNldChlLHMpfSx0aGlzLmNsZWFyPSgpPT57dGhpcy5tYXAuY2xlYXIoKX19Z2V0IHRvcGljcygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMubWFwLmtleXMoKSl9fXZhciBtcj1PYmplY3QuZGVmaW5lUHJvcGVydHksYnI9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMsZnI9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMsUHQ9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxFcj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHdyPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsVHQ9KHIsZSx0KT0+ZSBpbiByP21yKHIsZSx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6dH0pOnJbZV09dCxWPShyLGUpPT57Zm9yKHZhciB0IGluIGV8fChlPXt9KSlFci5jYWxsKGUsdCkmJlR0KHIsdCxlW3RdKTtpZihQdClmb3IodmFyIHQgb2YgUHQoZSkpd3IuY2FsbChlLHQpJiZUdChyLHQsZVt0XSk7cmV0dXJuIHJ9LERlPShyLGUpPT5icihyLGZyKGUpKTtjbGFzcyB4dCBleHRlbmRzIFd0e2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoZSx0KSx0aGlzLnJlbGF5ZXI9ZSx0aGlzLmxvZ2dlcj10LHRoaXMuc3Vic2NyaXB0aW9ucz1uZXcgTWFwLHRoaXMudG9waWNNYXA9bmV3IHlyLHRoaXMuZXZlbnRzPW5ldyBOLHRoaXMubmFtZT15dCx0aGlzLnZlcnNpb249bXQsdGhpcy5wZW5kaW5nPW5ldyBNYXAsdGhpcy5jYWNoZWQ9W10sdGhpcy5pbml0aWFsaXplZD0hMSx0aGlzLnBlbmRpbmdTdWJzY3JpcHRpb25XYXRjaExhYmVsPVwicGVuZGluZ19zdWJfd2F0Y2hfbGFiZWxcIix0aGlzLnBvbGxpbmdJbnRlcnZhbD0yMCx0aGlzLnN0b3JhZ2VQcmVmaXg9Tyx0aGlzLnN1YnNjcmliZVRpbWVvdXQ9MWU0LHRoaXMucmVzdGFydEluUHJvZ3Jlc3M9ITEsdGhpcy5iYXRjaFN1YnNjcmliZVRvcGljc0xpbWl0PTUwMCx0aGlzLmluaXQ9YXN5bmMoKT0+e3RoaXMuaW5pdGlhbGl6ZWR8fCh0aGlzLmxvZ2dlci50cmFjZShcIkluaXRpYWxpemVkXCIpLHRoaXMucmVnaXN0ZXJFdmVudExpc3RlbmVycygpLHRoaXMuY2xpZW50SWQ9YXdhaXQgdGhpcy5yZWxheWVyLmNvcmUuY3J5cHRvLmdldENsaWVudElkKCkpfSx0aGlzLnN1YnNjcmliZT1hc3luYyhpLHMpPT57YXdhaXQgdGhpcy5yZXN0YXJ0VG9Db21wbGV0ZSgpLHRoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMubG9nZ2VyLmRlYnVnKFwiU3Vic2NyaWJpbmcgVG9waWNcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJzdWJzY3JpYmVcIixwYXJhbXM6e3RvcGljOmksb3B0czpzfX0pO3RyeXtjb25zdCBuPXNlKHMpLGE9e3RvcGljOmkscmVsYXk6bn07dGhpcy5wZW5kaW5nLnNldChpLGEpO2NvbnN0IG89YXdhaXQgdGhpcy5ycGNTdWJzY3JpYmUoaSxuKTtyZXR1cm4gdGhpcy5vblN1YnNjcmliZShvLGEpLHRoaXMubG9nZ2VyLmRlYnVnKFwiU3VjY2Vzc2Z1bGx5IFN1YnNjcmliZWQgVG9waWNcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJzdWJzY3JpYmVcIixwYXJhbXM6e3RvcGljOmksb3B0czpzfX0pLG99Y2F0Y2gobil7dGhyb3cgdGhpcy5sb2dnZXIuZGVidWcoXCJGYWlsZWQgdG8gU3Vic2NyaWJlIFRvcGljXCIpLHRoaXMubG9nZ2VyLmVycm9yKG4pLG59fSx0aGlzLnVuc3Vic2NyaWJlPWFzeW5jKGkscyk9Pnthd2FpdCB0aGlzLnJlc3RhcnRUb0NvbXBsZXRlKCksdGhpcy5pc0luaXRpYWxpemVkKCksdHlwZW9mIHM/LmlkPFwidVwiP2F3YWl0IHRoaXMudW5zdWJzY3JpYmVCeUlkKGkscy5pZCxzKTphd2FpdCB0aGlzLnVuc3Vic2NyaWJlQnlUb3BpYyhpLHMpfSx0aGlzLmlzU3Vic2NyaWJlZD1hc3luYyBpPT50aGlzLnRvcGljcy5pbmNsdWRlcyhpKT8hMDphd2FpdCBuZXcgUHJvbWlzZSgocyxuKT0+e2NvbnN0IGE9bmV3IE5pO2Euc3RhcnQodGhpcy5wZW5kaW5nU3Vic2NyaXB0aW9uV2F0Y2hMYWJlbCk7Y29uc3Qgbz1zZXRJbnRlcnZhbCgoKT0+eyF0aGlzLnBlbmRpbmcuaGFzKGkpJiZ0aGlzLnRvcGljcy5pbmNsdWRlcyhpKSYmKGNsZWFySW50ZXJ2YWwobyksYS5zdG9wKHRoaXMucGVuZGluZ1N1YnNjcmlwdGlvbldhdGNoTGFiZWwpLHMoITApKSxhLmVsYXBzZWQodGhpcy5wZW5kaW5nU3Vic2NyaXB0aW9uV2F0Y2hMYWJlbCk+PWJ0JiYoY2xlYXJJbnRlcnZhbChvKSxhLnN0b3AodGhpcy5wZW5kaW5nU3Vic2NyaXB0aW9uV2F0Y2hMYWJlbCksbihuZXcgRXJyb3IoXCJTdWJzY3JpcHRpb24gcmVzb2x1dGlvbiB0aW1lb3V0XCIpKSl9LHRoaXMucG9sbGluZ0ludGVydmFsKX0pLmNhdGNoKCgpPT4hMSksdGhpcy5vbj0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uKGkscyl9LHRoaXMub25jZT0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uY2UoaSxzKX0sdGhpcy5vZmY9KGkscyk9Pnt0aGlzLmV2ZW50cy5vZmYoaSxzKX0sdGhpcy5yZW1vdmVMaXN0ZW5lcj0oaSxzKT0+e3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKGkscyl9LHRoaXMucmVzdGFydD1hc3luYygpPT57dGhpcy5yZXN0YXJ0SW5Qcm9ncmVzcz0hMCxhd2FpdCB0aGlzLnJlc3RvcmUoKSxhd2FpdCB0aGlzLnJlc2V0KCksdGhpcy5yZXN0YXJ0SW5Qcm9ncmVzcz0hMX0sdGhpcy5yZWxheWVyPWUsdGhpcy5sb2dnZXI9Zih0LHRoaXMubmFtZSksdGhpcy5jbGllbnRJZD1cIlwifWdldCBjb250ZXh0KCl7cmV0dXJuIEUodGhpcy5sb2dnZXIpfWdldCBzdG9yYWdlS2V5KCl7cmV0dXJuIHRoaXMuc3RvcmFnZVByZWZpeCt0aGlzLnZlcnNpb24rdGhpcy5yZWxheWVyLmNvcmUuY3VzdG9tU3RvcmFnZVByZWZpeCtcIi8vXCIrdGhpcy5uYW1lfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5zdWJzY3JpcHRpb25zLnNpemV9Z2V0IGlkcygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMuc3Vic2NyaXB0aW9ucy5rZXlzKCkpfWdldCB2YWx1ZXMoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnN1YnNjcmlwdGlvbnMudmFsdWVzKCkpfWdldCB0b3BpY3MoKXtyZXR1cm4gdGhpcy50b3BpY01hcC50b3BpY3N9aGFzU3Vic2NyaXB0aW9uKGUsdCl7bGV0IGk9ITE7dHJ5e2k9dGhpcy5nZXRTdWJzY3JpcHRpb24oZSkudG9waWM9PT10fWNhdGNoe31yZXR1cm4gaX1vbkVuYWJsZSgpe3RoaXMuY2FjaGVkPVtdLHRoaXMuaW5pdGlhbGl6ZWQ9ITB9b25EaXNhYmxlKCl7dGhpcy5jYWNoZWQ9dGhpcy52YWx1ZXMsdGhpcy5zdWJzY3JpcHRpb25zLmNsZWFyKCksdGhpcy50b3BpY01hcC5jbGVhcigpfWFzeW5jIHVuc3Vic2NyaWJlQnlUb3BpYyhlLHQpe2NvbnN0IGk9dGhpcy50b3BpY01hcC5nZXQoZSk7YXdhaXQgUHJvbWlzZS5hbGwoaS5tYXAoYXN5bmMgcz0+YXdhaXQgdGhpcy51bnN1YnNjcmliZUJ5SWQoZSxzLHQpKSl9YXN5bmMgdW5zdWJzY3JpYmVCeUlkKGUsdCxpKXt0aGlzLmxvZ2dlci5kZWJ1ZyhcIlVuc3Vic2NyaWJpbmcgVG9waWNcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJ1bnN1YnNjcmliZVwiLHBhcmFtczp7dG9waWM6ZSxpZDp0LG9wdHM6aX19KTt0cnl7Y29uc3Qgcz1zZShpKTthd2FpdCB0aGlzLnJwY1Vuc3Vic2NyaWJlKGUsdCxzKTtjb25zdCBuPWsoXCJVU0VSX0RJU0NPTk5FQ1RFRFwiLGAke3RoaXMubmFtZX0sICR7ZX1gKTthd2FpdCB0aGlzLm9uVW5zdWJzY3JpYmUoZSx0LG4pLHRoaXMubG9nZ2VyLmRlYnVnKFwiU3VjY2Vzc2Z1bGx5IFVuc3Vic2NyaWJlZCBUb3BpY1wiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcInVuc3Vic2NyaWJlXCIscGFyYW1zOnt0b3BpYzplLGlkOnQsb3B0czppfX0pfWNhdGNoKHMpe3Rocm93IHRoaXMubG9nZ2VyLmRlYnVnKFwiRmFpbGVkIHRvIFVuc3Vic2NyaWJlIFRvcGljXCIpLHRoaXMubG9nZ2VyLmVycm9yKHMpLHN9fWFzeW5jIHJwY1N1YnNjcmliZShlLHQpe2NvbnN0IGk9e21ldGhvZDpHKHQucHJvdG9jb2wpLnN1YnNjcmliZSxwYXJhbXM6e3RvcGljOmV9fTt0aGlzLmxvZ2dlci5kZWJ1ZyhcIk91dGdvaW5nIFJlbGF5IFBheWxvYWRcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJwYXlsb2FkXCIsZGlyZWN0aW9uOlwib3V0Z29pbmdcIixyZXF1ZXN0Oml9KTt0cnl7YXdhaXQgYXdhaXQgTSh0aGlzLnJlbGF5ZXIucmVxdWVzdChpKSx0aGlzLnN1YnNjcmliZVRpbWVvdXQpfWNhdGNoe3RoaXMubG9nZ2VyLmRlYnVnKFwiT3V0Z29pbmcgUmVsYXkgU3Vic2NyaWJlIFBheWxvYWQgc3RhbGxlZFwiKSx0aGlzLnJlbGF5ZXIuZXZlbnRzLmVtaXQoRC5jb25uZWN0aW9uX3N0YWxsZWQpfXJldHVybiBpZShlK3RoaXMuY2xpZW50SWQpfWFzeW5jIHJwY0JhdGNoU3Vic2NyaWJlKGUpe2lmKCFlLmxlbmd0aClyZXR1cm47Y29uc3QgdD1lWzBdLnJlbGF5LGk9e21ldGhvZDpHKHQucHJvdG9jb2wpLmJhdGNoU3Vic2NyaWJlLHBhcmFtczp7dG9waWNzOmUubWFwKHM9PnMudG9waWMpfX07dGhpcy5sb2dnZXIuZGVidWcoXCJPdXRnb2luZyBSZWxheSBQYXlsb2FkXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwicGF5bG9hZFwiLGRpcmVjdGlvbjpcIm91dGdvaW5nXCIscmVxdWVzdDppfSk7dHJ5e3JldHVybiBhd2FpdCBhd2FpdCBNKHRoaXMucmVsYXllci5yZXF1ZXN0KGkpLHRoaXMuc3Vic2NyaWJlVGltZW91dCl9Y2F0Y2h7dGhpcy5sb2dnZXIuZGVidWcoXCJPdXRnb2luZyBSZWxheSBQYXlsb2FkIHN0YWxsZWRcIiksdGhpcy5yZWxheWVyLmV2ZW50cy5lbWl0KEQuY29ubmVjdGlvbl9zdGFsbGVkKX19cnBjVW5zdWJzY3JpYmUoZSx0LGkpe2NvbnN0IHM9e21ldGhvZDpHKGkucHJvdG9jb2wpLnVuc3Vic2NyaWJlLHBhcmFtczp7dG9waWM6ZSxpZDp0fX07cmV0dXJuIHRoaXMubG9nZ2VyLmRlYnVnKFwiT3V0Z29pbmcgUmVsYXkgUGF5bG9hZFwiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcInBheWxvYWRcIixkaXJlY3Rpb246XCJvdXRnb2luZ1wiLHJlcXVlc3Q6c30pLHRoaXMucmVsYXllci5yZXF1ZXN0KHMpfW9uU3Vic2NyaWJlKGUsdCl7dGhpcy5zZXRTdWJzY3JpcHRpb24oZSxEZShWKHt9LHQpLHtpZDplfSkpLHRoaXMucGVuZGluZy5kZWxldGUodC50b3BpYyl9b25CYXRjaFN1YnNjcmliZShlKXtlLmxlbmd0aCYmZS5mb3JFYWNoKHQ9Pnt0aGlzLnNldFN1YnNjcmlwdGlvbih0LmlkLFYoe30sdCkpLHRoaXMucGVuZGluZy5kZWxldGUodC50b3BpYyl9KX1hc3luYyBvblVuc3Vic2NyaWJlKGUsdCxpKXt0aGlzLmV2ZW50cy5yZW1vdmVBbGxMaXN0ZW5lcnModCksdGhpcy5oYXNTdWJzY3JpcHRpb24odCxlKSYmdGhpcy5kZWxldGVTdWJzY3JpcHRpb24odCxpKSxhd2FpdCB0aGlzLnJlbGF5ZXIubWVzc2FnZXMuZGVsKGUpfWFzeW5jIHNldFJlbGF5ZXJTdWJzY3JpcHRpb25zKGUpe2F3YWl0IHRoaXMucmVsYXllci5jb3JlLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksZSl9YXN5bmMgZ2V0UmVsYXllclN1YnNjcmlwdGlvbnMoKXtyZXR1cm4gYXdhaXQgdGhpcy5yZWxheWVyLmNvcmUuc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSl9c2V0U3Vic2NyaXB0aW9uKGUsdCl7dGhpcy5zdWJzY3JpcHRpb25zLmhhcyhlKXx8KHRoaXMubG9nZ2VyLmRlYnVnKFwiU2V0dGluZyBzdWJzY3JpcHRpb25cIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJzZXRTdWJzY3JpcHRpb25cIixpZDplLHN1YnNjcmlwdGlvbjp0fSksdGhpcy5hZGRTdWJzY3JpcHRpb24oZSx0KSl9YWRkU3Vic2NyaXB0aW9uKGUsdCl7dGhpcy5zdWJzY3JpcHRpb25zLnNldChlLFYoe30sdCkpLHRoaXMudG9waWNNYXAuc2V0KHQudG9waWMsZSksdGhpcy5ldmVudHMuZW1pdCh3LmNyZWF0ZWQsdCl9Z2V0U3Vic2NyaXB0aW9uKGUpe3RoaXMubG9nZ2VyLmRlYnVnKFwiR2V0dGluZyBzdWJzY3JpcHRpb25cIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJnZXRTdWJzY3JpcHRpb25cIixpZDplfSk7Y29uc3QgdD10aGlzLnN1YnNjcmlwdGlvbnMuZ2V0KGUpO2lmKCF0KXtjb25zdHttZXNzYWdlOml9PWwoXCJOT19NQVRDSElOR19LRVlcIixgJHt0aGlzLm5hbWV9OiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKGkpfXJldHVybiB0fWRlbGV0ZVN1YnNjcmlwdGlvbihlLHQpe3RoaXMubG9nZ2VyLmRlYnVnKFwiRGVsZXRpbmcgc3Vic2NyaXB0aW9uXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwiZGVsZXRlU3Vic2NyaXB0aW9uXCIsaWQ6ZSxyZWFzb246dH0pO2NvbnN0IGk9dGhpcy5nZXRTdWJzY3JpcHRpb24oZSk7dGhpcy5zdWJzY3JpcHRpb25zLmRlbGV0ZShlKSx0aGlzLnRvcGljTWFwLmRlbGV0ZShpLnRvcGljLGUpLHRoaXMuZXZlbnRzLmVtaXQody5kZWxldGVkLERlKFYoe30saSkse3JlYXNvbjp0fSkpfWFzeW5jIHBlcnNpc3QoKXthd2FpdCB0aGlzLnNldFJlbGF5ZXJTdWJzY3JpcHRpb25zKHRoaXMudmFsdWVzKSx0aGlzLmV2ZW50cy5lbWl0KHcuc3luYyl9YXN5bmMgcmVzZXQoKXtpZih0aGlzLmNhY2hlZC5sZW5ndGgpe2NvbnN0IGU9TWF0aC5jZWlsKHRoaXMuY2FjaGVkLmxlbmd0aC90aGlzLmJhdGNoU3Vic2NyaWJlVG9waWNzTGltaXQpO2ZvcihsZXQgdD0wO3Q8ZTt0Kyspe2NvbnN0IGk9dGhpcy5jYWNoZWQuc3BsaWNlKDAsdGhpcy5iYXRjaFN1YnNjcmliZVRvcGljc0xpbWl0KTthd2FpdCB0aGlzLmJhdGNoU3Vic2NyaWJlKGkpfX10aGlzLmV2ZW50cy5lbWl0KHcucmVzdWJzY3JpYmVkKX1hc3luYyByZXN0b3JlKCl7dHJ5e2NvbnN0IGU9YXdhaXQgdGhpcy5nZXRSZWxheWVyU3Vic2NyaXB0aW9ucygpO2lmKHR5cGVvZiBlPlwidVwifHwhZS5sZW5ndGgpcmV0dXJuO2lmKHRoaXMuc3Vic2NyaXB0aW9ucy5zaXplKXtjb25zdHttZXNzYWdlOnR9PWwoXCJSRVNUT1JFX1dJTExfT1ZFUlJJREVcIix0aGlzLm5hbWUpO3Rocm93IHRoaXMubG9nZ2VyLmVycm9yKHQpLHRoaXMubG9nZ2VyLmVycm9yKGAke3RoaXMubmFtZX06ICR7SlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZXMpfWApLG5ldyBFcnJvcih0KX10aGlzLmNhY2hlZD1lLHRoaXMubG9nZ2VyLmRlYnVnKGBTdWNjZXNzZnVsbHkgUmVzdG9yZWQgc3Vic2NyaXB0aW9ucyBmb3IgJHt0aGlzLm5hbWV9YCksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJyZXN0b3JlXCIsc3Vic2NyaXB0aW9uczp0aGlzLnZhbHVlc30pfWNhdGNoKGUpe3RoaXMubG9nZ2VyLmRlYnVnKGBGYWlsZWQgdG8gUmVzdG9yZSBzdWJzY3JpcHRpb25zIGZvciAke3RoaXMubmFtZX1gKSx0aGlzLmxvZ2dlci5lcnJvcihlKX19YXN5bmMgYmF0Y2hTdWJzY3JpYmUoZSl7aWYoIWUubGVuZ3RoKXJldHVybjtjb25zdCB0PWF3YWl0IHRoaXMucnBjQmF0Y2hTdWJzY3JpYmUoZSk7cGkodCkmJnRoaXMub25CYXRjaFN1YnNjcmliZSh0Lm1hcCgoaSxzKT0+RGUoVih7fSxlW3NdKSx7aWQ6aX0pKSl9YXN5bmMgb25Db25uZWN0KCl7dGhpcy5yZXN0YXJ0SW5Qcm9ncmVzc3x8KGF3YWl0IHRoaXMucmVzdGFydCgpLHRoaXMub25FbmFibGUoKSl9b25EaXNjb25uZWN0KCl7dGhpcy5vbkRpc2FibGUoKX1hc3luYyBjaGVja1BlbmRpbmcoKXtpZighdGhpcy5pbml0aWFsaXplZHx8dGhpcy5yZWxheWVyLnRyYW5zcG9ydEV4cGxpY2l0bHlDbG9zZWQpcmV0dXJuO2NvbnN0IGU9W107dGhpcy5wZW5kaW5nLmZvckVhY2godD0+e2UucHVzaCh0KX0pLGF3YWl0IHRoaXMuYmF0Y2hTdWJzY3JpYmUoZSl9cmVnaXN0ZXJFdmVudExpc3RlbmVycygpe3RoaXMucmVsYXllci5jb3JlLmhlYXJ0YmVhdC5vbihqLnB1bHNlLGFzeW5jKCk9Pnthd2FpdCB0aGlzLmNoZWNrUGVuZGluZygpfSksdGhpcy5yZWxheWVyLm9uKEQuY29ubmVjdCxhc3luYygpPT57YXdhaXQgdGhpcy5vbkNvbm5lY3QoKX0pLHRoaXMucmVsYXllci5vbihELmRpc2Nvbm5lY3QsKCk9Pnt0aGlzLm9uRGlzY29ubmVjdCgpfSksdGhpcy5ldmVudHMub24ody5jcmVhdGVkLGFzeW5jIGU9Pntjb25zdCB0PXcuY3JlYXRlZDt0aGlzLmxvZ2dlci5pbmZvKGBFbWl0dGluZyAke3R9YCksdGhpcy5sb2dnZXIuZGVidWcoe3R5cGU6XCJldmVudFwiLGV2ZW50OnQsZGF0YTplfSksYXdhaXQgdGhpcy5wZXJzaXN0KCl9KSx0aGlzLmV2ZW50cy5vbih3LmRlbGV0ZWQsYXN5bmMgZT0+e2NvbnN0IHQ9dy5kZWxldGVkO3RoaXMubG9nZ2VyLmluZm8oYEVtaXR0aW5nICR7dH1gKSx0aGlzLmxvZ2dlci5kZWJ1Zyh7dHlwZTpcImV2ZW50XCIsZXZlbnQ6dCxkYXRhOmV9KSxhd2FpdCB0aGlzLnBlcnNpc3QoKX0pfWlzSW5pdGlhbGl6ZWQoKXtpZighdGhpcy5pbml0aWFsaXplZCl7Y29uc3R7bWVzc2FnZTplfT1sKFwiTk9UX0lOSVRJQUxJWkVEXCIsdGhpcy5uYW1lKTt0aHJvdyBuZXcgRXJyb3IoZSl9fWFzeW5jIHJlc3RhcnRUb0NvbXBsZXRlKCl7dGhpcy5yZXN0YXJ0SW5Qcm9ncmVzcyYmYXdhaXQgbmV3IFByb21pc2UoZT0+e2NvbnN0IHQ9c2V0SW50ZXJ2YWwoKCk9Pnt0aGlzLnJlc3RhcnRJblByb2dyZXNzfHwoY2xlYXJJbnRlcnZhbCh0KSxlKCkpfSx0aGlzLnBvbGxpbmdJbnRlcnZhbCl9KX19dmFyIHZyPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxPdD1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLElyPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksQ3I9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxBdD0ocixlLHQpPT5lIGluIHI/dnIocixlLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTp0fSk6cltlXT10LFJyPShyLGUpPT57Zm9yKHZhciB0IGluIGV8fChlPXt9KSlJci5jYWxsKGUsdCkmJkF0KHIsdCxlW3RdKTtpZihPdClmb3IodmFyIHQgb2YgT3QoZSkpQ3IuY2FsbChlLHQpJiZBdChyLHQsZVt0XSk7cmV0dXJuIHJ9O2NsYXNzIHp0IGV4dGVuZHMgWHR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTIsdGhpcy5ldmVudHM9bmV3IE4sdGhpcy5uYW1lPWN0LHRoaXMudHJhbnNwb3J0RXhwbGljaXRseUNsb3NlZD0hMSx0aGlzLmluaXRpYWxpemVkPSExLHRoaXMuY29ubmVjdGlvbkF0dGVtcHRJblByb2dyZXNzPSExLHRoaXMuY29ubmVjdGlvblN0YXR1c1BvbGxpbmdJbnRlcnZhbD0yMCx0aGlzLnN0YWxlQ29ubmVjdGlvbkVycm9ycz1bXCJzb2NrZXQgaGFuZyB1cFwiLFwic29ja2V0IHN0YWxsZWRcIl0sdGhpcy5oYXNFeHBlcmllbmNlZE5ldHdvcmtEaXNydXB0aW9uPSExLHRoaXMucmVxdWVzdD1hc3luYyB0PT57dGhpcy5sb2dnZXIuZGVidWcoXCJQdWJsaXNoaW5nIFJlcXVlc3QgUGF5bG9hZFwiKTt0cnl7cmV0dXJuIGF3YWl0IHRoaXMudG9Fc3RhYmxpc2hDb25uZWN0aW9uKCksYXdhaXQgdGhpcy5wcm92aWRlci5yZXF1ZXN0KHQpfWNhdGNoKGkpe3Rocm93IHRoaXMubG9nZ2VyLmRlYnVnKFwiRmFpbGVkIHRvIFB1Ymxpc2ggUmVxdWVzdFwiKSx0aGlzLmxvZ2dlci5lcnJvcihpKSxpfX0sdGhpcy5vblBheWxvYWRIYW5kbGVyPXQ9Pnt0aGlzLm9uUHJvdmlkZXJQYXlsb2FkKHQpfSx0aGlzLm9uQ29ubmVjdEhhbmRsZXI9KCk9Pnt0aGlzLmV2ZW50cy5lbWl0KEQuY29ubmVjdCl9LHRoaXMub25EaXNjb25uZWN0SGFuZGxlcj0oKT0+e3RoaXMub25Qcm92aWRlckRpc2Nvbm5lY3QoKX0sdGhpcy5vblByb3ZpZGVyRXJyb3JIYW5kbGVyPXQ9Pnt0aGlzLmxvZ2dlci5lcnJvcih0KSx0aGlzLmV2ZW50cy5lbWl0KEQuZXJyb3IsdCksdGhpcy5sb2dnZXIuaW5mbyhcIkZhdGFsIHNvY2tldCBlcnJvciByZWNlaXZlZCwgY2xvc2luZyB0cmFuc3BvcnRcIiksdGhpcy50cmFuc3BvcnRDbG9zZSgpfSx0aGlzLnJlZ2lzdGVyUHJvdmlkZXJMaXN0ZW5lcnM9KCk9Pnt0aGlzLnByb3ZpZGVyLm9uKFQucGF5bG9hZCx0aGlzLm9uUGF5bG9hZEhhbmRsZXIpLHRoaXMucHJvdmlkZXIub24oVC5jb25uZWN0LHRoaXMub25Db25uZWN0SGFuZGxlciksdGhpcy5wcm92aWRlci5vbihULmRpc2Nvbm5lY3QsdGhpcy5vbkRpc2Nvbm5lY3RIYW5kbGVyKSx0aGlzLnByb3ZpZGVyLm9uKFQuZXJyb3IsdGhpcy5vblByb3ZpZGVyRXJyb3JIYW5kbGVyKX0sdGhpcy5jb3JlPWUuY29yZSx0aGlzLmxvZ2dlcj10eXBlb2YgZS5sb2dnZXI8XCJ1XCImJnR5cGVvZiBlLmxvZ2dlciE9XCJzdHJpbmdcIj9mKGUubG9nZ2VyLHRoaXMubmFtZSk6eWUobWUoe2xldmVsOmUubG9nZ2VyfHxodH0pKSx0aGlzLm1lc3NhZ2VzPW5ldyBTdCh0aGlzLmxvZ2dlcixlLmNvcmUpLHRoaXMuc3Vic2NyaWJlcj1uZXcgeHQodGhpcyx0aGlzLmxvZ2dlciksdGhpcy5wdWJsaXNoZXI9bmV3IERyKHRoaXMsdGhpcy5sb2dnZXIpLHRoaXMucmVsYXlVcmw9ZT8ucmVsYXlVcmx8fGRlLHRoaXMucHJvamVjdElkPWUucHJvamVjdElkLHRoaXMucHJvdmlkZXI9e319YXN5bmMgaW5pdCgpe3RoaXMubG9nZ2VyLnRyYWNlKFwiSW5pdGlhbGl6ZWRcIiksdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCksYXdhaXQgdGhpcy5jcmVhdGVQcm92aWRlcigpLGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLm1lc3NhZ2VzLmluaXQoKSx0aGlzLnN1YnNjcmliZXIuaW5pdCgpXSk7dHJ5e2F3YWl0IHRoaXMudHJhbnNwb3J0T3BlbigpfWNhdGNoe3RoaXMubG9nZ2VyLndhcm4oYENvbm5lY3Rpb24gdmlhICR7dGhpcy5yZWxheVVybH0gZmFpbGVkLCBhdHRlbXB0aW5nIHRvIGNvbm5lY3QgdmlhIGZhaWxvdmVyIGRvbWFpbiAke2dlfS4uLmApLGF3YWl0IHRoaXMucmVzdGFydFRyYW5zcG9ydChnZSl9dGhpcy5pbml0aWFsaXplZD0hMCxzZXRUaW1lb3V0KGFzeW5jKCk9Pnt0aGlzLnN1YnNjcmliZXIudG9waWNzLmxlbmd0aD09PTAmJih0aGlzLmxvZ2dlci5pbmZvKFwiTm8gdG9waWNzIHN1YnNjcmliZWQgdG8gYWZ0ZXIgaW5pdCwgY2xvc2luZyB0cmFuc3BvcnRcIiksYXdhaXQgdGhpcy50cmFuc3BvcnRDbG9zZSgpLHRoaXMudHJhbnNwb3J0RXhwbGljaXRseUNsb3NlZD0hMSl9LGd0KX1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1nZXQgY29ubmVjdGVkKCl7cmV0dXJuIHRoaXMucHJvdmlkZXIuY29ubmVjdGlvbi5jb25uZWN0ZWR9Z2V0IGNvbm5lY3RpbmcoKXtyZXR1cm4gdGhpcy5wcm92aWRlci5jb25uZWN0aW9uLmNvbm5lY3Rpbmd9YXN5bmMgcHVibGlzaChlLHQsaSl7dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5wdWJsaXNoZXIucHVibGlzaChlLHQsaSksYXdhaXQgdGhpcy5yZWNvcmRNZXNzYWdlRXZlbnQoe3RvcGljOmUsbWVzc2FnZTp0LHB1Ymxpc2hlZEF0OkRhdGUubm93KCl9KX1hc3luYyBzdWJzY3JpYmUoZSx0KXt2YXIgaTt0aGlzLmlzSW5pdGlhbGl6ZWQoKTtsZXQgcz0oKGk9dGhpcy5zdWJzY3JpYmVyLnRvcGljTWFwLmdldChlKSk9PW51bGw/dm9pZCAwOmlbMF0pfHxcIlwiO2lmKHMpcmV0dXJuIHM7bGV0IG47Y29uc3QgYT1vPT57by50b3BpYz09PWUmJih0aGlzLnN1YnNjcmliZXIub2ZmKHcuY3JlYXRlZCxhKSxuKCkpfTtyZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwoW25ldyBQcm9taXNlKG89PntuPW8sdGhpcy5zdWJzY3JpYmVyLm9uKHcuY3JlYXRlZCxhKX0pLG5ldyBQcm9taXNlKGFzeW5jIG89PntzPWF3YWl0IHRoaXMuc3Vic2NyaWJlci5zdWJzY3JpYmUoZSx0KSxvKCl9KV0pLHN9YXN5bmMgdW5zdWJzY3JpYmUoZSx0KXt0aGlzLmlzSW5pdGlhbGl6ZWQoKSxhd2FpdCB0aGlzLnN1YnNjcmliZXIudW5zdWJzY3JpYmUoZSx0KX1vbihlLHQpe3RoaXMuZXZlbnRzLm9uKGUsdCl9b25jZShlLHQpe3RoaXMuZXZlbnRzLm9uY2UoZSx0KX1vZmYoZSx0KXt0aGlzLmV2ZW50cy5vZmYoZSx0KX1yZW1vdmVMaXN0ZW5lcihlLHQpe3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKGUsdCl9YXN5bmMgdHJhbnNwb3J0Q2xvc2UoKXt0aGlzLnRyYW5zcG9ydEV4cGxpY2l0bHlDbG9zZWQ9ITAsdGhpcy5oYXNFeHBlcmllbmNlZE5ldHdvcmtEaXNydXB0aW9uJiZ0aGlzLmNvbm5lY3RlZD9hd2FpdCBNKHRoaXMucHJvdmlkZXIuZGlzY29ubmVjdCgpLDFlMyxcInByb3ZpZGVyLmRpc2Nvbm5lY3QoKVwiKS5jYXRjaCgoKT0+dGhpcy5vblByb3ZpZGVyRGlzY29ubmVjdCgpKTp0aGlzLmNvbm5lY3RlZCYmYXdhaXQgdGhpcy5wcm92aWRlci5kaXNjb25uZWN0KCl9YXN5bmMgdHJhbnNwb3J0T3BlbihlKXtpZih0aGlzLnRyYW5zcG9ydEV4cGxpY2l0bHlDbG9zZWQ9ITEsYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCksIXRoaXMuY29ubmVjdGlvbkF0dGVtcHRJblByb2dyZXNzKXtlJiZlIT09dGhpcy5yZWxheVVybCYmKHRoaXMucmVsYXlVcmw9ZSxhd2FpdCB0aGlzLnRyYW5zcG9ydENsb3NlKCksYXdhaXQgdGhpcy5jcmVhdGVQcm92aWRlcigpKSx0aGlzLmNvbm5lY3Rpb25BdHRlbXB0SW5Qcm9ncmVzcz0hMDt0cnl7YXdhaXQgUHJvbWlzZS5hbGwoW25ldyBQcm9taXNlKHQ9PntpZighdGhpcy5pbml0aWFsaXplZClyZXR1cm4gdCgpO3RoaXMuc3Vic2NyaWJlci5vbmNlKHcucmVzdWJzY3JpYmVkLCgpPT57dCgpfSl9KSxuZXcgUHJvbWlzZShhc3luYyh0LGkpPT57dHJ5e2F3YWl0IE0odGhpcy5wcm92aWRlci5jb25uZWN0KCksMWU0LGBTb2NrZXQgc3RhbGxlZCB3aGVuIHRyeWluZyB0byBjb25uZWN0IHRvICR7dGhpcy5yZWxheVVybH1gKX1jYXRjaChzKXtpKHMpO3JldHVybn10KCl9KV0pfWNhdGNoKHQpe3RoaXMubG9nZ2VyLmVycm9yKHQpO2NvbnN0IGk9dDtpZighdGhpcy5pc0Nvbm5lY3Rpb25TdGFsbGVkKGkubWVzc2FnZSkpdGhyb3cgdDt0aGlzLnByb3ZpZGVyLmV2ZW50cy5lbWl0KFQuZGlzY29ubmVjdCl9ZmluYWxseXt0aGlzLmNvbm5lY3Rpb25BdHRlbXB0SW5Qcm9ncmVzcz0hMSx0aGlzLmhhc0V4cGVyaWVuY2VkTmV0d29ya0Rpc3J1cHRpb249ITF9fX1hc3luYyByZXN0YXJ0VHJhbnNwb3J0KGUpe2F3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpLCF0aGlzLmNvbm5lY3Rpb25BdHRlbXB0SW5Qcm9ncmVzcyYmKHRoaXMucmVsYXlVcmw9ZXx8dGhpcy5yZWxheVVybCxhd2FpdCB0aGlzLnRyYW5zcG9ydENsb3NlKCksYXdhaXQgdGhpcy5jcmVhdGVQcm92aWRlcigpLGF3YWl0IHRoaXMudHJhbnNwb3J0T3BlbigpKX1hc3luYyBjb25maXJtT25saW5lU3RhdGVPclRocm93KCl7aWYoIWF3YWl0IHZlKCkpdGhyb3cgbmV3IEVycm9yKFwiTm8gaW50ZXJuZXQgY29ubmVjdGlvbiBkZXRlY3RlZC4gUGxlYXNlIHJlc3RhcnQgeW91ciBuZXR3b3JrIGFuZCB0cnkgYWdhaW4uXCIpfWlzQ29ubmVjdGlvblN0YWxsZWQoZSl7cmV0dXJuIHRoaXMuc3RhbGVDb25uZWN0aW9uRXJyb3JzLnNvbWUodD0+ZS5pbmNsdWRlcyh0KSl9YXN5bmMgY3JlYXRlUHJvdmlkZXIoKXt0aGlzLnByb3ZpZGVyLmNvbm5lY3Rpb24mJnRoaXMudW5yZWdpc3RlclByb3ZpZGVyTGlzdGVuZXJzKCk7Y29uc3QgZT1hd2FpdCB0aGlzLmNvcmUuY3J5cHRvLnNpZ25KV1QodGhpcy5yZWxheVVybCk7dGhpcy5wcm92aWRlcj1uZXcgTGkobmV3IE1pKERpKHtzZGtWZXJzaW9uOmR0LHByb3RvY29sOnRoaXMucHJvdG9jb2wsdmVyc2lvbjp0aGlzLnZlcnNpb24scmVsYXlVcmw6dGhpcy5yZWxheVVybCxwcm9qZWN0SWQ6dGhpcy5wcm9qZWN0SWQsYXV0aDplLHVzZU9uQ2xvc2VFdmVudDohMH0pKSksdGhpcy5yZWdpc3RlclByb3ZpZGVyTGlzdGVuZXJzKCl9YXN5bmMgcmVjb3JkTWVzc2FnZUV2ZW50KGUpe2NvbnN0e3RvcGljOnQsbWVzc2FnZTppfT1lO2F3YWl0IHRoaXMubWVzc2FnZXMuc2V0KHQsaSl9YXN5bmMgc2hvdWxkSWdub3JlTWVzc2FnZUV2ZW50KGUpe2NvbnN0e3RvcGljOnQsbWVzc2FnZTppfT1lO2lmKCFpfHxpLmxlbmd0aD09PTApcmV0dXJuIHRoaXMubG9nZ2VyLmRlYnVnKGBJZ25vcmluZyBpbnZhbGlkL2VtcHR5IG1lc3NhZ2U6ICR7aX1gKSwhMDtpZighYXdhaXQgdGhpcy5zdWJzY3JpYmVyLmlzU3Vic2NyaWJlZCh0KSlyZXR1cm4gdGhpcy5sb2dnZXIuZGVidWcoYElnbm9yaW5nIG1lc3NhZ2UgZm9yIG5vbi1zdWJzY3JpYmVkIHRvcGljICR7dH1gKSwhMDtjb25zdCBzPXRoaXMubWVzc2FnZXMuaGFzKHQsaSk7cmV0dXJuIHMmJnRoaXMubG9nZ2VyLmRlYnVnKGBJZ25vcmluZyBkdXBsaWNhdGUgbWVzc2FnZTogJHtpfWApLHN9YXN5bmMgb25Qcm92aWRlclBheWxvYWQoZSl7aWYodGhpcy5sb2dnZXIuZGVidWcoXCJJbmNvbWluZyBSZWxheSBQYXlsb2FkXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwicGF5bG9hZFwiLGRpcmVjdGlvbjpcImluY29taW5nXCIscGF5bG9hZDplfSksUGUoZSkpe2lmKCFlLm1ldGhvZC5lbmRzV2l0aCh1dCkpcmV0dXJuO2NvbnN0IHQ9ZS5wYXJhbXMse3RvcGljOmksbWVzc2FnZTpzLHB1Ymxpc2hlZEF0Om59PXQuZGF0YSxhPXt0b3BpYzppLG1lc3NhZ2U6cyxwdWJsaXNoZWRBdDpufTt0aGlzLmxvZ2dlci5kZWJ1ZyhcIkVtaXR0aW5nIFJlbGF5ZXIgUGF5bG9hZFwiKSx0aGlzLmxvZ2dlci50cmFjZShScih7dHlwZTpcImV2ZW50XCIsZXZlbnQ6dC5pZH0sYSkpLHRoaXMuZXZlbnRzLmVtaXQodC5pZCxhKSxhd2FpdCB0aGlzLmFja25vd2xlZGdlUGF5bG9hZChlKSxhd2FpdCB0aGlzLm9uTWVzc2FnZUV2ZW50KGEpfWVsc2UgVGUoZSkmJnRoaXMuZXZlbnRzLmVtaXQoRC5tZXNzYWdlX2FjayxlKX1hc3luYyBvbk1lc3NhZ2VFdmVudChlKXthd2FpdCB0aGlzLnNob3VsZElnbm9yZU1lc3NhZ2VFdmVudChlKXx8KHRoaXMuZXZlbnRzLmVtaXQoRC5tZXNzYWdlLGUpLGF3YWl0IHRoaXMucmVjb3JkTWVzc2FnZUV2ZW50KGUpKX1hc3luYyBhY2tub3dsZWRnZVBheWxvYWQoZSl7Y29uc3QgdD14ZShlLmlkLCEwKTthd2FpdCB0aGlzLnByb3ZpZGVyLmNvbm5lY3Rpb24uc2VuZCh0KX11bnJlZ2lzdGVyUHJvdmlkZXJMaXN0ZW5lcnMoKXt0aGlzLnByb3ZpZGVyLm9mZihULnBheWxvYWQsdGhpcy5vblBheWxvYWRIYW5kbGVyKSx0aGlzLnByb3ZpZGVyLm9mZihULmNvbm5lY3QsdGhpcy5vbkNvbm5lY3RIYW5kbGVyKSx0aGlzLnByb3ZpZGVyLm9mZihULmRpc2Nvbm5lY3QsdGhpcy5vbkRpc2Nvbm5lY3RIYW5kbGVyKSx0aGlzLnByb3ZpZGVyLm9mZihULmVycm9yLHRoaXMub25Qcm92aWRlckVycm9ySGFuZGxlcil9YXN5bmMgcmVnaXN0ZXJFdmVudExpc3RlbmVycygpe3RoaXMuZXZlbnRzLm9uKEQuY29ubmVjdGlvbl9zdGFsbGVkLCgpPT57dGhpcy5yZXN0YXJ0VHJhbnNwb3J0KCkuY2F0Y2godD0+dGhpcy5sb2dnZXIuZXJyb3IodCkpfSk7bGV0IGU9YXdhaXQgdmUoKTt5aShhc3luYyB0PT57dGhpcy5pbml0aWFsaXplZCYmZSE9PXQmJihlPXQsdD9hd2FpdCB0aGlzLnJlc3RhcnRUcmFuc3BvcnQoKS5jYXRjaChpPT50aGlzLmxvZ2dlci5lcnJvcihpKSk6KHRoaXMuaGFzRXhwZXJpZW5jZWROZXR3b3JrRGlzcnVwdGlvbj0hMCxhd2FpdCB0aGlzLnRyYW5zcG9ydENsb3NlKCkuY2F0Y2goaT0+dGhpcy5sb2dnZXIuZXJyb3IoaSkpKSl9KX1vblByb3ZpZGVyRGlzY29ubmVjdCgpe3RoaXMuZXZlbnRzLmVtaXQoRC5kaXNjb25uZWN0KSx0aGlzLmF0dGVtcHRUb1JlY29ubmVjdCgpfWF0dGVtcHRUb1JlY29ubmVjdCgpe3RoaXMudHJhbnNwb3J0RXhwbGljaXRseUNsb3NlZHx8KHRoaXMubG9nZ2VyLmluZm8oXCJhdHRlbXB0VG9SZWNvbm5lY3QgY2FsbGVkLiBDb25uZWN0aW5nLi4uXCIpLHNldFRpbWVvdXQoYXN5bmMoKT0+e2F3YWl0IHRoaXMucmVzdGFydFRyYW5zcG9ydCgpLmNhdGNoKGU9PnRoaXMubG9nZ2VyLmVycm9yKGUpKX0sVShsdCkpKX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX1hc3luYyB0b0VzdGFibGlzaENvbm5lY3Rpb24oKXtpZihhd2FpdCB0aGlzLmNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3coKSwhdGhpcy5jb25uZWN0ZWQpe2lmKHRoaXMuY29ubmVjdGlvbkF0dGVtcHRJblByb2dyZXNzKXJldHVybiBhd2FpdCBuZXcgUHJvbWlzZShlPT57Y29uc3QgdD1zZXRJbnRlcnZhbCgoKT0+e3RoaXMuY29ubmVjdGVkJiYoY2xlYXJJbnRlcnZhbCh0KSxlKCkpfSx0aGlzLmNvbm5lY3Rpb25TdGF0dXNQb2xsaW5nSW50ZXJ2YWwpfSk7YXdhaXQgdGhpcy5yZXN0YXJ0VHJhbnNwb3J0KCl9fX12YXIgX3I9T2JqZWN0LmRlZmluZVByb3BlcnR5LE50PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsU3I9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQcj1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLEx0PShyLGUsdCk9PmUgaW4gcj9fcihyLGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnR9KTpyW2VdPXQsVXQ9KHIsZSk9Pntmb3IodmFyIHQgaW4gZXx8KGU9e30pKVNyLmNhbGwoZSx0KSYmTHQocix0LGVbdF0pO2lmKE50KWZvcih2YXIgdCBvZiBOdChlKSlQci5jYWxsKGUsdCkmJkx0KHIsdCxlW3RdKTtyZXR1cm4gcn07Y2xhc3MgRnQgZXh0ZW5kcyBRdHtjb25zdHJ1Y3RvcihlLHQsaSxzPU8sbj12b2lkIDApe3N1cGVyKGUsdCxpLHMpLHRoaXMuY29yZT1lLHRoaXMubG9nZ2VyPXQsdGhpcy5uYW1lPWksdGhpcy5tYXA9bmV3IE1hcCx0aGlzLnZlcnNpb249cHQsdGhpcy5jYWNoZWQ9W10sdGhpcy5pbml0aWFsaXplZD0hMSx0aGlzLnN0b3JhZ2VQcmVmaXg9Tyx0aGlzLmluaXQ9YXN5bmMoKT0+e3RoaXMuaW5pdGlhbGl6ZWR8fCh0aGlzLmxvZ2dlci50cmFjZShcIkluaXRpYWxpemVkXCIpLGF3YWl0IHRoaXMucmVzdG9yZSgpLHRoaXMuY2FjaGVkLmZvckVhY2goYT0+e3RoaXMuZ2V0S2V5JiZhIT09bnVsbCYmIXJlKGEpP3RoaXMubWFwLnNldCh0aGlzLmdldEtleShhKSxhKTptaShhKT90aGlzLm1hcC5zZXQoYS5pZCxhKTpiaShhKSYmdGhpcy5tYXAuc2V0KGEudG9waWMsYSl9KSx0aGlzLmNhY2hlZD1bXSx0aGlzLmluaXRpYWxpemVkPSEwKX0sdGhpcy5zZXQ9YXN5bmMoYSxvKT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMubWFwLmhhcyhhKT9hd2FpdCB0aGlzLnVwZGF0ZShhLG8pOih0aGlzLmxvZ2dlci5kZWJ1ZyhcIlNldHRpbmcgdmFsdWVcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJzZXRcIixrZXk6YSx2YWx1ZTpvfSksdGhpcy5tYXAuc2V0KGEsbyksYXdhaXQgdGhpcy5wZXJzaXN0KCkpfSx0aGlzLmdldD1hPT4odGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5sb2dnZXIuZGVidWcoXCJHZXR0aW5nIHZhbHVlXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwiZ2V0XCIsa2V5OmF9KSx0aGlzLmdldERhdGEoYSkpLHRoaXMuZ2V0QWxsPWE9Pih0aGlzLmlzSW5pdGlhbGl6ZWQoKSxhP3RoaXMudmFsdWVzLmZpbHRlcihvPT5PYmplY3Qua2V5cyhhKS5ldmVyeShoPT5raShvW2hdLGFbaF0pKSk6dGhpcy52YWx1ZXMpLHRoaXMudXBkYXRlPWFzeW5jKGEsbyk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmxvZ2dlci5kZWJ1ZyhcIlVwZGF0aW5nIHZhbHVlXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwidXBkYXRlXCIsa2V5OmEsdXBkYXRlOm99KTtjb25zdCBoPVV0KFV0KHt9LHRoaXMuZ2V0RGF0YShhKSksbyk7dGhpcy5tYXAuc2V0KGEsaCksYXdhaXQgdGhpcy5wZXJzaXN0KCl9LHRoaXMuZGVsZXRlPWFzeW5jKGEsbyk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLm1hcC5oYXMoYSkmJih0aGlzLmxvZ2dlci5kZWJ1ZyhcIkRlbGV0aW5nIHZhbHVlXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwiZGVsZXRlXCIsa2V5OmEscmVhc29uOm99KSx0aGlzLm1hcC5kZWxldGUoYSksYXdhaXQgdGhpcy5wZXJzaXN0KCkpfSx0aGlzLmxvZ2dlcj1mKHQsdGhpcy5uYW1lKSx0aGlzLnN0b3JhZ2VQcmVmaXg9cyx0aGlzLmdldEtleT1ufWdldCBjb250ZXh0KCl7cmV0dXJuIEUodGhpcy5sb2dnZXIpfWdldCBzdG9yYWdlS2V5KCl7cmV0dXJuIHRoaXMuc3RvcmFnZVByZWZpeCt0aGlzLnZlcnNpb24rdGhpcy5jb3JlLmN1c3RvbVN0b3JhZ2VQcmVmaXgrXCIvL1wiK3RoaXMubmFtZX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMubWFwLnNpemV9Z2V0IGtleXMoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLm1hcC5rZXlzKCkpfWdldCB2YWx1ZXMoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLm1hcC52YWx1ZXMoKSl9YXN5bmMgc2V0RGF0YVN0b3JlKGUpe2F3YWl0IHRoaXMuY29yZS5zdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LGUpfWFzeW5jIGdldERhdGFTdG9yZSgpe3JldHVybiBhd2FpdCB0aGlzLmNvcmUuc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSl9Z2V0RGF0YShlKXtjb25zdCB0PXRoaXMubWFwLmdldChlKTtpZighdCl7Y29uc3R7bWVzc2FnZTppfT1sKFwiTk9fTUFUQ0hJTkdfS0VZXCIsYCR7dGhpcy5uYW1lfTogJHtlfWApO3Rocm93IHRoaXMubG9nZ2VyLmVycm9yKGkpLG5ldyBFcnJvcihpKX1yZXR1cm4gdH1hc3luYyBwZXJzaXN0KCl7YXdhaXQgdGhpcy5zZXREYXRhU3RvcmUodGhpcy52YWx1ZXMpfWFzeW5jIHJlc3RvcmUoKXt0cnl7Y29uc3QgZT1hd2FpdCB0aGlzLmdldERhdGFTdG9yZSgpO2lmKHR5cGVvZiBlPlwidVwifHwhZS5sZW5ndGgpcmV0dXJuO2lmKHRoaXMubWFwLnNpemUpe2NvbnN0e21lc3NhZ2U6dH09bChcIlJFU1RPUkVfV0lMTF9PVkVSUklERVwiLHRoaXMubmFtZSk7dGhyb3cgdGhpcy5sb2dnZXIuZXJyb3IodCksbmV3IEVycm9yKHQpfXRoaXMuY2FjaGVkPWUsdGhpcy5sb2dnZXIuZGVidWcoYFN1Y2Nlc3NmdWxseSBSZXN0b3JlZCB2YWx1ZSBmb3IgJHt0aGlzLm5hbWV9YCksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJyZXN0b3JlXCIsdmFsdWU6dGhpcy52YWx1ZXN9KX1jYXRjaChlKXt0aGlzLmxvZ2dlci5kZWJ1ZyhgRmFpbGVkIHRvIFJlc3RvcmUgdmFsdWUgZm9yICR7dGhpcy5uYW1lfWApLHRoaXMubG9nZ2VyLmVycm9yKGUpfX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3MgJHR7Y29uc3RydWN0b3IoZSx0KXt0aGlzLmNvcmU9ZSx0aGlzLmxvZ2dlcj10LHRoaXMubmFtZT1mdCx0aGlzLnZlcnNpb249RXQsdGhpcy5ldmVudHM9bmV3IGp0LHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5zdG9yYWdlUHJlZml4PU8sdGhpcy5pZ25vcmVkUGF5bG9hZFR5cGVzPVtmaV0sdGhpcy5yZWdpc3RlcmVkTWV0aG9kcz1bXSx0aGlzLmluaXQ9YXN5bmMoKT0+e3RoaXMuaW5pdGlhbGl6ZWR8fChhd2FpdCB0aGlzLnBhaXJpbmdzLmluaXQoKSxhd2FpdCB0aGlzLmNsZWFudXAoKSx0aGlzLnJlZ2lzdGVyUmVsYXllckV2ZW50cygpLHRoaXMucmVnaXN0ZXJFeHBpcmVyRXZlbnRzKCksdGhpcy5pbml0aWFsaXplZD0hMCx0aGlzLmxvZ2dlci50cmFjZShcIkluaXRpYWxpemVkXCIpKX0sdGhpcy5yZWdpc3Rlcj0oe21ldGhvZHM6aX0pPT57dGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5yZWdpc3RlcmVkTWV0aG9kcz1bLi4ubmV3IFNldChbLi4udGhpcy5yZWdpc3RlcmVkTWV0aG9kcywuLi5pXSldfSx0aGlzLmNyZWF0ZT1hc3luYygpPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3QgaT10ZSgpLHM9YXdhaXQgdGhpcy5jb3JlLmNyeXB0by5zZXRTeW1LZXkoaSksbj1IKFNlKSxhPXtwcm90b2NvbDpvdH0sbz17dG9waWM6cyxleHBpcnk6bixyZWxheTphLGFjdGl2ZTohMX0saD1FaSh7cHJvdG9jb2w6dGhpcy5jb3JlLnByb3RvY29sLHZlcnNpb246dGhpcy5jb3JlLnZlcnNpb24sdG9waWM6cyxzeW1LZXk6aSxyZWxheTphfSk7cmV0dXJuIGF3YWl0IHRoaXMucGFpcmluZ3Muc2V0KHMsbyksYXdhaXQgdGhpcy5jb3JlLnJlbGF5ZXIuc3Vic2NyaWJlKHMpLHRoaXMuY29yZS5leHBpcmVyLnNldChzLG4pLHt0b3BpYzpzLHVyaTpofX0sdGhpcy5wYWlyPWFzeW5jIGk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmlzVmFsaWRQYWlyKGkpO2NvbnN0e3RvcGljOnMsc3ltS2V5Om4scmVsYXk6YX09d2koaS51cmkpO2xldCBvO2lmKHRoaXMucGFpcmluZ3Mua2V5cy5pbmNsdWRlcyhzKSYmKG89dGhpcy5wYWlyaW5ncy5nZXQocyksby5hY3RpdmUpKXRocm93IG5ldyBFcnJvcihgUGFpcmluZyBhbHJlYWR5IGV4aXN0czogJHtzfS4gUGxlYXNlIHRyeSBhZ2FpbiB3aXRoIGEgbmV3IGNvbm5lY3Rpb24gVVJJLmApO3RoaXMuY29yZS5jcnlwdG8ua2V5Y2hhaW4uaGFzKHMpfHwoYXdhaXQgdGhpcy5jb3JlLmNyeXB0by5zZXRTeW1LZXkobixzKSxhd2FpdCB0aGlzLmNvcmUucmVsYXllci5zdWJzY3JpYmUocyx7cmVsYXk6YX0pKTtjb25zdCBoPUgoU2UpLHU9e3RvcGljOnMscmVsYXk6YSxleHBpcnk6aCxhY3RpdmU6ITF9O3JldHVybiBhd2FpdCB0aGlzLnBhaXJpbmdzLnNldChzLHUpLHRoaXMuY29yZS5leHBpcmVyLnNldChzLGgpLGkuYWN0aXZhdGVQYWlyaW5nJiZhd2FpdCB0aGlzLmFjdGl2YXRlKHt0b3BpYzpzfSksdGhpcy5ldmVudHMuZW1pdChCLmNyZWF0ZSx1KSx1fSx0aGlzLmFjdGl2YXRlPWFzeW5jKHt0b3BpYzppfSk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKTtjb25zdCBzPUgoSik7YXdhaXQgdGhpcy5wYWlyaW5ncy51cGRhdGUoaSx7YWN0aXZlOiEwLGV4cGlyeTpzfSksdGhpcy5jb3JlLmV4cGlyZXIuc2V0KGkscyl9LHRoaXMucGluZz1hc3luYyBpPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5pc1ZhbGlkUGluZyhpKTtjb25zdHt0b3BpYzpzfT1pO2lmKHRoaXMucGFpcmluZ3Mua2V5cy5pbmNsdWRlcyhzKSl7Y29uc3Qgbj1hd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KHMsXCJ3Y19wYWlyaW5nUGluZ1wiLHt9KSx7ZG9uZTphLHJlc29sdmU6byxyZWplY3Q6aH09dmkoKTt0aGlzLmV2ZW50cy5vbmNlKG5lKFwicGFpcmluZ19waW5nXCIsbiksKHtlcnJvcjp1fSk9Pnt1P2godSk6bygpfSksYXdhaXQgYSgpfX0sdGhpcy51cGRhdGVFeHBpcnk9YXN5bmMoe3RvcGljOmksZXhwaXJ5OnN9KT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMucGFpcmluZ3MudXBkYXRlKGkse2V4cGlyeTpzfSl9LHRoaXMudXBkYXRlTWV0YWRhdGE9YXN5bmMoe3RvcGljOmksbWV0YWRhdGE6c30pPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5wYWlyaW5ncy51cGRhdGUoaSx7cGVlck1ldGFkYXRhOnN9KX0sdGhpcy5nZXRQYWlyaW5ncz0oKT0+KHRoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMucGFpcmluZ3MudmFsdWVzKSx0aGlzLmRpc2Nvbm5lY3Q9YXN5bmMgaT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMuaXNWYWxpZERpc2Nvbm5lY3QoaSk7Y29uc3R7dG9waWM6c309aTt0aGlzLnBhaXJpbmdzLmtleXMuaW5jbHVkZXMocykmJihhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KHMsXCJ3Y19wYWlyaW5nRGVsZXRlXCIsayhcIlVTRVJfRElTQ09OTkVDVEVEXCIpKSxhd2FpdCB0aGlzLmRlbGV0ZVBhaXJpbmcocykpfSx0aGlzLnNlbmRSZXF1ZXN0PWFzeW5jKGkscyxuKT0+e2NvbnN0IGE9T2UocyxuKSxvPWF3YWl0IHRoaXMuY29yZS5jcnlwdG8uZW5jb2RlKGksYSksaD1GW3NdLnJlcTtyZXR1cm4gdGhpcy5jb3JlLmhpc3Rvcnkuc2V0KGksYSksdGhpcy5jb3JlLnJlbGF5ZXIucHVibGlzaChpLG8saCksYS5pZH0sdGhpcy5zZW5kUmVzdWx0PWFzeW5jKGkscyxuKT0+e2NvbnN0IGE9eGUoaSxuKSxvPWF3YWl0IHRoaXMuY29yZS5jcnlwdG8uZW5jb2RlKHMsYSksaD1hd2FpdCB0aGlzLmNvcmUuaGlzdG9yeS5nZXQocyxpKSx1PUZbaC5yZXF1ZXN0Lm1ldGhvZF0ucmVzO2F3YWl0IHRoaXMuY29yZS5yZWxheWVyLnB1Ymxpc2gocyxvLHUpLGF3YWl0IHRoaXMuY29yZS5oaXN0b3J5LnJlc29sdmUoYSl9LHRoaXMuc2VuZEVycm9yPWFzeW5jKGkscyxuKT0+e2NvbnN0IGE9RmkoaSxuKSxvPWF3YWl0IHRoaXMuY29yZS5jcnlwdG8uZW5jb2RlKHMsYSksaD1hd2FpdCB0aGlzLmNvcmUuaGlzdG9yeS5nZXQocyxpKSx1PUZbaC5yZXF1ZXN0Lm1ldGhvZF0/RltoLnJlcXVlc3QubWV0aG9kXS5yZXM6Ri51bnJlZ2lzdGVyZWRfbWV0aG9kLnJlczthd2FpdCB0aGlzLmNvcmUucmVsYXllci5wdWJsaXNoKHMsbyx1KSxhd2FpdCB0aGlzLmNvcmUuaGlzdG9yeS5yZXNvbHZlKGEpfSx0aGlzLmRlbGV0ZVBhaXJpbmc9YXN5bmMoaSxzKT0+e2F3YWl0IHRoaXMuY29yZS5yZWxheWVyLnVuc3Vic2NyaWJlKGkpLGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnBhaXJpbmdzLmRlbGV0ZShpLGsoXCJVU0VSX0RJU0NPTk5FQ1RFRFwiKSksdGhpcy5jb3JlLmNyeXB0by5kZWxldGVTeW1LZXkoaSkscz9Qcm9taXNlLnJlc29sdmUoKTp0aGlzLmNvcmUuZXhwaXJlci5kZWwoaSldKX0sdGhpcy5jbGVhbnVwPWFzeW5jKCk9Pntjb25zdCBpPXRoaXMucGFpcmluZ3MuZ2V0QWxsKCkuZmlsdGVyKHM9PkllKHMuZXhwaXJ5KSk7YXdhaXQgUHJvbWlzZS5hbGwoaS5tYXAocz0+dGhpcy5kZWxldGVQYWlyaW5nKHMudG9waWMpKSl9LHRoaXMub25SZWxheUV2ZW50UmVxdWVzdD1pPT57Y29uc3R7dG9waWM6cyxwYXlsb2FkOm59PWk7c3dpdGNoKG4ubWV0aG9kKXtjYXNlXCJ3Y19wYWlyaW5nUGluZ1wiOnJldHVybiB0aGlzLm9uUGFpcmluZ1BpbmdSZXF1ZXN0KHMsbik7Y2FzZVwid2NfcGFpcmluZ0RlbGV0ZVwiOnJldHVybiB0aGlzLm9uUGFpcmluZ0RlbGV0ZVJlcXVlc3QocyxuKTtkZWZhdWx0OnJldHVybiB0aGlzLm9uVW5rbm93blJwY01ldGhvZFJlcXVlc3QocyxuKX19LHRoaXMub25SZWxheUV2ZW50UmVzcG9uc2U9YXN5bmMgaT0+e2NvbnN0e3RvcGljOnMscGF5bG9hZDpufT1pLGE9KGF3YWl0IHRoaXMuY29yZS5oaXN0b3J5LmdldChzLG4uaWQpKS5yZXF1ZXN0Lm1ldGhvZDtzd2l0Y2goYSl7Y2FzZVwid2NfcGFpcmluZ1BpbmdcIjpyZXR1cm4gdGhpcy5vblBhaXJpbmdQaW5nUmVzcG9uc2UocyxuKTtkZWZhdWx0OnJldHVybiB0aGlzLm9uVW5rbm93blJwY01ldGhvZFJlc3BvbnNlKGEpfX0sdGhpcy5vblBhaXJpbmdQaW5nUmVxdWVzdD1hc3luYyhpLHMpPT57Y29uc3R7aWQ6bn09czt0cnl7dGhpcy5pc1ZhbGlkUGluZyh7dG9waWM6aX0pLGF3YWl0IHRoaXMuc2VuZFJlc3VsdChuLGksITApLHRoaXMuZXZlbnRzLmVtaXQoQi5waW5nLHtpZDpuLHRvcGljOml9KX1jYXRjaChhKXthd2FpdCB0aGlzLnNlbmRFcnJvcihuLGksYSksdGhpcy5sb2dnZXIuZXJyb3IoYSl9fSx0aGlzLm9uUGFpcmluZ1BpbmdSZXNwb25zZT0oaSxzKT0+e2NvbnN0e2lkOm59PXM7c2V0VGltZW91dCgoKT0+eyRpKHMpP3RoaXMuZXZlbnRzLmVtaXQobmUoXCJwYWlyaW5nX3BpbmdcIixuKSx7fSk6QWUocykmJnRoaXMuZXZlbnRzLmVtaXQobmUoXCJwYWlyaW5nX3BpbmdcIixuKSx7ZXJyb3I6cy5lcnJvcn0pfSw1MDApfSx0aGlzLm9uUGFpcmluZ0RlbGV0ZVJlcXVlc3Q9YXN5bmMoaSxzKT0+e2NvbnN0e2lkOm59PXM7dHJ5e3RoaXMuaXNWYWxpZERpc2Nvbm5lY3Qoe3RvcGljOml9KSxhd2FpdCB0aGlzLmRlbGV0ZVBhaXJpbmcoaSksdGhpcy5ldmVudHMuZW1pdChCLmRlbGV0ZSx7aWQ6bix0b3BpYzppfSl9Y2F0Y2goYSl7YXdhaXQgdGhpcy5zZW5kRXJyb3IobixpLGEpLHRoaXMubG9nZ2VyLmVycm9yKGEpfX0sdGhpcy5vblVua25vd25ScGNNZXRob2RSZXF1ZXN0PWFzeW5jKGkscyk9Pntjb25zdHtpZDpuLG1ldGhvZDphfT1zO3RyeXtpZih0aGlzLnJlZ2lzdGVyZWRNZXRob2RzLmluY2x1ZGVzKGEpKXJldHVybjtjb25zdCBvPWsoXCJXQ19NRVRIT0RfVU5TVVBQT1JURURcIixhKTthd2FpdCB0aGlzLnNlbmRFcnJvcihuLGksbyksdGhpcy5sb2dnZXIuZXJyb3Iobyl9Y2F0Y2gobyl7YXdhaXQgdGhpcy5zZW5kRXJyb3IobixpLG8pLHRoaXMubG9nZ2VyLmVycm9yKG8pfX0sdGhpcy5vblVua25vd25ScGNNZXRob2RSZXNwb25zZT1pPT57dGhpcy5yZWdpc3RlcmVkTWV0aG9kcy5pbmNsdWRlcyhpKXx8dGhpcy5sb2dnZXIuZXJyb3IoayhcIldDX01FVEhPRF9VTlNVUFBPUlRFRFwiLGkpKX0sdGhpcy5pc1ZhbGlkUGFpcj1pPT57aWYoIWFlKGkpKXtjb25zdHttZXNzYWdlOnN9PWwoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcGFpcigpIHBhcmFtczogJHtpfWApO3Rocm93IG5ldyBFcnJvcihzKX1pZighSWkoaS51cmkpKXtjb25zdHttZXNzYWdlOnN9PWwoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcGFpcigpIHVyaTogJHtpLnVyaX1gKTt0aHJvdyBuZXcgRXJyb3Iocyl9fSx0aGlzLmlzVmFsaWRQaW5nPWFzeW5jIGk9PntpZighYWUoaSkpe2NvbnN0e21lc3NhZ2U6bn09bChcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBwaW5nKCkgcGFyYW1zOiAke2l9YCk7dGhyb3cgbmV3IEVycm9yKG4pfWNvbnN0e3RvcGljOnN9PWk7YXdhaXQgdGhpcy5pc1ZhbGlkUGFpcmluZ1RvcGljKHMpfSx0aGlzLmlzVmFsaWREaXNjb25uZWN0PWFzeW5jIGk9PntpZighYWUoaSkpe2NvbnN0e21lc3NhZ2U6bn09bChcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBkaXNjb25uZWN0KCkgcGFyYW1zOiAke2l9YCk7dGhyb3cgbmV3IEVycm9yKG4pfWNvbnN0e3RvcGljOnN9PWk7YXdhaXQgdGhpcy5pc1ZhbGlkUGFpcmluZ1RvcGljKHMpfSx0aGlzLmlzVmFsaWRQYWlyaW5nVG9waWM9YXN5bmMgaT0+e2lmKCFDaShpLCExKSl7Y29uc3R7bWVzc2FnZTpzfT1sKFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYHBhaXJpbmcgdG9waWMgc2hvdWxkIGJlIGEgc3RyaW5nOiAke2l9YCk7dGhyb3cgbmV3IEVycm9yKHMpfWlmKCF0aGlzLnBhaXJpbmdzLmtleXMuaW5jbHVkZXMoaSkpe2NvbnN0e21lc3NhZ2U6c309bChcIk5PX01BVENISU5HX0tFWVwiLGBwYWlyaW5nIHRvcGljIGRvZXNuJ3QgZXhpc3Q6ICR7aX1gKTt0aHJvdyBuZXcgRXJyb3Iocyl9aWYoSWUodGhpcy5wYWlyaW5ncy5nZXQoaSkuZXhwaXJ5KSl7YXdhaXQgdGhpcy5kZWxldGVQYWlyaW5nKGkpO2NvbnN0e21lc3NhZ2U6c309bChcIkVYUElSRURcIixgcGFpcmluZyB0b3BpYzogJHtpfWApO3Rocm93IG5ldyBFcnJvcihzKX19LHRoaXMuY29yZT1lLHRoaXMubG9nZ2VyPWYodCx0aGlzLm5hbWUpLHRoaXMucGFpcmluZ3M9bmV3IEZ0KHRoaXMuY29yZSx0aGlzLmxvZ2dlcix0aGlzLm5hbWUsdGhpcy5zdG9yYWdlUHJlZml4KX1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX1yZWdpc3RlclJlbGF5ZXJFdmVudHMoKXt0aGlzLmNvcmUucmVsYXllci5vbihELm1lc3NhZ2UsYXN5bmMgZT0+e2NvbnN0e3RvcGljOnQsbWVzc2FnZTppfT1lO2lmKCF0aGlzLnBhaXJpbmdzLmtleXMuaW5jbHVkZXModCl8fHRoaXMuaWdub3JlZFBheWxvYWRUeXBlcy5pbmNsdWRlcyh0aGlzLmNvcmUuY3J5cHRvLmdldFBheWxvYWRUeXBlKGkpKSlyZXR1cm47Y29uc3Qgcz1hd2FpdCB0aGlzLmNvcmUuY3J5cHRvLmRlY29kZSh0LGkpO3RyeXtQZShzKT8odGhpcy5jb3JlLmhpc3Rvcnkuc2V0KHQscyksdGhpcy5vblJlbGF5RXZlbnRSZXF1ZXN0KHt0b3BpYzp0LHBheWxvYWQ6c30pKTpUZShzKSYmKGF3YWl0IHRoaXMuY29yZS5oaXN0b3J5LnJlc29sdmUocyksYXdhaXQgdGhpcy5vblJlbGF5RXZlbnRSZXNwb25zZSh7dG9waWM6dCxwYXlsb2FkOnN9KSx0aGlzLmNvcmUuaGlzdG9yeS5kZWxldGUodCxzLmlkKSl9Y2F0Y2gobil7dGhpcy5sb2dnZXIuZXJyb3Iobil9fSl9cmVnaXN0ZXJFeHBpcmVyRXZlbnRzKCl7dGhpcy5jb3JlLmV4cGlyZXIub24odi5leHBpcmVkLGFzeW5jIGU9Pntjb25zdHt0b3BpYzp0fT1SaShlLnRhcmdldCk7dCYmdGhpcy5wYWlyaW5ncy5rZXlzLmluY2x1ZGVzKHQpJiYoYXdhaXQgdGhpcy5kZWxldGVQYWlyaW5nKHQsITApLHRoaXMuZXZlbnRzLmVtaXQoQi5leHBpcmUse3RvcGljOnR9KSl9KX19Y2xhc3MgTXQgZXh0ZW5kcyBadHtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy5jb3JlPWUsdGhpcy5sb2dnZXI9dCx0aGlzLnJlY29yZHM9bmV3IE1hcCx0aGlzLmV2ZW50cz1uZXcgTix0aGlzLm5hbWU9d3QsdGhpcy52ZXJzaW9uPXZ0LHRoaXMuY2FjaGVkPVtdLHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5zdG9yYWdlUHJlZml4PU8sdGhpcy5pbml0PWFzeW5jKCk9Pnt0aGlzLmluaXRpYWxpemVkfHwodGhpcy5sb2dnZXIudHJhY2UoXCJJbml0aWFsaXplZFwiKSxhd2FpdCB0aGlzLnJlc3RvcmUoKSx0aGlzLmNhY2hlZC5mb3JFYWNoKGk9PnRoaXMucmVjb3Jkcy5zZXQoaS5pZCxpKSksdGhpcy5jYWNoZWQ9W10sdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCksdGhpcy5pbml0aWFsaXplZD0hMCl9LHRoaXMuc2V0PShpLHMsbik9PntpZih0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmxvZ2dlci5kZWJ1ZyhcIlNldHRpbmcgSlNPTi1SUEMgcmVxdWVzdCBoaXN0b3J5IHJlY29yZFwiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcInNldFwiLHRvcGljOmkscmVxdWVzdDpzLGNoYWluSWQ6bn0pLHRoaXMucmVjb3Jkcy5oYXMocy5pZCkpcmV0dXJuO2NvbnN0IGE9e2lkOnMuaWQsdG9waWM6aSxyZXF1ZXN0OnttZXRob2Q6cy5tZXRob2QscGFyYW1zOnMucGFyYW1zfHxudWxsfSxjaGFpbklkOm4sZXhwaXJ5OkgoSil9O3RoaXMucmVjb3Jkcy5zZXQoYS5pZCxhKSx0aGlzLmV2ZW50cy5lbWl0KFIuY3JlYXRlZCxhKX0sdGhpcy5yZXNvbHZlPWFzeW5jIGk9PntpZih0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmxvZ2dlci5kZWJ1ZyhcIlVwZGF0aW5nIEpTT04tUlBDIHJlc3BvbnNlIGhpc3RvcnkgcmVjb3JkXCIpLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwidXBkYXRlXCIscmVzcG9uc2U6aX0pLCF0aGlzLnJlY29yZHMuaGFzKGkuaWQpKXJldHVybjtjb25zdCBzPWF3YWl0IHRoaXMuZ2V0UmVjb3JkKGkuaWQpO3R5cGVvZiBzLnJlc3BvbnNlPlwidVwiJiYocy5yZXNwb25zZT1BZShpKT97ZXJyb3I6aS5lcnJvcn06e3Jlc3VsdDppLnJlc3VsdH0sdGhpcy5yZWNvcmRzLnNldChzLmlkLHMpLHRoaXMuZXZlbnRzLmVtaXQoUi51cGRhdGVkLHMpKX0sdGhpcy5nZXQ9YXN5bmMoaSxzKT0+KHRoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMubG9nZ2VyLmRlYnVnKFwiR2V0dGluZyByZWNvcmRcIiksdGhpcy5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJnZXRcIix0b3BpYzppLGlkOnN9KSxhd2FpdCB0aGlzLmdldFJlY29yZChzKSksdGhpcy5kZWxldGU9KGkscyk9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSx0aGlzLmxvZ2dlci5kZWJ1ZyhcIkRlbGV0aW5nIHJlY29yZFwiKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcImRlbGV0ZVwiLGlkOnN9KSx0aGlzLnZhbHVlcy5mb3JFYWNoKG49PntpZihuLnRvcGljPT09aSl7aWYodHlwZW9mIHM8XCJ1XCImJm4uaWQhPT1zKXJldHVybjt0aGlzLnJlY29yZHMuZGVsZXRlKG4uaWQpLHRoaXMuZXZlbnRzLmVtaXQoUi5kZWxldGVkLG4pfX0pfSx0aGlzLmV4aXN0cz1hc3luYyhpLHMpPT4odGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5yZWNvcmRzLmhhcyhzKT8oYXdhaXQgdGhpcy5nZXRSZWNvcmQocykpLnRvcGljPT09aTohMSksdGhpcy5vbj0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uKGkscyl9LHRoaXMub25jZT0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uY2UoaSxzKX0sdGhpcy5vZmY9KGkscyk9Pnt0aGlzLmV2ZW50cy5vZmYoaSxzKX0sdGhpcy5yZW1vdmVMaXN0ZW5lcj0oaSxzKT0+e3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKGkscyl9LHRoaXMubG9nZ2VyPWYodCx0aGlzLm5hbWUpfWdldCBjb250ZXh0KCl7cmV0dXJuIEUodGhpcy5sb2dnZXIpfWdldCBzdG9yYWdlS2V5KCl7cmV0dXJuIHRoaXMuc3RvcmFnZVByZWZpeCt0aGlzLnZlcnNpb24rdGhpcy5jb3JlLmN1c3RvbVN0b3JhZ2VQcmVmaXgrXCIvL1wiK3RoaXMubmFtZX1nZXQgc2l6ZSgpe3JldHVybiB0aGlzLnJlY29yZHMuc2l6ZX1nZXQga2V5cygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMucmVjb3Jkcy5rZXlzKCkpfWdldCB2YWx1ZXMoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnJlY29yZHMudmFsdWVzKCkpfWdldCBwZW5kaW5nKCl7Y29uc3QgZT1bXTtyZXR1cm4gdGhpcy52YWx1ZXMuZm9yRWFjaCh0PT57aWYodHlwZW9mIHQucmVzcG9uc2U8XCJ1XCIpcmV0dXJuO2NvbnN0IGk9e3RvcGljOnQudG9waWMscmVxdWVzdDpPZSh0LnJlcXVlc3QubWV0aG9kLHQucmVxdWVzdC5wYXJhbXMsdC5pZCksY2hhaW5JZDp0LmNoYWluSWR9O3JldHVybiBlLnB1c2goaSl9KSxlfWFzeW5jIHNldEpzb25ScGNSZWNvcmRzKGUpe2F3YWl0IHRoaXMuY29yZS5zdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LGUpfWFzeW5jIGdldEpzb25ScGNSZWNvcmRzKCl7cmV0dXJuIGF3YWl0IHRoaXMuY29yZS5zdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KX1nZXRSZWNvcmQoZSl7dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3QgdD10aGlzLnJlY29yZHMuZ2V0KGUpO2lmKCF0KXtjb25zdHttZXNzYWdlOml9PWwoXCJOT19NQVRDSElOR19LRVlcIixgJHt0aGlzLm5hbWV9OiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKGkpfXJldHVybiB0fWFzeW5jIHBlcnNpc3QoKXthd2FpdCB0aGlzLnNldEpzb25ScGNSZWNvcmRzKHRoaXMudmFsdWVzKSx0aGlzLmV2ZW50cy5lbWl0KFIuc3luYyl9YXN5bmMgcmVzdG9yZSgpe3RyeXtjb25zdCBlPWF3YWl0IHRoaXMuZ2V0SnNvblJwY1JlY29yZHMoKTtpZih0eXBlb2YgZT5cInVcInx8IWUubGVuZ3RoKXJldHVybjtpZih0aGlzLnJlY29yZHMuc2l6ZSl7Y29uc3R7bWVzc2FnZTp0fT1sKFwiUkVTVE9SRV9XSUxMX09WRVJSSURFXCIsdGhpcy5uYW1lKTt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcih0KSxuZXcgRXJyb3IodCl9dGhpcy5jYWNoZWQ9ZSx0aGlzLmxvZ2dlci5kZWJ1ZyhgU3VjY2Vzc2Z1bGx5IFJlc3RvcmVkIHJlY29yZHMgZm9yICR7dGhpcy5uYW1lfWApLHRoaXMubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwicmVzdG9yZVwiLHJlY29yZHM6dGhpcy52YWx1ZXN9KX1jYXRjaChlKXt0aGlzLmxvZ2dlci5kZWJ1ZyhgRmFpbGVkIHRvIFJlc3RvcmUgcmVjb3JkcyBmb3IgJHt0aGlzLm5hbWV9YCksdGhpcy5sb2dnZXIuZXJyb3IoZSl9fXJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKXt0aGlzLmV2ZW50cy5vbihSLmNyZWF0ZWQsZT0+e2NvbnN0IHQ9Ui5jcmVhdGVkO3RoaXMubG9nZ2VyLmluZm8oYEVtaXR0aW5nICR7dH1gKSx0aGlzLmxvZ2dlci5kZWJ1Zyh7dHlwZTpcImV2ZW50XCIsZXZlbnQ6dCxyZWNvcmQ6ZX0pLHRoaXMucGVyc2lzdCgpfSksdGhpcy5ldmVudHMub24oUi51cGRhdGVkLGU9Pntjb25zdCB0PVIudXBkYXRlZDt0aGlzLmxvZ2dlci5pbmZvKGBFbWl0dGluZyAke3R9YCksdGhpcy5sb2dnZXIuZGVidWcoe3R5cGU6XCJldmVudFwiLGV2ZW50OnQscmVjb3JkOmV9KSx0aGlzLnBlcnNpc3QoKX0pLHRoaXMuZXZlbnRzLm9uKFIuZGVsZXRlZCxlPT57Y29uc3QgdD1SLmRlbGV0ZWQ7dGhpcy5sb2dnZXIuaW5mbyhgRW1pdHRpbmcgJHt0fWApLHRoaXMubG9nZ2VyLmRlYnVnKHt0eXBlOlwiZXZlbnRcIixldmVudDp0LHJlY29yZDplfSksdGhpcy5wZXJzaXN0KCl9KSx0aGlzLmNvcmUuaGVhcnRiZWF0Lm9uKGoucHVsc2UsKCk9Pnt0aGlzLmNsZWFudXAoKX0pfWNsZWFudXAoKXt0cnl7dGhpcy5yZWNvcmRzLmZvckVhY2goZT0+e1UoZS5leHBpcnl8fDApLURhdGUubm93KCk8PTAmJih0aGlzLmxvZ2dlci5pbmZvKGBEZWxldGluZyBleHBpcmVkIGhpc3RvcnkgbG9nOiAke2UuaWR9YCksdGhpcy5kZWxldGUoZS50b3BpYyxlLmlkKSl9KX1jYXRjaChlKXt0aGlzLmxvZ2dlci53YXJuKGUpfX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3Mga3QgZXh0ZW5kcyBlaXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy5jb3JlPWUsdGhpcy5sb2dnZXI9dCx0aGlzLmV4cGlyYXRpb25zPW5ldyBNYXAsdGhpcy5ldmVudHM9bmV3IE4sdGhpcy5uYW1lPUl0LHRoaXMudmVyc2lvbj1DdCx0aGlzLmNhY2hlZD1bXSx0aGlzLmluaXRpYWxpemVkPSExLHRoaXMuc3RvcmFnZVByZWZpeD1PLHRoaXMuaW5pdD1hc3luYygpPT57dGhpcy5pbml0aWFsaXplZHx8KHRoaXMubG9nZ2VyLnRyYWNlKFwiSW5pdGlhbGl6ZWRcIiksYXdhaXQgdGhpcy5yZXN0b3JlKCksdGhpcy5jYWNoZWQuZm9yRWFjaChpPT50aGlzLmV4cGlyYXRpb25zLnNldChpLnRhcmdldCxpKSksdGhpcy5jYWNoZWQ9W10sdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCksdGhpcy5pbml0aWFsaXplZD0hMCl9LHRoaXMuaGFzPWk9Pnt0cnl7Y29uc3Qgcz10aGlzLmZvcm1hdFRhcmdldChpKTtyZXR1cm4gdHlwZW9mIHRoaXMuZ2V0RXhwaXJhdGlvbihzKTxcInVcIn1jYXRjaHtyZXR1cm4hMX19LHRoaXMuc2V0PShpLHMpPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgbj10aGlzLmZvcm1hdFRhcmdldChpKSxhPXt0YXJnZXQ6bixleHBpcnk6c307dGhpcy5leHBpcmF0aW9ucy5zZXQobixhKSx0aGlzLmNoZWNrRXhwaXJ5KG4sYSksdGhpcy5ldmVudHMuZW1pdCh2LmNyZWF0ZWQse3RhcmdldDpuLGV4cGlyYXRpb246YX0pfSx0aGlzLmdldD1pPT57dGhpcy5pc0luaXRpYWxpemVkKCk7Y29uc3Qgcz10aGlzLmZvcm1hdFRhcmdldChpKTtyZXR1cm4gdGhpcy5nZXRFeHBpcmF0aW9uKHMpfSx0aGlzLmRlbD1pPT57aWYodGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5oYXMoaSkpe2NvbnN0IHM9dGhpcy5mb3JtYXRUYXJnZXQoaSksbj10aGlzLmdldEV4cGlyYXRpb24ocyk7dGhpcy5leHBpcmF0aW9ucy5kZWxldGUocyksdGhpcy5ldmVudHMuZW1pdCh2LmRlbGV0ZWQse3RhcmdldDpzLGV4cGlyYXRpb246bn0pfX0sdGhpcy5vbj0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uKGkscyl9LHRoaXMub25jZT0oaSxzKT0+e3RoaXMuZXZlbnRzLm9uY2UoaSxzKX0sdGhpcy5vZmY9KGkscyk9Pnt0aGlzLmV2ZW50cy5vZmYoaSxzKX0sdGhpcy5yZW1vdmVMaXN0ZW5lcj0oaSxzKT0+e3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKGkscyl9LHRoaXMubG9nZ2VyPWYodCx0aGlzLm5hbWUpfWdldCBjb250ZXh0KCl7cmV0dXJuIEUodGhpcy5sb2dnZXIpfWdldCBzdG9yYWdlS2V5KCl7cmV0dXJuIHRoaXMuc3RvcmFnZVByZWZpeCt0aGlzLnZlcnNpb24rdGhpcy5jb3JlLmN1c3RvbVN0b3JhZ2VQcmVmaXgrXCIvL1wiK3RoaXMubmFtZX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuZXhwaXJhdGlvbnMuc2l6ZX1nZXQga2V5cygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMuZXhwaXJhdGlvbnMua2V5cygpKX1nZXQgdmFsdWVzKCl7cmV0dXJuIEFycmF5LmZyb20odGhpcy5leHBpcmF0aW9ucy52YWx1ZXMoKSl9Zm9ybWF0VGFyZ2V0KGUpe2lmKHR5cGVvZiBlPT1cInN0cmluZ1wiKXJldHVybiBfaShlKTtpZih0eXBlb2YgZT09XCJudW1iZXJcIilyZXR1cm4gU2koZSk7Y29uc3R7bWVzc2FnZTp0fT1sKFwiVU5LTk9XTl9UWVBFXCIsYFRhcmdldCB0eXBlOiAke3R5cGVvZiBlfWApO3Rocm93IG5ldyBFcnJvcih0KX1hc3luYyBzZXRFeHBpcmF0aW9ucyhlKXthd2FpdCB0aGlzLmNvcmUuc3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZUtleSxlKX1hc3luYyBnZXRFeHBpcmF0aW9ucygpe3JldHVybiBhd2FpdCB0aGlzLmNvcmUuc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSl9YXN5bmMgcGVyc2lzdCgpe2F3YWl0IHRoaXMuc2V0RXhwaXJhdGlvbnModGhpcy52YWx1ZXMpLHRoaXMuZXZlbnRzLmVtaXQodi5zeW5jKX1hc3luYyByZXN0b3JlKCl7dHJ5e2NvbnN0IGU9YXdhaXQgdGhpcy5nZXRFeHBpcmF0aW9ucygpO2lmKHR5cGVvZiBlPlwidVwifHwhZS5sZW5ndGgpcmV0dXJuO2lmKHRoaXMuZXhwaXJhdGlvbnMuc2l6ZSl7Y29uc3R7bWVzc2FnZTp0fT1sKFwiUkVTVE9SRV9XSUxMX09WRVJSSURFXCIsdGhpcy5uYW1lKTt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcih0KSxuZXcgRXJyb3IodCl9dGhpcy5jYWNoZWQ9ZSx0aGlzLmxvZ2dlci5kZWJ1ZyhgU3VjY2Vzc2Z1bGx5IFJlc3RvcmVkIGV4cGlyYXRpb25zIGZvciAke3RoaXMubmFtZX1gKSx0aGlzLmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcInJlc3RvcmVcIixleHBpcmF0aW9uczp0aGlzLnZhbHVlc30pfWNhdGNoKGUpe3RoaXMubG9nZ2VyLmRlYnVnKGBGYWlsZWQgdG8gUmVzdG9yZSBleHBpcmF0aW9ucyBmb3IgJHt0aGlzLm5hbWV9YCksdGhpcy5sb2dnZXIuZXJyb3IoZSl9fWdldEV4cGlyYXRpb24oZSl7Y29uc3QgdD10aGlzLmV4cGlyYXRpb25zLmdldChlKTtpZighdCl7Y29uc3R7bWVzc2FnZTppfT1sKFwiTk9fTUFUQ0hJTkdfS0VZXCIsYCR7dGhpcy5uYW1lfTogJHtlfWApO3Rocm93IHRoaXMubG9nZ2VyLmVycm9yKGkpLG5ldyBFcnJvcihpKX1yZXR1cm4gdH1jaGVja0V4cGlyeShlLHQpe2NvbnN0e2V4cGlyeTppfT10O1UoaSktRGF0ZS5ub3coKTw9MCYmdGhpcy5leHBpcmUoZSx0KX1leHBpcmUoZSx0KXt0aGlzLmV4cGlyYXRpb25zLmRlbGV0ZShlKSx0aGlzLmV2ZW50cy5lbWl0KHYuZXhwaXJlZCx7dGFyZ2V0OmUsZXhwaXJhdGlvbjp0fSl9Y2hlY2tFeHBpcmF0aW9ucygpe3RoaXMuY29yZS5yZWxheWVyLmNvbm5lY3RlZCYmdGhpcy5leHBpcmF0aW9ucy5mb3JFYWNoKChlLHQpPT50aGlzLmNoZWNrRXhwaXJ5KHQsZSkpfXJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKXt0aGlzLmNvcmUuaGVhcnRiZWF0Lm9uKGoucHVsc2UsKCk9PnRoaXMuY2hlY2tFeHBpcmF0aW9ucygpKSx0aGlzLmV2ZW50cy5vbih2LmNyZWF0ZWQsZT0+e2NvbnN0IHQ9di5jcmVhdGVkO3RoaXMubG9nZ2VyLmluZm8oYEVtaXR0aW5nICR7dH1gKSx0aGlzLmxvZ2dlci5kZWJ1Zyh7dHlwZTpcImV2ZW50XCIsZXZlbnQ6dCxkYXRhOmV9KSx0aGlzLnBlcnNpc3QoKX0pLHRoaXMuZXZlbnRzLm9uKHYuZXhwaXJlZCxlPT57Y29uc3QgdD12LmV4cGlyZWQ7dGhpcy5sb2dnZXIuaW5mbyhgRW1pdHRpbmcgJHt0fWApLHRoaXMubG9nZ2VyLmRlYnVnKHt0eXBlOlwiZXZlbnRcIixldmVudDp0LGRhdGE6ZX0pLHRoaXMucGVyc2lzdCgpfSksdGhpcy5ldmVudHMub24odi5kZWxldGVkLGU9Pntjb25zdCB0PXYuZGVsZXRlZDt0aGlzLmxvZ2dlci5pbmZvKGBFbWl0dGluZyAke3R9YCksdGhpcy5sb2dnZXIuZGVidWcoe3R5cGU6XCJldmVudFwiLGV2ZW50OnQsZGF0YTplfSksdGhpcy5wZXJzaXN0KCl9KX1pc0luaXRpYWxpemVkKCl7aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe2NvbnN0e21lc3NhZ2U6ZX09bChcIk5PVF9JTklUSUFMSVpFRFwiLHRoaXMubmFtZSk7dGhyb3cgbmV3IEVycm9yKGUpfX19Y2xhc3MgS3QgZXh0ZW5kcyB0aXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKGUsdCksdGhpcy5wcm9qZWN0SWQ9ZSx0aGlzLmxvZ2dlcj10LHRoaXMubmFtZT1RLHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5xdWV1ZT1bXSx0aGlzLnZlcmlmeURpc2FibGVkPSExLHRoaXMuaW5pdD1hc3luYygpPT57aWYodGhpcy52ZXJpZnlEaXNhYmxlZHx8UGkoKXx8IVRpKCkpcmV0dXJuO2NvbnN0IGk9Wjt0aGlzLnZlcmlmeVVybCE9PWkmJnRoaXMucmVtb3ZlSWZyYW1lKCksdGhpcy52ZXJpZnlVcmw9aTt0cnl7YXdhaXQgdGhpcy5jcmVhdGVJZnJhbWUoKX1jYXRjaChzKXt0aGlzLmxvZ2dlci5pbmZvKGBWZXJpZnkgaWZyYW1lIGZhaWxlZCB0byBsb2FkOiAke3RoaXMudmVyaWZ5VXJsfWApLHRoaXMubG9nZ2VyLmluZm8ocyl9aWYoIXRoaXMuaW5pdGlhbGl6ZWQpe3RoaXMucmVtb3ZlSWZyYW1lKCksdGhpcy52ZXJpZnlVcmw9cGU7dHJ5e2F3YWl0IHRoaXMuY3JlYXRlSWZyYW1lKCl9Y2F0Y2gocyl7dGhpcy5sb2dnZXIuaW5mbyhgVmVyaWZ5IGlmcmFtZSBmYWlsZWQgdG8gbG9hZDogJHt0aGlzLnZlcmlmeVVybH1gKSx0aGlzLmxvZ2dlci5pbmZvKHMpLHRoaXMudmVyaWZ5RGlzYWJsZWQ9ITB9fX0sdGhpcy5yZWdpc3Rlcj1hc3luYyBpPT57dGhpcy5pbml0aWFsaXplZD90aGlzLnNlbmRQb3N0KGkuYXR0ZXN0YXRpb25JZCk6KHRoaXMuYWRkVG9RdWV1ZShpLmF0dGVzdGF0aW9uSWQpLGF3YWl0IHRoaXMuaW5pdCgpKX0sdGhpcy5yZXNvbHZlPWFzeW5jIGk9PntpZih0aGlzLmlzRGV2RW52KXJldHVyblwiXCI7Y29uc3Qgcz1pPy52ZXJpZnlVcmx8fFo7bGV0IG47dHJ5e249YXdhaXQgdGhpcy5mZXRjaEF0dGVzdGF0aW9uKGkuYXR0ZXN0YXRpb25JZCxzKX1jYXRjaChhKXt0aGlzLmxvZ2dlci5pbmZvKGBmYWlsZWQgdG8gcmVzb2x2ZSBhdHRlc3RhdGlvbjogJHtpLmF0dGVzdGF0aW9uSWR9IGZyb20gdXJsOiAke3N9YCksdGhpcy5sb2dnZXIuaW5mbyhhKSxuPWF3YWl0IHRoaXMuZmV0Y2hBdHRlc3RhdGlvbihpLmF0dGVzdGF0aW9uSWQscGUpfXJldHVybiBufSx0aGlzLmZldGNoQXR0ZXN0YXRpb249YXN5bmMoaSxzKT0+e3RoaXMubG9nZ2VyLmluZm8oYHJlc29sdmluZyBhdHRlc3RhdGlvbjogJHtpfSBmcm9tIHVybDogJHtzfWApO2NvbnN0IG49dGhpcy5zdGFydEFib3J0VGltZXIoQ2UqMiksYT1hd2FpdCBmZXRjaChgJHtzfS9hdHRlc3RhdGlvbi8ke2l9YCx7c2lnbmFsOnRoaXMuYWJvcnRDb250cm9sbGVyLnNpZ25hbH0pO3JldHVybiBjbGVhclRpbWVvdXQobiksYS5zdGF0dXM9PT0yMDA/YXdhaXQgYS5qc29uKCk6dm9pZCAwfSx0aGlzLmFkZFRvUXVldWU9aT0+e3RoaXMucXVldWUucHVzaChpKX0sdGhpcy5wcm9jZXNzUXVldWU9KCk9Pnt0aGlzLnF1ZXVlLmxlbmd0aCE9PTAmJih0aGlzLnF1ZXVlLmZvckVhY2goaT0+dGhpcy5zZW5kUG9zdChpKSksdGhpcy5xdWV1ZT1bXSl9LHRoaXMuc2VuZFBvc3Q9aT0+e3ZhciBzO3RyeXtpZighdGhpcy5pZnJhbWUpcmV0dXJuOyhzPXRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpPT1udWxsfHxzLnBvc3RNZXNzYWdlKGksXCIqXCIpLHRoaXMubG9nZ2VyLmluZm8oYHBvc3RNZXNzYWdlIHNlbnQ6ICR7aX0gJHt0aGlzLnZlcmlmeVVybH1gKX1jYXRjaHt9fSx0aGlzLmNyZWF0ZUlmcmFtZT1hc3luYygpPT57bGV0IGk7Y29uc3Qgcz1uPT57bi5kYXRhPT09XCJ2ZXJpZnlfcmVhZHlcIiYmKHRoaXMuaW5pdGlhbGl6ZWQ9ITAsdGhpcy5wcm9jZXNzUXVldWUoKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixzKSxpKCkpfTthd2FpdCBQcm9taXNlLnJhY2UoW25ldyBQcm9taXNlKG49PntpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChRKSlyZXR1cm4gbigpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHMpO2NvbnN0IGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTthLmlkPVEsYS5zcmM9YCR7dGhpcy52ZXJpZnlVcmx9LyR7dGhpcy5wcm9qZWN0SWR9YCxhLnN0eWxlLmRpc3BsYXk9XCJub25lXCIsZG9jdW1lbnQuYm9keS5hcHBlbmQoYSksdGhpcy5pZnJhbWU9YSxpPW59KSxuZXcgUHJvbWlzZSgobixhKT0+c2V0VGltZW91dCgoKT0+e3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHMpLGEoXCJ2ZXJpZnkgaWZyYW1lIGxvYWQgdGltZW91dFwiKX0sVShSZSkpKV0pfSx0aGlzLnJlbW92ZUlmcmFtZT0oKT0+e3RoaXMuaWZyYW1lJiYodGhpcy5pZnJhbWUucmVtb3ZlKCksdGhpcy5pZnJhbWU9dm9pZCAwLHRoaXMuaW5pdGlhbGl6ZWQ9ITEpfSx0aGlzLmxvZ2dlcj1mKHQsdGhpcy5uYW1lKSx0aGlzLnZlcmlmeVVybD1aLHRoaXMuYWJvcnRDb250cm9sbGVyPW5ldyBBYm9ydENvbnRyb2xsZXIsdGhpcy5pc0RldkVudj14aSgpJiZwcm9jZXNzLmVudi5JU19WSVRFU1R9Z2V0IGNvbnRleHQoKXtyZXR1cm4gRSh0aGlzLmxvZ2dlcil9c3RhcnRBYm9ydFRpbWVyKGUpe3JldHVybiB0aGlzLmFib3J0Q29udHJvbGxlcj1uZXcgQWJvcnRDb250cm9sbGVyLHNldFRpbWVvdXQoKCk9PnRoaXMuYWJvcnRDb250cm9sbGVyLmFib3J0KCksVShlKSl9fXZhciBUcj1PYmplY3QuZGVmaW5lUHJvcGVydHksQnQ9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyx4cj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LE9yPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsVnQ9KHIsZSx0KT0+ZSBpbiByP1RyKHIsZSx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6dH0pOnJbZV09dCxxdD0ocixlKT0+e2Zvcih2YXIgdCBpbiBlfHwoZT17fSkpeHIuY2FsbChlLHQpJiZWdChyLHQsZVt0XSk7aWYoQnQpZm9yKHZhciB0IG9mIEJ0KGUpKU9yLmNhbGwoZSx0KSYmVnQocix0LGVbdF0pO3JldHVybiByfTtjbGFzcyBlZSBleHRlbmRzIGlpe2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMucHJvdG9jb2w9dWUsdGhpcy52ZXJzaW9uPVdlLHRoaXMubmFtZT1YLHRoaXMuZXZlbnRzPW5ldyBOLHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5vbj0oaSxzKT0+dGhpcy5ldmVudHMub24oaSxzKSx0aGlzLm9uY2U9KGkscyk9PnRoaXMuZXZlbnRzLm9uY2UoaSxzKSx0aGlzLm9mZj0oaSxzKT0+dGhpcy5ldmVudHMub2ZmKGkscyksdGhpcy5yZW1vdmVMaXN0ZW5lcj0oaSxzKT0+dGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoaSxzKSx0aGlzLnByb2plY3RJZD1lPy5wcm9qZWN0SWQsdGhpcy5yZWxheVVybD1lPy5yZWxheVVybHx8ZGUsdGhpcy5jdXN0b21TdG9yYWdlUHJlZml4PWUhPW51bGwmJmUuY3VzdG9tU3RvcmFnZVByZWZpeD9gOiR7ZS5jdXN0b21TdG9yYWdlUHJlZml4fWA6XCJcIjtjb25zdCB0PXR5cGVvZiBlPy5sb2dnZXI8XCJ1XCImJnR5cGVvZiBlPy5sb2dnZXIhPVwic3RyaW5nXCI/ZS5sb2dnZXI6eWUobWUoe2xldmVsOmU/LmxvZ2dlcnx8WGUubG9nZ2VyfSkpO3RoaXMubG9nZ2VyPWYodCx0aGlzLm5hbWUpLHRoaXMuaGVhcnRiZWF0PW5ldyBHdCx0aGlzLmNyeXB0bz1uZXcgX3QodGhpcyx0aGlzLmxvZ2dlcixlPy5rZXljaGFpbiksdGhpcy5oaXN0b3J5PW5ldyBNdCh0aGlzLHRoaXMubG9nZ2VyKSx0aGlzLmV4cGlyZXI9bmV3IGt0KHRoaXMsdGhpcy5sb2dnZXIpLHRoaXMuc3RvcmFnZT1lIT1udWxsJiZlLnN0b3JhZ2U/ZS5zdG9yYWdlOm5ldyBZdChxdChxdCh7fSxRZSksZT8uc3RvcmFnZU9wdGlvbnMpKSx0aGlzLnJlbGF5ZXI9bmV3IHp0KHtjb3JlOnRoaXMsbG9nZ2VyOnRoaXMubG9nZ2VyLHJlbGF5VXJsOnRoaXMucmVsYXlVcmwscHJvamVjdElkOnRoaXMucHJvamVjdElkfSksdGhpcy5wYWlyaW5nPW5ldyAkdCh0aGlzLHRoaXMubG9nZ2VyKSx0aGlzLnZlcmlmeT1uZXcgS3QodGhpcy5wcm9qZWN0SWR8fFwiXCIsdGhpcy5sb2dnZXIpfXN0YXRpYyBhc3luYyBpbml0KGUpe2NvbnN0IHQ9bmV3IGVlKGUpO2F3YWl0IHQuaW5pdGlhbGl6ZSgpO2NvbnN0IGk9YXdhaXQgdC5jcnlwdG8uZ2V0Q2xpZW50SWQoKTtyZXR1cm4gYXdhaXQgdC5zdG9yYWdlLnNldEl0ZW0oRHQsaSksdH1nZXQgY29udGV4dCgpe3JldHVybiBFKHRoaXMubG9nZ2VyKX1hc3luYyBzdGFydCgpe3RoaXMuaW5pdGlhbGl6ZWR8fGF3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpfWFzeW5jIGluaXRpYWxpemUoKXt0aGlzLmxvZ2dlci50cmFjZShcIkluaXRpYWxpemVkXCIpO3RyeXthd2FpdCB0aGlzLmNyeXB0by5pbml0KCksYXdhaXQgdGhpcy5oaXN0b3J5LmluaXQoKSxhd2FpdCB0aGlzLmV4cGlyZXIuaW5pdCgpLGF3YWl0IHRoaXMucmVsYXllci5pbml0KCksYXdhaXQgdGhpcy5oZWFydGJlYXQuaW5pdCgpLGF3YWl0IHRoaXMucGFpcmluZy5pbml0KCksdGhpcy5pbml0aWFsaXplZD0hMCx0aGlzLmxvZ2dlci5pbmZvKFwiQ29yZSBJbml0aWFsaXphdGlvbiBTdWNjZXNzXCIpfWNhdGNoKGUpe3Rocm93IHRoaXMubG9nZ2VyLndhcm4oYENvcmUgSW5pdGlhbGl6YXRpb24gRmFpbHVyZSBhdCBlcG9jaCAke0RhdGUubm93KCl9YCxlKSx0aGlzLmxvZ2dlci5lcnJvcihlLm1lc3NhZ2UpLGV9fX1jb25zdCBBcj1lZTtleHBvcnR7WCBhcyBDT1JFX0NPTlRFWFQsWGUgYXMgQ09SRV9ERUZBVUxULHVlIGFzIENPUkVfUFJPVE9DT0wsUWUgYXMgQ09SRV9TVE9SQUdFX09QVElPTlMsTyBhcyBDT1JFX1NUT1JBR0VfUFJFRklYLFdlIGFzIENPUkVfVkVSU0lPTixsZSBhcyBDUllQVE9fQ0xJRU5UX1NFRUQsWmUgYXMgQ1JZUFRPX0NPTlRFWFQsZXQgYXMgQ1JZUFRPX0pXVF9UVEwsQXIgYXMgQ29yZSxfdCBhcyBDcnlwdG8sSXQgYXMgRVhQSVJFUl9DT05URVhULHByIGFzIEVYUElSRVJfREVGQVVMVF9UVEwsdiBhcyBFWFBJUkVSX0VWRU5UUyxDdCBhcyBFWFBJUkVSX1NUT1JBR0VfVkVSU0lPTixrdCBhcyBFeHBpcmVyLHd0IGFzIEhJU1RPUllfQ09OVEVYVCxSIGFzIEhJU1RPUllfRVZFTlRTLHZ0IGFzIEhJU1RPUllfU1RPUkFHRV9WRVJTSU9OLE10IGFzIEpzb25ScGNIaXN0b3J5LHR0IGFzIEtFWUNIQUlOX0NPTlRFWFQsaXQgYXMgS0VZQ0hBSU5fU1RPUkFHRV9WRVJTSU9OLFJ0IGFzIEtleUNoYWluLHN0IGFzIE1FU1NBR0VTX0NPTlRFWFQscnQgYXMgTUVTU0FHRVNfU1RPUkFHRV9WRVJTSU9OLFN0IGFzIE1lc3NhZ2VUcmFja2VyLGZ0IGFzIFBBSVJJTkdfQ09OVEVYVCxnciBhcyBQQUlSSU5HX0RFRkFVTFRfVFRMLEIgYXMgUEFJUklOR19FVkVOVFMsRiBhcyBQQUlSSU5HX1JQQ19PUFRTLEV0IGFzIFBBSVJJTkdfU1RPUkFHRV9WRVJTSU9OLGJ0IGFzIFBFTkRJTkdfU1VCX1JFU09MVVRJT05fVElNRU9VVCxhdCBhcyBQVUJMSVNIRVJfQ09OVEVYVCxudCBhcyBQVUJMSVNIRVJfREVGQVVMVF9UVEwsJHQgYXMgUGFpcmluZyxjdCBhcyBSRUxBWUVSX0NPTlRFWFQsaHQgYXMgUkVMQVlFUl9ERUZBVUxUX0xPR0dFUixvdCBhcyBSRUxBWUVSX0RFRkFVTFRfUFJPVE9DT0wsZGUgYXMgUkVMQVlFUl9ERUZBVUxUX1JFTEFZX1VSTCxEIGFzIFJFTEFZRVJfRVZFTlRTLGdlIGFzIFJFTEFZRVJfRkFJTE9WRVJfUkVMQVlfVVJMLFQgYXMgUkVMQVlFUl9QUk9WSURFUl9FVkVOVFMsbHQgYXMgUkVMQVlFUl9SRUNPTk5FQ1RfVElNRU9VVCxkdCBhcyBSRUxBWUVSX1NES19WRVJTSU9OLGxyIGFzIFJFTEFZRVJfU1RPUkFHRV9PUFRJT05TLHV0IGFzIFJFTEFZRVJfU1VCU0NSSUJFUl9TVUZGSVgsZ3QgYXMgUkVMQVlFUl9UUkFOU1BPUlRfQ1VUT0ZGLHp0IGFzIFJlbGF5ZXIscHQgYXMgU1RPUkVfU1RPUkFHRV9WRVJTSU9OLHl0IGFzIFNVQlNDUklCRVJfQ09OVEVYVCxkciBhcyBTVUJTQ1JJQkVSX0RFRkFVTFRfVFRMLHcgYXMgU1VCU0NSSUJFUl9FVkVOVFMsbXQgYXMgU1VCU0NSSUJFUl9TVE9SQUdFX1ZFUlNJT04sRnQgYXMgU3RvcmUseHQgYXMgU3Vic2NyaWJlcixRIGFzIFZFUklGWV9DT05URVhULHBlIGFzIFZFUklGWV9GQUxMQkFDS19TRVJWRVIsWiBhcyBWRVJJRllfU0VSVkVSLEt0IGFzIFZlcmlmeSxEdCBhcyBXQUxMRVRDT05ORUNUX0NMSUVOVF9JRCxlZSBhcyBkZWZhdWx0fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbImp0IiwiRXZlbnRFbWl0dGVyIiwiTiIsIll0IiwiSEVBUlRCRUFUX0VWRU5UUyIsImoiLCJIZWFydEJlYXQiLCJHdCIsImdlbmVyYXRlQ2hpbGRMb2dnZXIiLCJmIiwiZ2V0TG9nZ2VyQ29udGV4dCIsIkUiLCJwaW5vIiwieWUiLCJnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyIsIm1lIiwiSU1lc3NhZ2VUcmFja2VyIiwiSHQiLCJJUHVibGlzaGVyIiwiSnQiLCJJU3Vic2NyaWJlciIsIld0IiwiSVJlbGF5ZXIiLCJYdCIsIklTdG9yZSIsIlF0IiwiSUpzb25ScGNIaXN0b3J5IiwiWnQiLCJJRXhwaXJlciIsImVpIiwiSVZlcmlmeSIsInRpIiwiSUNvcmUiLCJpaSIsInNhZmVKc29uU3RyaW5naWZ5Iiwic2kiLCJzYWZlSnNvblBhcnNlIiwicmkiLCJZIiwiZ2V0SW50ZXJuYWxFcnJvciIsImwiLCJtYXBUb09iaiIsImJlIiwib2JqVG9NYXAiLCJmZSIsImdlbmVyYXRlS2V5UGFpciIsIm5pIiwiZ2VuZXJhdGVSYW5kb21CeXRlczMyIiwidGUiLCJkZXJpdmVTeW1LZXkiLCJhaSIsImhhc2hLZXkiLCJvaSIsInZhbGlkYXRlRW5jb2RpbmciLCJoaSIsImlzVHlwZU9uZUVudmVsb3BlIiwiRWUiLCJlbmNyeXB0IiwiY2kiLCJ2YWxpZGF0ZURlY29kaW5nIiwidWkiLCJkZWNyeXB0IiwibGkiLCJkZXNlcmlhbGl6ZSIsIndlIiwiZGVjb2RlVHlwZUJ5dGUiLCJkaSIsIkJBU0UxNiIsImdpIiwiaGFzaE1lc3NhZ2UiLCJpZSIsImdldFJlbGF5UHJvdG9jb2xOYW1lIiwic2UiLCJjcmVhdGVFeHBpcmluZ1Byb21pc2UiLCJNIiwiZ2V0UmVsYXlQcm90b2NvbEFwaSIsIkciLCJpc1VuZGVmaW5lZCIsInJlIiwiZ2V0U2RrRXJyb3IiLCJrIiwiaXNWYWxpZEFycmF5IiwicGkiLCJpc09ubGluZSIsInZlIiwiZm9ybWF0UmVsYXlScGNVcmwiLCJEaSIsInN1YnNjcmliZVRvTmV0d29ya0NoYW5nZSIsInlpIiwiaXNQcm9wb3NhbFN0cnVjdCIsIm1pIiwiaXNTZXNzaW9uU3RydWN0IiwiYmkiLCJUWVBFXzEiLCJmaSIsImNhbGNFeHBpcnkiLCJIIiwiZm9ybWF0VXJpIiwiRWkiLCJwYXJzZVVyaSIsIndpIiwiY3JlYXRlRGVsYXllZFByb21pc2UiLCJ2aSIsImVuZ2luZUV2ZW50IiwibmUiLCJpc0V4cGlyZWQiLCJJZSIsImlzVmFsaWRQYXJhbXMiLCJhZSIsImlzVmFsaWRVcmwiLCJJaSIsImlzVmFsaWRTdHJpbmciLCJDaSIsInBhcnNlRXhwaXJlclRhcmdldCIsIlJpIiwiZm9ybWF0VG9waWNUYXJnZXQiLCJfaSIsImZvcm1hdElkVGFyZ2V0IiwiU2kiLCJpc1JlYWN0TmF0aXZlIiwiUGkiLCJpc0Jyb3dzZXIiLCJUaSIsImlzTm9kZSIsInhpIiwidG9TdHJpbmciLCJPaSIsIk9ORV9EQVkiLCJMIiwiU0lYX0hPVVJTIiwiQWkiLCJPTkVfU0VDT05EIiwiQ2UiLCJUSElSVFlfREFZUyIsIkoiLCJGSVZFX1NFQ09ORFMiLCJSZSIsIlRISVJUWV9TRUNPTkRTIiwiX2UiLCJ0b01pbGlzZWNvbmRzIiwiVSIsIlRFTl9TRUNPTkRTIiwiemkiLCJXYXRjaCIsIk5pIiwiRklWRV9NSU5VVEVTIiwiU2UiLCJKc29uUnBjUHJvdmlkZXIiLCJMaSIsImdldEJpZ0ludFJwY0lkIiwiVWkiLCJpc0pzb25ScGNSZXF1ZXN0IiwiUGUiLCJpc0pzb25ScGNSZXNwb25zZSIsIlRlIiwiZm9ybWF0SnNvblJwY1Jlc3VsdCIsInhlIiwiZm9ybWF0SnNvblJwY1JlcXVlc3QiLCJPZSIsImZvcm1hdEpzb25ScGNFcnJvciIsIkZpIiwiaXNKc29uUnBjUmVzdWx0IiwiJGkiLCJpc0pzb25ScGNFcnJvciIsIkFlIiwiTWkiLCJraSIsIktpIiwiciIsImUiLCJsZW5ndGgiLCJUeXBlRXJyb3IiLCJ0IiwiVWludDhBcnJheSIsImkiLCJzIiwibiIsImNoYXJBdCIsImEiLCJjaGFyQ29kZUF0IiwibyIsImgiLCJ1IiwiTWF0aCIsImxvZyIsImQiLCJwIiwiYyIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJBcnJheSIsImlzQXJyYXkiLCJmcm9tIiwibSIsInoiLCJJIiwiXyIsIlMiLCJiIiwiUCIsIkEiLCJDIiwiRXJyb3IiLCJ4IiwicSIsInJlcGVhdCIsInkiLCIkIiwiZW5jb2RlIiwiZGVjb2RlVW5zYWZlIiwiZGVjb2RlIiwiQmkiLCJWaSIsInplIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicWkiLCJUZXh0RW5jb2RlciIsImppIiwiVGV4dERlY29kZXIiLCJZaSIsInByZWZpeCIsImJhc2VFbmNvZGUiLCJHaSIsImNvZGVQb2ludEF0IiwicHJlZml4Q29kZVBvaW50IiwiYmFzZURlY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzbGljZSIsIm9yIiwiTmUiLCJIaSIsImRlY29kZXJzIiwiUmFuZ2VFcnJvciIsIk9iamVjdCIsImtleXMiLCJKaSIsImVuY29kZXIiLCJkZWNvZGVyIiwiVyIsIksiLCJhbHBoYWJldCIsIldpIiwiU3ludGF4RXJyb3IiLCJYaSIsImciLCJiaXRzUGVyQ2hhciIsIlFpIiwiWmkiLCJmcmVlemUiLCJfX3Byb3RvX18iLCJpZGVudGl0eSIsImVzIiwidHMiLCJiYXNlMiIsImlzIiwic3MiLCJiYXNlOCIsInJzIiwibnMiLCJiYXNlMTAiLCJhcyIsIm9zIiwiaHMiLCJiYXNlMTYiLCJiYXNlMTZ1cHBlciIsImNzIiwidXMiLCJscyIsImRzIiwiZ3MiLCJwcyIsIkRzIiwieXMiLCJtcyIsImJzIiwiYmFzZTMyIiwiYmFzZTMydXBwZXIiLCJiYXNlMzJwYWQiLCJiYXNlMzJwYWR1cHBlciIsImJhc2UzMmhleCIsImJhc2UzMmhleHVwcGVyIiwiYmFzZTMyaGV4cGFkIiwiYmFzZTMyaGV4cGFkdXBwZXIiLCJiYXNlMzJ6IiwiZnMiLCJFcyIsIndzIiwiYmFzZTM2IiwiYmFzZTM2dXBwZXIiLCJ2cyIsIklzIiwiQ3MiLCJiYXNlNThidGMiLCJiYXNlNThmbGlja3IiLCJScyIsIl9zIiwiU3MiLCJQcyIsIlRzIiwiYmFzZTY0IiwiYmFzZTY0cGFkIiwiYmFzZTY0dXJsIiwiYmFzZTY0dXJscGFkIiwiTGUiLCJ4cyIsInJlZHVjZSIsIk9zIiwiQXMiLCJ6cyIsInB1c2giLCJOcyIsIkxzIiwiYmFzZTI1NmVtb2ppIiwiVXMiLCJGZSIsIlVlIiwiRnMiLCIkcyIsIk1zIiwicG93IiwiYnl0ZXMiLCJrcyIsIm9lIiwiS3MiLCIkZSIsIkJzIiwiVnMiLCJxcyIsImpzIiwiWXMiLCJHcyIsIkhzIiwiSnMiLCJXcyIsIlhzIiwiUXMiLCJlbmNvZGluZ0xlbmd0aCIsIk1lIiwia2UiLCJLZSIsImhlIiwic2V0IiwiWnMiLCJjb2RlIiwic2l6ZSIsImRpZ2VzdCIsIkJlIiwiZXIiLCJ0aGVuIiwiVmUiLCJjcnlwdG8iLCJzdWJ0bGUiLCJ0ciIsImlyIiwic3IiLCJzaGEyNTYiLCJzaGE1MTIiLCJxZSIsInJyIiwiamUiLCJuciIsImFyIiwiWWUiLCJHZSIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJociIsImFsbG9jVW5zYWZlIiwiSGUiLCJKZSIsInN1YnN0cmluZyIsImNlIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY3IiLCJ1dGY4IiwiaGV4IiwibGF0aW4xIiwiYXNjaWkiLCJiaW5hcnkiLCJ1ciIsInVlIiwiV2UiLCJYIiwiTyIsIlhlIiwibG9nZ2VyIiwiUWUiLCJkYXRhYmFzZSIsIlplIiwibGUiLCJldCIsInR0IiwiaXQiLCJzdCIsInJ0IiwibnQiLCJhdCIsIm90IiwiaHQiLCJkZSIsImdlIiwiY3QiLCJEIiwibWVzc2FnZSIsIm1lc3NhZ2VfYWNrIiwiY29ubmVjdCIsImRpc2Nvbm5lY3QiLCJlcnJvciIsImNvbm5lY3Rpb25fc3RhbGxlZCIsInRyYW5zcG9ydF9jbG9zZWQiLCJwdWJsaXNoIiwidXQiLCJUIiwicGF5bG9hZCIsImx0IiwibHIiLCJkdCIsImd0IiwicHQiLCJEdCIsInciLCJjcmVhdGVkIiwiZGVsZXRlZCIsImV4cGlyZWQiLCJkaXNhYmxlZCIsInN5bmMiLCJyZXN1YnNjcmliZWQiLCJkciIsInl0IiwibXQiLCJidCIsImZ0IiwiRXQiLCJnciIsIkYiLCJ3Y19wYWlyaW5nRGVsZXRlIiwicmVxIiwidHRsIiwicHJvbXB0IiwidGFnIiwicmVzIiwid2NfcGFpcmluZ1BpbmciLCJ1bnJlZ2lzdGVyZWRfbWV0aG9kIiwiQiIsImNyZWF0ZSIsImV4cGlyZSIsImRlbGV0ZSIsInBpbmciLCJSIiwidXBkYXRlZCIsInd0IiwidnQiLCJJdCIsInYiLCJDdCIsInByIiwiUSIsIloiLCJwZSIsIlJ0IiwiY29yZSIsImtleWNoYWluIiwiTWFwIiwidmVyc2lvbiIsImluaXRpYWxpemVkIiwic3RvcmFnZVByZWZpeCIsImluaXQiLCJnZXRLZXlDaGFpbiIsImhhcyIsImlzSW5pdGlhbGl6ZWQiLCJwZXJzaXN0IiwiZ2V0IiwiZGVsIiwiY29udGV4dCIsInN0b3JhZ2VLZXkiLCJjdXN0b21TdG9yYWdlUHJlZml4Iiwic2V0S2V5Q2hhaW4iLCJzdG9yYWdlIiwic2V0SXRlbSIsImdldEl0ZW0iLCJfdCIsImhhc0tleXMiLCJnZXRDbGllbnRJZCIsImdldENsaWVudFNlZWQiLCJlbmNvZGVJc3MiLCJwdWJsaWNLZXkiLCJzZXRQcml2YXRlS2V5IiwicHJpdmF0ZUtleSIsInNpZ25KV1QiLCJnZW5lcmF0ZVNoYXJlZEtleSIsImdldFByaXZhdGVLZXkiLCJzZXRTeW1LZXkiLCJkZWxldGVLZXlQYWlyIiwiZGVsZXRlU3ltS2V5Iiwic2VuZGVyUHVibGljS2V5IiwicmVjZWl2ZXJQdWJsaWNLZXkiLCJnZXRTeW1LZXkiLCJ0eXBlIiwic3ltS2V5IiwiZW5jb2RlZCIsImdldFBheWxvYWRUeXBlIiwiZ2V0UGF5bG9hZFNlbmRlclB1YmxpY0tleSIsIlN0IiwibWVzc2FnZXMiLCJ0cmFjZSIsImdldFJlbGF5ZXJNZXNzYWdlcyIsImRlYnVnIiwibWV0aG9kIiwic2V0UmVsYXllck1lc3NhZ2VzIiwiRHIiLCJyZWxheWVyIiwiZXZlbnRzIiwicXVldWUiLCJwdWJsaXNoVGltZW91dCIsIm5lZWRzVHJhbnNwb3J0UmVzdGFydCIsInBhcmFtcyIsInRvcGljIiwib3B0cyIsImlkIiwicmVsYXkiLCJzZXRUaW1lb3V0IiwicnBjUHVibGlzaCIsInJlbW92ZVJlcXVlc3RGcm9tUXVldWUiLCJlbWl0IiwiaW50ZXJuYWwiLCJ0aHJvd09uRmFpbGVkUHVibGlzaCIsImNsZWFyVGltZW91dCIsIm9uIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVnaXN0ZXJFdmVudExpc3RlbmVycyIsInByb3RvY29sIiwiZGlyZWN0aW9uIiwicmVxdWVzdCIsImNoZWNrUXVldWUiLCJmb3JFYWNoIiwiaGVhcnRiZWF0IiwicHVsc2UiLCJ5ciIsIm1hcCIsImV4aXN0cyIsImluY2x1ZGVzIiwiZmlsdGVyIiwiY2xlYXIiLCJ0b3BpY3MiLCJtciIsImRlZmluZVByb3BlcnR5IiwiYnIiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZnIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiUHQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJFciIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5Iiwid3IiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIlR0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJWIiwiY2FsbCIsIkRlIiwieHQiLCJzdWJzY3JpcHRpb25zIiwidG9waWNNYXAiLCJwZW5kaW5nIiwiY2FjaGVkIiwicGVuZGluZ1N1YnNjcmlwdGlvbldhdGNoTGFiZWwiLCJwb2xsaW5nSW50ZXJ2YWwiLCJzdWJzY3JpYmVUaW1lb3V0IiwicmVzdGFydEluUHJvZ3Jlc3MiLCJiYXRjaFN1YnNjcmliZVRvcGljc0xpbWl0IiwiY2xpZW50SWQiLCJzdWJzY3JpYmUiLCJyZXN0YXJ0VG9Db21wbGV0ZSIsInJwY1N1YnNjcmliZSIsIm9uU3Vic2NyaWJlIiwidW5zdWJzY3JpYmUiLCJ1bnN1YnNjcmliZUJ5SWQiLCJ1bnN1YnNjcmliZUJ5VG9waWMiLCJpc1N1YnNjcmliZWQiLCJQcm9taXNlIiwic3RhcnQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzdG9wIiwiZWxhcHNlZCIsImNhdGNoIiwicmVzdGFydCIsInJlc3RvcmUiLCJyZXNldCIsImlkcyIsInZhbHVlcyIsImhhc1N1YnNjcmlwdGlvbiIsImdldFN1YnNjcmlwdGlvbiIsIm9uRW5hYmxlIiwib25EaXNhYmxlIiwiYWxsIiwicnBjVW5zdWJzY3JpYmUiLCJvblVuc3Vic2NyaWJlIiwicnBjQmF0Y2hTdWJzY3JpYmUiLCJiYXRjaFN1YnNjcmliZSIsInNldFN1YnNjcmlwdGlvbiIsIm9uQmF0Y2hTdWJzY3JpYmUiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJkZWxldGVTdWJzY3JpcHRpb24iLCJzZXRSZWxheWVyU3Vic2NyaXB0aW9ucyIsImdldFJlbGF5ZXJTdWJzY3JpcHRpb25zIiwic3Vic2NyaXB0aW9uIiwiYWRkU3Vic2NyaXB0aW9uIiwicmVhc29uIiwiY2VpbCIsInNwbGljZSIsIm9uQ29ubmVjdCIsIm9uRGlzY29ubmVjdCIsImNoZWNrUGVuZGluZyIsInRyYW5zcG9ydEV4cGxpY2l0bHlDbG9zZWQiLCJpbmZvIiwiZXZlbnQiLCJkYXRhIiwidnIiLCJPdCIsIklyIiwiQ3IiLCJBdCIsIlJyIiwienQiLCJjb25uZWN0aW9uQXR0ZW1wdEluUHJvZ3Jlc3MiLCJjb25uZWN0aW9uU3RhdHVzUG9sbGluZ0ludGVydmFsIiwic3RhbGVDb25uZWN0aW9uRXJyb3JzIiwiaGFzRXhwZXJpZW5jZWROZXR3b3JrRGlzcnVwdGlvbiIsInRvRXN0YWJsaXNoQ29ubmVjdGlvbiIsInByb3ZpZGVyIiwib25QYXlsb2FkSGFuZGxlciIsIm9uUHJvdmlkZXJQYXlsb2FkIiwib25Db25uZWN0SGFuZGxlciIsIm9uRGlzY29ubmVjdEhhbmRsZXIiLCJvblByb3ZpZGVyRGlzY29ubmVjdCIsIm9uUHJvdmlkZXJFcnJvckhhbmRsZXIiLCJ0cmFuc3BvcnRDbG9zZSIsInJlZ2lzdGVyUHJvdmlkZXJMaXN0ZW5lcnMiLCJsZXZlbCIsInN1YnNjcmliZXIiLCJwdWJsaXNoZXIiLCJyZWxheVVybCIsInByb2plY3RJZCIsImNyZWF0ZVByb3ZpZGVyIiwidHJhbnNwb3J0T3BlbiIsIndhcm4iLCJyZXN0YXJ0VHJhbnNwb3J0IiwiY29ubmVjdGVkIiwiY29ubmVjdGlvbiIsImNvbm5lY3RpbmciLCJyZWNvcmRNZXNzYWdlRXZlbnQiLCJwdWJsaXNoZWRBdCIsIkRhdGUiLCJub3ciLCJjb25maXJtT25saW5lU3RhdGVPclRocm93IiwiaXNDb25uZWN0aW9uU3RhbGxlZCIsInNvbWUiLCJ1bnJlZ2lzdGVyUHJvdmlkZXJMaXN0ZW5lcnMiLCJzZGtWZXJzaW9uIiwiYXV0aCIsInVzZU9uQ2xvc2VFdmVudCIsInNob3VsZElnbm9yZU1lc3NhZ2VFdmVudCIsImVuZHNXaXRoIiwiYWNrbm93bGVkZ2VQYXlsb2FkIiwib25NZXNzYWdlRXZlbnQiLCJzZW5kIiwiYXR0ZW1wdFRvUmVjb25uZWN0IiwiX3IiLCJOdCIsIlNyIiwiUHIiLCJMdCIsIlV0IiwiRnQiLCJnZXRLZXkiLCJ1cGRhdGUiLCJrZXkiLCJnZXREYXRhIiwiZ2V0QWxsIiwiZXZlcnkiLCJzZXREYXRhU3RvcmUiLCJnZXREYXRhU3RvcmUiLCIkdCIsImlnbm9yZWRQYXlsb2FkVHlwZXMiLCJyZWdpc3RlcmVkTWV0aG9kcyIsInBhaXJpbmdzIiwiY2xlYW51cCIsInJlZ2lzdGVyUmVsYXllckV2ZW50cyIsInJlZ2lzdGVyRXhwaXJlckV2ZW50cyIsInJlZ2lzdGVyIiwibWV0aG9kcyIsIlNldCIsImV4cGlyeSIsImFjdGl2ZSIsImV4cGlyZXIiLCJ1cmkiLCJwYWlyIiwiaXNWYWxpZFBhaXIiLCJhY3RpdmF0ZVBhaXJpbmciLCJhY3RpdmF0ZSIsImlzVmFsaWRQaW5nIiwic2VuZFJlcXVlc3QiLCJkb25lIiwicmVzb2x2ZSIsInJlamVjdCIsInVwZGF0ZUV4cGlyeSIsInVwZGF0ZU1ldGFkYXRhIiwibWV0YWRhdGEiLCJwZWVyTWV0YWRhdGEiLCJnZXRQYWlyaW5ncyIsImlzVmFsaWREaXNjb25uZWN0IiwiZGVsZXRlUGFpcmluZyIsImhpc3RvcnkiLCJzZW5kUmVzdWx0Iiwic2VuZEVycm9yIiwib25SZWxheUV2ZW50UmVxdWVzdCIsIm9uUGFpcmluZ1BpbmdSZXF1ZXN0Iiwib25QYWlyaW5nRGVsZXRlUmVxdWVzdCIsIm9uVW5rbm93blJwY01ldGhvZFJlcXVlc3QiLCJvblJlbGF5RXZlbnRSZXNwb25zZSIsIm9uUGFpcmluZ1BpbmdSZXNwb25zZSIsIm9uVW5rbm93blJwY01ldGhvZFJlc3BvbnNlIiwiaXNWYWxpZFBhaXJpbmdUb3BpYyIsInRhcmdldCIsIk10IiwicmVjb3JkcyIsImNoYWluSWQiLCJyZXNwb25zZSIsImdldFJlY29yZCIsInJlc3VsdCIsInNldEpzb25ScGNSZWNvcmRzIiwiZ2V0SnNvblJwY1JlY29yZHMiLCJyZWNvcmQiLCJrdCIsImV4cGlyYXRpb25zIiwiZm9ybWF0VGFyZ2V0IiwiZ2V0RXhwaXJhdGlvbiIsImNoZWNrRXhwaXJ5IiwiZXhwaXJhdGlvbiIsInNldEV4cGlyYXRpb25zIiwiZ2V0RXhwaXJhdGlvbnMiLCJjaGVja0V4cGlyYXRpb25zIiwiS3QiLCJ2ZXJpZnlEaXNhYmxlZCIsInZlcmlmeVVybCIsInJlbW92ZUlmcmFtZSIsImNyZWF0ZUlmcmFtZSIsInNlbmRQb3N0IiwiYXR0ZXN0YXRpb25JZCIsImFkZFRvUXVldWUiLCJpc0RldkVudiIsImZldGNoQXR0ZXN0YXRpb24iLCJzdGFydEFib3J0VGltZXIiLCJmZXRjaCIsInNpZ25hbCIsImFib3J0Q29udHJvbGxlciIsInN0YXR1cyIsImpzb24iLCJwcm9jZXNzUXVldWUiLCJpZnJhbWUiLCJjb250ZW50V2luZG93IiwicG9zdE1lc3NhZ2UiLCJ3aW5kb3ciLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmFjZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiY3JlYXRlRWxlbWVudCIsInNyYyIsInN0eWxlIiwiZGlzcGxheSIsImJvZHkiLCJhcHBlbmQiLCJyZW1vdmUiLCJBYm9ydENvbnRyb2xsZXIiLCJwcm9jZXNzIiwiZW52IiwiSVNfVklURVNUIiwiYWJvcnQiLCJUciIsIkJ0IiwieHIiLCJPciIsIlZ0IiwicXQiLCJlZSIsInN0b3JhZ2VPcHRpb25zIiwicGFpcmluZyIsInZlcmlmeSIsImluaXRpYWxpemUiLCJBciIsIkNPUkVfQ09OVEVYVCIsIkNPUkVfREVGQVVMVCIsIkNPUkVfUFJPVE9DT0wiLCJDT1JFX1NUT1JBR0VfT1BUSU9OUyIsIkNPUkVfU1RPUkFHRV9QUkVGSVgiLCJDT1JFX1ZFUlNJT04iLCJDUllQVE9fQ0xJRU5UX1NFRUQiLCJDUllQVE9fQ09OVEVYVCIsIkNSWVBUT19KV1RfVFRMIiwiQ29yZSIsIkNyeXB0byIsIkVYUElSRVJfQ09OVEVYVCIsIkVYUElSRVJfREVGQVVMVF9UVEwiLCJFWFBJUkVSX0VWRU5UUyIsIkVYUElSRVJfU1RPUkFHRV9WRVJTSU9OIiwiRXhwaXJlciIsIkhJU1RPUllfQ09OVEVYVCIsIkhJU1RPUllfRVZFTlRTIiwiSElTVE9SWV9TVE9SQUdFX1ZFUlNJT04iLCJKc29uUnBjSGlzdG9yeSIsIktFWUNIQUlOX0NPTlRFWFQiLCJLRVlDSEFJTl9TVE9SQUdFX1ZFUlNJT04iLCJLZXlDaGFpbiIsIk1FU1NBR0VTX0NPTlRFWFQiLCJNRVNTQUdFU19TVE9SQUdFX1ZFUlNJT04iLCJNZXNzYWdlVHJhY2tlciIsIlBBSVJJTkdfQ09OVEVYVCIsIlBBSVJJTkdfREVGQVVMVF9UVEwiLCJQQUlSSU5HX0VWRU5UUyIsIlBBSVJJTkdfUlBDX09QVFMiLCJQQUlSSU5HX1NUT1JBR0VfVkVSU0lPTiIsIlBFTkRJTkdfU1VCX1JFU09MVVRJT05fVElNRU9VVCIsIlBVQkxJU0hFUl9DT05URVhUIiwiUFVCTElTSEVSX0RFRkFVTFRfVFRMIiwiUGFpcmluZyIsIlJFTEFZRVJfQ09OVEVYVCIsIlJFTEFZRVJfREVGQVVMVF9MT0dHRVIiLCJSRUxBWUVSX0RFRkFVTFRfUFJPVE9DT0wiLCJSRUxBWUVSX0RFRkFVTFRfUkVMQVlfVVJMIiwiUkVMQVlFUl9FVkVOVFMiLCJSRUxBWUVSX0ZBSUxPVkVSX1JFTEFZX1VSTCIsIlJFTEFZRVJfUFJPVklERVJfRVZFTlRTIiwiUkVMQVlFUl9SRUNPTk5FQ1RfVElNRU9VVCIsIlJFTEFZRVJfU0RLX1ZFUlNJT04iLCJSRUxBWUVSX1NUT1JBR0VfT1BUSU9OUyIsIlJFTEFZRVJfU1VCU0NSSUJFUl9TVUZGSVgiLCJSRUxBWUVSX1RSQU5TUE9SVF9DVVRPRkYiLCJSZWxheWVyIiwiU1RPUkVfU1RPUkFHRV9WRVJTSU9OIiwiU1VCU0NSSUJFUl9DT05URVhUIiwiU1VCU0NSSUJFUl9ERUZBVUxUX1RUTCIsIlNVQlNDUklCRVJfRVZFTlRTIiwiU1VCU0NSSUJFUl9TVE9SQUdFX1ZFUlNJT04iLCJTdG9yZSIsIlN1YnNjcmliZXIiLCJWRVJJRllfQ09OVEVYVCIsIlZFUklGWV9GQUxMQkFDS19TRVJWRVIiLCJWRVJJRllfU0VSVkVSIiwiVmVyaWZ5IiwiV0FMTEVUQ09OTkVDVF9DTElFTlRfSUQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/default.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/default.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.MAC_LENGTH = exports.IV_LENGTH = exports.KEY_LENGTH = exports.PREFIX_LENGTH = exports.RIPEMD160_NODE_ALGO = exports.SHA512_NODE_ALGO = exports.SHA256_NODE_ALGO = exports.HMAC_NODE_ALGO = exports.AES_NODE_ALGO = exports.SHA512_BROWSER_ALGO = exports.SHA256_BROWSER_ALGO = exports.HMAC_BROWSER = exports.HMAC_BROWSER_ALGO = exports.AES_BROWSER_ALGO = exports.HMAC_LENGTH = exports.AES_LENGTH = void 0;\nconst length_1 = __webpack_require__(/*! ./length */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/length.js\");\nexports.AES_LENGTH = length_1.LENGTH_256;\nexports.HMAC_LENGTH = length_1.LENGTH_256;\nexports.AES_BROWSER_ALGO = \"AES-CBC\";\nexports.HMAC_BROWSER_ALGO = `SHA-${exports.AES_LENGTH}`;\nexports.HMAC_BROWSER = \"HMAC\";\nexports.SHA256_BROWSER_ALGO = \"SHA-256\";\nexports.SHA512_BROWSER_ALGO = \"SHA-512\";\nexports.AES_NODE_ALGO = `aes-${exports.AES_LENGTH}-cbc`;\nexports.HMAC_NODE_ALGO = `sha${exports.HMAC_LENGTH}`;\nexports.SHA256_NODE_ALGO = \"sha256\";\nexports.SHA512_NODE_ALGO = \"sha512\";\nexports.RIPEMD160_NODE_ALGO = \"ripemd160\";\nexports.PREFIX_LENGTH = length_1.LENGTH_1;\nexports.KEY_LENGTH = length_1.LENGTH_32;\nexports.IV_LENGTH = length_1.LENGTH_16;\nexports.MAC_LENGTH = length_1.LENGTH_32; //# sourceMappingURL=default.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvZGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUdBLGlCQUFpQixHQUFHQSxrQkFBa0IsR0FBR0EscUJBQXFCLEdBQUdBLDJCQUEyQixHQUFHQSx3QkFBd0IsR0FBR0Esd0JBQXdCLEdBQUdBLHNCQUFzQixHQUFHQSxxQkFBcUIsR0FBR0EsMkJBQTJCLEdBQUdBLDJCQUEyQixHQUFHQSxvQkFBb0IsR0FBR0EseUJBQXlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUcsS0FBSztBQUNyWixNQUFNa0IsV0FBV0MsbUJBQU9BLENBQUMsMEZBQVU7QUFDbkNuQixrQkFBa0IsR0FBR2tCLFNBQVNFLFVBQVU7QUFDeENwQixtQkFBbUIsR0FBR2tCLFNBQVNFLFVBQVU7QUFDekNwQix3QkFBd0IsR0FBRztBQUMzQkEseUJBQXlCLEdBQUcsQ0FBQyxJQUFJLEVBQUVBLFFBQVFpQixVQUFVLENBQUMsQ0FBQztBQUN2RGpCLG9CQUFvQixHQUFHO0FBQ3ZCQSwyQkFBMkIsR0FBRztBQUM5QkEsMkJBQTJCLEdBQUc7QUFDOUJBLHFCQUFxQixHQUFHLENBQUMsSUFBSSxFQUFFQSxRQUFRaUIsVUFBVSxDQUFDLElBQUksQ0FBQztBQUN2RGpCLHNCQUFzQixHQUFHLENBQUMsR0FBRyxFQUFFQSxRQUFRZ0IsV0FBVyxDQUFDLENBQUM7QUFDcERoQix3QkFBd0IsR0FBRztBQUMzQkEsd0JBQXdCLEdBQUc7QUFDM0JBLDJCQUEyQixHQUFHO0FBQzlCQSxxQkFBcUIsR0FBR2tCLFNBQVNHLFFBQVE7QUFDekNyQixrQkFBa0IsR0FBR2tCLFNBQVNJLFNBQVM7QUFDdkN0QixpQkFBaUIsR0FBR2tCLFNBQVNLLFNBQVM7QUFDdEN2QixrQkFBa0IsR0FBR2tCLFNBQVNJLFNBQVMsRUFDdkMsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2NvbnN0YW50cy9kZWZhdWx0LmpzPzkyYmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1BQ19MRU5HVEggPSBleHBvcnRzLklWX0xFTkdUSCA9IGV4cG9ydHMuS0VZX0xFTkdUSCA9IGV4cG9ydHMuUFJFRklYX0xFTkdUSCA9IGV4cG9ydHMuUklQRU1EMTYwX05PREVfQUxHTyA9IGV4cG9ydHMuU0hBNTEyX05PREVfQUxHTyA9IGV4cG9ydHMuU0hBMjU2X05PREVfQUxHTyA9IGV4cG9ydHMuSE1BQ19OT0RFX0FMR08gPSBleHBvcnRzLkFFU19OT0RFX0FMR08gPSBleHBvcnRzLlNIQTUxMl9CUk9XU0VSX0FMR08gPSBleHBvcnRzLlNIQTI1Nl9CUk9XU0VSX0FMR08gPSBleHBvcnRzLkhNQUNfQlJPV1NFUiA9IGV4cG9ydHMuSE1BQ19CUk9XU0VSX0FMR08gPSBleHBvcnRzLkFFU19CUk9XU0VSX0FMR08gPSBleHBvcnRzLkhNQUNfTEVOR1RIID0gZXhwb3J0cy5BRVNfTEVOR1RIID0gdm9pZCAwO1xuY29uc3QgbGVuZ3RoXzEgPSByZXF1aXJlKFwiLi9sZW5ndGhcIik7XG5leHBvcnRzLkFFU19MRU5HVEggPSBsZW5ndGhfMS5MRU5HVEhfMjU2O1xuZXhwb3J0cy5ITUFDX0xFTkdUSCA9IGxlbmd0aF8xLkxFTkdUSF8yNTY7XG5leHBvcnRzLkFFU19CUk9XU0VSX0FMR08gPSBcIkFFUy1DQkNcIjtcbmV4cG9ydHMuSE1BQ19CUk9XU0VSX0FMR08gPSBgU0hBLSR7ZXhwb3J0cy5BRVNfTEVOR1RIfWA7XG5leHBvcnRzLkhNQUNfQlJPV1NFUiA9IFwiSE1BQ1wiO1xuZXhwb3J0cy5TSEEyNTZfQlJPV1NFUl9BTEdPID0gXCJTSEEtMjU2XCI7XG5leHBvcnRzLlNIQTUxMl9CUk9XU0VSX0FMR08gPSBcIlNIQS01MTJcIjtcbmV4cG9ydHMuQUVTX05PREVfQUxHTyA9IGBhZXMtJHtleHBvcnRzLkFFU19MRU5HVEh9LWNiY2A7XG5leHBvcnRzLkhNQUNfTk9ERV9BTEdPID0gYHNoYSR7ZXhwb3J0cy5ITUFDX0xFTkdUSH1gO1xuZXhwb3J0cy5TSEEyNTZfTk9ERV9BTEdPID0gXCJzaGEyNTZcIjtcbmV4cG9ydHMuU0hBNTEyX05PREVfQUxHTyA9IFwic2hhNTEyXCI7XG5leHBvcnRzLlJJUEVNRDE2MF9OT0RFX0FMR08gPSBcInJpcGVtZDE2MFwiO1xuZXhwb3J0cy5QUkVGSVhfTEVOR1RIID0gbGVuZ3RoXzEuTEVOR1RIXzE7XG5leHBvcnRzLktFWV9MRU5HVEggPSBsZW5ndGhfMS5MRU5HVEhfMzI7XG5leHBvcnRzLklWX0xFTkdUSCA9IGxlbmd0aF8xLkxFTkdUSF8xNjtcbmV4cG9ydHMuTUFDX0xFTkdUSCA9IGxlbmd0aF8xLkxFTkdUSF8zMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTUFDX0xFTkdUSCIsIklWX0xFTkdUSCIsIktFWV9MRU5HVEgiLCJQUkVGSVhfTEVOR1RIIiwiUklQRU1EMTYwX05PREVfQUxHTyIsIlNIQTUxMl9OT0RFX0FMR08iLCJTSEEyNTZfTk9ERV9BTEdPIiwiSE1BQ19OT0RFX0FMR08iLCJBRVNfTk9ERV9BTEdPIiwiU0hBNTEyX0JST1dTRVJfQUxHTyIsIlNIQTI1Nl9CUk9XU0VSX0FMR08iLCJITUFDX0JST1dTRVIiLCJITUFDX0JST1dTRVJfQUxHTyIsIkFFU19CUk9XU0VSX0FMR08iLCJITUFDX0xFTkdUSCIsIkFFU19MRU5HVEgiLCJsZW5ndGhfMSIsInJlcXVpcmUiLCJMRU5HVEhfMjU2IiwiTEVOR1RIXzEiLCJMRU5HVEhfMzIiLCJMRU5HVEhfMTYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/default.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/encoding.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/encoding.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UTF8_ENC = exports.HEX_ENC = void 0;\nexports.HEX_ENC = \"hex\";\nexports.UTF8_ENC = \"utf8\"; //# sourceMappingURL=encoding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvZW5jb2RpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdCQUFnQixHQUFHQSxlQUFlLEdBQUcsS0FBSztBQUMxQ0EsZUFBZSxHQUFHO0FBQ2xCQSxnQkFBZ0IsR0FBRyxRQUNuQixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jcnlwdG8vZGlzdC9janMvY29uc3RhbnRzL2VuY29kaW5nLmpzP2YyNzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVURjhfRU5DID0gZXhwb3J0cy5IRVhfRU5DID0gdm9pZCAwO1xuZXhwb3J0cy5IRVhfRU5DID0gXCJoZXhcIjtcbmV4cG9ydHMuVVRGOF9FTkMgPSBcInV0ZjhcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVURjhfRU5DIiwiSEVYX0VOQyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/encoding.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/error.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/error.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ERROR_BAD_MAC = void 0;\nexports.ERROR_BAD_MAC = \"Bad MAC\"; //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFCQUFxQixHQUFHLEtBQUs7QUFDN0JBLHFCQUFxQixHQUFHLFdBQ3hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvZXJyb3IuanM/MGNhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRVJST1JfQkFEX01BQyA9IHZvaWQgMDtcbmV4cG9ydHMuRVJST1JfQkFEX01BQyA9IFwiQmFkIE1BQ1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRVJST1JfQkFEX01BQyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/error.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/index.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./default */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/default.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./encoding */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/encoding.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./error */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/error.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./length */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/length.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./operations */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/operations.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsMEZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsNEZBQVcsR0FBR0g7QUFDM0NFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsOEZBQVksR0FBR0g7QUFDNUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsd0ZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsMEZBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0dBQWMsR0FBR0gsVUFDOUMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2NvbnN0YW50cy9pbmRleC5qcz8zYjIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlZmF1bHRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW5jb2RpbmdcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbGVuZ3RoXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL29wZXJhdGlvbnNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/length.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/length.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.LENGTH_1024 = exports.LENGTH_512 = exports.LENGTH_256 = exports.LENGTH_128 = exports.LENGTH_64 = exports.LENGTH_32 = exports.LENGTH_16 = exports.LENGTH_1 = exports.LENGTH_0 = void 0;\nexports.LENGTH_0 = 0;\nexports.LENGTH_1 = 1;\nexports.LENGTH_16 = 16;\nexports.LENGTH_32 = 32;\nexports.LENGTH_64 = 64;\nexports.LENGTH_128 = 128;\nexports.LENGTH_256 = 256;\nexports.LENGTH_512 = 512;\nexports.LENGTH_1024 = 1024; //# sourceMappingURL=length.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvbGVuZ3RoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUdBLGtCQUFrQixHQUFHQSxrQkFBa0IsR0FBR0EsaUJBQWlCLEdBQUdBLGlCQUFpQixHQUFHQSxpQkFBaUIsR0FBR0EsZ0JBQWdCLEdBQUdBLGdCQUFnQixHQUFHLEtBQUs7QUFDNUxBLGdCQUFnQixHQUFHO0FBQ25CQSxnQkFBZ0IsR0FBRztBQUNuQkEsaUJBQWlCLEdBQUc7QUFDcEJBLGlCQUFpQixHQUFHO0FBQ3BCQSxpQkFBaUIsR0FBRztBQUNwQkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBa0IsR0FBRztBQUNyQkEsbUJBQW1CLEdBQUcsTUFDdEIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2NvbnN0YW50cy9sZW5ndGguanM/Mzc1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTEVOR1RIXzEwMjQgPSBleHBvcnRzLkxFTkdUSF81MTIgPSBleHBvcnRzLkxFTkdUSF8yNTYgPSBleHBvcnRzLkxFTkdUSF8xMjggPSBleHBvcnRzLkxFTkdUSF82NCA9IGV4cG9ydHMuTEVOR1RIXzMyID0gZXhwb3J0cy5MRU5HVEhfMTYgPSBleHBvcnRzLkxFTkdUSF8xID0gZXhwb3J0cy5MRU5HVEhfMCA9IHZvaWQgMDtcbmV4cG9ydHMuTEVOR1RIXzAgPSAwO1xuZXhwb3J0cy5MRU5HVEhfMSA9IDE7XG5leHBvcnRzLkxFTkdUSF8xNiA9IDE2O1xuZXhwb3J0cy5MRU5HVEhfMzIgPSAzMjtcbmV4cG9ydHMuTEVOR1RIXzY0ID0gNjQ7XG5leHBvcnRzLkxFTkdUSF8xMjggPSAxMjg7XG5leHBvcnRzLkxFTkdUSF8yNTYgPSAyNTY7XG5leHBvcnRzLkxFTkdUSF81MTIgPSA1MTI7XG5leHBvcnRzLkxFTkdUSF8xMDI0ID0gMTAyNDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxlbmd0aC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJMRU5HVEhfMTAyNCIsIkxFTkdUSF81MTIiLCJMRU5HVEhfMjU2IiwiTEVOR1RIXzEyOCIsIkxFTkdUSF82NCIsIkxFTkdUSF8zMiIsIkxFTkdUSF8xNiIsIkxFTkdUSF8xIiwiTEVOR1RIXzAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/length.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/operations.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/constants/operations.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VERIFY_OP = exports.SIGN_OP = exports.DECRYPT_OP = exports.ENCRYPT_OP = void 0;\nexports.ENCRYPT_OP = \"encrypt\";\nexports.DECRYPT_OP = \"decrypt\";\nexports.SIGN_OP = \"sign\";\nexports.VERIFY_OP = \"verify\"; //# sourceMappingURL=operations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9jb25zdGFudHMvb3BlcmF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLGVBQWUsR0FBR0Esa0JBQWtCLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDckZBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBa0IsR0FBRztBQUNyQkEsZUFBZSxHQUFHO0FBQ2xCQSxpQkFBaUIsR0FBRyxVQUNwQixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jcnlwdG8vZGlzdC9janMvY29uc3RhbnRzL29wZXJhdGlvbnMuanM/ZDdmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVkVSSUZZX09QID0gZXhwb3J0cy5TSUdOX09QID0gZXhwb3J0cy5ERUNSWVBUX09QID0gZXhwb3J0cy5FTkNSWVBUX09QID0gdm9pZCAwO1xuZXhwb3J0cy5FTkNSWVBUX09QID0gXCJlbmNyeXB0XCI7XG5leHBvcnRzLkRFQ1JZUFRfT1AgPSBcImRlY3J5cHRcIjtcbmV4cG9ydHMuU0lHTl9PUCA9IFwic2lnblwiO1xuZXhwb3J0cy5WRVJJRllfT1AgPSBcInZlcmlmeVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlcmF0aW9ucy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWRVJJRllfT1AiLCJTSUdOX09QIiwiREVDUllQVF9PUCIsIkVOQ1JZUFRfT1AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/operations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/env.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/helpers/env.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! @walletconnect/environment */ \"(ssr)/../node_modules/@walletconnect/environment/dist/cjs/index.js\"), exports); //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQywwRkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzR0FBNEIsR0FBR0gsVUFDNUQsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2hlbHBlcnMvZW52LmpzPzZlMGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/env.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/helpers/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/env.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./pkcs7 */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/pkcs7.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./validators */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/validators.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDBGQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLGtGQUFPLEdBQUdIO0FBQ3ZDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHNGQUFTLEdBQUdIO0FBQ3pDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHNGQUFTLEdBQUdIO0FBQ3pDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLGdHQUFjLEdBQUdILFVBQzlDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL2luZGV4LmpzPzcxODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW52XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BrY3M3XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3ZhbGlkYXRvcnNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/pkcs7.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/helpers/pkcs7.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pkcs7 = void 0;\nconst PADDING = [\n    [\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16,\n        16\n    ],\n    [\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15,\n        15\n    ],\n    [\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14,\n        14\n    ],\n    [\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13,\n        13\n    ],\n    [\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12,\n        12\n    ],\n    [\n        11,\n        11,\n        11,\n        11,\n        11,\n        11,\n        11,\n        11,\n        11,\n        11,\n        11\n    ],\n    [\n        10,\n        10,\n        10,\n        10,\n        10,\n        10,\n        10,\n        10,\n        10,\n        10\n    ],\n    [\n        9,\n        9,\n        9,\n        9,\n        9,\n        9,\n        9,\n        9,\n        9\n    ],\n    [\n        8,\n        8,\n        8,\n        8,\n        8,\n        8,\n        8,\n        8\n    ],\n    [\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7\n    ],\n    [\n        6,\n        6,\n        6,\n        6,\n        6,\n        6\n    ],\n    [\n        5,\n        5,\n        5,\n        5,\n        5\n    ],\n    [\n        4,\n        4,\n        4,\n        4\n    ],\n    [\n        3,\n        3,\n        3\n    ],\n    [\n        2,\n        2\n    ],\n    [\n        1\n    ]\n];\nexports.pkcs7 = {\n    pad (plaintext) {\n        const padding = PADDING[plaintext.byteLength % 16 || 0];\n        const result = new Uint8Array(plaintext.byteLength + padding.length);\n        result.set(plaintext);\n        result.set(padding, plaintext.byteLength);\n        return result;\n    },\n    unpad (padded) {\n        return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n}; //# sourceMappingURL=pkcs7.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL3BrY3M3LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxhQUFhLEdBQUcsS0FBSztBQUNyQixNQUFNRyxVQUFVO0lBQ1o7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ2hFO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO0tBQUc7SUFDNUQ7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO0tBQUc7SUFDeEQ7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ3BEO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO0tBQUc7SUFDaEQ7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO0tBQUc7SUFDNUM7UUFBQztRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ3hDO1FBQUM7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDM0I7UUFBQztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDeEI7UUFBQztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztLQUFFO0lBQ3JCO1FBQUM7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDbEI7UUFBQztRQUFHO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDZjtRQUFDO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDWjtRQUFDO1FBQUc7UUFBRztLQUFFO0lBQ1Q7UUFBQztRQUFHO0tBQUU7SUFDTjtRQUFDO0tBQUU7Q0FDTjtBQUNESCxhQUFhLEdBQUc7SUFDWkksS0FBSUMsU0FBUztRQUNULE1BQU1DLFVBQVVILE9BQU8sQ0FBQ0UsVUFBVUUsVUFBVSxHQUFHLE1BQU0sRUFBRTtRQUN2RCxNQUFNQyxTQUFTLElBQUlDLFdBQVdKLFVBQVVFLFVBQVUsR0FBR0QsUUFBUUksTUFBTTtRQUNuRUYsT0FBT0csR0FBRyxDQUFDTjtRQUNYRyxPQUFPRyxHQUFHLENBQUNMLFNBQVNELFVBQVVFLFVBQVU7UUFDeEMsT0FBT0M7SUFDWDtJQUNBSSxPQUFNQyxNQUFNO1FBQ1IsT0FBT0EsT0FBT0MsUUFBUSxDQUFDLEdBQUdELE9BQU9OLFVBQVUsR0FBR00sTUFBTSxDQUFDQSxPQUFPTixVQUFVLEdBQUcsRUFBRTtJQUMvRTtBQUNKLEdBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2hlbHBlcnMvcGtjczcuanM/N2Y1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGtjczcgPSB2b2lkIDA7XG5jb25zdCBQQURESU5HID0gW1xuICAgIFsxNiwgMTYsIDE2LCAxNiwgMTYsIDE2LCAxNiwgMTYsIDE2LCAxNiwgMTYsIDE2LCAxNiwgMTYsIDE2LCAxNl0sXG4gICAgWzE1LCAxNSwgMTUsIDE1LCAxNSwgMTUsIDE1LCAxNSwgMTUsIDE1LCAxNSwgMTUsIDE1LCAxNSwgMTVdLFxuICAgIFsxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTQsIDE0LCAxNCwgMTRdLFxuICAgIFsxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxMywgMTMsIDEzLCAxM10sXG4gICAgWzEyLCAxMiwgMTIsIDEyLCAxMiwgMTIsIDEyLCAxMiwgMTIsIDEyLCAxMiwgMTJdLFxuICAgIFsxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCAxMSwgMTFdLFxuICAgIFsxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMCwgMTAsIDEwLCAxMF0sXG4gICAgWzksIDksIDksIDksIDksIDksIDksIDksIDldLFxuICAgIFs4LCA4LCA4LCA4LCA4LCA4LCA4LCA4XSxcbiAgICBbNywgNywgNywgNywgNywgNywgN10sXG4gICAgWzYsIDYsIDYsIDYsIDYsIDZdLFxuICAgIFs1LCA1LCA1LCA1LCA1XSxcbiAgICBbNCwgNCwgNCwgNF0sXG4gICAgWzMsIDMsIDNdLFxuICAgIFsyLCAyXSxcbiAgICBbMV0sXG5dO1xuZXhwb3J0cy5wa2NzNyA9IHtcbiAgICBwYWQocGxhaW50ZXh0KSB7XG4gICAgICAgIGNvbnN0IHBhZGRpbmcgPSBQQURESU5HW3BsYWludGV4dC5ieXRlTGVuZ3RoICUgMTYgfHwgMF07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KHBsYWludGV4dC5ieXRlTGVuZ3RoICsgcGFkZGluZy5sZW5ndGgpO1xuICAgICAgICByZXN1bHQuc2V0KHBsYWludGV4dCk7XG4gICAgICAgIHJlc3VsdC5zZXQocGFkZGluZywgcGxhaW50ZXh0LmJ5dGVMZW5ndGgpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgdW5wYWQocGFkZGVkKSB7XG4gICAgICAgIHJldHVybiBwYWRkZWQuc3ViYXJyYXkoMCwgcGFkZGVkLmJ5dGVMZW5ndGggLSBwYWRkZWRbcGFkZGVkLmJ5dGVMZW5ndGggLSAxXSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wa2NzNy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJwa2NzNyIsIlBBRERJTkciLCJwYWQiLCJwbGFpbnRleHQiLCJwYWRkaW5nIiwiYnl0ZUxlbmd0aCIsInJlc3VsdCIsIlVpbnQ4QXJyYXkiLCJsZW5ndGgiLCJzZXQiLCJ1bnBhZCIsInBhZGRlZCIsInN1YmFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/pkcs7.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/types.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/helpers/types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL3R5cGVzLmpzPzUxOTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/validators.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/helpers/validators.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isConstantTime = exports.assert = void 0;\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"Assertion failed\");\n    }\n}\nexports.assert = assert;\nfunction isConstantTime(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    let res = 0;\n    for(let i = 0; i < arr1.length; i++){\n        res |= arr1[i] ^ arr2[i];\n    }\n    return res === 0;\n}\nexports.isConstantTime = isConstantTime; //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9oZWxwZXJzL3ZhbGlkYXRvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSxjQUFjLEdBQUcsS0FBSztBQUMvQyxTQUFTRyxPQUFPQyxTQUFTLEVBQUVDLE9BQU87SUFDOUIsSUFBSSxDQUFDRCxXQUFXO1FBQ1osTUFBTSxJQUFJRSxNQUFNRCxXQUFXO0lBQy9CO0FBQ0o7QUFDQUwsY0FBYyxHQUFHRztBQUNqQixTQUFTRCxlQUFlSyxJQUFJLEVBQUVDLElBQUk7SUFDOUIsSUFBSUQsS0FBS0UsTUFBTSxLQUFLRCxLQUFLQyxNQUFNLEVBQUU7UUFDN0IsT0FBTztJQUNYO0lBQ0EsSUFBSUMsTUFBTTtJQUNWLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSixLQUFLRSxNQUFNLEVBQUVFLElBQUs7UUFDbENELE9BQU9ILElBQUksQ0FBQ0ksRUFBRSxHQUFHSCxJQUFJLENBQUNHLEVBQUU7SUFDNUI7SUFDQSxPQUFPRCxRQUFRO0FBQ25CO0FBQ0FWLHNCQUFzQixHQUFHRSxnQkFDekIsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL2hlbHBlcnMvdmFsaWRhdG9ycy5qcz82M2EzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NvbnN0YW50VGltZSA9IGV4cG9ydHMuYXNzZXJ0ID0gdm9pZCAwO1xuZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlIHx8IFwiQXNzZXJ0aW9uIGZhaWxlZFwiKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydCA9IGFzc2VydDtcbmZ1bmN0aW9uIGlzQ29uc3RhbnRUaW1lKGFycjEsIGFycjIpIHtcbiAgICBpZiAoYXJyMS5sZW5ndGggIT09IGFycjIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHJlcyA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIxLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlcyB8PSBhcnIxW2ldIF4gYXJyMltpXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcyA9PT0gMDtcbn1cbmV4cG9ydHMuaXNDb25zdGFudFRpbWUgPSBpc0NvbnN0YW50VGltZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNDb25zdGFudFRpbWUiLCJhc3NlcnQiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiRXJyb3IiLCJhcnIxIiwiYXJyMiIsImxlbmd0aCIsInJlcyIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/validators.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.nodeRipemd160 = exports.nodeSha512 = exports.nodeSha256 = exports.nodeHmacSha512Sign = exports.nodeHmacSha256Sign = exports.nodeAesDecrypt = exports.nodeAesEncrypt = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\nconst crypto_1 = tslib_1.__importDefault(__webpack_require__(/*! crypto */ \"crypto\"));\nconst encoding_1 = __webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/index.js\");\nfunction nodeAesEncrypt(iv, key, data) {\n    const cipher = crypto_1.default.createCipheriv(constants_1.AES_NODE_ALGO, Buffer.from(key), Buffer.from(iv));\n    return encoding_1.bufferToArray(encoding_1.concatBuffers(cipher.update(Buffer.from(data)), cipher.final()));\n}\nexports.nodeAesEncrypt = nodeAesEncrypt;\nfunction nodeAesDecrypt(iv, key, data) {\n    const decipher = crypto_1.default.createDecipheriv(constants_1.AES_NODE_ALGO, Buffer.from(key), Buffer.from(iv));\n    return encoding_1.bufferToArray(encoding_1.concatBuffers(decipher.update(Buffer.from(data)), decipher.final()));\n}\nexports.nodeAesDecrypt = nodeAesDecrypt;\nfunction nodeHmacSha256Sign(key, data) {\n    const buf = crypto_1.default.createHmac(constants_1.HMAC_NODE_ALGO, Buffer.from(key)).update(Buffer.from(data)).digest();\n    return encoding_1.bufferToArray(buf);\n}\nexports.nodeHmacSha256Sign = nodeHmacSha256Sign;\nfunction nodeHmacSha512Sign(key, data) {\n    const buf = crypto_1.default.createHmac(constants_1.SHA512_NODE_ALGO, Buffer.from(key)).update(Buffer.from(data)).digest();\n    return encoding_1.bufferToArray(buf);\n}\nexports.nodeHmacSha512Sign = nodeHmacSha512Sign;\nfunction nodeSha256(data) {\n    const buf = crypto_1.default.createHash(constants_1.SHA256_NODE_ALGO).update(Buffer.from(data)).digest();\n    return encoding_1.bufferToArray(buf);\n}\nexports.nodeSha256 = nodeSha256;\nfunction nodeSha512(data) {\n    const buf = crypto_1.default.createHash(constants_1.SHA512_NODE_ALGO).update(Buffer.from(data)).digest();\n    return encoding_1.bufferToArray(buf);\n}\nexports.nodeSha512 = nodeSha512;\nfunction nodeRipemd160(data) {\n    const buf = crypto_1.default.createHash(constants_1.RIPEMD160_NODE_ALGO).update(Buffer.from(data)).digest();\n    return encoding_1.bufferToArray(buf);\n}\nexports.nodeRipemd160 = nodeRipemd160; //# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9saWIvbm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUdBLGtCQUFrQixHQUFHQSxrQkFBa0IsR0FBR0EsMEJBQTBCLEdBQUdBLDBCQUEwQixHQUFHQSxzQkFBc0IsR0FBR0Esc0JBQXNCLEdBQUcsS0FBSztBQUNuTCxNQUFNUyxVQUFVQyxtQkFBT0EsQ0FBQywwRkFBTztBQUMvQixNQUFNQyxXQUFXRixRQUFRRyxlQUFlLENBQUNGLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ3pELE1BQU1HLGFBQWFILG1CQUFPQSxDQUFDLGdHQUF5QjtBQUNwRCxNQUFNSSxjQUFjSixtQkFBT0EsQ0FBQyw2RkFBYztBQUMxQyxTQUFTRixlQUFlTyxFQUFFLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUNqQyxNQUFNQyxTQUFTUCxTQUFTUSxPQUFPLENBQUNDLGNBQWMsQ0FBQ04sWUFBWU8sYUFBYSxFQUFFQyxPQUFPQyxJQUFJLENBQUNQLE1BQU1NLE9BQU9DLElBQUksQ0FBQ1I7SUFDeEcsT0FBT0YsV0FBV1csYUFBYSxDQUFDWCxXQUFXWSxhQUFhLENBQUNQLE9BQU9RLE1BQU0sQ0FBQ0osT0FBT0MsSUFBSSxDQUFDTixRQUFRQyxPQUFPUyxLQUFLO0FBQzNHO0FBQ0EzQixzQkFBc0IsR0FBR1E7QUFDekIsU0FBU0QsZUFBZVEsRUFBRSxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDakMsTUFBTVcsV0FBV2pCLFNBQVNRLE9BQU8sQ0FBQ1UsZ0JBQWdCLENBQUNmLFlBQVlPLGFBQWEsRUFBRUMsT0FBT0MsSUFBSSxDQUFDUCxNQUFNTSxPQUFPQyxJQUFJLENBQUNSO0lBQzVHLE9BQU9GLFdBQVdXLGFBQWEsQ0FBQ1gsV0FBV1ksYUFBYSxDQUFDRyxTQUFTRixNQUFNLENBQUNKLE9BQU9DLElBQUksQ0FBQ04sUUFBUVcsU0FBU0QsS0FBSztBQUMvRztBQUNBM0Isc0JBQXNCLEdBQUdPO0FBQ3pCLFNBQVNELG1CQUFtQlUsR0FBRyxFQUFFQyxJQUFJO0lBQ2pDLE1BQU1hLE1BQU1uQixTQUFTUSxPQUFPLENBQ3ZCWSxVQUFVLENBQUNqQixZQUFZa0IsY0FBYyxFQUFFVixPQUFPQyxJQUFJLENBQUNQLE1BQ25EVSxNQUFNLENBQUNKLE9BQU9DLElBQUksQ0FBQ04sT0FDbkJnQixNQUFNO0lBQ1gsT0FBT3BCLFdBQVdXLGFBQWEsQ0FBQ007QUFDcEM7QUFDQTlCLDBCQUEwQixHQUFHTTtBQUM3QixTQUFTRCxtQkFBbUJXLEdBQUcsRUFBRUMsSUFBSTtJQUNqQyxNQUFNYSxNQUFNbkIsU0FBU1EsT0FBTyxDQUN2QlksVUFBVSxDQUFDakIsWUFBWW9CLGdCQUFnQixFQUFFWixPQUFPQyxJQUFJLENBQUNQLE1BQ3JEVSxNQUFNLENBQUNKLE9BQU9DLElBQUksQ0FBQ04sT0FDbkJnQixNQUFNO0lBQ1gsT0FBT3BCLFdBQVdXLGFBQWEsQ0FBQ007QUFDcEM7QUFDQTlCLDBCQUEwQixHQUFHSztBQUM3QixTQUFTRCxXQUFXYSxJQUFJO0lBQ3BCLE1BQU1hLE1BQU1uQixTQUFTUSxPQUFPLENBQ3ZCZ0IsVUFBVSxDQUFDckIsWUFBWXNCLGdCQUFnQixFQUN2Q1YsTUFBTSxDQUFDSixPQUFPQyxJQUFJLENBQUNOLE9BQ25CZ0IsTUFBTTtJQUNYLE9BQU9wQixXQUFXVyxhQUFhLENBQUNNO0FBQ3BDO0FBQ0E5QixrQkFBa0IsR0FBR0k7QUFDckIsU0FBU0QsV0FBV2MsSUFBSTtJQUNwQixNQUFNYSxNQUFNbkIsU0FBU1EsT0FBTyxDQUN2QmdCLFVBQVUsQ0FBQ3JCLFlBQVlvQixnQkFBZ0IsRUFDdkNSLE1BQU0sQ0FBQ0osT0FBT0MsSUFBSSxDQUFDTixPQUNuQmdCLE1BQU07SUFDWCxPQUFPcEIsV0FBV1csYUFBYSxDQUFDTTtBQUNwQztBQUNBOUIsa0JBQWtCLEdBQUdHO0FBQ3JCLFNBQVNELGNBQWNlLElBQUk7SUFDdkIsTUFBTWEsTUFBTW5CLFNBQVNRLE9BQU8sQ0FDdkJnQixVQUFVLENBQUNyQixZQUFZdUIsbUJBQW1CLEVBQzFDWCxNQUFNLENBQUNKLE9BQU9DLElBQUksQ0FBQ04sT0FDbkJnQixNQUFNO0lBQ1gsT0FBT3BCLFdBQVdXLGFBQWEsQ0FBQ007QUFDcEM7QUFDQTlCLHFCQUFxQixHQUFHRSxlQUN4QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jcnlwdG8vZGlzdC9janMvbGliL25vZGUuanM/NTU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubm9kZVJpcGVtZDE2MCA9IGV4cG9ydHMubm9kZVNoYTUxMiA9IGV4cG9ydHMubm9kZVNoYTI1NiA9IGV4cG9ydHMubm9kZUhtYWNTaGE1MTJTaWduID0gZXhwb3J0cy5ub2RlSG1hY1NoYTI1NlNpZ24gPSBleHBvcnRzLm5vZGVBZXNEZWNyeXB0ID0gZXhwb3J0cy5ub2RlQWVzRW5jcnlwdCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjcnlwdG9fMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJjcnlwdG9cIikpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9lbmNvZGluZ1wiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIG5vZGVBZXNFbmNyeXB0KGl2LCBrZXksIGRhdGEpIHtcbiAgICBjb25zdCBjaXBoZXIgPSBjcnlwdG9fMS5kZWZhdWx0LmNyZWF0ZUNpcGhlcml2KGNvbnN0YW50c18xLkFFU19OT0RFX0FMR08sIEJ1ZmZlci5mcm9tKGtleSksIEJ1ZmZlci5mcm9tKGl2KSk7XG4gICAgcmV0dXJuIGVuY29kaW5nXzEuYnVmZmVyVG9BcnJheShlbmNvZGluZ18xLmNvbmNhdEJ1ZmZlcnMoY2lwaGVyLnVwZGF0ZShCdWZmZXIuZnJvbShkYXRhKSksIGNpcGhlci5maW5hbCgpKSk7XG59XG5leHBvcnRzLm5vZGVBZXNFbmNyeXB0ID0gbm9kZUFlc0VuY3J5cHQ7XG5mdW5jdGlvbiBub2RlQWVzRGVjcnlwdChpdiwga2V5LCBkYXRhKSB7XG4gICAgY29uc3QgZGVjaXBoZXIgPSBjcnlwdG9fMS5kZWZhdWx0LmNyZWF0ZURlY2lwaGVyaXYoY29uc3RhbnRzXzEuQUVTX05PREVfQUxHTywgQnVmZmVyLmZyb20oa2V5KSwgQnVmZmVyLmZyb20oaXYpKTtcbiAgICByZXR1cm4gZW5jb2RpbmdfMS5idWZmZXJUb0FycmF5KGVuY29kaW5nXzEuY29uY2F0QnVmZmVycyhkZWNpcGhlci51cGRhdGUoQnVmZmVyLmZyb20oZGF0YSkpLCBkZWNpcGhlci5maW5hbCgpKSk7XG59XG5leHBvcnRzLm5vZGVBZXNEZWNyeXB0ID0gbm9kZUFlc0RlY3J5cHQ7XG5mdW5jdGlvbiBub2RlSG1hY1NoYTI1NlNpZ24oa2V5LCBkYXRhKSB7XG4gICAgY29uc3QgYnVmID0gY3J5cHRvXzEuZGVmYXVsdFxuICAgICAgICAuY3JlYXRlSG1hYyhjb25zdGFudHNfMS5ITUFDX05PREVfQUxHTywgQnVmZmVyLmZyb20oa2V5KSlcbiAgICAgICAgLnVwZGF0ZShCdWZmZXIuZnJvbShkYXRhKSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIHJldHVybiBlbmNvZGluZ18xLmJ1ZmZlclRvQXJyYXkoYnVmKTtcbn1cbmV4cG9ydHMubm9kZUhtYWNTaGEyNTZTaWduID0gbm9kZUhtYWNTaGEyNTZTaWduO1xuZnVuY3Rpb24gbm9kZUhtYWNTaGE1MTJTaWduKGtleSwgZGF0YSkge1xuICAgIGNvbnN0IGJ1ZiA9IGNyeXB0b18xLmRlZmF1bHRcbiAgICAgICAgLmNyZWF0ZUhtYWMoY29uc3RhbnRzXzEuU0hBNTEyX05PREVfQUxHTywgQnVmZmVyLmZyb20oa2V5KSlcbiAgICAgICAgLnVwZGF0ZShCdWZmZXIuZnJvbShkYXRhKSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIHJldHVybiBlbmNvZGluZ18xLmJ1ZmZlclRvQXJyYXkoYnVmKTtcbn1cbmV4cG9ydHMubm9kZUhtYWNTaGE1MTJTaWduID0gbm9kZUhtYWNTaGE1MTJTaWduO1xuZnVuY3Rpb24gbm9kZVNoYTI1NihkYXRhKSB7XG4gICAgY29uc3QgYnVmID0gY3J5cHRvXzEuZGVmYXVsdFxuICAgICAgICAuY3JlYXRlSGFzaChjb25zdGFudHNfMS5TSEEyNTZfTk9ERV9BTEdPKVxuICAgICAgICAudXBkYXRlKEJ1ZmZlci5mcm9tKGRhdGEpKVxuICAgICAgICAuZGlnZXN0KCk7XG4gICAgcmV0dXJuIGVuY29kaW5nXzEuYnVmZmVyVG9BcnJheShidWYpO1xufVxuZXhwb3J0cy5ub2RlU2hhMjU2ID0gbm9kZVNoYTI1NjtcbmZ1bmN0aW9uIG5vZGVTaGE1MTIoZGF0YSkge1xuICAgIGNvbnN0IGJ1ZiA9IGNyeXB0b18xLmRlZmF1bHRcbiAgICAgICAgLmNyZWF0ZUhhc2goY29uc3RhbnRzXzEuU0hBNTEyX05PREVfQUxHTylcbiAgICAgICAgLnVwZGF0ZShCdWZmZXIuZnJvbShkYXRhKSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIHJldHVybiBlbmNvZGluZ18xLmJ1ZmZlclRvQXJyYXkoYnVmKTtcbn1cbmV4cG9ydHMubm9kZVNoYTUxMiA9IG5vZGVTaGE1MTI7XG5mdW5jdGlvbiBub2RlUmlwZW1kMTYwKGRhdGEpIHtcbiAgICBjb25zdCBidWYgPSBjcnlwdG9fMS5kZWZhdWx0XG4gICAgICAgIC5jcmVhdGVIYXNoKGNvbnN0YW50c18xLlJJUEVNRDE2MF9OT0RFX0FMR08pXG4gICAgICAgIC51cGRhdGUoQnVmZmVyLmZyb20oZGF0YSkpXG4gICAgICAgIC5kaWdlc3QoKTtcbiAgICByZXR1cm4gZW5jb2RpbmdfMS5idWZmZXJUb0FycmF5KGJ1Zik7XG59XG5leHBvcnRzLm5vZGVSaXBlbWQxNjAgPSBub2RlUmlwZW1kMTYwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJub2RlUmlwZW1kMTYwIiwibm9kZVNoYTUxMiIsIm5vZGVTaGEyNTYiLCJub2RlSG1hY1NoYTUxMlNpZ24iLCJub2RlSG1hY1NoYTI1NlNpZ24iLCJub2RlQWVzRGVjcnlwdCIsIm5vZGVBZXNFbmNyeXB0IiwidHNsaWJfMSIsInJlcXVpcmUiLCJjcnlwdG9fMSIsIl9faW1wb3J0RGVmYXVsdCIsImVuY29kaW5nXzEiLCJjb25zdGFudHNfMSIsIml2Iiwia2V5IiwiZGF0YSIsImNpcGhlciIsImRlZmF1bHQiLCJjcmVhdGVDaXBoZXJpdiIsIkFFU19OT0RFX0FMR08iLCJCdWZmZXIiLCJmcm9tIiwiYnVmZmVyVG9BcnJheSIsImNvbmNhdEJ1ZmZlcnMiLCJ1cGRhdGUiLCJmaW5hbCIsImRlY2lwaGVyIiwiY3JlYXRlRGVjaXBoZXJpdiIsImJ1ZiIsImNyZWF0ZUhtYWMiLCJITUFDX05PREVfQUxHTyIsImRpZ2VzdCIsIlNIQTUxMl9OT0RFX0FMR08iLCJjcmVhdGVIYXNoIiwiU0hBMjU2X05PREVfQUxHTyIsIlJJUEVNRDE2MF9OT0RFX0FMR08iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/aes.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/node/aes.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.aesCbcDecrypt = exports.aesCbcEncrypt = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\nconst node_1 = __webpack_require__(/*! ../lib/node */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js\");\nfunction aesCbcEncrypt(iv, key, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeAesEncrypt(iv, key, data);\n        return result;\n    });\n}\nexports.aesCbcEncrypt = aesCbcEncrypt;\nfunction aesCbcDecrypt(iv, key, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeAesDecrypt(iv, key, data);\n        return result;\n    });\n}\nexports.aesCbcDecrypt = aesCbcDecrypt; //# sourceMappingURL=aes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL2Flcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUdBLHFCQUFxQixHQUFHLEtBQUs7QUFDckQsTUFBTUksVUFBVUMsbUJBQU9BLENBQUMsMEZBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMscUZBQWE7QUFDcEMsU0FBU0YsY0FBY0ksRUFBRSxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDaEMsT0FBT0wsUUFBUU0sU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLE1BQU1DLFNBQVNMLE9BQU9NLGNBQWMsQ0FBQ0wsSUFBSUMsS0FBS0M7UUFDOUMsT0FBT0U7SUFDWDtBQUNKO0FBQ0FYLHFCQUFxQixHQUFHRztBQUN4QixTQUFTRCxjQUFjSyxFQUFFLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUNoQyxPQUFPTCxRQUFRTSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDM0MsTUFBTUMsU0FBU0wsT0FBT08sY0FBYyxDQUFDTixJQUFJQyxLQUFLQztRQUM5QyxPQUFPRTtJQUNYO0FBQ0o7QUFDQVgscUJBQXFCLEdBQUdFLGVBQ3hCLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL2Flcy5qcz9lMTFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZXNDYmNEZWNyeXB0ID0gZXhwb3J0cy5hZXNDYmNFbmNyeXB0ID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IG5vZGVfMSA9IHJlcXVpcmUoXCIuLi9saWIvbm9kZVwiKTtcbmZ1bmN0aW9uIGFlc0NiY0VuY3J5cHQoaXYsIGtleSwgZGF0YSkge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbm9kZV8xLm5vZGVBZXNFbmNyeXB0KGl2LCBrZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xufVxuZXhwb3J0cy5hZXNDYmNFbmNyeXB0ID0gYWVzQ2JjRW5jcnlwdDtcbmZ1bmN0aW9uIGFlc0NiY0RlY3J5cHQoaXYsIGtleSwgZGF0YSkge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbm9kZV8xLm5vZGVBZXNEZWNyeXB0KGl2LCBrZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xufVxuZXhwb3J0cy5hZXNDYmNEZWNyeXB0ID0gYWVzQ2JjRGVjcnlwdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhZXNDYmNEZWNyeXB0IiwiYWVzQ2JjRW5jcnlwdCIsInRzbGliXzEiLCJyZXF1aXJlIiwibm9kZV8xIiwiaXYiLCJrZXkiLCJkYXRhIiwiX19hd2FpdGVyIiwicmVzdWx0Iiwibm9kZUFlc0VuY3J5cHQiLCJub2RlQWVzRGVjcnlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/aes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/hmac.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/node/hmac.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.hmacSha512Verify = exports.hmacSha512Sign = exports.hmacSha256Verify = exports.hmacSha256Sign = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\nconst helpers_1 = __webpack_require__(/*! ../helpers */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/index.js\");\nconst node_1 = __webpack_require__(/*! ../lib/node */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js\");\nfunction hmacSha256Sign(key, msg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeHmacSha256Sign(key, msg);\n        return result;\n    });\n}\nexports.hmacSha256Sign = hmacSha256Sign;\nfunction hmacSha256Verify(key, msg, sig) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const expectedSig = node_1.nodeHmacSha256Sign(key, msg);\n        const result = helpers_1.isConstantTime(expectedSig, sig);\n        return result;\n    });\n}\nexports.hmacSha256Verify = hmacSha256Verify;\nfunction hmacSha512Sign(key, msg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeHmacSha512Sign(key, msg);\n        return result;\n    });\n}\nexports.hmacSha512Sign = hmacSha512Sign;\nfunction hmacSha512Verify(key, msg, sig) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const expectedSig = node_1.nodeHmacSha512Sign(key, msg);\n        const result = helpers_1.isConstantTime(expectedSig, sig);\n        return result;\n    });\n}\nexports.hmacSha512Verify = hmacSha512Verify; //# sourceMappingURL=hmac.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL2htYWMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QixHQUFHQSxzQkFBc0IsR0FBR0Esd0JBQXdCLEdBQUdBLHNCQUFzQixHQUFHLEtBQUs7QUFDN0csTUFBTU0sVUFBVUMsbUJBQU9BLENBQUMsMEZBQU87QUFDL0IsTUFBTUMsWUFBWUQsbUJBQU9BLENBQUMseUZBQVk7QUFDdEMsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUMscUZBQWE7QUFDcEMsU0FBU0YsZUFBZUssR0FBRyxFQUFFQyxHQUFHO0lBQzVCLE9BQU9MLFFBQVFNLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUMzQyxNQUFNQyxTQUFTSixPQUFPSyxrQkFBa0IsQ0FBQ0osS0FBS0M7UUFDOUMsT0FBT0U7SUFDWDtBQUNKO0FBQ0FiLHNCQUFzQixHQUFHSztBQUN6QixTQUFTRCxpQkFBaUJNLEdBQUcsRUFBRUMsR0FBRyxFQUFFSSxHQUFHO0lBQ25DLE9BQU9ULFFBQVFNLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUMzQyxNQUFNSSxjQUFjUCxPQUFPSyxrQkFBa0IsQ0FBQ0osS0FBS0M7UUFDbkQsTUFBTUUsU0FBU0wsVUFBVVMsY0FBYyxDQUFDRCxhQUFhRDtRQUNyRCxPQUFPRjtJQUNYO0FBQ0o7QUFDQWIsd0JBQXdCLEdBQUdJO0FBQzNCLFNBQVNELGVBQWVPLEdBQUcsRUFBRUMsR0FBRztJQUM1QixPQUFPTCxRQUFRTSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDM0MsTUFBTUMsU0FBU0osT0FBT1Msa0JBQWtCLENBQUNSLEtBQUtDO1FBQzlDLE9BQU9FO0lBQ1g7QUFDSjtBQUNBYixzQkFBc0IsR0FBR0c7QUFDekIsU0FBU0QsaUJBQWlCUSxHQUFHLEVBQUVDLEdBQUcsRUFBRUksR0FBRztJQUNuQyxPQUFPVCxRQUFRTSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDM0MsTUFBTUksY0FBY1AsT0FBT1Msa0JBQWtCLENBQUNSLEtBQUtDO1FBQ25ELE1BQU1FLFNBQVNMLFVBQVVTLGNBQWMsQ0FBQ0QsYUFBYUQ7UUFDckQsT0FBT0Y7SUFDWDtBQUNKO0FBQ0FiLHdCQUF3QixHQUFHRSxrQkFDM0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY3J5cHRvL2Rpc3QvY2pzL25vZGUvaG1hYy5qcz8yZmQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5obWFjU2hhNTEyVmVyaWZ5ID0gZXhwb3J0cy5obWFjU2hhNTEyU2lnbiA9IGV4cG9ydHMuaG1hY1NoYTI1NlZlcmlmeSA9IGV4cG9ydHMuaG1hY1NoYTI1NlNpZ24gPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgaGVscGVyc18xID0gcmVxdWlyZShcIi4uL2hlbHBlcnNcIik7XG5jb25zdCBub2RlXzEgPSByZXF1aXJlKFwiLi4vbGliL25vZGVcIik7XG5mdW5jdGlvbiBobWFjU2hhMjU2U2lnbihrZXksIG1zZykge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbm9kZV8xLm5vZGVIbWFjU2hhMjU2U2lnbihrZXksIG1zZyk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG59XG5leHBvcnRzLmhtYWNTaGEyNTZTaWduID0gaG1hY1NoYTI1NlNpZ247XG5mdW5jdGlvbiBobWFjU2hhMjU2VmVyaWZ5KGtleSwgbXNnLCBzaWcpIHtcbiAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGV4cGVjdGVkU2lnID0gbm9kZV8xLm5vZGVIbWFjU2hhMjU2U2lnbihrZXksIG1zZyk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGhlbHBlcnNfMS5pc0NvbnN0YW50VGltZShleHBlY3RlZFNpZywgc2lnKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuaG1hY1NoYTI1NlZlcmlmeSA9IGhtYWNTaGEyNTZWZXJpZnk7XG5mdW5jdGlvbiBobWFjU2hhNTEyU2lnbihrZXksIG1zZykge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbm9kZV8xLm5vZGVIbWFjU2hhNTEyU2lnbihrZXksIG1zZyk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG59XG5leHBvcnRzLmhtYWNTaGE1MTJTaWduID0gaG1hY1NoYTUxMlNpZ247XG5mdW5jdGlvbiBobWFjU2hhNTEyVmVyaWZ5KGtleSwgbXNnLCBzaWcpIHtcbiAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGV4cGVjdGVkU2lnID0gbm9kZV8xLm5vZGVIbWFjU2hhNTEyU2lnbihrZXksIG1zZyk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGhlbHBlcnNfMS5pc0NvbnN0YW50VGltZShleHBlY3RlZFNpZywgc2lnKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuaG1hY1NoYTUxMlZlcmlmeSA9IGhtYWNTaGE1MTJWZXJpZnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1obWFjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhtYWNTaGE1MTJWZXJpZnkiLCJobWFjU2hhNTEyU2lnbiIsImhtYWNTaGEyNTZWZXJpZnkiLCJobWFjU2hhMjU2U2lnbiIsInRzbGliXzEiLCJyZXF1aXJlIiwiaGVscGVyc18xIiwibm9kZV8xIiwia2V5IiwibXNnIiwiX19hd2FpdGVyIiwicmVzdWx0Iiwibm9kZUhtYWNTaGEyNTZTaWduIiwic2lnIiwiZXhwZWN0ZWRTaWciLCJpc0NvbnN0YW50VGltZSIsIm5vZGVIbWFjU2hhNTEyU2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/hmac.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/index.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/node/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! @walletconnect/randombytes */ \"(ssr)/../node_modules/@walletconnect/randombytes/dist/cjs/node/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./aes */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/aes.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./hmac */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/hmac.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./sha2 */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/sha2.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ../helpers */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/helpers/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ../constants */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDBGQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDJHQUE0QixHQUFHSDtBQUM1REUsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywrRUFBTyxHQUFHSDtBQUN2Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUSxHQUFHSDtBQUN4Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUSxHQUFHSDtBQUN4Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyw2RkFBYyxHQUFHSCxVQUM5QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jcnlwdG8vZGlzdC9janMvbm9kZS9pbmRleC5qcz9jYWRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9yYW5kb21ieXRlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaG1hY1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zaGEyXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuLi9oZWxwZXJzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/sha2.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/dist/cjs/node/sha2.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ripemd160 = exports.sha512 = exports.sha256 = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\");\nconst node_1 = __webpack_require__(/*! ../lib/node */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/lib/node.js\");\nfunction sha256(msg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeSha256(msg);\n        return result;\n    });\n}\nexports.sha256 = sha256;\nfunction sha512(msg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeSha512(msg);\n        return result;\n    });\n}\nexports.sha512 = sha512;\nfunction ripemd160(msg) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const result = node_1.nodeRipemd160(msg);\n        return result;\n    });\n}\nexports.ripemd160 = ripemd160; //# sourceMappingURL=sha2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL3NoYTIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQixHQUFHQSxjQUFjLEdBQUdBLGNBQWMsR0FBRyxLQUFLO0FBQzNELE1BQU1LLFVBQVVDLG1CQUFPQSxDQUFDLDBGQUFPO0FBQy9CLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLHFGQUFhO0FBQ3BDLFNBQVNGLE9BQU9JLEdBQUc7SUFDZixPQUFPSCxRQUFRSSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDM0MsTUFBTUMsU0FBU0gsT0FBT0ksVUFBVSxDQUFDSDtRQUNqQyxPQUFPRTtJQUNYO0FBQ0o7QUFDQVYsY0FBYyxHQUFHSTtBQUNqQixTQUFTRCxPQUFPSyxHQUFHO0lBQ2YsT0FBT0gsUUFBUUksU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLE1BQU1DLFNBQVNILE9BQU9LLFVBQVUsQ0FBQ0o7UUFDakMsT0FBT0U7SUFDWDtBQUNKO0FBQ0FWLGNBQWMsR0FBR0c7QUFDakIsU0FBU0QsVUFBVU0sR0FBRztJQUNsQixPQUFPSCxRQUFRSSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDM0MsTUFBTUMsU0FBU0gsT0FBT00sYUFBYSxDQUFDTDtRQUNwQyxPQUFPRTtJQUNYO0FBQ0o7QUFDQVYsaUJBQWlCLEdBQUdFLFdBQ3BCLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NyeXB0by9kaXN0L2Nqcy9ub2RlL3NoYTIuanM/MDI2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmlwZW1kMTYwID0gZXhwb3J0cy5zaGE1MTIgPSBleHBvcnRzLnNoYTI1NiA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBub2RlXzEgPSByZXF1aXJlKFwiLi4vbGliL25vZGVcIik7XG5mdW5jdGlvbiBzaGEyNTYobXNnKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBub2RlXzEubm9kZVNoYTI1Nihtc2cpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xufVxuZXhwb3J0cy5zaGEyNTYgPSBzaGEyNTY7XG5mdW5jdGlvbiBzaGE1MTIobXNnKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBub2RlXzEubm9kZVNoYTUxMihtc2cpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xufVxuZXhwb3J0cy5zaGE1MTIgPSBzaGE1MTI7XG5mdW5jdGlvbiByaXBlbWQxNjAobXNnKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBub2RlXzEubm9kZVJpcGVtZDE2MChtc2cpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pO1xufVxuZXhwb3J0cy5yaXBlbWQxNjAgPSByaXBlbWQxNjA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInJpcGVtZDE2MCIsInNoYTUxMiIsInNoYTI1NiIsInRzbGliXzEiLCJyZXF1aXJlIiwibm9kZV8xIiwibXNnIiwiX19hd2FpdGVyIiwicmVzdWx0Iiwibm9kZVNoYTI1NiIsIm5vZGVTaGE1MTIiLCJub2RlUmlwZW1kMTYwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/sha2.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/crypto/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@walletconnect/encoding/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addHexPrefix: () => (/* binding */ addHexPrefix),\n/* harmony export */   arrayToBinary: () => (/* binding */ arrayToBinary),\n/* harmony export */   arrayToBuffer: () => (/* binding */ arrayToBuffer),\n/* harmony export */   arrayToHex: () => (/* binding */ arrayToHex),\n/* harmony export */   arrayToNumber: () => (/* binding */ arrayToNumber),\n/* harmony export */   arrayToUtf8: () => (/* binding */ arrayToUtf8),\n/* harmony export */   binaryToArray: () => (/* binding */ binaryToArray),\n/* harmony export */   binaryToBuffer: () => (/* binding */ binaryToBuffer),\n/* harmony export */   binaryToHex: () => (/* binding */ binaryToHex),\n/* harmony export */   binaryToNumber: () => (/* binding */ binaryToNumber),\n/* harmony export */   binaryToUtf8: () => (/* binding */ binaryToUtf8),\n/* harmony export */   bufferToArray: () => (/* binding */ bufferToArray),\n/* harmony export */   bufferToBinary: () => (/* binding */ bufferToBinary),\n/* harmony export */   bufferToHex: () => (/* binding */ bufferToHex),\n/* harmony export */   bufferToNumber: () => (/* binding */ bufferToNumber),\n/* harmony export */   bufferToUtf8: () => (/* binding */ bufferToUtf8),\n/* harmony export */   calcByteLength: () => (/* binding */ calcByteLength),\n/* harmony export */   concatArrays: () => (/* binding */ concatArrays),\n/* harmony export */   concatBuffers: () => (/* binding */ concatBuffers),\n/* harmony export */   getEncoding: () => (/* binding */ getEncoding),\n/* harmony export */   getType: () => (/* binding */ getType),\n/* harmony export */   hexToArray: () => (/* binding */ hexToArray),\n/* harmony export */   hexToBinary: () => (/* binding */ hexToBinary),\n/* harmony export */   hexToBuffer: () => (/* binding */ hexToBuffer),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),\n/* harmony export */   isArrayBuffer: () => (/* binding */ isArrayBuffer),\n/* harmony export */   isBinaryString: () => (/* binding */ isBinaryString),\n/* harmony export */   isBuffer: () => (/* binding */ isBuffer),\n/* harmony export */   isHexString: () => (/* binding */ isHexString),\n/* harmony export */   isTypedArray: () => (/* binding */ isTypedArray),\n/* harmony export */   numberToArray: () => (/* binding */ numberToArray),\n/* harmony export */   numberToBinary: () => (/* binding */ numberToBinary),\n/* harmony export */   numberToBuffer: () => (/* binding */ numberToBuffer),\n/* harmony export */   numberToHex: () => (/* binding */ numberToHex),\n/* harmony export */   numberToUtf8: () => (/* binding */ numberToUtf8),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   padRight: () => (/* binding */ padRight),\n/* harmony export */   removeHexLeadingZeros: () => (/* binding */ removeHexLeadingZeros),\n/* harmony export */   removeHexPrefix: () => (/* binding */ removeHexPrefix),\n/* harmony export */   sanitizeBytes: () => (/* binding */ sanitizeBytes),\n/* harmony export */   sanitizeHex: () => (/* binding */ sanitizeHex),\n/* harmony export */   splitBytes: () => (/* binding */ splitBytes),\n/* harmony export */   swapBytes: () => (/* binding */ swapBytes),\n/* harmony export */   swapHex: () => (/* binding */ swapHex),\n/* harmony export */   trimLeft: () => (/* binding */ trimLeft),\n/* harmony export */   trimRight: () => (/* binding */ trimRight),\n/* harmony export */   utf8ToArray: () => (/* binding */ utf8ToArray),\n/* harmony export */   utf8ToBinary: () => (/* binding */ utf8ToBinary),\n/* harmony export */   utf8ToBuffer: () => (/* binding */ utf8ToBuffer),\n/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex),\n/* harmony export */   utf8ToNumber: () => (/* binding */ utf8ToNumber)\n/* harmony export */ });\n/* harmony import */ var is_typedarray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-typedarray */ \"(ssr)/../node_modules/is-typedarray/index.js\");\n/* harmony import */ var is_typedarray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_typedarray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var typedarray_to_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! typedarray-to-buffer */ \"(ssr)/../node_modules/typedarray-to-buffer/index.js\");\n/* harmony import */ var typedarray_to_buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typedarray_to_buffer__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ENC_HEX = \"hex\";\nconst ENC_UTF8 = \"utf8\";\nconst ENC_BIN = \"binary\";\nconst TYPE_BUFFER = \"buffer\";\nconst TYPE_ARRAY = \"array\";\nconst TYPE_TYPED_ARRAY = \"typed-array\";\nconst TYPE_ARRAY_BUFFER = \"array-buffer\";\nconst STRING_ZERO = \"0\";\nfunction bufferToArray(buf) {\n    return new Uint8Array(buf);\n}\nfunction bufferToHex(buf, prefixed = false) {\n    const hex = buf.toString(ENC_HEX);\n    return prefixed ? addHexPrefix(hex) : hex;\n}\nfunction bufferToUtf8(buf) {\n    return buf.toString(ENC_UTF8);\n}\nfunction bufferToNumber(buf) {\n    return buf.readUIntBE(0, buf.length);\n}\nfunction bufferToBinary(buf) {\n    return arrayToBinary(bufferToArray(buf));\n}\nfunction arrayToBuffer(arr) {\n    return typedarray_to_buffer__WEBPACK_IMPORTED_MODULE_1___default()(arr);\n}\nfunction arrayToHex(arr, prefixed = false) {\n    return bufferToHex(arrayToBuffer(arr), prefixed);\n}\nfunction arrayToUtf8(arr) {\n    return bufferToUtf8(arrayToBuffer(arr));\n}\nfunction arrayToNumber(arr) {\n    return bufferToNumber(arrayToBuffer(arr));\n}\nfunction arrayToBinary(arr) {\n    return Array.from(arr).map(numberToBinary).join(\"\");\n}\nfunction hexToBuffer(hex) {\n    return Buffer.from(removeHexPrefix(hex), ENC_HEX);\n}\nfunction hexToArray(hex) {\n    return bufferToArray(hexToBuffer(hex));\n}\nfunction hexToUtf8(hex) {\n    return bufferToUtf8(hexToBuffer(hex));\n}\nfunction hexToNumber(hex) {\n    return arrayToNumber(hexToArray(hex));\n}\nfunction hexToBinary(hex) {\n    return arrayToBinary(hexToArray(hex));\n}\nfunction utf8ToBuffer(utf8) {\n    return Buffer.from(utf8, ENC_UTF8);\n}\nfunction utf8ToArray(utf8) {\n    return bufferToArray(utf8ToBuffer(utf8));\n}\nfunction utf8ToHex(utf8, prefixed = false) {\n    return bufferToHex(utf8ToBuffer(utf8), prefixed);\n}\nfunction utf8ToNumber(utf8) {\n    const num = parseInt(utf8, 10);\n    assert(isDefined(num), \"Number can only safely store up to 53 bits\");\n    return num;\n}\nfunction utf8ToBinary(utf8) {\n    return arrayToBinary(utf8ToArray(utf8));\n}\nfunction numberToBuffer(num) {\n    return binaryToBuffer(numberToBinary(num));\n}\nfunction numberToArray(num) {\n    return binaryToArray(numberToBinary(num));\n}\nfunction numberToHex(num, prefixed) {\n    return binaryToHex(numberToBinary(num), prefixed);\n}\nfunction numberToUtf8(num) {\n    return `${num}`;\n}\nfunction numberToBinary(num) {\n    const bin = (num >>> 0).toString(2);\n    return sanitizeBytes(bin);\n}\nfunction binaryToBuffer(bin) {\n    return arrayToBuffer(binaryToArray(bin));\n}\nfunction binaryToArray(bin) {\n    return new Uint8Array(splitBytes(bin).map((x)=>parseInt(x, 2)));\n}\nfunction binaryToHex(bin, prefixed) {\n    return arrayToHex(binaryToArray(bin), prefixed);\n}\nfunction binaryToUtf8(bin) {\n    return arrayToUtf8(binaryToArray(bin));\n}\nfunction binaryToNumber(bin) {\n    return arrayToNumber(binaryToArray(bin));\n}\nfunction isBinaryString(str) {\n    if (typeof str !== \"string\" || !new RegExp(/^[01]+$/).test(str)) {\n        return false;\n    }\n    if (str.length % 8 !== 0) {\n        return false;\n    }\n    return true;\n}\nfunction isHexString(str, length) {\n    if (typeof str !== \"string\" || !str.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && str.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nfunction isBuffer(val) {\n    return Buffer.isBuffer(val);\n}\nfunction isTypedArray(val) {\n    return is_typedarray__WEBPACK_IMPORTED_MODULE_0___default().strict(val) && !isBuffer(val);\n}\nfunction isArrayBuffer(val) {\n    return !isTypedArray(val) && !isBuffer(val) && typeof val.byteLength !== \"undefined\";\n}\nfunction getType(val) {\n    if (isBuffer(val)) {\n        return TYPE_BUFFER;\n    } else if (isTypedArray(val)) {\n        return TYPE_TYPED_ARRAY;\n    } else if (isArrayBuffer(val)) {\n        return TYPE_ARRAY_BUFFER;\n    } else if (Array.isArray(val)) {\n        return TYPE_ARRAY;\n    } else {\n        return typeof val;\n    }\n}\nfunction getEncoding(str) {\n    if (isBinaryString(str)) {\n        return ENC_BIN;\n    }\n    if (isHexString(str)) {\n        return ENC_HEX;\n    }\n    return ENC_UTF8;\n}\nfunction concatBuffers(...args) {\n    const result = Buffer.concat(args);\n    return result;\n}\nfunction concatArrays(...args) {\n    let result = [];\n    args.forEach((arg)=>result = result.concat(Array.from(arg)));\n    return new Uint8Array([\n        ...result\n    ]);\n}\nfunction trimLeft(data, length) {\n    const diff = data.length - length;\n    if (diff > 0) {\n        data = data.slice(diff);\n    }\n    return data;\n}\nfunction trimRight(data, length) {\n    return data.slice(0, length);\n}\nfunction calcByteLength(length, byteSize = 8) {\n    const remainder = length % byteSize;\n    return remainder ? (length - remainder) / byteSize * byteSize + byteSize : length;\n}\nfunction splitBytes(str, byteSize = 8) {\n    const bytes = sanitizeBytes(str).match(new RegExp(`.{${byteSize}}`, \"gi\"));\n    return Array.from(bytes || []);\n}\nfunction swapBytes(str) {\n    return splitBytes(str).map(reverseString).join(\"\");\n}\nfunction swapHex(str) {\n    return binaryToHex(swapBytes(hexToBinary(str)));\n}\nfunction sanitizeBytes(str, byteSize = 8, padding = STRING_ZERO) {\n    return padLeft(str, calcByteLength(str.length, byteSize), padding);\n}\nfunction padLeft(str, length, padding = STRING_ZERO) {\n    return padString(str, length, true, padding);\n}\nfunction padRight(str, length, padding = STRING_ZERO) {\n    return padString(str, length, false, padding);\n}\nfunction removeHexPrefix(hex) {\n    return hex.replace(/^0x/, \"\");\n}\nfunction addHexPrefix(hex) {\n    return hex.startsWith(\"0x\") ? hex : `0x${hex}`;\n}\nfunction sanitizeHex(hex) {\n    hex = removeHexPrefix(hex);\n    hex = sanitizeBytes(hex, 2);\n    if (hex) {\n        hex = addHexPrefix(hex);\n    }\n    return hex;\n}\nfunction removeHexLeadingZeros(hex) {\n    const prefixed = hex.startsWith(\"0x\");\n    hex = removeHexPrefix(hex);\n    hex = hex.startsWith(STRING_ZERO) ? hex.substring(1) : hex;\n    return prefixed ? addHexPrefix(hex) : hex;\n}\nfunction isUndefined(value) {\n    return typeof value === \"undefined\";\n}\nfunction isDefined(value) {\n    return !isUndefined(value);\n}\nfunction assert(assertion, errorMessage) {\n    if (!assertion) {\n        throw new Error(errorMessage);\n    }\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction padString(str, length, left, padding = STRING_ZERO) {\n    const diff = length - str.length;\n    let result = str;\n    if (diff > 0) {\n        const pad = padding.repeat(diff);\n        result = left ? pad + str : str + pad;\n    }\n    return result;\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2NyeXB0by5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0NBQWdDLEdBQUdBLHVCQUF1QixHQUFHQSx1QkFBdUIsR0FBRyxLQUFLO0FBQzVGLFNBQVNJO0lBQ0wsT0FBTyxDQUFDQyxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT0MsTUFBTSxLQUFNRCxDQUFBQSxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT0UsUUFBUSxLQUFLLENBQUM7QUFDcEo7QUFDQVAsdUJBQXVCLEdBQUdJO0FBQzFCLFNBQVNEO0lBQ0wsTUFBTUssZ0JBQWdCSjtJQUN0QixPQUFPSSxjQUFjQyxNQUFNLElBQUlELGNBQWNFLFlBQVk7QUFDN0Q7QUFDQVYsdUJBQXVCLEdBQUdHO0FBQzFCLFNBQVNEO0lBQ0wsT0FBTyxDQUFDLENBQUNFLHFCQUFxQixDQUFDLENBQUNEO0FBQ3BDO0FBQ0FILGdDQUFnQyxHQUFHRSwwQkFDbkMsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzP2Q1ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSA9IGV4cG9ydHMuZ2V0U3VidGxlQ3J5cHRvID0gZXhwb3J0cy5nZXRCcm93ZXJDcnlwdG8gPSB2b2lkIDA7XG5mdW5jdGlvbiBnZXRCcm93ZXJDcnlwdG8oKSB7XG4gICAgcmV0dXJuIChnbG9iYWwgPT09IG51bGwgfHwgZ2xvYmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWwuY3J5cHRvKSB8fCAoZ2xvYmFsID09PSBudWxsIHx8IGdsb2JhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsLm1zQ3J5cHRvKSB8fCB7fTtcbn1cbmV4cG9ydHMuZ2V0QnJvd2VyQ3J5cHRvID0gZ2V0QnJvd2VyQ3J5cHRvO1xuZnVuY3Rpb24gZ2V0U3VidGxlQ3J5cHRvKCkge1xuICAgIGNvbnN0IGJyb3dzZXJDcnlwdG8gPSBnZXRCcm93ZXJDcnlwdG8oKTtcbiAgICByZXR1cm4gYnJvd3NlckNyeXB0by5zdWJ0bGUgfHwgYnJvd3NlckNyeXB0by53ZWJraXRTdWJ0bGU7XG59XG5leHBvcnRzLmdldFN1YnRsZUNyeXB0byA9IGdldFN1YnRsZUNyeXB0bztcbmZ1bmN0aW9uIGlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSgpIHtcbiAgICByZXR1cm4gISFnZXRCcm93ZXJDcnlwdG8oKSAmJiAhIWdldFN1YnRsZUNyeXB0bygpO1xufVxuZXhwb3J0cy5pc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUgPSBpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlIiwiZ2V0U3VidGxlQ3J5cHRvIiwiZ2V0QnJvd2VyQ3J5cHRvIiwiZ2xvYmFsIiwiY3J5cHRvIiwibXNDcnlwdG8iLCJicm93c2VyQ3J5cHRvIiwic3VidGxlIiwid2Via2l0U3VidGxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLGNBQWMsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNsRSxTQUFTSTtJQUNMLE9BQVEsT0FBT0MsYUFBYSxlQUN4QixPQUFPQyxjQUFjLGVBQ3JCQSxVQUFVQyxPQUFPLEtBQUs7QUFDOUI7QUFDQVAscUJBQXFCLEdBQUdJO0FBQ3hCLFNBQVNEO0lBQ0wsT0FBUSxPQUFPSyxZQUFZLGVBQ3ZCLE9BQU9BLFFBQVFDLFFBQVEsS0FBSyxlQUM1QixPQUFPRCxRQUFRQyxRQUFRLENBQUNDLElBQUksS0FBSztBQUN6QztBQUNBVixjQUFjLEdBQUdHO0FBQ2pCLFNBQVNEO0lBQ0wsT0FBTyxDQUFDRSxtQkFBbUIsQ0FBQ0Q7QUFDaEM7QUFDQUgsaUJBQWlCLEdBQUdFLFdBQ3BCLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2Vudi5qcz8xNTNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Jyb3dzZXIgPSBleHBvcnRzLmlzTm9kZSA9IGV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzUmVhY3ROYXRpdmUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gXCJSZWFjdE5hdGl2ZVwiKTtcbn1cbmV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IGlzUmVhY3ROYXRpdmU7XG5mdW5jdGlvbiBpc05vZGUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlICE9PSBcInVuZGVmaW5lZFwiKTtcbn1cbmV4cG9ydHMuaXNOb2RlID0gaXNOb2RlO1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICAgIHJldHVybiAhaXNSZWFjdE5hdGl2ZSgpICYmICFpc05vZGUoKTtcbn1cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzQnJvd3NlciIsImlzTm9kZSIsImlzUmVhY3ROYXRpdmUiLCJkb2N1bWVudCIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJub2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/../node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/../node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLCtGQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHFGQUFVLEdBQUdIO0FBQzFDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLCtFQUFPLEdBQUdILFVBQ3ZDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2luZGV4LmpzP2Q1NzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3J5cHRvXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudlwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProvider: () => (/* binding */ G),\n/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ _),\n/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ E),\n/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ m),\n/* harmony export */   REQUIRED_METHODS: () => (/* binding */ u),\n/* harmony export */   \"default\": () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/universal-provider */ \"(ssr)/../node_modules/@walletconnect/universal-provider/dist/index.es.js\");\n\n\n\nconst P = \"wc\", S = \"ethereum_provider\", $ = `${P}@2:${S}:`, j = \"https://rpc.walletconnect.com/v1/\", u = [\n    \"eth_sendTransaction\",\n    \"personal_sign\"\n], E = [\n    \"eth_accounts\",\n    \"eth_requestAccounts\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\"\n], m = [\n    \"chainChanged\",\n    \"accountsChanged\"\n], _ = [\n    \"chainChanged\",\n    \"accountsChanged\",\n    \"message\",\n    \"disconnect\",\n    \"connect\"\n];\nvar N = Object.defineProperty, q = Object.defineProperties, D = Object.getOwnPropertyDescriptors, y = Object.getOwnPropertySymbols, U = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable, O = (a, t, s)=>t in a ? N(a, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : a[t] = s, p = (a, t)=>{\n    for(var s in t || (t = {}))U.call(t, s) && O(a, s, t[s]);\n    if (y) for (var s of y(t))Q.call(t, s) && O(a, s, t[s]);\n    return a;\n}, M = (a, t)=>q(a, D(t));\nfunction g(a) {\n    return Number(a[0].split(\":\")[1]);\n}\nfunction f(a) {\n    return `0x${a.toString(16)}`;\n}\nfunction L(a) {\n    const { chains: t, optionalChains: s, methods: i, optionalMethods: n, events: e, optionalEvents: h, rpcMap: c } = a;\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)) throw new Error(\"Invalid chains\");\n    const o = {\n        chains: t,\n        methods: i || u,\n        events: e || m,\n        rpcMap: p({}, t.length ? {\n            [g(t)]: c[g(t)]\n        } : {})\n    }, r = e?.filter((l)=>!m.includes(l)), d = i?.filter((l)=>!u.includes(l));\n    if (!s && !h && !n && !(r != null && r.length) && !(d != null && d.length)) return {\n        required: t.length ? o : void 0\n    };\n    const C = r?.length && d?.length || !s, I = {\n        chains: [\n            ...new Set(C ? o.chains.concat(s || []) : s)\n        ],\n        methods: [\n            ...new Set(o.methods.concat(n != null && n.length ? n : E))\n        ],\n        events: [\n            ...new Set(o.events.concat(h != null && h.length ? h : _))\n        ],\n        rpcMap: c\n    };\n    return {\n        required: t.length ? o : void 0,\n        optional: s.length ? I : void 0\n    };\n}\nclass v {\n    constructor(){\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.namespace = \"eip155\", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $, this.on = (t, s)=>(this.events.on(t, s), this), this.once = (t, s)=>(this.events.once(t, s), this), this.removeListener = (t, s)=>(this.events.removeListener(t, s), this), this.off = (t, s)=>(this.events.off(t, s), this), this.parseAccount = (t)=>this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};\n    }\n    static async init(t) {\n        const s = new v;\n        return await s.initialize(t), s;\n    }\n    async request(t) {\n        return await this.signer.request(t, this.formatChainId(this.chainId));\n    }\n    sendAsync(t, s) {\n        this.signer.sendAsync(t, s, this.formatChainId(this.chainId));\n    }\n    get connected() {\n        return this.signer.client ? this.signer.client.core.relayer.connected : !1;\n    }\n    get connecting() {\n        return this.signer.client ? this.signer.client.core.relayer.connecting : !1;\n    }\n    async enable() {\n        return this.session || await this.connect(), await this.request({\n            method: \"eth_requestAccounts\"\n        });\n    }\n    async connect(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts(t);\n        const { required: s, optional: i } = L(this.rpc);\n        try {\n            const n = await new Promise(async (h, c)=>{\n                var o;\n                this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r)=>{\n                    !r.open && !this.signer.session && (this.signer.abortPairingAttempt(), c(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.connect(M(p({\n                    namespaces: p({}, s && {\n                        [this.namespace]: s\n                    })\n                }, i && {\n                    optionalNamespaces: {\n                        [this.namespace]: i\n                    }\n                }), {\n                    pairingTopic: t?.pairingTopic\n                })).then((r)=>{\n                    h(r);\n                }).catch((r)=>{\n                    c(new Error(r.message));\n                });\n            });\n            if (!n) return;\n            const e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(n.namespaces, [\n                this.namespace\n            ]);\n            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : e), this.setAccounts(e), this.events.emit(\"connect\", {\n                chainId: f(this.chainId)\n            });\n        } catch (n) {\n            throw this.signer.logger.error(n), n;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async disconnect() {\n        this.session && await this.signer.disconnect(), this.reset();\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    get session() {\n        return this.signer.session;\n    }\n    registerEventListeners() {\n        this.signer.on(\"session_event\", (t)=>{\n            const { params: s } = t, { event: i } = s;\n            i.name === \"accountsChanged\" ? (this.accounts = this.parseAccounts(i.data), this.events.emit(\"accountsChanged\", this.accounts)) : i.name === \"chainChanged\" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit(\"session_event\", t);\n        }), this.signer.on(\"chainChanged\", (t)=>{\n            const s = parseInt(t);\n            this.chainId = s, this.events.emit(\"chainChanged\", f(this.chainId)), this.persist();\n        }), this.signer.on(\"session_update\", (t)=>{\n            this.events.emit(\"session_update\", t);\n        }), this.signer.on(\"session_delete\", (t)=>{\n            this.reset(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", M(p({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic,\n                name: \"USER_DISCONNECTED\"\n            }));\n        }), this.signer.on(\"display_uri\", (t)=>{\n            var s, i;\n            this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i = this.modal) == null || i.openModal({\n                uri: t\n            })), this.events.emit(\"display_uri\", t);\n        });\n    }\n    switchEthereumChain(t) {\n        this.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: t.toString(16)\n                }\n            ]\n        });\n    }\n    isCompatibleChainId(t) {\n        return typeof t == \"string\" ? t.startsWith(`${this.namespace}:`) : !1;\n    }\n    formatChainId(t) {\n        return `${this.namespace}:${t}`;\n    }\n    parseChainId(t) {\n        return Number(t.split(\":\")[1]);\n    }\n    setChainIds(t) {\n        const s = t.filter((i)=>this.isCompatibleChainId(i)).map((i)=>this.parseChainId(i));\n        s.length && (this.chainId = s[0], this.events.emit(\"chainChanged\", f(this.chainId)), this.persist());\n    }\n    setChainId(t) {\n        if (this.isCompatibleChainId(t)) {\n            const s = this.parseChainId(t);\n            this.chainId = s, this.switchEthereumChain(s);\n        }\n    }\n    parseAccountId(t) {\n        const [s, i, n] = t.split(\":\");\n        return {\n            chainId: `${s}:${i}`,\n            address: n\n        };\n    }\n    setAccounts(t) {\n        this.accounts = t.filter((s)=>this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s)=>this.parseAccountId(s).address), this.events.emit(\"accountsChanged\", this.accounts);\n    }\n    getRpcConfig(t) {\n        var s, i;\n        const n = (s = t?.chains) != null ? s : [], e = (i = t?.optionalChains) != null ? i : [], h = n.concat(e);\n        if (!h.length) throw new Error(\"No chains specified in either `chains` or `optionalChains`\");\n        const c = n.length ? t?.methods || u : [], o = n.length ? t?.events || m : [], r = t?.optionalMethods || [], d = t?.optionalEvents || [], C = t?.rpcMap || this.buildRpcMap(h, t.projectId), I = t?.qrModalOptions || void 0;\n        return {\n            chains: n?.map((l)=>this.formatChainId(l)),\n            optionalChains: e.map((l)=>this.formatChainId(l)),\n            methods: c,\n            events: o,\n            optionalMethods: r,\n            optionalEvents: d,\n            rpcMap: C,\n            showQrModal: !!(t != null && t.showQrModal),\n            qrModalOptions: I,\n            projectId: t.projectId,\n            metadata: t.metadata\n        };\n    }\n    buildRpcMap(t, s) {\n        const i = {};\n        return t.forEach((n)=>{\n            i[n] = this.getRpcUrl(n, s);\n        }), i;\n    }\n    async initialize(t) {\n        if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? g(this.rpc.chains) : g(this.rpc.optionalChains), this.signer = await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__.UniversalProvider.init({\n            projectId: this.rpc.projectId,\n            metadata: this.rpc.metadata,\n            disableProviderPing: t.disableProviderPing,\n            relayUrl: t.relayUrl,\n            storageOptions: t.storageOptions\n        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {\n            let s;\n            try {\n                const { WalletConnectModal: i } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/valtio\"), __webpack_require__.e(\"vendor-chunks/proxy-compare\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal */ \"(ssr)/../node_modules/@walletconnect/modal/dist/index.js\"));\n                s = i;\n            } catch  {\n                throw new Error(\"To use QR modal, please install @walletconnect/modal package\");\n            }\n            if (s) try {\n                this.modal = new s(p({\n                    walletConnectVersion: 2,\n                    projectId: this.rpc.projectId,\n                    standaloneChains: this.rpc.chains\n                }, this.rpc.qrModalOptions));\n            } catch (i) {\n                throw this.signer.logger.error(i), new Error(\"Could not generate WalletConnectModal Instance\");\n            }\n        }\n    }\n    loadConnectOpts(t) {\n        if (!t) return;\n        const { chains: s, optionalChains: i, rpcMap: n } = t;\n        s && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(s) && (this.rpc.chains = s.map((e)=>this.formatChainId(e)), s.forEach((e)=>{\n            this.rpc.rpcMap[e] = n?.[e] || this.getRpcUrl(e);\n        })), i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i?.map((e)=>this.formatChainId(e)), i.forEach((e)=>{\n            this.rpc.rpcMap[e] = n?.[e] || this.getRpcUrl(e);\n        }));\n    }\n    getRpcUrl(t, s) {\n        var i;\n        return ((i = this.rpc.rpcMap) == null ? void 0 : i[t]) || `${j}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;\n    }\n    async loadPersistedSession() {\n        if (!this.session) return;\n        const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];\n        this.setChainIds(t ? [\n            this.formatChainId(t)\n        ] : s?.accounts), this.setAccounts(s?.accounts);\n    }\n    reset() {\n        this.chainId = 1, this.accounts = [];\n    }\n    persist() {\n        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n    }\n    parseAccounts(t) {\n        return typeof t == \"string\" || t instanceof String ? [\n            this.parseAccount(t)\n        ] : t.map((s)=>this.parseAccount(s));\n    }\n}\nconst G = v;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/ethereum-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/events/dist/esm/events.js":
/*!****************************************************************!*\
  !*** ../node_modules/@walletconnect/events/dist/esm/events.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9ldmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BO0FBQ2IsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vZXZlbnRzLmpzPzhjOTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIElFdmVudHMge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJJRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/events/dist/esm/index.js":
/*!***************************************************************!*\
  !*** ../node_modules/@walletconnect/events/dist/esm/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/../node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QixDQUN6QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vaW5kZXguanM/MDIzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ldmVudHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;\nconst time_1 = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\nexports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;\nexports.HEARTBEAT_EVENTS = {\n    pulse: \"heartbeat_pulse\"\n}; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9jb25zdGFudHMvaGVhcnRiZWF0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx3QkFBd0IsR0FBR0EsMEJBQTBCLEdBQUcsS0FBSztBQUM3RCxNQUFNSSxTQUFTQyxtQkFBT0EsQ0FBQyx3RkFBcUI7QUFDNUNMLDBCQUEwQixHQUFHSSxPQUFPRSxZQUFZO0FBQ2hETix3QkFBd0IsR0FBRztJQUN2Qk8sT0FBTztBQUNYLEdBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvY2pzL2NvbnN0YW50cy9oZWFydGJlYXQuanM/ZmU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSEVBUlRCRUFUX0VWRU5UUyA9IGV4cG9ydHMuSEVBUlRCRUFUX0lOVEVSVkFMID0gdm9pZCAwO1xuY29uc3QgdGltZV8xID0gcmVxdWlyZShcIkB3YWxsZXRjb25uZWN0L3RpbWVcIik7XG5leHBvcnRzLkhFQVJUQkVBVF9JTlRFUlZBTCA9IHRpbWVfMS5GSVZFX1NFQ09ORFM7XG5leHBvcnRzLkhFQVJUQkVBVF9FVkVOVFMgPSB7XG4gICAgcHVsc2U6IFwiaGVhcnRiZWF0X3B1bHNlXCIsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhcnRiZWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkhFQVJUQkVBVF9FVkVOVFMiLCJIRUFSVEJFQVRfSU5URVJWQUwiLCJ0aW1lXzEiLCJyZXF1aXJlIiwiRklWRV9TRUNPTkRTIiwicHVsc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsNkZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUdBQWEsR0FBR0gsVUFDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvY2pzL2NvbnN0YW50cy9pbmRleC5qcz9jNjgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlYXJ0YmVhdFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HeartBeat = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst time_1 = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\");\nclass HeartBeat extends types_1.IHeartBeat {\n    constructor(opts){\n        super(opts);\n        this.events = new events_1.EventEmitter();\n        this.interval = constants_1.HEARTBEAT_INTERVAL;\n        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;\n    }\n    static init(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const heartbeat = new HeartBeat(opts);\n            yield heartbeat.init();\n            return heartbeat;\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            yield this.initialize();\n        });\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    initialize() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this.intervalRef = setInterval(()=>this.pulse(), time_1.toMiliseconds(this.interval));\n        });\n    }\n    pulse() {\n        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);\n    }\n}\nexports.HeartBeat = HeartBeat; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9oZWFydGJlYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQixHQUFHLEtBQUs7QUFDekIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsNkZBQU87QUFDL0IsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMsc0JBQVE7QUFDakMsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUMsd0ZBQXFCO0FBQzVDLE1BQU1HLFVBQVVILG1CQUFPQSxDQUFDLHVGQUFTO0FBQ2pDLE1BQU1JLGNBQWNKLG1CQUFPQSxDQUFDLCtGQUFhO0FBQ3pDLE1BQU1GLGtCQUFrQkssUUFBUUUsVUFBVTtJQUN0Q0MsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUlQLFNBQVNRLFlBQVk7UUFDdkMsSUFBSSxDQUFDQyxRQUFRLEdBQUdOLFlBQVlPLGtCQUFrQjtRQUM5QyxJQUFJLENBQUNELFFBQVEsR0FBRyxDQUFDSCxTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0csUUFBUSxLQUFLTixZQUFZTyxrQkFBa0I7SUFDakg7SUFDQSxPQUFPQyxLQUFLTCxJQUFJLEVBQUU7UUFDZCxPQUFPUixRQUFRYyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsWUFBWSxJQUFJaEIsVUFBVVM7WUFDaEMsTUFBTU8sVUFBVUYsSUFBSTtZQUNwQixPQUFPRTtRQUNYO0lBQ0o7SUFDQUYsT0FBTztRQUNILE9BQU9iLFFBQVFjLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUMzQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtRQUN6QjtJQUNKO0lBQ0FDLE9BQU87UUFDSEMsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFDbEM7SUFDQUMsR0FBR0MsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDaEIsSUFBSSxDQUFDYixNQUFNLENBQUNXLEVBQUUsQ0FBQ0MsT0FBT0M7SUFDMUI7SUFDQUMsS0FBS0YsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDYixNQUFNLENBQUNjLElBQUksQ0FBQ0YsT0FBT0M7SUFDNUI7SUFDQUUsSUFBSUgsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDakIsSUFBSSxDQUFDYixNQUFNLENBQUNlLEdBQUcsQ0FBQ0gsT0FBT0M7SUFDM0I7SUFDQUcsZUFBZUosS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDNUIsSUFBSSxDQUFDYixNQUFNLENBQUNnQixjQUFjLENBQUNKLE9BQU9DO0lBQ3RDO0lBQ0FOLGFBQWE7UUFDVCxPQUFPaEIsUUFBUWMsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQzNDLElBQUksQ0FBQ0ssV0FBVyxHQUFHTyxZQUFZLElBQU0sSUFBSSxDQUFDQyxLQUFLLElBQUl4QixPQUFPeUIsYUFBYSxDQUFDLElBQUksQ0FBQ2pCLFFBQVE7UUFDekY7SUFDSjtJQUNBZ0IsUUFBUTtRQUNKLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQ29CLElBQUksQ0FBQ3hCLFlBQVl5QixnQkFBZ0IsQ0FBQ0gsS0FBSztJQUN2RDtBQUNKO0FBQ0E5QixpQkFBaUIsR0FBR0UsV0FDcEIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvY2pzL2hlYXJ0YmVhdC5qcz81MTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZWFydEJlYXQgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgZXZlbnRzXzEgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuY29uc3QgdGltZV8xID0gcmVxdWlyZShcIkB3YWxsZXRjb25uZWN0L3RpbWVcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNsYXNzIEhlYXJ0QmVhdCBleHRlbmRzIHR5cGVzXzEuSUhlYXJ0QmVhdCB7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcihvcHRzKTtcbiAgICAgICAgdGhpcy5ldmVudHMgPSBuZXcgZXZlbnRzXzEuRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBjb25zdGFudHNfMS5IRUFSVEJFQVRfSU5URVJWQUw7XG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSAob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLmludGVydmFsKSB8fCBjb25zdGFudHNfMS5IRUFSVEJFQVRfSU5URVJWQUw7XG4gICAgfVxuICAgIHN0YXRpYyBpbml0KG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgaGVhcnRiZWF0ID0gbmV3IEhlYXJ0QmVhdChvcHRzKTtcbiAgICAgICAgICAgIHlpZWxkIGhlYXJ0YmVhdC5pbml0KCk7XG4gICAgICAgICAgICByZXR1cm4gaGVhcnRiZWF0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaW5pdCgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdG9wKCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxSZWYpO1xuICAgIH1cbiAgICBvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzLm9mZihldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICByZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5pbnRlcnZhbFJlZiA9IHNldEludGVydmFsKCgpID0+IHRoaXMucHVsc2UoKSwgdGltZV8xLnRvTWlsaXNlY29uZHModGhpcy5pbnRlcnZhbCkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcHVsc2UoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzLmVtaXQoY29uc3RhbnRzXzEuSEVBUlRCRUFUX0VWRU5UUy5wdWxzZSk7XG4gICAgfVxufVxuZXhwb3J0cy5IZWFydEJlYXQgPSBIZWFydEJlYXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFydGJlYXQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSGVhcnRCZWF0IiwidHNsaWJfMSIsInJlcXVpcmUiLCJldmVudHNfMSIsInRpbWVfMSIsInR5cGVzXzEiLCJjb25zdGFudHNfMSIsIklIZWFydEJlYXQiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJldmVudHMiLCJFdmVudEVtaXR0ZXIiLCJpbnRlcnZhbCIsIkhFQVJUQkVBVF9JTlRFUlZBTCIsImluaXQiLCJfX2F3YWl0ZXIiLCJoZWFydGJlYXQiLCJpbml0aWFsaXplIiwic3RvcCIsImNsZWFySW50ZXJ2YWwiLCJpbnRlcnZhbFJlZiIsIm9uIiwiZXZlbnQiLCJsaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInNldEludGVydmFsIiwicHVsc2UiLCJ0b01pbGlzZWNvbmRzIiwiZW1pdCIsIkhFQVJUQkVBVF9FVkVOVFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyw2RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSDtBQUM3Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx1RkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywrRkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9oZWFydGJlYXQvZGlzdC9janMvaW5kZXguanM/MDRjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWFydGJlYXRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IHeartBeat = void 0;\nconst events_1 = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/../node_modules/@walletconnect/events/dist/esm/index.js\");\nclass IHeartBeat extends events_1.IEvents {\n    constructor(opts){\n        super();\n    }\n}\nexports.IHeartBeat = IHeartBeat; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9oZWFydGJlYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsTUFBTUcsV0FBV0MsbUJBQU9BLENBQUMsNEZBQXVCO0FBQ2hELE1BQU1GLG1CQUFtQkMsU0FBU0UsT0FBTztJQUNyQ0MsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSztJQUNUO0FBQ0o7QUFDQVAsa0JBQWtCLEdBQUdFLFlBQ3JCLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9oZWFydGJlYXQuanM/M2QwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSUhlYXJ0QmVhdCA9IHZvaWQgMDtcbmNvbnN0IGV2ZW50c18xID0gcmVxdWlyZShcIkB3YWxsZXRjb25uZWN0L2V2ZW50c1wiKTtcbmNsYXNzIElIZWFydEJlYXQgZXh0ZW5kcyBldmVudHNfMS5JRXZlbnRzIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxufVxuZXhwb3J0cy5JSGVhcnRCZWF0ID0gSUhlYXJ0QmVhdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYXJ0YmVhdC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJJSGVhcnRCZWF0IiwiZXZlbnRzXzEiLCJyZXF1aXJlIiwiSUV2ZW50cyIsImNvbnN0cnVjdG9yIiwib3B0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyw2RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywrRkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9oZWFydGJlYXQvZGlzdC9janMvdHlwZXMvaW5kZXguanM/NzI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWFydGJlYXRcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* binding */ HttpConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/../node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD\n};\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass HttpConnection {\n    constructor(url, disableProviderPing = false){\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async open(url = this.url) {\n        await this.register(url);\n    }\n    async close() {\n        if (!this.isAvailable) {\n            throw new Error(\"Connection already closed\");\n        }\n        this.onClose();\n    }\n    async send(payload, context) {\n        if (!this.isAvailable) {\n            await this.register();\n        }\n        try {\n            const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(payload);\n            const res = await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                body\n            }));\n            const data = await res.json();\n            this.onPayload({\n                data\n            });\n        } catch (e) {\n            this.onError(payload.id, e);\n        }\n    }\n    async register(url = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        if (this.registering) {\n            const currentMaxListeners = this.events.getMaxListeners();\n            if (this.events.listenerCount(\"register_error\") >= currentMaxListeners || this.events.listenerCount(\"open\") >= currentMaxListeners) {\n                this.events.setMaxListeners(currentMaxListeners + 1);\n            }\n            return new Promise((resolve, reject)=>{\n                this.events.once(\"register_error\", (error)=>{\n                    this.resetMaxListeners();\n                    reject(error);\n                });\n                this.events.once(\"open\", ()=>{\n                    this.resetMaxListeners();\n                    if (typeof this.isAvailable === \"undefined\") {\n                        return reject(new Error(\"HTTP connection is missing or invalid\"));\n                    }\n                    resolve();\n                });\n            });\n        }\n        this.url = url;\n        this.registering = true;\n        try {\n            if (!this.disableProviderPing) {\n                const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({\n                    id: 1,\n                    jsonrpc: \"2.0\",\n                    method: \"test\",\n                    params: []\n                });\n                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                    body\n                }));\n            }\n            this.onOpen();\n        } catch (e) {\n            const error = this.parseError(e);\n            this.events.emit(\"register_error\", error);\n            this.onClose();\n            throw error;\n        }\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\") return;\n        const payload = typeof e.data === \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(e, url, \"HTTP\");\n    }\n    resetMaxListeners() {\n        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpConnection); //# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_0__.HttpConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_http__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtaHR0cC1jb25uZWN0aW9uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUNiO0FBQ3ZCLGlFQUFlQSw2Q0FBY0EsRUFBQyxDQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLWh0dHAtY29ubmVjdGlvbi9kaXN0L2VzbS9pbmRleC5qcz9iZmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIdHRwQ29ubmVjdGlvbiBmcm9tIFwiLi9odHRwXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odHRwXCI7XG5leHBvcnQgZGVmYXVsdCBIdHRwQ29ubmVjdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJIdHRwQ29ubmVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_provider__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ1A7QUFDM0IsaUVBQWVBLGlEQUFRQSxFQUFDLENBQ3hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXIvZGlzdC9lc20vaW5kZXguanM/MjQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvdmlkZXIgZnJvbSBcIi4vcHJvdmlkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb3ZpZGVyXCI7XG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJQcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ JsonRpcProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass JsonRpcProvider extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(connection){\n        super(connection);\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    async connect(connection = this.connection) {\n        await this.open(connection);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async request(request, context) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(request.method, request.params || [], request.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), context);\n    }\n    async requestStrict(request, context) {\n        return new Promise(async (resolve, reject)=>{\n            if (!this.connection.connected) {\n                try {\n                    await this.open();\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            this.events.on(`${request.id}`, (response)=>{\n                if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(response)) {\n                    reject(response.error);\n                } else {\n                    resolve(response.result);\n                }\n            });\n            try {\n                await this.connection.send(request, context);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        } else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params\n            });\n        }\n    }\n    onClose(event) {\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    async open(connection = this.connection) {\n        if (this.connection === connection && this.connection.connected) return;\n        if (this.connection.connected) this.close();\n        if (typeof connection === \"string\") {\n            await this.connection.open(connection);\n            connection = this.connection;\n        }\n        this.connection = this.setConnection(connection);\n        await this.connection.open();\n        this.registerEventListeners();\n        this.events.emit(\"connect\");\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners) return;\n        this.connection.on(\"payload\", (payload)=>this.onPayload(payload));\n        this.connection.on(\"close\", (event)=>this.onClose(event));\n        this.connection.on(\"error\", (error)=>this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (error)=>this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JsonRpcProvider); //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_1__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _jsonrpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonrpc */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js\");\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\");\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./provider */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js\");\n/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validator */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDSDtBQUNJO0FBQ0MsQ0FDNUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2VzbS9pbmRleC5qcz8zOTJlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2pzb25ycGNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21pc2NcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb3ZpZGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0b3JcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vanNvbnJwYy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzL2Rpc3QvZXNtL2pzb25ycGMuanM/YWRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29ucnBjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vbWlzYy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vbWlzYy5qcz8wNzAzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBJRXZlbnRzIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbIklFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ IBaseJsonRpcProvider),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\");\n\nclass IJsonRpcConnection extends _misc__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(opts){\n        super();\n    }\n}\nclass IBaseJsonRpcProvider extends _misc__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(){\n        super();\n    }\n}\nclass IJsonRpcProvider extends IBaseJsonRpcProvider {\n    constructor(connection){\n        super();\n    }\n} //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUMxQixNQUFNQywyQkFBMkJELDBDQUFPQTtJQUMzQ0UsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSztJQUNUO0FBQ0o7QUFDTyxNQUFNQyw2QkFBNkJKLDBDQUFPQTtJQUM3Q0UsYUFBYztRQUNWLEtBQUs7SUFDVDtBQUNKO0FBQ08sTUFBTUcseUJBQXlCRDtJQUNsQ0YsWUFBWUksVUFBVSxDQUFFO1FBQ3BCLEtBQUs7SUFDVDtBQUNKLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2VzbS9wcm92aWRlci5qcz8wODcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElFdmVudHMgfSBmcm9tIFwiLi9taXNjXCI7XG5leHBvcnQgY2xhc3MgSUpzb25ScGNDb25uZWN0aW9uIGV4dGVuZHMgSUV2ZW50cyB7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJQmFzZUpzb25ScGNQcm92aWRlciBleHRlbmRzIElFdmVudHMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJSnNvblJwY1Byb3ZpZGVyIGV4dGVuZHMgSUJhc2VKc29uUnBjUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiSUV2ZW50cyIsIklKc29uUnBjQ29ubmVjdGlvbiIsImNvbnN0cnVjdG9yIiwib3B0cyIsIklCYXNlSnNvblJwY1Byb3ZpZGVyIiwiSUpzb25ScGNQcm92aWRlciIsImNvbm5lY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vdmFsaWRhdG9yLmpzPzliOGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxjQUFjLGNBQWM7QUFDbEMsTUFBTUMsa0JBQWtCLGtCQUFrQjtBQUMxQyxNQUFNQyxtQkFBbUIsbUJBQW1CO0FBQzVDLE1BQU1DLGlCQUFpQixpQkFBaUI7QUFDeEMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxlQUFlLGVBQWU7QUFDcEMsTUFBTUMsdUJBQXVCO0lBQUMsQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ3RFLE1BQU1DLDBCQUEwQjtJQUFDLENBQUM7SUFBTyxDQUFDO0NBQU0sQ0FBQztBQUNqRCxNQUFNQyxxQkFBcUI7SUFDOUIsQ0FBQ1IsWUFBWSxFQUFFO1FBQUVTLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWM7SUFDdEQsQ0FBQ1QsZ0JBQWdCLEVBQUU7UUFBRVEsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBa0I7SUFDOUQsQ0FBQ1IsaUJBQWlCLEVBQUU7UUFBRU8sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBbUI7SUFDaEUsQ0FBQ1AsZUFBZSxFQUFFO1FBQUVNLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNOLGVBQWUsRUFBRTtRQUFFSyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFpQjtJQUM1RCxDQUFDTCxhQUFhLEVBQUU7UUFBRUksTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBZTtBQUM1RCxFQUFFO0FBQ0ssTUFBTUMsZ0JBQWdCTixhQUFhLENBQzFDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vY29uc3RhbnRzLmpzP2EzYmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBBUlNFX0VSUk9SID0gXCJQQVJTRV9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVRVUVTVCA9IFwiSU5WQUxJRF9SRVFVRVNUXCI7XG5leHBvcnQgY29uc3QgTUVUSE9EX05PVF9GT1VORCA9IFwiTUVUSE9EX05PVF9GT1VORFwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUEFSQU1TID0gXCJJTlZBTElEX1BBUkFNU1wiO1xuZXhwb3J0IGNvbnN0IElOVEVSTkFMX0VSUk9SID0gXCJJTlRFUk5BTF9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUiA9IFwiU0VSVkVSX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgUkVTRVJWRURfRVJST1JfQ09ERVMgPSBbLTMyNzAwLCAtMzI2MDAsIC0zMjYwMSwgLTMyNjAyLCAtMzI2MDNdO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFID0gWy0zMjAwMCwgLTMyMDk5XTtcbmV4cG9ydCBjb25zdCBTVEFOREFSRF9FUlJPUl9NQVAgPSB7XG4gICAgW1BBUlNFX0VSUk9SXTogeyBjb2RlOiAtMzI3MDAsIG1lc3NhZ2U6IFwiUGFyc2UgZXJyb3JcIiB9LFxuICAgIFtJTlZBTElEX1JFUVVFU1RdOiB7IGNvZGU6IC0zMjYwMCwgbWVzc2FnZTogXCJJbnZhbGlkIFJlcXVlc3RcIiB9LFxuICAgIFtNRVRIT0RfTk9UX0ZPVU5EXTogeyBjb2RlOiAtMzI2MDEsIG1lc3NhZ2U6IFwiTWV0aG9kIG5vdCBmb3VuZFwiIH0sXG4gICAgW0lOVkFMSURfUEFSQU1TXTogeyBjb2RlOiAtMzI2MDIsIG1lc3NhZ2U6IFwiSW52YWxpZCBwYXJhbXNcIiB9LFxuICAgIFtJTlRFUk5BTF9FUlJPUl06IHsgY29kZTogLTMyNjAzLCBtZXNzYWdlOiBcIkludGVybmFsIGVycm9yXCIgfSxcbiAgICBbU0VSVkVSX0VSUk9SXTogeyBjb2RlOiAtMzIwMDAsIG1lc3NhZ2U6IFwiU2VydmVyIGVycm9yXCIgfSxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9FUlJPUiA9IFNFUlZFUl9FUlJPUjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiUEFSU0VfRVJST1IiLCJJTlZBTElEX1JFUVVFU1QiLCJNRVRIT0RfTk9UX0ZPVU5EIiwiSU5WQUxJRF9QQVJBTVMiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZFUl9FUlJPUiIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UiLCJTVEFOREFSRF9FUlJPUl9NQVAiLCJjb2RlIiwibWVzc2FnZSIsIkRFRkFVTFRfRVJST1IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/../node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRDtBQUM3QyxNQUFNQyxXQUFXRCw4REFBTUEsQ0FBQztBQUNZLENBQzNDLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZW52LmpzP2VhNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb2RlIH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCI7XG5leHBvcnQgY29uc3QgaXNOb2RlSnMgPSBpc05vZGU7XG5leHBvcnQgKiBmcm9tIFwiQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiaXNOb2RlIiwiaXNOb2RlSnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBZ0g7QUFDekcsU0FBU0ksa0JBQWtCQyxJQUFJO0lBQ2xDLE9BQU9BLFFBQVFMLCtEQUF1QixDQUFDLEVBQUUsSUFBSUssUUFBUUwsK0RBQXVCLENBQUMsRUFBRTtBQUNuRjtBQUNPLFNBQVNNLG9CQUFvQkQsSUFBSTtJQUNwQyxPQUFPSiw0REFBb0JBLENBQUNNLFFBQVEsQ0FBQ0Y7QUFDekM7QUFDTyxTQUFTRyxpQkFBaUJILElBQUk7SUFDakMsT0FBTyxPQUFPQSxTQUFTO0FBQzNCO0FBQ08sU0FBU0ksU0FBU0MsSUFBSTtJQUN6QixJQUFJLENBQUNDLE9BQU9DLElBQUksQ0FBQ1YsMERBQWtCQSxFQUFFSyxRQUFRLENBQUNHLE9BQU87UUFDakQsT0FBT1IsMERBQWtCLENBQUNDLHFEQUFhQSxDQUFDO0lBQzVDO0lBQ0EsT0FBT0QsMERBQWtCLENBQUNRLEtBQUs7QUFDbkM7QUFDTyxTQUFTRyxlQUFlUixJQUFJO0lBQy9CLE1BQU1TLFFBQVFILE9BQU9JLE1BQU0sQ0FBQ2IsMERBQWtCQSxFQUFFYyxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVaLElBQUksS0FBS0E7SUFDckUsSUFBSSxDQUFDUyxPQUFPO1FBQ1IsT0FBT1osMERBQWtCLENBQUNDLHFEQUFhQSxDQUFDO0lBQzVDO0lBQ0EsT0FBT1c7QUFDWDtBQUNPLFNBQVNJLHFCQUFxQkMsUUFBUTtJQUN6QyxJQUFJLE9BQU9BLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxLQUFLLGFBQWE7UUFDNUMsT0FBTztZQUFFZ0IsT0FBTztZQUFPRCxPQUFPO1FBQWtDO0lBQ3BFO0lBQ0EsSUFBSSxPQUFPRCxTQUFTQyxLQUFLLENBQUNFLE9BQU8sS0FBSyxhQUFhO1FBQy9DLE9BQU87WUFBRUQsT0FBTztZQUFPRCxPQUFPO1FBQXFDO0lBQ3ZFO0lBQ0EsSUFBSSxDQUFDWixpQkFBaUJXLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxHQUFHO1FBQ3hDLE9BQU87WUFDSGdCLE9BQU87WUFDUEQsT0FBTyxDQUFDLHNDQUFzQyxFQUFFRCxTQUFTQyxLQUFLLENBQUNmLElBQUksQ0FBQyxDQUFDO1FBQ3pFO0lBQ0o7SUFDQSxJQUFJQyxvQkFBb0JhLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxHQUFHO1FBQzFDLE1BQU1lLFFBQVFQLGVBQWVNLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSTtRQUNoRCxJQUFJZSxNQUFNRSxPQUFPLEtBQUtwQiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUMsQ0FBQ21CLE9BQU8sSUFDM0RILFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLRixNQUFNRSxPQUFPLEVBQUU7WUFDMUMsT0FBTztnQkFDSEQsT0FBTztnQkFDUEQsT0FBTyxDQUFDLHlDQUF5QyxFQUFFRCxTQUFTQyxLQUFLLENBQUNmLElBQUksQ0FBQyxDQUFDO1lBQzVFO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFBRWdCLE9BQU87SUFBSztBQUN6QjtBQUNPLFNBQVNFLHFCQUFxQk4sQ0FBQyxFQUFFTyxHQUFHLEVBQUVkLElBQUk7SUFDN0MsT0FBT08sRUFBRUssT0FBTyxDQUFDZixRQUFRLENBQUMsNEJBQTRCVSxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQywwQkFDbkUsSUFBSWtCLE1BQU0sQ0FBQyxZQUFZLEVBQUVmLEtBQUssWUFBWSxFQUFFYyxJQUFJLENBQUMsSUFDakRQO0FBQ1YsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Vycm9yLmpzPzkyY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UsIFJFU0VSVkVEX0VSUk9SX0NPREVTLCBTVEFOREFSRF9FUlJPUl9NQVAsIERFRkFVTFRfRVJST1IsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNTZXJ2ZXJFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiBjb2RlIDw9IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFWzBdICYmIGNvZGUgPj0gU0VSVkVSX0VSUk9SX0NPREVfUkFOR0VbMV07XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZXNlcnZlZEVycm9yQ29kZShjb2RlKSB7XG4gICAgcmV0dXJuIFJFU0VSVkVEX0VSUk9SX0NPREVTLmluY2x1ZGVzKGNvZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiB0eXBlb2YgY29kZSA9PT0gXCJudW1iZXJcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvcih0eXBlKSB7XG4gICAgaWYgKCFPYmplY3Qua2V5cyhTVEFOREFSRF9FUlJPUl9NQVApLmluY2x1ZGVzKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl07XG4gICAgfVxuICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbdHlwZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3JCeUNvZGUoY29kZSkge1xuICAgIGNvbnN0IG1hdGNoID0gT2JqZWN0LnZhbHVlcyhTVEFOREFSRF9FUlJPUl9NQVApLmZpbmQoZSA9PiBlLmNvZGUgPT09IGNvZGUpO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXTtcbiAgICB9XG4gICAgcmV0dXJuIG1hdGNoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlSnNvblJwY0Vycm9yKHJlc3BvbnNlKSB7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5lcnJvci5jb2RlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgZXJyb3I6IFwiTWlzc2luZyBjb2RlIGZvciBKU09OLVJQQyBlcnJvclwiIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiBcIk1pc3NpbmcgbWVzc2FnZSBmb3IgSlNPTi1SUEMgZXJyb3JcIiB9O1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBgSW52YWxpZCBlcnJvciBjb2RlIHR5cGUgZm9yIEpTT04tUlBDOiAke3Jlc3BvbnNlLmVycm9yLmNvZGV9YCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShyZXNwb25zZS5lcnJvci5jb2RlKTtcbiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgIT09IFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXS5tZXNzYWdlICYmXG4gICAgICAgICAgICByZXNwb25zZS5lcnJvci5tZXNzYWdlID09PSBlcnJvci5tZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogYEludmFsaWQgZXJyb3IgY29kZSBtZXNzYWdlIGZvciBKU09OLVJQQzogJHtyZXNwb25zZS5lcnJvci5jb2RlfWAsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb25uZWN0aW9uRXJyb3IoZSwgdXJsLCB0eXBlKSB7XG4gICAgcmV0dXJuIGUubWVzc2FnZS5pbmNsdWRlcyhcImdldGFkZHJpbmZvIEVOT1RGT1VORFwiKSB8fCBlLm1lc3NhZ2UuaW5jbHVkZXMoXCJjb25uZWN0IEVDT05OUkVGVVNFRFwiKVxuICAgICAgICA/IG5ldyBFcnJvcihgVW5hdmFpbGFibGUgJHt0eXBlfSBSUEMgdXJsIGF0ICR7dXJsfWApXG4gICAgICAgIDogZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU1RBTkRBUkRfRVJST1JfTUFQIiwiREVGQVVMVF9FUlJPUiIsImlzU2VydmVyRXJyb3JDb2RlIiwiY29kZSIsImlzUmVzZXJ2ZWRFcnJvckNvZGUiLCJpbmNsdWRlcyIsImlzVmFsaWRFcnJvckNvZGUiLCJnZXRFcnJvciIsInR5cGUiLCJPYmplY3QiLCJrZXlzIiwiZ2V0RXJyb3JCeUNvZGUiLCJtYXRjaCIsInZhbHVlcyIsImZpbmQiLCJlIiwidmFsaWRhdGVKc29uUnBjRXJyb3IiLCJyZXNwb25zZSIsImVycm9yIiwidmFsaWQiLCJtZXNzYWdlIiwicGFyc2VDb25uZWN0aW9uRXJyb3IiLCJ1cmwiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ2I7QUFDcEQsU0FBU0ssVUFBVUMsVUFBVSxDQUFDO0lBQ2pDLE1BQU1DLE9BQU9DLEtBQUtDLEdBQUcsS0FBS0MsS0FBS0MsR0FBRyxDQUFDLElBQUlMO0lBQ3ZDLE1BQU1NLFFBQVFGLEtBQUtHLEtBQUssQ0FBQ0gsS0FBS0ksTUFBTSxLQUFLSixLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdEQsT0FBT0MsT0FBT0s7QUFDbEI7QUFDTyxTQUFTRyxlQUFlVCxVQUFVLENBQUM7SUFDdEMsT0FBT1UsT0FBT1gsVUFBVUM7QUFDNUI7QUFDTyxTQUFTVyxxQkFBcUJDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxFQUFFO0lBQ25ELE9BQU87UUFDSEEsSUFBSUEsTUFBTWY7UUFDVmdCLFNBQVM7UUFDVEg7UUFDQUM7SUFDSjtBQUNKO0FBQ08sU0FBU0csb0JBQW9CRixFQUFFLEVBQUVHLE1BQU07SUFDMUMsT0FBTztRQUNISDtRQUNBQyxTQUFTO1FBQ1RFO0lBQ0o7QUFDSjtBQUNPLFNBQVNDLG1CQUFtQkosRUFBRSxFQUFFSyxLQUFLLEVBQUVDLElBQUk7SUFDOUMsT0FBTztRQUNITjtRQUNBQyxTQUFTO1FBQ1RJLE9BQU9FLG1CQUFtQkYsT0FBT0M7SUFDckM7QUFDSjtBQUNPLFNBQVNDLG1CQUFtQkYsS0FBSyxFQUFFQyxJQUFJO0lBQzFDLElBQUksT0FBT0QsVUFBVSxhQUFhO1FBQzlCLE9BQU96QixnREFBUUEsQ0FBQ0csc0RBQWNBO0lBQ2xDO0lBQ0EsSUFBSSxPQUFPc0IsVUFBVSxVQUFVO1FBQzNCQSxRQUFRRyxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUc3QixnREFBUUEsQ0FBQ0ksb0RBQVlBLElBQUk7WUFBRTBCLFNBQVNMO1FBQU07SUFDdEY7SUFDQSxJQUFJLE9BQU9DLFNBQVMsYUFBYTtRQUM3QkQsTUFBTUMsSUFBSSxHQUFHQTtJQUNqQjtJQUNBLElBQUl4QiwyREFBbUJBLENBQUN1QixNQUFNTSxJQUFJLEdBQUc7UUFDakNOLFFBQVF4QixzREFBY0EsQ0FBQ3dCLE1BQU1NLElBQUk7SUFDckM7SUFDQSxPQUFPTjtBQUNYLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanM/NTQxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFcnJvciwgZ2V0RXJyb3JCeUNvZGUsIGlzUmVzZXJ2ZWRFcnJvckNvZGUgfSBmcm9tIFwiLi9lcnJvclwiO1xuaW1wb3J0IHsgSU5URVJOQUxfRVJST1IsIFNFUlZFUl9FUlJPUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBheWxvYWRJZChlbnRyb3B5ID0gMykge1xuICAgIGNvbnN0IGRhdGUgPSBEYXRlLm5vdygpICogTWF0aC5wb3coMTAsIGVudHJvcHkpO1xuICAgIGNvbnN0IGV4dHJhID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5wb3coMTAsIGVudHJvcHkpKTtcbiAgICByZXR1cm4gZGF0ZSArIGV4dHJhO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJpZ0ludFJwY0lkKGVudHJvcHkgPSA2KSB7XG4gICAgcmV0dXJuIEJpZ0ludChwYXlsb2FkSWQoZW50cm9weSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNSZXF1ZXN0KG1ldGhvZCwgcGFyYW1zLCBpZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBpZCB8fCBwYXlsb2FkSWQoKSxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBwYXJhbXMsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjUmVzdWx0KGlkLCByZXN1bHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgcmVzdWx0LFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY0Vycm9yKGlkLCBlcnJvciwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBlcnJvcjogZm9ybWF0RXJyb3JNZXNzYWdlKGVycm9yLCBkYXRhKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEVycm9yTWVzc2FnZShlcnJvciwgZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKElOVEVSTkFMX0VSUk9SKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBlcnJvciA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZ2V0RXJyb3IoU0VSVkVSX0VSUk9SKSksIHsgbWVzc2FnZTogZXJyb3IgfSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBlcnJvci5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUoZXJyb3IuY29kZSkpIHtcbiAgICAgICAgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShlcnJvci5jb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFcnJvciIsImdldEVycm9yQnlDb2RlIiwiaXNSZXNlcnZlZEVycm9yQ29kZSIsIklOVEVSTkFMX0VSUk9SIiwiU0VSVkVSX0VSUk9SIiwicGF5bG9hZElkIiwiZW50cm9weSIsImRhdGUiLCJEYXRlIiwibm93IiwiTWF0aCIsInBvdyIsImV4dHJhIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRCaWdJbnRScGNJZCIsIkJpZ0ludCIsImZvcm1hdEpzb25ScGNSZXF1ZXN0IiwibWV0aG9kIiwicGFyYW1zIiwiaWQiLCJqc29ucnBjIiwiZm9ybWF0SnNvblJwY1Jlc3VsdCIsInJlc3VsdCIsImZvcm1hdEpzb25ScGNFcnJvciIsImVycm9yIiwiZGF0YSIsImZvcm1hdEVycm9yTWVzc2FnZSIsIk9iamVjdCIsImFzc2lnbiIsIm1lc3NhZ2UiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QjtBQUNKO0FBQ0Y7QUFDRztBQUNDO0FBQ0Y7QUFDRjtBQUNPLENBQzdCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vaW5kZXguanM/MGUzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vycm9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbnZcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcm91dGluZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VybFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdmFsaWRhdG9yc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vcm91dGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLFNBQVNBLGFBQWFDLEtBQUs7SUFDOUIsSUFBSUEsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDckIsT0FBT0MscUJBQXFCRjtJQUNoQztJQUNBLElBQUksTUFBTUcsSUFBSSxDQUFDSCxRQUFRO1FBQ25CLE9BQU87SUFDWDtJQUNBLE9BQU87QUFDWDtBQUNPLFNBQVNJLG9CQUFvQkosS0FBSztJQUNyQyxPQUFPQSxVQUFVO0FBQ3JCO0FBQ08sU0FBU0UscUJBQXFCRixLQUFLO0lBQ3RDLElBQUlJLG9CQUFvQkosUUFBUTtRQUM1QixPQUFPO0lBQ1g7SUFDQSxJQUFJLENBQUNBLE1BQU1DLFFBQVEsQ0FBQyxNQUFNO1FBQ3RCLE9BQU87SUFDWDtJQUNBLElBQUlELE1BQU1LLEtBQUssQ0FBQyxLQUFLQyxNQUFNLEtBQUssR0FBRztRQUMvQixPQUFPO0lBQ1g7SUFDQSxJQUFJTixNQUFNSyxLQUFLLENBQUMsS0FBS0UsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJLE9BQU8sSUFBSUgsTUFBTSxLQUFLLEdBQUc7UUFDNUQsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksNEJBQTRCVixLQUFLO0lBQzdDLE9BQU8sQ0FBQ0ksb0JBQW9CSixVQUFVRSxxQkFBcUJGLFVBQVUsQ0FBQ0EsTUFBTUssS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUNJLElBQUk7QUFDbEc7QUFDTyxTQUFTRSw2QkFBNkJYLEtBQUs7SUFDOUMsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRyxFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vcm91dGluZy5qcz84ZmM5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUm91dGUocm91dGUpIHtcbiAgICBpZiAocm91dGUuaW5jbHVkZXMoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSk7XG4gICAgfVxuICAgIGlmICgvXFxXL2cudGVzdChyb3V0ZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlID09PSBcIipcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIGlmIChpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCFyb3V0ZS5pbmNsdWRlcyhcIipcIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocm91dGUuc3BsaXQoXCIqXCIpLmxlbmd0aCAhPT0gMikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChyb3V0ZS5zcGxpdChcIipcIikuZmlsdGVyKHggPT4geC50cmltKCkgPT09IFwiXCIpLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiAhaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkgJiYgaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpICYmICFyb3V0ZS5zcGxpdChcIipcIilbMF0udHJpbSgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICByZXR1cm4gIWlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpICYmIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSAmJiAhcm91dGUuc3BsaXQoXCIqXCIpWzFdLnRyaW0oKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRpbmcuanMubWFwIl0sIm5hbWVzIjpbImlzVmFsaWRSb3V0ZSIsInJvdXRlIiwiaW5jbHVkZXMiLCJpc1ZhbGlkV2lsZGNhcmRSb3V0ZSIsInRlc3QiLCJpc1ZhbGlkRGVmYXVsdFJvdXRlIiwic3BsaXQiLCJsZW5ndGgiLCJmaWx0ZXIiLCJ4IiwidHJpbSIsImlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZSIsImlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkMsQ0FDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcz9hMTc2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLGFBQWE7QUFDbkIsTUFBTUMsV0FBVztBQUNqQixTQUFTQyxlQUFlQyxHQUFHO0lBQ3ZCLE1BQU1DLFVBQVVELElBQUlFLEtBQUssQ0FBQyxJQUFJQyxPQUFPLFNBQVM7SUFDOUMsSUFBSSxDQUFDRixXQUFXLENBQUNBLFFBQVFHLE1BQU0sRUFDM0I7SUFDSixPQUFPSCxPQUFPLENBQUMsRUFBRTtBQUNyQjtBQUNBLFNBQVNJLG1CQUFtQkwsR0FBRyxFQUFFTSxLQUFLO0lBQ2xDLE1BQU1DLFdBQVdSLGVBQWVDO0lBQ2hDLElBQUksT0FBT08sYUFBYSxhQUNwQixPQUFPO0lBQ1gsT0FBTyxJQUFJSixPQUFPRyxPQUFPRSxJQUFJLENBQUNEO0FBQ2xDO0FBQ08sU0FBU0UsVUFBVVQsR0FBRztJQUN6QixPQUFPSyxtQkFBbUJMLEtBQUtIO0FBQ25DO0FBQ08sU0FBU2EsUUFBUVYsR0FBRztJQUN2QixPQUFPSyxtQkFBbUJMLEtBQUtGO0FBQ25DO0FBQ08sU0FBU2EsZUFBZVgsR0FBRztJQUM5QixPQUFPLElBQUlHLE9BQU8sOEJBQThCSyxJQUFJLENBQUNSO0FBQ3pELEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanM/NjI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIVFRQX1JFR0VYID0gXCJeaHR0cHM/OlwiO1xuY29uc3QgV1NfUkVHRVggPSBcIl53c3M/OlwiO1xuZnVuY3Rpb24gZ2V0VXJsUHJvdG9jb2wodXJsKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHVybC5tYXRjaChuZXcgUmVnRXhwKC9eXFx3KzovLCBcImdpXCIpKTtcbiAgICBpZiAoIW1hdGNoZXMgfHwgIW1hdGNoZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIG1hdGNoZXNbMF07XG59XG5mdW5jdGlvbiBtYXRjaFJlZ2V4UHJvdG9jb2wodXJsLCByZWdleCkge1xuICAgIGNvbnN0IHByb3RvY29sID0gZ2V0VXJsUHJvdG9jb2wodXJsKTtcbiAgICBpZiAodHlwZW9mIHByb3RvY29sID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAocmVnZXgpLnRlc3QocHJvdG9jb2wpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSHR0cFVybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgSFRUUF9SRUdFWCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXc1VybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgV1NfUkVHRVgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYWxob3N0VXJsKHVybCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwid3NzPzovL2xvY2FsaG9zdCg6ZHsyLDV9KT9cIikudGVzdCh1cmwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJIVFRQX1JFR0VYIiwiV1NfUkVHRVgiLCJnZXRVcmxQcm90b2NvbCIsInVybCIsIm1hdGNoZXMiLCJtYXRjaCIsIlJlZ0V4cCIsImxlbmd0aCIsIm1hdGNoUmVnZXhQcm90b2NvbCIsInJlZ2V4IiwicHJvdG9jb2wiLCJ0ZXN0IiwiaXNIdHRwVXJsIiwiaXNXc1VybCIsImlzTG9jYWxob3N0VXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdmFsaWRhdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTyxTQUFTQSxpQkFBaUJDLE9BQU87SUFDcEMsT0FBUSxPQUFPQSxZQUFZLFlBQ3ZCLFFBQVFBLFdBQ1IsYUFBYUEsV0FDYkEsUUFBUUMsT0FBTyxLQUFLO0FBQzVCO0FBQ08sU0FBU0MsaUJBQWlCRixPQUFPO0lBQ3BDLE9BQU9ELGlCQUFpQkMsWUFBWSxZQUFZQTtBQUNwRDtBQUNPLFNBQVNHLGtCQUFrQkgsT0FBTztJQUNyQyxPQUFPRCxpQkFBaUJDLFlBQWFJLENBQUFBLGdCQUFnQkosWUFBWUssZUFBZUwsUUFBTztBQUMzRjtBQUNPLFNBQVNJLGdCQUFnQkosT0FBTztJQUNuQyxPQUFPLFlBQVlBO0FBQ3ZCO0FBQ08sU0FBU0ssZUFBZUwsT0FBTztJQUNsQyxPQUFPLFdBQVdBO0FBQ3RCO0FBQ08sU0FBU00sMkJBQTJCQyxVQUFVO0lBQ2pELE9BQU8sV0FBV0EsY0FBY0EsV0FBV0MsS0FBSyxLQUFLO0FBQ3pELEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzPzhiN2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkge1xuICAgIHJldHVybiAodHlwZW9mIHBheWxvYWQgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgXCJpZFwiIGluIHBheWxvYWQgJiZcbiAgICAgICAgXCJqc29ucnBjXCIgaW4gcGF5bG9hZCAmJlxuICAgICAgICBwYXlsb2FkLmpzb25ycGMgPT09IFwiMi4wXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1JlcXVlc3QocGF5bG9hZCkge1xuICAgIHJldHVybiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpICYmIFwibWV0aG9kXCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXNwb25zZShwYXlsb2FkKSB7XG4gICAgcmV0dXJuIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkgJiYgKGlzSnNvblJwY1Jlc3VsdChwYXlsb2FkKSB8fCBpc0pzb25ScGNFcnJvcihwYXlsb2FkKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVzdWx0KHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJyZXN1bHRcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY0Vycm9yKHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJlcnJvclwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQodmFsaWRhdGlvbikge1xuICAgIHJldHVybiBcImVycm9yXCIgaW4gdmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uLnZhbGlkID09PSBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbImlzSnNvblJwY1BheWxvYWQiLCJwYXlsb2FkIiwianNvbnJwYyIsImlzSnNvblJwY1JlcXVlc3QiLCJpc0pzb25ScGNSZXNwb25zZSIsImlzSnNvblJwY1Jlc3VsdCIsImlzSnNvblJwY0Vycm9yIiwiaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQiLCJ2YWxpZGF0aW9uIiwidmFsaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* reexport safe */ _ws__WEBPACK_IMPORTED_MODULE_0__.WsConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ws */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ws__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0M7QUFDWDtBQUNyQixpRUFBZUEsMkNBQVlBLEVBQUMsQ0FDNUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL2Rpc3QvZXNtL2luZGV4LmpzP2FiMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdzQ29ubmVjdGlvbiBmcm9tIFwiLi93c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vd3NcIjtcbmV4cG9ydCBkZWZhdWx0IFdzQ29ubmVjdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJXc0Nvbm5lY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBuiltInWebSocket: () => (/* binding */ hasBuiltInWebSocket),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   resolveWebSocketImplementation: () => (/* binding */ resolveWebSocketImplementation),\n/* harmony export */   truncateQuery: () => (/* binding */ truncateQuery)\n/* harmony export */ });\nconst resolveWebSocketImplementation = ()=>{\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    } else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    } else if (false) {} else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return __webpack_require__(/*! ws */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\");\n};\nconst hasBuiltInWebSocket = ()=>typeof WebSocket !== \"undefined\" || typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\" ||  false && 0 || typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\";\nconst isBrowser = ()=>\"undefined\" !== \"undefined\";\nconst truncateQuery = (wssUrl)=>wssUrl.split(\"?\")[0]; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9kaXN0L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sTUFBTUEsaUNBQWlDO0lBQzFDLElBQUksT0FBT0MsY0FBYyxhQUFhO1FBQ2xDLE9BQU9BO0lBQ1gsT0FDSyxJQUFJLE9BQU9DLFdBQVcsZUFBZSxPQUFPQSxPQUFPRCxTQUFTLEtBQUssYUFBYTtRQUMvRSxPQUFPQyxPQUFPRCxTQUFTO0lBQzNCLE9BQ0ssSUFBSSxLQUF3RSxFQUFFLEVBRWxGLE1BQ0ksSUFBSSxPQUFPRyxTQUFTLGVBQWUsT0FBT0EsS0FBS0gsU0FBUyxLQUFLLGFBQWE7UUFDM0UsT0FBT0csS0FBS0gsU0FBUztJQUN6QjtJQUNBLE9BQU9JLG1CQUFPQSxDQUFDLCtGQUFJO0FBQ3ZCLEVBQUU7QUFDSyxNQUFNQyxzQkFBc0IsSUFBTSxPQUFPTCxjQUFjLGVBQ3pELE9BQU9DLFdBQVcsZUFBZSxPQUFPQSxPQUFPRCxTQUFTLEtBQUssZUFDN0QsTUFBNkIsSUFBSSxDQUF1QyxJQUN4RSxPQUFPRyxTQUFTLGVBQWUsT0FBT0EsS0FBS0gsU0FBUyxLQUFLLFlBQWE7QUFDcEUsTUFBTU0sWUFBWSxJQUFNLGdCQUFrQixZQUFZO0FBQ3RELE1BQU1DLGdCQUFnQixDQUFDQyxTQUFXQSxPQUFPQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUM5RCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vZGlzdC9lc20vdXRpbHMuanM/NWFmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVzb2x2ZVdlYlNvY2tldEltcGxlbWVudGF0aW9uID0gKCkgPT4ge1xuICAgIGlmICh0eXBlb2YgV2ViU29ja2V0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBXZWJTb2NrZXQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGdsb2JhbC5XZWJTb2NrZXQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIGdsb2JhbC5XZWJTb2NrZXQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5XZWJTb2NrZXQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5XZWJTb2NrZXQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBzZWxmLldlYlNvY2tldCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4gc2VsZi5XZWJTb2NrZXQ7XG4gICAgfVxuICAgIHJldHVybiByZXF1aXJlKFwid3NcIik7XG59O1xuZXhwb3J0IGNvbnN0IGhhc0J1aWx0SW5XZWJTb2NrZXQgPSAoKSA9PiB0eXBlb2YgV2ViU29ja2V0ICE9PSBcInVuZGVmaW5lZFwiIHx8XG4gICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGdsb2JhbC5XZWJTb2NrZXQgIT09IFwidW5kZWZpbmVkXCIpIHx8XG4gICAgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5XZWJTb2NrZXQgIT09IFwidW5kZWZpbmVkXCIpIHx8XG4gICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBzZWxmLldlYlNvY2tldCAhPT0gXCJ1bmRlZmluZWRcIik7XG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gKCkgPT4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcbmV4cG9ydCBjb25zdCB0cnVuY2F0ZVF1ZXJ5ID0gKHdzc1VybCkgPT4gd3NzVXJsLnNwbGl0KFwiP1wiKVswXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJyZXNvbHZlV2ViU29ja2V0SW1wbGVtZW50YXRpb24iLCJXZWJTb2NrZXQiLCJnbG9iYWwiLCJ3aW5kb3ciLCJzZWxmIiwicmVxdWlyZSIsImhhc0J1aWx0SW5XZWJTb2NrZXQiLCJpc0Jyb3dzZXIiLCJ0cnVuY2F0ZVF1ZXJ5Iiwid3NzVXJsIiwic3BsaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ WsConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js\");\n\n\n\n\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nconst WS = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.resolveWebSocketImplementation)();\nclass WsConnection {\n    constructor(url){\n        this.url = url;\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.registering = false;\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);\n        }\n        this.url = url;\n    }\n    get connected() {\n        return typeof this.socket !== \"undefined\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async open(url = this.url) {\n        await this.register(url);\n    }\n    async close() {\n        return new Promise((resolve, reject)=>{\n            if (typeof this.socket === \"undefined\") {\n                reject(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (event)=>{\n                this.onClose(event);\n                resolve();\n            };\n            this.socket.close();\n        });\n    }\n    async send(payload, context) {\n        if (typeof this.socket === \"undefined\") {\n            this.socket = await this.register();\n        }\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(payload));\n        } catch (e) {\n            this.onError(payload.id, e);\n        }\n    }\n    register(url = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);\n        }\n        if (this.registering) {\n            const currentMaxListeners = this.events.getMaxListeners();\n            if (this.events.listenerCount(\"register_error\") >= currentMaxListeners || this.events.listenerCount(\"open\") >= currentMaxListeners) {\n                this.events.setMaxListeners(currentMaxListeners + 1);\n            }\n            return new Promise((resolve, reject)=>{\n                this.events.once(\"register_error\", (error)=>{\n                    this.resetMaxListeners();\n                    reject(error);\n                });\n                this.events.once(\"open\", ()=>{\n                    this.resetMaxListeners();\n                    if (typeof this.socket === \"undefined\") {\n                        return reject(new Error(\"WebSocket connection is missing or invalid\"));\n                    }\n                    resolve(this.socket);\n                });\n            });\n        }\n        this.url = url;\n        this.registering = true;\n        return new Promise((resolve, reject)=>{\n            const opts = !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(url)\n            } : undefined;\n            const socket = new WS(url, [], opts);\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_3__.hasBuiltInWebSocket)()) {\n                socket.onerror = (event)=>{\n                    const errorEvent = event;\n                    reject(this.emitError(errorEvent.error));\n                };\n            } else {\n                socket.on(\"error\", (errorEvent)=>{\n                    reject(this.emitError(errorEvent));\n                });\n            }\n            socket.onopen = ()=>{\n                this.onOpen(socket);\n                resolve(socket);\n            };\n        });\n    }\n    onOpen(socket) {\n        socket.onmessage = (event)=>this.onPayload(event);\n        socket.onclose = (event)=>this.onClose(event);\n        this.socket = socket;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose(event) {\n        this.socket = undefined;\n        this.registering = false;\n        this.events.emit(\"close\", event);\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\") return;\n        const payload = typeof e.data === \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, (0,_utils__WEBPACK_IMPORTED_MODULE_3__.truncateQuery)(url), \"WS\");\n    }\n    resetMaxListeners() {\n        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n        }\n    }\n    emitError(errorEvent) {\n        const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for host: ${(0,_utils__WEBPACK_IMPORTED_MODULE_3__.truncateQuery)(this.url)}`));\n        this.events.emit(\"register_error\", error);\n        return error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WsConnection); //# sourceMappingURL=ws.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9kaXN0L2VzbS93cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXNDO0FBQ3NDO0FBQ3FEO0FBQ3BDO0FBQzdGLE1BQU1XLHNDQUFzQztBQUM1QyxNQUFNQyxLQUFLSCxzRUFBOEJBO0FBQ2xDLE1BQU1JO0lBQ1RDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLElBQUksQ0FBQ0EsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUloQixnREFBWUE7UUFDOUIsSUFBSSxDQUFDaUIsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ1oscUVBQU9BLENBQUNVLE1BQU07WUFDZixNQUFNLElBQUlHLE1BQU0sQ0FBQywwREFBMEQsRUFBRUgsSUFBSSxDQUFDO1FBQ3RGO1FBQ0EsSUFBSSxDQUFDQSxHQUFHLEdBQUdBO0lBQ2Y7SUFDQSxJQUFJSSxZQUFZO1FBQ1osT0FBTyxPQUFPLElBQUksQ0FBQ0MsTUFBTSxLQUFLO0lBQ2xDO0lBQ0EsSUFBSUMsYUFBYTtRQUNiLE9BQU8sSUFBSSxDQUFDSixXQUFXO0lBQzNCO0lBQ0FLLEdBQUdDLEtBQUssRUFBRUMsUUFBUSxFQUFFO1FBQ2hCLElBQUksQ0FBQ1IsTUFBTSxDQUFDTSxFQUFFLENBQUNDLE9BQU9DO0lBQzFCO0lBQ0FDLEtBQUtGLEtBQUssRUFBRUMsUUFBUSxFQUFFO1FBQ2xCLElBQUksQ0FBQ1IsTUFBTSxDQUFDUyxJQUFJLENBQUNGLE9BQU9DO0lBQzVCO0lBQ0FFLElBQUlILEtBQUssRUFBRUMsUUFBUSxFQUFFO1FBQ2pCLElBQUksQ0FBQ1IsTUFBTSxDQUFDVSxHQUFHLENBQUNILE9BQU9DO0lBQzNCO0lBQ0FHLGVBQWVKLEtBQUssRUFBRUMsUUFBUSxFQUFFO1FBQzVCLElBQUksQ0FBQ1IsTUFBTSxDQUFDVyxjQUFjLENBQUNKLE9BQU9DO0lBQ3RDO0lBQ0EsTUFBTUksS0FBS2IsTUFBTSxJQUFJLENBQUNBLEdBQUcsRUFBRTtRQUN2QixNQUFNLElBQUksQ0FBQ2MsUUFBUSxDQUFDZDtJQUN4QjtJQUNBLE1BQU1lLFFBQVE7UUFDVixPQUFPLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7WUFDekIsSUFBSSxPQUFPLElBQUksQ0FBQ2IsTUFBTSxLQUFLLGFBQWE7Z0JBQ3BDYSxPQUFPLElBQUlmLE1BQU07Z0JBQ2pCO1lBQ0o7WUFDQSxJQUFJLENBQUNFLE1BQU0sQ0FBQ2MsT0FBTyxHQUFHWCxDQUFBQTtnQkFDbEIsSUFBSSxDQUFDWSxPQUFPLENBQUNaO2dCQUNiUztZQUNKO1lBQ0EsSUFBSSxDQUFDWixNQUFNLENBQUNVLEtBQUs7UUFDckI7SUFDSjtJQUNBLE1BQU1NLEtBQUtDLE9BQU8sRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLElBQUksT0FBTyxJQUFJLENBQUNsQixNQUFNLEtBQUssYUFBYTtZQUNwQyxJQUFJLENBQUNBLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQ1MsUUFBUTtRQUNyQztRQUNBLElBQUk7WUFDQSxJQUFJLENBQUNULE1BQU0sQ0FBQ2dCLElBQUksQ0FBQ2xDLDJFQUFpQkEsQ0FBQ21DO1FBQ3ZDLEVBQ0EsT0FBT0UsR0FBRztZQUNOLElBQUksQ0FBQ0MsT0FBTyxDQUFDSCxRQUFRSSxFQUFFLEVBQUVGO1FBQzdCO0lBQ0o7SUFDQVYsU0FBU2QsTUFBTSxJQUFJLENBQUNBLEdBQUcsRUFBRTtRQUNyQixJQUFJLENBQUNWLHFFQUFPQSxDQUFDVSxNQUFNO1lBQ2YsTUFBTSxJQUFJRyxNQUFNLENBQUMsMERBQTBELEVBQUVILElBQUksQ0FBQztRQUN0RjtRQUNBLElBQUksSUFBSSxDQUFDRSxXQUFXLEVBQUU7WUFDbEIsTUFBTXlCLHNCQUFzQixJQUFJLENBQUMxQixNQUFNLENBQUMyQixlQUFlO1lBQ3ZELElBQUksSUFBSSxDQUFDM0IsTUFBTSxDQUFDNEIsYUFBYSxDQUFDLHFCQUFxQkYsdUJBQy9DLElBQUksQ0FBQzFCLE1BQU0sQ0FBQzRCLGFBQWEsQ0FBQyxXQUFXRixxQkFBcUI7Z0JBQzFELElBQUksQ0FBQzFCLE1BQU0sQ0FBQzZCLGVBQWUsQ0FBQ0gsc0JBQXNCO1lBQ3REO1lBQ0EsT0FBTyxJQUFJWCxRQUFRLENBQUNDLFNBQVNDO2dCQUN6QixJQUFJLENBQUNqQixNQUFNLENBQUNTLElBQUksQ0FBQyxrQkFBa0JxQixDQUFBQTtvQkFDL0IsSUFBSSxDQUFDQyxpQkFBaUI7b0JBQ3RCZCxPQUFPYTtnQkFDWDtnQkFDQSxJQUFJLENBQUM5QixNQUFNLENBQUNTLElBQUksQ0FBQyxRQUFRO29CQUNyQixJQUFJLENBQUNzQixpQkFBaUI7b0JBQ3RCLElBQUksT0FBTyxJQUFJLENBQUMzQixNQUFNLEtBQUssYUFBYTt3QkFDcEMsT0FBT2EsT0FBTyxJQUFJZixNQUFNO29CQUM1QjtvQkFDQWMsUUFBUSxJQUFJLENBQUNaLE1BQU07Z0JBQ3ZCO1lBQ0o7UUFDSjtRQUNBLElBQUksQ0FBQ0wsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0UsV0FBVyxHQUFHO1FBQ25CLE9BQU8sSUFBSWMsUUFBUSxDQUFDQyxTQUFTQztZQUN6QixNQUFNZSxPQUFPLENBQUM1QywyRUFBYUEsS0FBSztnQkFBRTZDLG9CQUFvQixDQUFDM0MsNEVBQWNBLENBQUNTO1lBQUssSUFBSW1DO1lBQy9FLE1BQU05QixTQUFTLElBQUlSLEdBQUdHLEtBQUssRUFBRSxFQUFFaUM7WUFDL0IsSUFBSXRDLDJEQUFtQkEsSUFBSTtnQkFDdkJVLE9BQU8rQixPQUFPLEdBQUcsQ0FBQzVCO29CQUNkLE1BQU02QixhQUFhN0I7b0JBQ25CVSxPQUFPLElBQUksQ0FBQ29CLFNBQVMsQ0FBQ0QsV0FBV04sS0FBSztnQkFDMUM7WUFDSixPQUNLO2dCQUNEMUIsT0FBT0UsRUFBRSxDQUFDLFNBQVMsQ0FBQzhCO29CQUNoQm5CLE9BQU8sSUFBSSxDQUFDb0IsU0FBUyxDQUFDRDtnQkFDMUI7WUFDSjtZQUNBaEMsT0FBT2tDLE1BQU0sR0FBRztnQkFDWixJQUFJLENBQUNDLE1BQU0sQ0FBQ25DO2dCQUNaWSxRQUFRWjtZQUNaO1FBQ0o7SUFDSjtJQUNBbUMsT0FBT25DLE1BQU0sRUFBRTtRQUNYQSxPQUFPb0MsU0FBUyxHQUFHLENBQUNqQyxRQUFVLElBQUksQ0FBQ2tDLFNBQVMsQ0FBQ2xDO1FBQzdDSCxPQUFPYyxPQUFPLEdBQUdYLENBQUFBLFFBQVMsSUFBSSxDQUFDWSxPQUFPLENBQUNaO1FBQ3ZDLElBQUksQ0FBQ0gsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0gsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0QsTUFBTSxDQUFDMEMsSUFBSSxDQUFDO0lBQ3JCO0lBQ0F2QixRQUFRWixLQUFLLEVBQUU7UUFDWCxJQUFJLENBQUNILE1BQU0sR0FBRzhCO1FBQ2QsSUFBSSxDQUFDakMsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0QsTUFBTSxDQUFDMEMsSUFBSSxDQUFDLFNBQVNuQztJQUM5QjtJQUNBa0MsVUFBVWxCLENBQUMsRUFBRTtRQUNULElBQUksT0FBT0EsRUFBRW9CLElBQUksS0FBSyxhQUNsQjtRQUNKLE1BQU10QixVQUFVLE9BQU9FLEVBQUVvQixJQUFJLEtBQUssV0FBVzFELHVFQUFhQSxDQUFDc0MsRUFBRW9CLElBQUksSUFBSXBCLEVBQUVvQixJQUFJO1FBQzNFLElBQUksQ0FBQzNDLE1BQU0sQ0FBQzBDLElBQUksQ0FBQyxXQUFXckI7SUFDaEM7SUFDQUcsUUFBUUMsRUFBRSxFQUFFRixDQUFDLEVBQUU7UUFDWCxNQUFNTyxRQUFRLElBQUksQ0FBQ2MsVUFBVSxDQUFDckI7UUFDOUIsTUFBTXNCLFVBQVVmLE1BQU1lLE9BQU8sSUFBSWYsTUFBTWdCLFFBQVE7UUFDL0MsTUFBTXpCLFVBQVVsQyxnRkFBa0JBLENBQUNzQyxJQUFJb0I7UUFDdkMsSUFBSSxDQUFDN0MsTUFBTSxDQUFDMEMsSUFBSSxDQUFDLFdBQVdyQjtJQUNoQztJQUNBdUIsV0FBV3JCLENBQUMsRUFBRXhCLE1BQU0sSUFBSSxDQUFDQSxHQUFHLEVBQUU7UUFDMUIsT0FBT1Isa0ZBQW9CQSxDQUFDZ0MsR0FBRy9CLHFEQUFhQSxDQUFDTyxNQUFNO0lBQ3ZEO0lBQ0FnQyxvQkFBb0I7UUFDaEIsSUFBSSxJQUFJLENBQUMvQixNQUFNLENBQUMyQixlQUFlLEtBQUtoQyxxQ0FBcUM7WUFDckUsSUFBSSxDQUFDSyxNQUFNLENBQUM2QixlQUFlLENBQUNsQztRQUNoQztJQUNKO0lBQ0EwQyxVQUFVRCxVQUFVLEVBQUU7UUFDbEIsTUFBTU4sUUFBUSxJQUFJLENBQUNjLFVBQVUsQ0FBQyxJQUFJMUMsTUFBTSxDQUFDa0MsZUFBZSxRQUFRQSxlQUFlLEtBQUssSUFBSSxLQUFLLElBQUlBLFdBQVdTLE9BQU8sS0FBSyxDQUFDLHNDQUFzQyxFQUFFckQscURBQWFBLENBQUMsSUFBSSxDQUFDTyxHQUFHLEVBQUUsQ0FBQztRQUMxTCxJQUFJLENBQUNDLE1BQU0sQ0FBQzBDLElBQUksQ0FBQyxrQkFBa0JaO1FBQ25DLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLGlFQUFlakMsWUFBWUEsRUFBQyxDQUM1Qiw4QkFBOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vZGlzdC9lc20vd3MuanM/MzA1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiZXZlbnRzXCI7XG5pbXBvcnQgeyBzYWZlSnNvblBhcnNlLCBzYWZlSnNvblN0cmluZ2lmeSB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC9zYWZlLWpzb25cIjtcbmltcG9ydCB7IGZvcm1hdEpzb25ScGNFcnJvciwgaXNSZWFjdE5hdGl2ZSwgaXNXc1VybCwgaXNMb2NhbGhvc3RVcmwsIHBhcnNlQ29ubmVjdGlvbkVycm9yLCB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7XG5pbXBvcnQgeyB0cnVuY2F0ZVF1ZXJ5LCByZXNvbHZlV2ViU29ja2V0SW1wbGVtZW50YXRpb24sIGhhc0J1aWx0SW5XZWJTb2NrZXQgfSBmcm9tIFwiLi91dGlsc1wiO1xuY29uc3QgRVZFTlRfRU1JVFRFUl9NQVhfTElTVEVORVJTX0RFRkFVTFQgPSAxMDtcbmNvbnN0IFdTID0gcmVzb2x2ZVdlYlNvY2tldEltcGxlbWVudGF0aW9uKCk7XG5leHBvcnQgY2xhc3MgV3NDb25uZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwpIHtcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyaW5nID0gZmFsc2U7XG4gICAgICAgIGlmICghaXNXc1VybCh1cmwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFByb3ZpZGVkIFVSTCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIFdlYlNvY2tldCBjb25uZWN0aW9uOiAke3VybH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICB9XG4gICAgZ2V0IGNvbm5lY3RlZCgpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLnNvY2tldCAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICB9XG4gICAgZ2V0IGNvbm5lY3RpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyaW5nO1xuICAgIH1cbiAgICBvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzLm9mZihldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICByZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgYXN5bmMgb3Blbih1cmwgPSB0aGlzLnVybCkge1xuICAgICAgICBhd2FpdCB0aGlzLnJlZ2lzdGVyKHVybCk7XG4gICAgfVxuICAgIGFzeW5jIGNsb3NlKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNvY2tldCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJDb25uZWN0aW9uIGFscmVhZHkgY2xvc2VkXCIpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNvY2tldC5vbmNsb3NlID0gZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMub25DbG9zZShldmVudCk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBzZW5kKHBheWxvYWQsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNvY2tldCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhpcy5zb2NrZXQgPSBhd2FpdCB0aGlzLnJlZ2lzdGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuc29ja2V0LnNlbmQoc2FmZUpzb25TdHJpbmdpZnkocGF5bG9hZCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aGlzLm9uRXJyb3IocGF5bG9hZC5pZCwgZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVnaXN0ZXIodXJsID0gdGhpcy51cmwpIHtcbiAgICAgICAgaWYgKCFpc1dzVXJsKHVybCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvdmlkZWQgVVJMIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggV2ViU29ja2V0IGNvbm5lY3Rpb246ICR7dXJsfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnJlZ2lzdGVyaW5nKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50TWF4TGlzdGVuZXJzID0gdGhpcy5ldmVudHMuZ2V0TWF4TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5ldmVudHMubGlzdGVuZXJDb3VudChcInJlZ2lzdGVyX2Vycm9yXCIpID49IGN1cnJlbnRNYXhMaXN0ZW5lcnMgfHxcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KFwib3BlblwiKSA+PSBjdXJyZW50TWF4TGlzdGVuZXJzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMuc2V0TWF4TGlzdGVuZXJzKGN1cnJlbnRNYXhMaXN0ZW5lcnMgKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMub25jZShcInJlZ2lzdGVyX2Vycm9yXCIsIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldE1heExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLm9uY2UoXCJvcGVuXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldE1heExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuc29ja2V0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihcIldlYlNvY2tldCBjb25uZWN0aW9uIGlzIG1pc3Npbmcgb3IgaW52YWxpZFwiKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLnNvY2tldCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy5yZWdpc3RlcmluZyA9IHRydWU7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvcHRzID0gIWlzUmVhY3ROYXRpdmUoKSA/IHsgcmVqZWN0VW5hdXRob3JpemVkOiAhaXNMb2NhbGhvc3RVcmwodXJsKSB9IDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgY29uc3Qgc29ja2V0ID0gbmV3IFdTKHVybCwgW10sIG9wdHMpO1xuICAgICAgICAgICAgaWYgKGhhc0J1aWx0SW5XZWJTb2NrZXQoKSkge1xuICAgICAgICAgICAgICAgIHNvY2tldC5vbmVycm9yID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yRXZlbnQgPSBldmVudDtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHRoaXMuZW1pdEVycm9yKGVycm9yRXZlbnQuZXJyb3IpKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc29ja2V0Lm9uKFwiZXJyb3JcIiwgKGVycm9yRXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHRoaXMuZW1pdEVycm9yKGVycm9yRXZlbnQpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNvY2tldC5vbm9wZW4gPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5vbk9wZW4oc29ja2V0KTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHNvY2tldCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25PcGVuKHNvY2tldCkge1xuICAgICAgICBzb2NrZXQub25tZXNzYWdlID0gKGV2ZW50KSA9PiB0aGlzLm9uUGF5bG9hZChldmVudCk7XG4gICAgICAgIHNvY2tldC5vbmNsb3NlID0gZXZlbnQgPT4gdGhpcy5vbkNsb3NlKGV2ZW50KTtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBzb2NrZXQ7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ldmVudHMuZW1pdChcIm9wZW5cIik7XG4gICAgfVxuICAgIG9uQ2xvc2UoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ldmVudHMuZW1pdChcImNsb3NlXCIsIGV2ZW50KTtcbiAgICB9XG4gICAgb25QYXlsb2FkKGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBlLmRhdGEgPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSB0eXBlb2YgZS5kYXRhID09PSBcInN0cmluZ1wiID8gc2FmZUpzb25QYXJzZShlLmRhdGEpIDogZS5kYXRhO1xuICAgICAgICB0aGlzLmV2ZW50cy5lbWl0KFwicGF5bG9hZFwiLCBwYXlsb2FkKTtcbiAgICB9XG4gICAgb25FcnJvcihpZCwgZSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IHRoaXMucGFyc2VFcnJvcihlKTtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGZvcm1hdEpzb25ScGNFcnJvcihpZCwgbWVzc2FnZSk7XG4gICAgICAgIHRoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIsIHBheWxvYWQpO1xuICAgIH1cbiAgICBwYXJzZUVycm9yKGUsIHVybCA9IHRoaXMudXJsKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUNvbm5lY3Rpb25FcnJvcihlLCB0cnVuY2F0ZVF1ZXJ5KHVybCksIFwiV1NcIik7XG4gICAgfVxuICAgIHJlc2V0TWF4TGlzdGVuZXJzKCkge1xuICAgICAgICBpZiAodGhpcy5ldmVudHMuZ2V0TWF4TGlzdGVuZXJzKCkgPiBFVkVOVF9FTUlUVEVSX01BWF9MSVNURU5FUlNfREVGQVVMVCkge1xuICAgICAgICAgICAgdGhpcy5ldmVudHMuc2V0TWF4TGlzdGVuZXJzKEVWRU5UX0VNSVRURVJfTUFYX0xJU1RFTkVSU19ERUZBVUxUKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbWl0RXJyb3IoZXJyb3JFdmVudCkge1xuICAgICAgICBjb25zdCBlcnJvciA9IHRoaXMucGFyc2VFcnJvcihuZXcgRXJyb3IoKGVycm9yRXZlbnQgPT09IG51bGwgfHwgZXJyb3JFdmVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JFdmVudC5tZXNzYWdlKSB8fCBgV2ViU29ja2V0IGNvbm5lY3Rpb24gZmFpbGVkIGZvciBob3N0OiAke3RydW5jYXRlUXVlcnkodGhpcy51cmwpfWApKTtcbiAgICAgICAgdGhpcy5ldmVudHMuZW1pdChcInJlZ2lzdGVyX2Vycm9yXCIsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IFdzQ29ubmVjdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdzLmpzLm1hcCJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJzYWZlSnNvblBhcnNlIiwic2FmZUpzb25TdHJpbmdpZnkiLCJmb3JtYXRKc29uUnBjRXJyb3IiLCJpc1JlYWN0TmF0aXZlIiwiaXNXc1VybCIsImlzTG9jYWxob3N0VXJsIiwicGFyc2VDb25uZWN0aW9uRXJyb3IiLCJ0cnVuY2F0ZVF1ZXJ5IiwicmVzb2x2ZVdlYlNvY2tldEltcGxlbWVudGF0aW9uIiwiaGFzQnVpbHRJbldlYlNvY2tldCIsIkVWRU5UX0VNSVRURVJfTUFYX0xJU1RFTkVSU19ERUZBVUxUIiwiV1MiLCJXc0Nvbm5lY3Rpb24iLCJjb25zdHJ1Y3RvciIsInVybCIsImV2ZW50cyIsInJlZ2lzdGVyaW5nIiwiRXJyb3IiLCJjb25uZWN0ZWQiLCJzb2NrZXQiLCJjb25uZWN0aW5nIiwib24iLCJldmVudCIsImxpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwib3BlbiIsInJlZ2lzdGVyIiwiY2xvc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm9uY2xvc2UiLCJvbkNsb3NlIiwic2VuZCIsInBheWxvYWQiLCJjb250ZXh0IiwiZSIsIm9uRXJyb3IiLCJpZCIsImN1cnJlbnRNYXhMaXN0ZW5lcnMiLCJnZXRNYXhMaXN0ZW5lcnMiLCJsaXN0ZW5lckNvdW50Iiwic2V0TWF4TGlzdGVuZXJzIiwiZXJyb3IiLCJyZXNldE1heExpc3RlbmVycyIsIm9wdHMiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJ1bmRlZmluZWQiLCJvbmVycm9yIiwiZXJyb3JFdmVudCIsImVtaXRFcnJvciIsIm9ub3BlbiIsIm9uT3BlbiIsIm9ubWVzc2FnZSIsIm9uUGF5bG9hZCIsImVtaXQiLCJkYXRhIiwicGFyc2VFcnJvciIsIm1lc3NhZ2UiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst WebSocket = __webpack_require__(/*! ./lib/websocket */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nWebSocket.createWebSocketStream = __webpack_require__(/*! ./lib/stream */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\");\nWebSocket.Server = __webpack_require__(/*! ./lib/websocket-server */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\");\nWebSocket.Receiver = __webpack_require__(/*! ./lib/receiver */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nWebSocket.Sender = __webpack_require__(/*! ./lib/sender */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nmodule.exports = WebSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUUxQkQsVUFBVUUscUJBQXFCLEdBQUdELG1CQUFPQSxDQUFDO0FBQzFDRCxVQUFVRyxNQUFNLEdBQUdGLG1CQUFPQSxDQUFDO0FBQzNCRCxVQUFVSSxRQUFRLEdBQUdILG1CQUFPQSxDQUFDO0FBQzdCRCxVQUFVSyxNQUFNLEdBQUdKLG1CQUFPQSxDQUFDO0FBRTNCSyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9pbmRleC5qcz9jNjBiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgV2ViU29ja2V0ID0gcmVxdWlyZSgnLi9saWIvd2Vic29ja2V0Jyk7XG5cbldlYlNvY2tldC5jcmVhdGVXZWJTb2NrZXRTdHJlYW0gPSByZXF1aXJlKCcuL2xpYi9zdHJlYW0nKTtcbldlYlNvY2tldC5TZXJ2ZXIgPSByZXF1aXJlKCcuL2xpYi93ZWJzb2NrZXQtc2VydmVyJyk7XG5XZWJTb2NrZXQuUmVjZWl2ZXIgPSByZXF1aXJlKCcuL2xpYi9yZWNlaXZlcicpO1xuV2ViU29ja2V0LlNlbmRlciA9IHJlcXVpcmUoJy4vbGliL3NlbmRlcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYlNvY2tldDtcbiJdLCJuYW1lcyI6WyJXZWJTb2NrZXQiLCJyZXF1aXJlIiwiY3JlYXRlV2ViU29ja2V0U3RyZWFtIiwiU2VydmVyIiwiUmVjZWl2ZXIiLCJTZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */ function concat(list, totalLength) {\n    if (list.length === 0) return EMPTY_BUFFER;\n    if (list.length === 1) return list[0];\n    const target = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for(let i = 0; i < list.length; i++){\n        const buf = list[i];\n        target.set(buf, offset);\n        offset += buf.length;\n    }\n    if (offset < totalLength) return target.slice(0, offset);\n    return target;\n}\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */ function _mask(source, mask, output, offset, length) {\n    for(let i = 0; i < length; i++){\n        output[offset + i] = source[i] ^ mask[i & 3];\n    }\n}\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */ function _unmask(buffer, mask) {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    const length = buffer.length;\n    for(let i = 0; i < length; i++){\n        buffer[i] ^= mask[i & 3];\n    }\n}\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */ function toArrayBuffer(buf) {\n    if (buf.byteLength === buf.buffer.byteLength) {\n        return buf.buffer;\n    }\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */ function toBuffer(data) {\n    toBuffer.readOnly = true;\n    if (Buffer.isBuffer(data)) return data;\n    let buf;\n    if (data instanceof ArrayBuffer) {\n        buf = Buffer.from(data);\n    } else if (ArrayBuffer.isView(data)) {\n        buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    } else {\n        buf = Buffer.from(data);\n        toBuffer.readOnly = false;\n    }\n    return buf;\n}\ntry {\n    const bufferUtil = __webpack_require__(/*! bufferutil */ \"(ssr)/../node_modules/bufferutil/index.js\");\n    const bu = bufferUtil.BufferUtil || bufferUtil;\n    module.exports = {\n        concat,\n        mask (source, mask, output, offset, length) {\n            if (length < 48) _mask(source, mask, output, offset, length);\n            else bu.mask(source, mask, output, offset, length);\n        },\n        toArrayBuffer,\n        toBuffer,\n        unmask (buffer, mask) {\n            if (buffer.length < 32) _unmask(buffer, mask);\n            else bu.unmask(buffer, mask);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        concat,\n        mask: _mask,\n        toArrayBuffer,\n        toBuffer,\n        unmask: _unmask\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2J1ZmZlci11dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTSxFQUFFQSxZQUFZLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFFakM7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLE9BQU9DLElBQUksRUFBRUMsV0FBVztJQUMvQixJQUFJRCxLQUFLRSxNQUFNLEtBQUssR0FBRyxPQUFPTDtJQUM5QixJQUFJRyxLQUFLRSxNQUFNLEtBQUssR0FBRyxPQUFPRixJQUFJLENBQUMsRUFBRTtJQUVyQyxNQUFNRyxTQUFTQyxPQUFPQyxXQUFXLENBQUNKO0lBQ2xDLElBQUlLLFNBQVM7SUFFYixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVAsS0FBS0UsTUFBTSxFQUFFSyxJQUFLO1FBQ3BDLE1BQU1DLE1BQU1SLElBQUksQ0FBQ08sRUFBRTtRQUNuQkosT0FBT00sR0FBRyxDQUFDRCxLQUFLRjtRQUNoQkEsVUFBVUUsSUFBSU4sTUFBTTtJQUN0QjtJQUVBLElBQUlJLFNBQVNMLGFBQWEsT0FBT0UsT0FBT08sS0FBSyxDQUFDLEdBQUdKO0lBRWpELE9BQU9IO0FBQ1Q7QUFFQTs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTUSxNQUFNQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFUixNQUFNLEVBQUVKLE1BQU07SUFDakQsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUlMLFFBQVFLLElBQUs7UUFDL0JPLE1BQU0sQ0FBQ1IsU0FBU0MsRUFBRSxHQUFHSyxNQUFNLENBQUNMLEVBQUUsR0FBR00sSUFBSSxDQUFDTixJQUFJLEVBQUU7SUFDOUM7QUFDRjtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNRLFFBQVFDLE1BQU0sRUFBRUgsSUFBSTtJQUMzQix5RUFBeUU7SUFDekUsTUFBTVgsU0FBU2MsT0FBT2QsTUFBTTtJQUM1QixJQUFLLElBQUlLLElBQUksR0FBR0EsSUFBSUwsUUFBUUssSUFBSztRQUMvQlMsTUFBTSxDQUFDVCxFQUFFLElBQUlNLElBQUksQ0FBQ04sSUFBSSxFQUFFO0lBQzFCO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTVSxjQUFjVCxHQUFHO0lBQ3hCLElBQUlBLElBQUlVLFVBQVUsS0FBS1YsSUFBSVEsTUFBTSxDQUFDRSxVQUFVLEVBQUU7UUFDNUMsT0FBT1YsSUFBSVEsTUFBTTtJQUNuQjtJQUVBLE9BQU9SLElBQUlRLE1BQU0sQ0FBQ04sS0FBSyxDQUFDRixJQUFJVyxVQUFVLEVBQUVYLElBQUlXLFVBQVUsR0FBR1gsSUFBSVUsVUFBVTtBQUN6RTtBQUVBOzs7Ozs7O0NBT0MsR0FDRCxTQUFTRSxTQUFTQyxJQUFJO0lBQ3BCRCxTQUFTRSxRQUFRLEdBQUc7SUFFcEIsSUFBSWxCLE9BQU9tQixRQUFRLENBQUNGLE9BQU8sT0FBT0E7SUFFbEMsSUFBSWI7SUFFSixJQUFJYSxnQkFBZ0JHLGFBQWE7UUFDL0JoQixNQUFNSixPQUFPcUIsSUFBSSxDQUFDSjtJQUNwQixPQUFPLElBQUlHLFlBQVlFLE1BQU0sQ0FBQ0wsT0FBTztRQUNuQ2IsTUFBTUosT0FBT3FCLElBQUksQ0FBQ0osS0FBS0wsTUFBTSxFQUFFSyxLQUFLRixVQUFVLEVBQUVFLEtBQUtILFVBQVU7SUFDakUsT0FBTztRQUNMVixNQUFNSixPQUFPcUIsSUFBSSxDQUFDSjtRQUNsQkQsU0FBU0UsUUFBUSxHQUFHO0lBQ3RCO0lBRUEsT0FBT2Q7QUFDVDtBQUVBLElBQUk7SUFDRixNQUFNbUIsYUFBYTdCLG1CQUFPQSxDQUFDO0lBQzNCLE1BQU04QixLQUFLRCxXQUFXRSxVQUFVLElBQUlGO0lBRXBDRyxPQUFPQyxPQUFPLEdBQUc7UUFDZmhDO1FBQ0FjLE1BQUtELE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVSLE1BQU0sRUFBRUosTUFBTTtZQUN2QyxJQUFJQSxTQUFTLElBQUlTLE1BQU1DLFFBQVFDLE1BQU1DLFFBQVFSLFFBQVFKO2lCQUNoRDBCLEdBQUdmLElBQUksQ0FBQ0QsUUFBUUMsTUFBTUMsUUFBUVIsUUFBUUo7UUFDN0M7UUFDQWU7UUFDQUc7UUFDQVksUUFBT2hCLE1BQU0sRUFBRUgsSUFBSTtZQUNqQixJQUFJRyxPQUFPZCxNQUFNLEdBQUcsSUFBSWEsUUFBUUMsUUFBUUg7aUJBQ25DZSxHQUFHSSxNQUFNLENBQUNoQixRQUFRSDtRQUN6QjtJQUNGO0FBQ0YsRUFBRSxPQUFPb0IsR0FBRyx3QkFBd0IsR0FBRztJQUNyQ0gsT0FBT0MsT0FBTyxHQUFHO1FBQ2ZoQztRQUNBYyxNQUFNRjtRQUNOTTtRQUNBRztRQUNBWSxRQUFRakI7SUFDVjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvYnVmZmVyLXV0aWwuanM/YTg2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHsgRU1QVFlfQlVGRkVSIH0gPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xuXG4vKipcbiAqIE1lcmdlcyBhbiBhcnJheSBvZiBidWZmZXJzIGludG8gYSBuZXcgYnVmZmVyLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyW119IGxpc3QgVGhlIGFycmF5IG9mIGJ1ZmZlcnMgdG8gY29uY2F0XG4gKiBAcGFyYW0ge051bWJlcn0gdG90YWxMZW5ndGggVGhlIHRvdGFsIGxlbmd0aCBvZiBidWZmZXJzIGluIHRoZSBsaXN0XG4gKiBAcmV0dXJuIHtCdWZmZXJ9IFRoZSByZXN1bHRpbmcgYnVmZmVyXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIGNvbmNhdChsaXN0LCB0b3RhbExlbmd0aCkge1xuICBpZiAobGlzdC5sZW5ndGggPT09IDApIHJldHVybiBFTVBUWV9CVUZGRVI7XG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMSkgcmV0dXJuIGxpc3RbMF07XG5cbiAgY29uc3QgdGFyZ2V0ID0gQnVmZmVyLmFsbG9jVW5zYWZlKHRvdGFsTGVuZ3RoKTtcbiAgbGV0IG9mZnNldCA9IDA7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYnVmID0gbGlzdFtpXTtcbiAgICB0YXJnZXQuc2V0KGJ1Ziwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gYnVmLmxlbmd0aDtcbiAgfVxuXG4gIGlmIChvZmZzZXQgPCB0b3RhbExlbmd0aCkgcmV0dXJuIHRhcmdldC5zbGljZSgwLCBvZmZzZXQpO1xuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbi8qKlxuICogTWFza3MgYSBidWZmZXIgdXNpbmcgdGhlIGdpdmVuIG1hc2suXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IHNvdXJjZSBUaGUgYnVmZmVyIHRvIG1hc2tcbiAqIEBwYXJhbSB7QnVmZmVyfSBtYXNrIFRoZSBtYXNrIHRvIHVzZVxuICogQHBhcmFtIHtCdWZmZXJ9IG91dHB1dCBUaGUgYnVmZmVyIHdoZXJlIHRvIHN0b3JlIHRoZSByZXN1bHRcbiAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXQgVGhlIG9mZnNldCBhdCB3aGljaCB0byBzdGFydCB3cml0aW5nXG4gKiBAcGFyYW0ge051bWJlcn0gbGVuZ3RoIFRoZSBudW1iZXIgb2YgYnl0ZXMgdG8gbWFzay5cbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gX21hc2soc291cmNlLCBtYXNrLCBvdXRwdXQsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICBvdXRwdXRbb2Zmc2V0ICsgaV0gPSBzb3VyY2VbaV0gXiBtYXNrW2kgJiAzXTtcbiAgfVxufVxuXG4vKipcbiAqIFVubWFza3MgYSBidWZmZXIgdXNpbmcgdGhlIGdpdmVuIG1hc2suXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZmZlciBUaGUgYnVmZmVyIHRvIHVubWFza1xuICogQHBhcmFtIHtCdWZmZXJ9IG1hc2sgVGhlIG1hc2sgdG8gdXNlXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIF91bm1hc2soYnVmZmVyLCBtYXNrKSB7XG4gIC8vIFJlcXVpcmVkIHVudGlsIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvOTAwNiBpcyByZXNvbHZlZC5cbiAgY29uc3QgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGJ1ZmZlcltpXSBePSBtYXNrW2kgJiAzXTtcbiAgfVxufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgYnVmZmVyIHRvIGFuIGBBcnJheUJ1ZmZlcmAuXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZiBUaGUgYnVmZmVyIHRvIGNvbnZlcnRcbiAqIEByZXR1cm4ge0FycmF5QnVmZmVyfSBDb252ZXJ0ZWQgYnVmZmVyXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIHRvQXJyYXlCdWZmZXIoYnVmKSB7XG4gIGlmIChidWYuYnl0ZUxlbmd0aCA9PT0gYnVmLmJ1ZmZlci5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIGJ1Zi5idWZmZXI7XG4gIH1cblxuICByZXR1cm4gYnVmLmJ1ZmZlci5zbGljZShidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVPZmZzZXQgKyBidWYuYnl0ZUxlbmd0aCk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYGRhdGFgIHRvIGEgYEJ1ZmZlcmAuXG4gKlxuICogQHBhcmFtIHsqfSBkYXRhIFRoZSBkYXRhIHRvIGNvbnZlcnRcbiAqIEByZXR1cm4ge0J1ZmZlcn0gVGhlIGJ1ZmZlclxuICogQHRocm93cyB7VHlwZUVycm9yfVxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiB0b0J1ZmZlcihkYXRhKSB7XG4gIHRvQnVmZmVyLnJlYWRPbmx5ID0gdHJ1ZTtcblxuICBpZiAoQnVmZmVyLmlzQnVmZmVyKGRhdGEpKSByZXR1cm4gZGF0YTtcblxuICBsZXQgYnVmO1xuXG4gIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICBidWYgPSBCdWZmZXIuZnJvbShkYXRhKTtcbiAgfSBlbHNlIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoZGF0YSkpIHtcbiAgICBidWYgPSBCdWZmZXIuZnJvbShkYXRhLmJ1ZmZlciwgZGF0YS5ieXRlT2Zmc2V0LCBkYXRhLmJ5dGVMZW5ndGgpO1xuICB9IGVsc2Uge1xuICAgIGJ1ZiA9IEJ1ZmZlci5mcm9tKGRhdGEpO1xuICAgIHRvQnVmZmVyLnJlYWRPbmx5ID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gYnVmO1xufVxuXG50cnkge1xuICBjb25zdCBidWZmZXJVdGlsID0gcmVxdWlyZSgnYnVmZmVydXRpbCcpO1xuICBjb25zdCBidSA9IGJ1ZmZlclV0aWwuQnVmZmVyVXRpbCB8fCBidWZmZXJVdGlsO1xuXG4gIG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNvbmNhdCxcbiAgICBtYXNrKHNvdXJjZSwgbWFzaywgb3V0cHV0LCBvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgaWYgKGxlbmd0aCA8IDQ4KSBfbWFzayhzb3VyY2UsIG1hc2ssIG91dHB1dCwgb2Zmc2V0LCBsZW5ndGgpO1xuICAgICAgZWxzZSBidS5tYXNrKHNvdXJjZSwgbWFzaywgb3V0cHV0LCBvZmZzZXQsIGxlbmd0aCk7XG4gICAgfSxcbiAgICB0b0FycmF5QnVmZmVyLFxuICAgIHRvQnVmZmVyLFxuICAgIHVubWFzayhidWZmZXIsIG1hc2spIHtcbiAgICAgIGlmIChidWZmZXIubGVuZ3RoIDwgMzIpIF91bm1hc2soYnVmZmVyLCBtYXNrKTtcbiAgICAgIGVsc2UgYnUudW5tYXNrKGJ1ZmZlciwgbWFzayk7XG4gICAgfVxuICB9O1xufSBjYXRjaCAoZSkgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8ge1xuICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjb25jYXQsXG4gICAgbWFzazogX21hc2ssXG4gICAgdG9BcnJheUJ1ZmZlcixcbiAgICB0b0J1ZmZlcixcbiAgICB1bm1hc2s6IF91bm1hc2tcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJFTVBUWV9CVUZGRVIiLCJyZXF1aXJlIiwiY29uY2F0IiwibGlzdCIsInRvdGFsTGVuZ3RoIiwibGVuZ3RoIiwidGFyZ2V0IiwiQnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJvZmZzZXQiLCJpIiwiYnVmIiwic2V0Iiwic2xpY2UiLCJfbWFzayIsInNvdXJjZSIsIm1hc2siLCJvdXRwdXQiLCJfdW5tYXNrIiwiYnVmZmVyIiwidG9BcnJheUJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJieXRlT2Zmc2V0IiwidG9CdWZmZXIiLCJkYXRhIiwicmVhZE9ubHkiLCJpc0J1ZmZlciIsIkFycmF5QnVmZmVyIiwiZnJvbSIsImlzVmlldyIsImJ1ZmZlclV0aWwiLCJidSIsIkJ1ZmZlclV0aWwiLCJtb2R1bGUiLCJleHBvcnRzIiwidW5tYXNrIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = {\n    BINARY_TYPES: [\n        \"nodebuffer\",\n        \"arraybuffer\",\n        \"fragments\"\n    ],\n    GUID: \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\",\n    kStatusCode: Symbol(\"status-code\"),\n    kWebSocket: Symbol(\"websocket\"),\n    EMPTY_BUFFER: Buffer.alloc(0),\n    NOOP: ()=>{}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsY0FBYztRQUFDO1FBQWM7UUFBZTtLQUFZO0lBQ3hEQyxNQUFNO0lBQ05DLGFBQWFDLE9BQU87SUFDcEJDLFlBQVlELE9BQU87SUFDbkJFLGNBQWNDLE9BQU9DLEtBQUssQ0FBQztJQUMzQkMsTUFBTSxLQUFPO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2xpYi9jb25zdGFudHMuanM/MTU1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCSU5BUllfVFlQRVM6IFsnbm9kZWJ1ZmZlcicsICdhcnJheWJ1ZmZlcicsICdmcmFnbWVudHMnXSxcbiAgR1VJRDogJzI1OEVBRkE1LUU5MTQtNDdEQS05NUNBLUM1QUIwREM4NUIxMScsXG4gIGtTdGF0dXNDb2RlOiBTeW1ib2woJ3N0YXR1cy1jb2RlJyksXG4gIGtXZWJTb2NrZXQ6IFN5bWJvbCgnd2Vic29ja2V0JyksXG4gIEVNUFRZX0JVRkZFUjogQnVmZmVyLmFsbG9jKDApLFxuICBOT09QOiAoKSA9PiB7fVxufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQklOQVJZX1RZUEVTIiwiR1VJRCIsImtTdGF0dXNDb2RlIiwiU3ltYm9sIiwia1dlYlNvY2tldCIsIkVNUFRZX0JVRkZFUiIsIkJ1ZmZlciIsImFsbG9jIiwiTk9PUCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n/**\n * Class representing an event.\n *\n * @private\n */ class Event {\n    /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(type, target){\n        this.target = target;\n        this.type = type;\n    }\n}\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */ class MessageEvent extends Event {\n    /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(data, target){\n        super(\"message\", target);\n        this.data = data;\n    }\n}\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */ class CloseEvent extends Event {\n    /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being\n   *     closed\n   * @param {String} reason A human-readable string explaining why the\n   *     connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(code, reason, target){\n        super(\"close\", target);\n        this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n        this.reason = reason;\n        this.code = code;\n    }\n}\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */ class OpenEvent extends Event {\n    /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(target){\n        super(\"open\", target);\n    }\n}\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */ class ErrorEvent extends Event {\n    /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(error, target){\n        super(\"error\", target);\n        this.message = error.message;\n        this.error = error;\n    }\n}\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */ const EventTarget = {\n    /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */ addEventListener (type, listener, options) {\n        if (typeof listener !== \"function\") return;\n        function onMessage(data) {\n            listener.call(this, new MessageEvent(data, this));\n        }\n        function onClose(code, message) {\n            listener.call(this, new CloseEvent(code, message, this));\n        }\n        function onError(error) {\n            listener.call(this, new ErrorEvent(error, this));\n        }\n        function onOpen() {\n            listener.call(this, new OpenEvent(this));\n        }\n        const method = options && options.once ? \"once\" : \"on\";\n        if (type === \"message\") {\n            onMessage._listener = listener;\n            this[method](type, onMessage);\n        } else if (type === \"close\") {\n            onClose._listener = listener;\n            this[method](type, onClose);\n        } else if (type === \"error\") {\n            onError._listener = listener;\n            this[method](type, onError);\n        } else if (type === \"open\") {\n            onOpen._listener = listener;\n            this[method](type, onOpen);\n        } else {\n            this[method](type, listener);\n        }\n    },\n    /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */ removeEventListener (type, listener) {\n        const listeners = this.listeners(type);\n        for(let i = 0; i < listeners.length; i++){\n            if (listeners[i] === listener || listeners[i]._listener === listener) {\n                this.removeListener(type, listeners[i]);\n            }\n        }\n    }\n};\nmodule.exports = EventTarget;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0 // 112 - 127\n];\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */ function push(dest, name, elem) {\n    if (dest[name] === undefined) dest[name] = [\n        elem\n    ];\n    else dest[name].push(elem);\n}\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */ function parse(header) {\n    const offers = Object.create(null);\n    if (header === undefined || header === \"\") return offers;\n    let params = Object.create(null);\n    let mustUnescape = false;\n    let isEscaping = false;\n    let inQuotes = false;\n    let extensionName;\n    let paramName;\n    let start = -1;\n    let end = -1;\n    let i = 0;\n    for(; i < header.length; i++){\n        const code = header.charCodeAt(i);\n        if (extensionName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 /* ' ' */  || code === 0x09 /* '\\t' */ ) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b /* ';' */  || code === 0x2c /* ',' */ ) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                const name = header.slice(start, end);\n                if (code === 0x2c) {\n                    push(offers, name, params);\n                    params = Object.create(null);\n                } else {\n                    extensionName = name;\n                }\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else if (paramName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 || code === 0x09) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                push(params, header.slice(start, end), true);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                start = end = -1;\n            } else if (code === 0x3d /* '=' */  && start !== -1 && end === -1) {\n                paramName = header.slice(start, i);\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else {\n            //\n            // The value of a quoted-string after unescaping must conform to the\n            // token ABNF, so only token characters are valid.\n            // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n            //\n            if (isEscaping) {\n                if (tokenChars[code] !== 1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (start === -1) start = i;\n                else if (!mustUnescape) mustUnescape = true;\n                isEscaping = false;\n            } else if (inQuotes) {\n                if (tokenChars[code] === 1) {\n                    if (start === -1) start = i;\n                } else if (code === 0x22 /* '\"' */  && start !== -1) {\n                    inQuotes = false;\n                    end = i;\n                } else if (code === 0x5c /* '\\' */ ) {\n                    isEscaping = true;\n                } else {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n            } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n                inQuotes = true;\n            } else if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n                if (end === -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                let value = header.slice(start, end);\n                if (mustUnescape) {\n                    value = value.replace(/\\\\/g, \"\");\n                    mustUnescape = false;\n                }\n                push(params, paramName, value);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                paramName = undefined;\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        }\n    }\n    if (start === -1 || inQuotes) {\n        throw new SyntaxError(\"Unexpected end of input\");\n    }\n    if (end === -1) end = i;\n    const token = header.slice(start, end);\n    if (extensionName === undefined) {\n        push(offers, token, params);\n    } else {\n        if (paramName === undefined) {\n            push(params, token, true);\n        } else if (mustUnescape) {\n            push(params, paramName, token.replace(/\\\\/g, \"\"));\n        } else {\n            push(params, paramName, token);\n        }\n        push(offers, extensionName, params);\n    }\n    return offers;\n}\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */ function format(extensions) {\n    return Object.keys(extensions).map((extension)=>{\n        let configurations = extensions[extension];\n        if (!Array.isArray(configurations)) configurations = [\n            configurations\n        ];\n        return configurations.map((params)=>{\n            return [\n                extension\n            ].concat(Object.keys(params).map((k)=>{\n                let values = params[k];\n                if (!Array.isArray(values)) values = [\n                    values\n                ];\n                return values.map((v)=>v === true ? k : `${k}=${v}`).join(\"; \");\n            })).join(\"; \");\n        }).join(\", \");\n    }).join(\", \");\n}\nmodule.exports = {\n    format,\n    parse\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst kDone = Symbol(\"kDone\");\nconst kRun = Symbol(\"kRun\");\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */ class Limiter {\n    /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */ constructor(concurrency){\n        this[kDone] = ()=>{\n            this.pending--;\n            this[kRun]();\n        };\n        this.concurrency = concurrency || Infinity;\n        this.jobs = [];\n        this.pending = 0;\n    }\n    /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */ add(job) {\n        this.jobs.push(job);\n        this[kRun]();\n    }\n    /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */ [kRun]() {\n        if (this.pending === this.concurrency) return;\n        if (this.jobs.length) {\n            const job = this.jobs.shift();\n            this.pending++;\n            job(this[kDone]);\n        }\n    }\n}\nmodule.exports = Limiter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2xpbWl0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxRQUFRQyxPQUFPO0FBQ3JCLE1BQU1DLE9BQU9ELE9BQU87QUFFcEI7OztDQUdDLEdBQ0QsTUFBTUU7SUFDSjs7Ozs7R0FLQyxHQUNEQyxZQUFZQyxXQUFXLENBQUU7UUFDdkIsSUFBSSxDQUFDTCxNQUFNLEdBQUc7WUFDWixJQUFJLENBQUNNLE9BQU87WUFDWixJQUFJLENBQUNKLEtBQUs7UUFDWjtRQUNBLElBQUksQ0FBQ0csV0FBVyxHQUFHQSxlQUFlRTtRQUNsQyxJQUFJLENBQUNDLElBQUksR0FBRyxFQUFFO1FBQ2QsSUFBSSxDQUFDRixPQUFPLEdBQUc7SUFDakI7SUFFQTs7Ozs7R0FLQyxHQUNERyxJQUFJQyxHQUFHLEVBQUU7UUFDUCxJQUFJLENBQUNGLElBQUksQ0FBQ0csSUFBSSxDQUFDRDtRQUNmLElBQUksQ0FBQ1IsS0FBSztJQUNaO0lBRUE7Ozs7R0FJQyxHQUNELENBQUNBLEtBQUssR0FBRztRQUNQLElBQUksSUFBSSxDQUFDSSxPQUFPLEtBQUssSUFBSSxDQUFDRCxXQUFXLEVBQUU7UUFFdkMsSUFBSSxJQUFJLENBQUNHLElBQUksQ0FBQ0ksTUFBTSxFQUFFO1lBQ3BCLE1BQU1GLE1BQU0sSUFBSSxDQUFDRixJQUFJLENBQUNLLEtBQUs7WUFFM0IsSUFBSSxDQUFDUCxPQUFPO1lBQ1pJLElBQUksSUFBSSxDQUFDVixNQUFNO1FBQ2pCO0lBQ0Y7QUFDRjtBQUVBYyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvbGltaXRlci5qcz8wNDcxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3Qga0RvbmUgPSBTeW1ib2woJ2tEb25lJyk7XG5jb25zdCBrUnVuID0gU3ltYm9sKCdrUnVuJyk7XG5cbi8qKlxuICogQSB2ZXJ5IHNpbXBsZSBqb2IgcXVldWUgd2l0aCBhZGp1c3RhYmxlIGNvbmN1cnJlbmN5LiBBZGFwdGVkIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9TVFJNTC9hc3luYy1saW1pdGVyXG4gKi9cbmNsYXNzIExpbWl0ZXIge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBgTGltaXRlcmAuXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbY29uY3VycmVuY3k9SW5maW5pdHldIFRoZSBtYXhpbXVtIG51bWJlciBvZiBqb2JzIGFsbG93ZWRcbiAgICogICAgIHRvIHJ1biBjb25jdXJyZW50bHlcbiAgICovXG4gIGNvbnN0cnVjdG9yKGNvbmN1cnJlbmN5KSB7XG4gICAgdGhpc1trRG9uZV0gPSAoKSA9PiB7XG4gICAgICB0aGlzLnBlbmRpbmctLTtcbiAgICAgIHRoaXNba1J1bl0oKTtcbiAgICB9O1xuICAgIHRoaXMuY29uY3VycmVuY3kgPSBjb25jdXJyZW5jeSB8fCBJbmZpbml0eTtcbiAgICB0aGlzLmpvYnMgPSBbXTtcbiAgICB0aGlzLnBlbmRpbmcgPSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBqb2IgdG8gdGhlIHF1ZXVlLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBqb2IgVGhlIGpvYiB0byBydW5cbiAgICogQHB1YmxpY1xuICAgKi9cbiAgYWRkKGpvYikge1xuICAgIHRoaXMuam9icy5wdXNoKGpvYik7XG4gICAgdGhpc1trUnVuXSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBqb2IgZnJvbSB0aGUgcXVldWUgYW5kIHJ1bnMgaXQgaWYgcG9zc2libGUuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBba1J1bl0oKSB7XG4gICAgaWYgKHRoaXMucGVuZGluZyA9PT0gdGhpcy5jb25jdXJyZW5jeSkgcmV0dXJuO1xuXG4gICAgaWYgKHRoaXMuam9icy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IGpvYiA9IHRoaXMuam9icy5zaGlmdCgpO1xuXG4gICAgICB0aGlzLnBlbmRpbmcrKztcbiAgICAgIGpvYih0aGlzW2tEb25lXSk7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTGltaXRlcjtcbiJdLCJuYW1lcyI6WyJrRG9uZSIsIlN5bWJvbCIsImtSdW4iLCJMaW1pdGVyIiwiY29uc3RydWN0b3IiLCJjb25jdXJyZW5jeSIsInBlbmRpbmciLCJJbmZpbml0eSIsImpvYnMiLCJhZGQiLCJqb2IiLCJwdXNoIiwibGVuZ3RoIiwic2hpZnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst bufferUtil = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst Limiter = __webpack_require__(/*! ./limiter */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\");\nconst { kStatusCode, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst TRAILER = Buffer.from([\n    0x00,\n    0x00,\n    0xff,\n    0xff\n]);\nconst kPerMessageDeflate = Symbol(\"permessage-deflate\");\nconst kTotalLength = Symbol(\"total-length\");\nconst kCallback = Symbol(\"callback\");\nconst kBuffers = Symbol(\"buffers\");\nconst kError = Symbol(\"error\");\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n/**\n * permessage-deflate implementation.\n */ class PerMessageDeflate {\n    /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(options, isServer, maxPayload){\n        this._maxPayload = maxPayload | 0;\n        this._options = options || {};\n        this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n        this._isServer = !!isServer;\n        this._deflate = null;\n        this._inflate = null;\n        this.params = null;\n        if (!zlibLimiter) {\n            const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n            zlibLimiter = new Limiter(concurrency);\n        }\n    }\n    /**\n   * @type {String}\n   */ static get extensionName() {\n        return \"permessage-deflate\";\n    }\n    /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */ offer() {\n        const params = {};\n        if (this._options.serverNoContextTakeover) {\n            params.server_no_context_takeover = true;\n        }\n        if (this._options.clientNoContextTakeover) {\n            params.client_no_context_takeover = true;\n        }\n        if (this._options.serverMaxWindowBits) {\n            params.server_max_window_bits = this._options.serverMaxWindowBits;\n        }\n        if (this._options.clientMaxWindowBits) {\n            params.client_max_window_bits = this._options.clientMaxWindowBits;\n        } else if (this._options.clientMaxWindowBits == null) {\n            params.client_max_window_bits = true;\n        }\n        return params;\n    }\n    /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */ accept(configurations) {\n        configurations = this.normalizeParams(configurations);\n        this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n        return this.params;\n    }\n    /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */ cleanup() {\n        if (this._inflate) {\n            this._inflate.close();\n            this._inflate = null;\n        }\n        if (this._deflate) {\n            const callback = this._deflate[kCallback];\n            this._deflate.close();\n            this._deflate = null;\n            if (callback) {\n                callback(new Error(\"The deflate stream was closed while data was being processed\"));\n            }\n        }\n    }\n    /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsServer(offers) {\n        const opts = this._options;\n        const accepted = offers.find((params)=>{\n            if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === \"number\" && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === \"number\" && !params.client_max_window_bits) {\n                return false;\n            }\n            return true;\n        });\n        if (!accepted) {\n            throw new Error(\"None of the extension offers can be accepted\");\n        }\n        if (opts.serverNoContextTakeover) {\n            accepted.server_no_context_takeover = true;\n        }\n        if (opts.clientNoContextTakeover) {\n            accepted.client_no_context_takeover = true;\n        }\n        if (typeof opts.serverMaxWindowBits === \"number\") {\n            accepted.server_max_window_bits = opts.serverMaxWindowBits;\n        }\n        if (typeof opts.clientMaxWindowBits === \"number\") {\n            accepted.client_max_window_bits = opts.clientMaxWindowBits;\n        } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n            delete accepted.client_max_window_bits;\n        }\n        return accepted;\n    }\n    /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsClient(response) {\n        const params = response[0];\n        if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n            throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n        }\n        if (!params.client_max_window_bits) {\n            if (typeof this._options.clientMaxWindowBits === \"number\") {\n                params.client_max_window_bits = this._options.clientMaxWindowBits;\n            }\n        } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === \"number\" && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n            throw new Error('Unexpected or invalid parameter \"client_max_window_bits\"');\n        }\n        return params;\n    }\n    /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */ normalizeParams(configurations) {\n        configurations.forEach((params)=>{\n            Object.keys(params).forEach((key)=>{\n                let value = params[key];\n                if (value.length > 1) {\n                    throw new Error(`Parameter \"${key}\" must have only a single value`);\n                }\n                value = value[0];\n                if (key === \"client_max_window_bits\") {\n                    if (value !== true) {\n                        const num = +value;\n                        if (!Number.isInteger(num) || num < 8 || num > 15) {\n                            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                        }\n                        value = num;\n                    } else if (!this._isServer) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else if (key === \"server_max_window_bits\") {\n                    const num = +value;\n                    if (!Number.isInteger(num) || num < 8 || num > 15) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                    value = num;\n                } else if (key === \"client_no_context_takeover\" || key === \"server_no_context_takeover\") {\n                    if (value !== true) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else {\n                    throw new Error(`Unknown parameter \"${key}\"`);\n                }\n                params[key] = value;\n            });\n        });\n        return configurations;\n    }\n    /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ decompress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._decompress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ compress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._compress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _decompress(data, fin, callback) {\n        const endpoint = this._isServer ? \"client\" : \"server\";\n        if (!this._inflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._inflate = zlib.createInflateRaw({\n                ...this._options.zlibInflateOptions,\n                windowBits\n            });\n            this._inflate[kPerMessageDeflate] = this;\n            this._inflate[kTotalLength] = 0;\n            this._inflate[kBuffers] = [];\n            this._inflate.on(\"error\", inflateOnError);\n            this._inflate.on(\"data\", inflateOnData);\n        }\n        this._inflate[kCallback] = callback;\n        this._inflate.write(data);\n        if (fin) this._inflate.write(TRAILER);\n        this._inflate.flush(()=>{\n            const err = this._inflate[kError];\n            if (err) {\n                this._inflate.close();\n                this._inflate = null;\n                callback(err);\n                return;\n            }\n            const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);\n            if (this._inflate._readableState.endEmitted) {\n                this._inflate.close();\n                this._inflate = null;\n            } else {\n                this._inflate[kTotalLength] = 0;\n                this._inflate[kBuffers] = [];\n                if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                    this._inflate.reset();\n                }\n            }\n            callback(null, data);\n        });\n    }\n    /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _compress(data, fin, callback) {\n        const endpoint = this._isServer ? \"server\" : \"client\";\n        if (!this._deflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._deflate = zlib.createDeflateRaw({\n                ...this._options.zlibDeflateOptions,\n                windowBits\n            });\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            //\n            // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n            // `zlib.DeflateRaw` instance is closed while data is being processed.\n            // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n            // time due to an abnormal WebSocket closure.\n            //\n            this._deflate.on(\"error\", NOOP);\n            this._deflate.on(\"data\", deflateOnData);\n        }\n        this._deflate[kCallback] = callback;\n        this._deflate.write(data);\n        this._deflate.flush(zlib.Z_SYNC_FLUSH, ()=>{\n            if (!this._deflate) {\n                //\n                // The deflate stream was closed while data was being processed.\n                //\n                return;\n            }\n            let data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);\n            if (fin) data = data.slice(0, data.length - 4);\n            //\n            // Ensure that the callback will not be called again in\n            // `PerMessageDeflate#cleanup()`.\n            //\n            this._deflate[kCallback] = null;\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                this._deflate.reset();\n            }\n            callback(null, data);\n        });\n    }\n}\nmodule.exports = PerMessageDeflate;\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function deflateOnData(chunk) {\n    this[kBuffers].push(chunk);\n    this[kTotalLength] += chunk.length;\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function inflateOnData(chunk) {\n    this[kTotalLength] += chunk.length;\n    if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n        this[kBuffers].push(chunk);\n        return;\n    }\n    this[kError] = new RangeError(\"Max payload size exceeded\");\n    this[kError].code = \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\";\n    this[kError][kStatusCode] = 1009;\n    this.removeListener(\"data\", inflateOnData);\n    this.reset();\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */ function inflateOnError(err) {\n    //\n    // There is no need to call `Zlib#close()` as the handle is automatically\n    // closed when an error is emitted.\n    //\n    this[kPerMessageDeflate]._inflate = null;\n    err[kStatusCode] = 1007;\n    this[kCallback](err);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3Blcm1lc3NhZ2UtZGVmbGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLE9BQU9DLG1CQUFPQSxDQUFDO0FBRXJCLE1BQU1DLGFBQWFELG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1FLFVBQVVGLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU0sRUFBRUcsV0FBVyxFQUFFQyxJQUFJLEVBQUUsR0FBR0osbUJBQU9BLENBQUM7QUFFdEMsTUFBTUssVUFBVUMsT0FBT0MsSUFBSSxDQUFDO0lBQUM7SUFBTTtJQUFNO0lBQU07Q0FBSztBQUNwRCxNQUFNQyxxQkFBcUJDLE9BQU87QUFDbEMsTUFBTUMsZUFBZUQsT0FBTztBQUM1QixNQUFNRSxZQUFZRixPQUFPO0FBQ3pCLE1BQU1HLFdBQVdILE9BQU87QUFDeEIsTUFBTUksU0FBU0osT0FBTztBQUV0QixFQUFFO0FBQ0Ysd0VBQXdFO0FBQ3hFLHFGQUFxRjtBQUNyRixtREFBbUQ7QUFDbkQsRUFBRTtBQUNGLHFFQUFxRTtBQUNyRSxFQUFFO0FBQ0YsSUFBSUs7QUFFSjs7Q0FFQyxHQUNELE1BQU1DO0lBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBdUJDLEdBQ0RDLFlBQVlDLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxVQUFVLENBQUU7UUFDekMsSUFBSSxDQUFDQyxXQUFXLEdBQUdELGFBQWE7UUFDaEMsSUFBSSxDQUFDRSxRQUFRLEdBQUdKLFdBQVcsQ0FBQztRQUM1QixJQUFJLENBQUNLLFVBQVUsR0FDYixJQUFJLENBQUNELFFBQVEsQ0FBQ0UsU0FBUyxLQUFLQyxZQUFZLElBQUksQ0FBQ0gsUUFBUSxDQUFDRSxTQUFTLEdBQUc7UUFDcEUsSUFBSSxDQUFDRSxTQUFTLEdBQUcsQ0FBQyxDQUFDUDtRQUNuQixJQUFJLENBQUNRLFFBQVEsR0FBRztRQUNoQixJQUFJLENB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QUFJLElBQUksQ0FBQ0YsbUJBQW1CLENBQUNZLFdBQVcsRUFDMUQ7UUFDQSxJQUFJLENBQUNSLFNBQVMsQ0FBQ3FGLElBQUksQ0FBQ0Q7UUFDcEI7SUFDRjtJQUVBLElBQUksQ0FBQ25GLE9BQU8sR0FBRyxJQUFJcUYsV0FBVztJQUM5QixJQUFJLENBQUNyRixPQUFPLENBQUNzRixJQUFJLEdBQUc7SUFDcEIsSUFBSSxDQUFDdEYsT0FBTyxDQUFDVixZQUFZLEdBQUc7SUFDNUIsSUFBSSxDQUFDaUcsY0FBYyxDQUFDLFFBQVFsQjtJQUM1QixJQUFJLENBQUNNLEtBQUs7QUFDWjtBQUVBOzs7OztDQUtDLEdBQ0QsU0FBU1AsZUFBZVYsR0FBRztJQUN6QixFQUFFO0lBQ0YseUVBQXlFO0lBQ3pFLG1DQUFtQztJQUNuQyxFQUFFO0lBQ0YsSUFBSSxDQUFDL0QsbUJBQW1CLENBQUNtQixRQUFRLEdBQUc7SUFDcEM0QyxHQUFHLENBQUNwRSxZQUFZLEdBQUc7SUFDbkIsSUFBSSxDQUFDUSxVQUFVLENBQUM0RDtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3Blcm1lc3NhZ2UtZGVmbGF0ZS5qcz84ODg1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcblxuY29uc3QgYnVmZmVyVXRpbCA9IHJlcXVpcmUoJy4vYnVmZmVyLXV0aWwnKTtcbmNvbnN0IExpbWl0ZXIgPSByZXF1aXJlKCcuL2xpbWl0ZXInKTtcbmNvbnN0IHsga1N0YXR1c0NvZGUsIE5PT1AgfSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG5cbmNvbnN0IFRSQUlMRVIgPSBCdWZmZXIuZnJvbShbMHgwMCwgMHgwMCwgMHhmZiwgMHhmZl0pO1xuY29uc3Qga1Blck1lc3NhZ2VEZWZsYXRlID0gU3ltYm9sKCdwZXJtZXNzYWdlLWRlZmxhdGUnKTtcbmNvbnN0IGtUb3RhbExlbmd0aCA9IFN5bWJvbCgndG90YWwtbGVuZ3RoJyk7XG5jb25zdCBrQ2FsbGJhY2sgPSBTeW1ib2woJ2NhbGxiYWNrJyk7XG5jb25zdCBrQnVmZmVycyA9IFN5bWJvbCgnYnVmZmVycycpO1xuY29uc3Qga0Vycm9yID0gU3ltYm9sKCdlcnJvcicpO1xuXG4vL1xuLy8gV2UgbGltaXQgemxpYiBjb25jdXJyZW5jeSwgd2hpY2ggcHJldmVudHMgc2V2ZXJlIG1lbW9yeSBmcmFnbWVudGF0aW9uXG4vLyBhcyBkb2N1bWVudGVkIGluIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvODg3MSNpc3N1ZWNvbW1lbnQtMjUwOTE1OTEzXG4vLyBhbmQgaHR0cHM6Ly9naXRodWIuY29tL3dlYnNvY2tldHMvd3MvaXNzdWVzLzEyMDJcbi8vXG4vLyBJbnRlbnRpb25hbGx5IGdsb2JhbDsgaXQncyB0aGUgZ2xvYmFsIHRocmVhZCBwb29sIHRoYXQncyBhbiBpc3N1ZS5cbi8vXG5sZXQgemxpYkxpbWl0ZXI7XG5cbi8qKlxuICogcGVybWVzc2FnZS1kZWZsYXRlIGltcGxlbWVudGF0aW9uLlxuICovXG5jbGFzcyBQZXJNZXNzYWdlRGVmbGF0ZSB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgUGVyTWVzc2FnZURlZmxhdGUgaW5zdGFuY2UuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gQ29uZmlndXJhdGlvbiBvcHRpb25zXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc2VydmVyTm9Db250ZXh0VGFrZW92ZXI9ZmFsc2VdIFJlcXVlc3QvYWNjZXB0XG4gICAqICAgICBkaXNhYmxpbmcgb2Ygc2VydmVyIGNvbnRleHQgdGFrZW92ZXJcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jbGllbnROb0NvbnRleHRUYWtlb3Zlcj1mYWxzZV0gQWR2ZXJ0aXNlL1xuICAgKiAgICAgYWNrbm93bGVkZ2UgZGlzYWJsaW5nIG9mIGNsaWVudCBjb250ZXh0IHRha2VvdmVyXG4gICAqIEBwYXJhbSB7KEJvb2xlYW58TnVtYmVyKX0gW29wdGlvbnMuc2VydmVyTWF4V2luZG93Qml0c10gUmVxdWVzdC9jb25maXJtIHRoZVxuICAgKiAgICAgdXNlIG9mIGEgY3VzdG9tIHNlcnZlciB3aW5kb3cgc2l6ZVxuICAgKiBAcGFyYW0geyhCb29sZWFufE51bWJlcil9IFtvcHRpb25zLmNsaWVudE1heFdpbmRvd0JpdHNdIEFkdmVydGlzZSBzdXBwb3J0XG4gICAqICAgICBmb3IsIG9yIHJlcXVlc3QsIGEgY3VzdG9tIGNsaWVudCB3aW5kb3cgc2l6ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuemxpYkRlZmxhdGVPcHRpb25zXSBPcHRpb25zIHRvIHBhc3MgdG8gemxpYiBvblxuICAgKiAgICAgZGVmbGF0ZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuemxpYkluZmxhdGVPcHRpb25zXSBPcHRpb25zIHRvIHBhc3MgdG8gemxpYiBvblxuICAgKiAgICAgaW5mbGF0ZVxuICAgKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMudGhyZXNob2xkPTEwMjRdIFNpemUgKGluIGJ5dGVzKSBiZWxvdyB3aGljaFxuICAgKiAgICAgbWVzc2FnZXMgc2hvdWxkIG5vdCBiZSBjb21wcmVzc2VkXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5jb25jdXJyZW5jeUxpbWl0PTEwXSBUaGUgbnVtYmVyIG9mIGNvbmN1cnJlbnRcbiAgICogICAgIGNhbGxzIHRvIHpsaWJcbiAgICogQHBhcmFtIHtCb29sZWFufSBbaXNTZXJ2ZXI9ZmFsc2VdIENyZWF0ZSB0aGUgaW5zdGFuY2UgaW4gZWl0aGVyIHNlcnZlciBvclxuICAgKiAgICAgY2xpZW50IG1vZGVcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFttYXhQYXlsb2FkPTBdIFRoZSBtYXhpbXVtIGFsbG93ZWQgbWVzc2FnZSBsZW5ndGhcbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGlzU2VydmVyLCBtYXhQYXlsb2FkKSB7XG4gICAgdGhpcy5fbWF4UGF5bG9hZCA9IG1heFBheWxvYWQgfCAwO1xuICAgIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHRoaXMuX3RocmVzaG9sZCA9XG4gICAgICB0aGlzLl9vcHRpb25zLnRocmVzaG9sZCAhPT0gdW5kZWZpbmVkID8gdGhpcy5fb3B0aW9ucy50aHJlc2hvbGQgOiAxMDI0O1xuICAgIHRoaXMuX2lzU2VydmVyID0gISFpc1NlcnZlcjtcbiAgICB0aGlzLl9kZWZsYXRlID0gbnVsbDtcbiAgICB0aGlzLl9pbmZsYXRlID0gbnVsbDtcblxuICAgIHRoaXMucGFyYW1zID0gbnVsbDtcblxuICAgIGlmICghemxpYkxpbWl0ZXIpIHtcbiAgICAgIGNvbnN0IGNvbmN1cnJlbmN5ID1cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5jb25jdXJyZW5jeUxpbWl0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICA/IHRoaXMuX29wdGlvbnMuY29uY3VycmVuY3lMaW1pdFxuICAgICAgICAgIDogMTA7XG4gICAgICB6bGliTGltaXRlciA9IG5ldyBMaW1pdGVyKGNvbmN1cnJlbmN5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTmFtZSgpIHtcbiAgICByZXR1cm4gJ3Blcm1lc3NhZ2UtZGVmbGF0ZSc7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGFuIGV4dGVuc2lvbiBuZWdvdGlhdGlvbiBvZmZlci5cbiAgICpcbiAgICogQHJldHVybiB7T2JqZWN0fSBFeHRlbnNpb24gcGFyYW1ldGVyc1xuICAgKiBAcHVibGljXG4gICAqL1xuICBvZmZlcigpIHtcbiAgICBjb25zdCBwYXJhbXMgPSB7fTtcblxuICAgIGlmICh0aGlzLl9vcHRpb25zLnNlcnZlck5vQ29udGV4dFRha2VvdmVyKSB7XG4gICAgICBwYXJhbXMuc2VydmVyX25vX2NvbnRleHRfdGFrZW92ZXIgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodGhpcy5fb3B0aW9ucy5jbGllbnROb0NvbnRleHRUYWtlb3Zlcikge1xuICAgICAgcGFyYW1zLmNsaWVudF9ub19jb250ZXh0X3Rha2VvdmVyID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX29wdGlvbnMuc2VydmVyTWF4V2luZG93Qml0cykge1xuICAgICAgcGFyYW1zLnNlcnZlcl9tYXhfd2luZG93X2JpdHMgPSB0aGlzLl9vcHRpb25zLnNlcnZlck1heFdpbmRvd0JpdHM7XG4gICAgfVxuICAgIGlmICh0aGlzLl9vcHRpb25zLmNsaWVudE1heFdpbmRvd0JpdHMpIHtcbiAgICAgIHBhcmFtcy5jbGllbnRfbWF4X3dpbmRvd19iaXRzID0gdGhpcy5fb3B0aW9ucy5jbGllbnRNYXhXaW5kb3dCaXRzO1xuICAgIH0gZWxzZSBpZiAodGhpcy5fb3B0aW9ucy5jbGllbnRNYXhXaW5kb3dCaXRzID09IG51bGwpIHtcbiAgICAgIHBhcmFtcy5jbGllbnRfbWF4X3dpbmRvd19iaXRzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIEFjY2VwdCBhbiBleHRlbnNpb24gbmVnb3RpYXRpb24gb2ZmZXIvcmVzcG9uc2UuXG4gICAqXG4gICAqIEBwYXJhbSB7QXJyYXl9IGNvbmZpZ3VyYXRpb25zIFRoZSBleHRlbnNpb24gbmVnb3RpYXRpb24gb2ZmZXJzL3JlcG9uc2VcbiAgICogQHJldHVybiB7T2JqZWN0fSBBY2NlcHRlZCBjb25maWd1cmF0aW9uXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGFjY2VwdChjb25maWd1cmF0aW9ucykge1xuICAgIGNvbmZpZ3VyYXRpb25zID0gdGhpcy5ub3JtYWxpemVQYXJhbXMoY29uZmlndXJhdGlvbnMpO1xuXG4gICAgdGhpcy5wYXJhbXMgPSB0aGlzLl9pc1NlcnZlclxuICAgICAgPyB0aGlzLmFjY2VwdEFzU2VydmVyKGNvbmZpZ3VyYXRpb25zKVxuICAgICAgOiB0aGlzLmFjY2VwdEFzQ2xpZW50KGNvbmZpZ3VyYXRpb25zKTtcblxuICAgIHJldHVybiB0aGlzLnBhcmFtcztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWxlYXNlcyBhbGwgcmVzb3VyY2VzIHVzZWQgYnkgdGhlIGV4dGVuc2lvbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgY2xlYW51cCgpIHtcbiAgICBpZiAodGhpcy5faW5mbGF0ZSkge1xuICAgICAgdGhpcy5faW5mbGF0ZS5jbG9zZSgpO1xuICAgICAgdGhpcy5faW5mbGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2RlZmxhdGUpIHtcbiAgICAgIGNvbnN0IGNhbGxiYWNrID0gdGhpcy5fZGVmbGF0ZVtrQ2FsbGJhY2tdO1xuXG4gICAgICB0aGlzLl9kZWZsYXRlLmNsb3NlKCk7XG4gICAgICB0aGlzLl9kZWZsYXRlID0gbnVsbDtcblxuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrKFxuICAgICAgICAgIG5ldyBFcnJvcihcbiAgICAgICAgICAgICdUaGUgZGVmbGF0ZSBzdHJlYW0gd2FzIGNsb3NlZCB3aGlsZSBkYXRhIHdhcyBiZWluZyBwcm9jZXNzZWQnXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiAgQWNjZXB0IGFuIGV4dGVuc2lvbiBuZWdvdGlhdGlvbiBvZmZlci5cbiAgICpcbiAgICogQHBhcmFtIHtBcnJheX0gb2ZmZXJzIFRoZSBleHRlbnNpb24gbmVnb3RpYXRpb24gb2ZmZXJzXG4gICAqIEByZXR1cm4ge09iamVjdH0gQWNjZXB0ZWQgY29uZmlndXJhdGlvblxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgYWNjZXB0QXNTZXJ2ZXIob2ZmZXJzKSB7XG4gICAgY29uc3Qgb3B0cyA9IHRoaXMuX29wdGlvbnM7XG4gICAgY29uc3QgYWNjZXB0ZWQgPSBvZmZlcnMuZmluZCgocGFyYW1zKSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIChvcHRzLnNlcnZlck5vQ29udGV4dFRha2VvdmVyID09PSBmYWxzZSAmJlxuICAgICAgICAgIHBhcmFtcy5zZXJ2ZXJfbm9fY29udGV4dF90YWtlb3ZlcikgfHxcbiAgICAgICAgKHBhcmFtcy5zZXJ2ZXJfbWF4X3dpbmRvd19iaXRzICYmXG4gICAgICAgICAgKG9wdHMuc2VydmVyTWF4V2luZG93Qml0cyA9PT0gZmFsc2UgfHxcbiAgICAgICAgICAgICh0eXBlb2Ygb3B0cy5zZXJ2ZXJNYXhXaW5kb3dCaXRzID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgICBvcHRzLnNlcnZlck1heFdpbmRvd0JpdHMgPiBwYXJhbXMuc2VydmVyX21heF93aW5kb3dfYml0cykpKSB8fFxuICAgICAgICAodHlwZW9mIG9wdHMuY2xpZW50TWF4V2luZG93Qml0cyA9PT0gJ251bWJlcicgJiZcbiAgICAgICAgICAhcGFyYW1zLmNsaWVudF9tYXhfd2luZG93X2JpdHMpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcblxuICAgIGlmICghYWNjZXB0ZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm9uZSBvZiB0aGUgZXh0ZW5zaW9uIG9mZmVycyBjYW4gYmUgYWNjZXB0ZWQnKTtcbiAgICB9XG5cbiAgICBpZiAob3B0cy5zZXJ2ZXJOb0NvbnRleHRUYWtlb3Zlcikge1xuICAgICAgYWNjZXB0ZWQuc2VydmVyX25vX2NvbnRleHRfdGFrZW92ZXIgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAob3B0cy5jbGllbnROb0NvbnRleHRUYWtlb3Zlcikge1xuICAgICAgYWNjZXB0ZWQuY2xpZW50X25vX2NvbnRleHRfdGFrZW92ZXIgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG9wdHMuc2VydmVyTWF4V2luZG93Qml0cyA9PT0gJ251bWJlcicpIHtcbiAgICAgIGFjY2VwdGVkLnNlcnZlcl9tYXhfd2luZG93X2JpdHMgPSBvcHRzLnNlcnZlck1heFdpbmRvd0JpdHM7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb3B0cy5jbGllbnRNYXhXaW5kb3dCaXRzID09PSAnbnVtYmVyJykge1xuICAgICAgYWNjZXB0ZWQuY2xpZW50X21heF93aW5kb3dfYml0cyA9IG9wdHMuY2xpZW50TWF4V2luZG93Qml0cztcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgYWNjZXB0ZWQuY2xpZW50X21heF93aW5kb3dfYml0cyA9PT0gdHJ1ZSB8fFxuICAgICAgb3B0cy5jbGllbnRNYXhXaW5kb3dCaXRzID09PSBmYWxzZVxuICAgICkge1xuICAgICAgZGVsZXRlIGFjY2VwdGVkLmNsaWVudF9tYXhfd2luZG93X2JpdHM7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjY2VwdGVkO1xuICB9XG5cbiAgLyoqXG4gICAqIEFjY2VwdCB0aGUgZXh0ZW5zaW9uIG5lZ290aWF0aW9uIHJlc3BvbnNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5fSByZXNwb25zZSBUaGUgZXh0ZW5zaW9uIG5lZ290aWF0aW9uIHJlc3BvbnNlXG4gICAqIEByZXR1cm4ge09iamVjdH0gQWNjZXB0ZWQgY29uZmlndXJhdGlvblxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgYWNjZXB0QXNDbGllbnQocmVzcG9uc2UpIHtcbiAgICBjb25zdCBwYXJhbXMgPSByZXNwb25zZVswXTtcblxuICAgIGlmIChcbiAgICAgIHRoaXMuX29wdGlvbnMuY2xpZW50Tm9Db250ZXh0VGFrZW92ZXIgPT09IGZhbHNlICYmXG4gICAgICBwYXJhbXMuY2xpZW50X25vX2NvbnRleHRfdGFrZW92ZXJcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCBwYXJhbWV0ZXIgXCJjbGllbnRfbm9fY29udGV4dF90YWtlb3ZlclwiJyk7XG4gICAgfVxuXG4gICAgaWYgKCFwYXJhbXMuY2xpZW50X21heF93aW5kb3dfYml0cykge1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLl9vcHRpb25zLmNsaWVudE1heFdpbmRvd0JpdHMgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHBhcmFtcy5jbGllbnRfbWF4X3dpbmRvd19iaXRzID0gdGhpcy5fb3B0aW9ucy5jbGllbnRNYXhXaW5kb3dCaXRzO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICB0aGlzLl9vcHRpb25zLmNsaWVudE1heFdpbmRvd0JpdHMgPT09IGZhbHNlIHx8XG4gICAgICAodHlwZW9mIHRoaXMuX29wdGlvbnMuY2xpZW50TWF4V2luZG93Qml0cyA9PT0gJ251bWJlcicgJiZcbiAgICAgICAgcGFyYW1zLmNsaWVudF9tYXhfd2luZG93X2JpdHMgPiB0aGlzLl9vcHRpb25zLmNsaWVudE1heFdpbmRvd0JpdHMpXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdVbmV4cGVjdGVkIG9yIGludmFsaWQgcGFyYW1ldGVyIFwiY2xpZW50X21heF93aW5kb3dfYml0c1wiJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIE5vcm1hbGl6ZSBwYXJhbWV0ZXJzLlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5fSBjb25maWd1cmF0aW9ucyBUaGUgZXh0ZW5zaW9uIG5lZ290aWF0aW9uIG9mZmVycy9yZXBvbnNlXG4gICAqIEByZXR1cm4ge0FycmF5fSBUaGUgb2ZmZXJzL3Jlc3BvbnNlIHdpdGggbm9ybWFsaXplZCBwYXJhbWV0ZXJzXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBub3JtYWxpemVQYXJhbXMoY29uZmlndXJhdGlvbnMpIHtcbiAgICBjb25maWd1cmF0aW9ucy5mb3JFYWNoKChwYXJhbXMpID0+IHtcbiAgICAgIE9iamVjdC5rZXlzKHBhcmFtcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHBhcmFtc1trZXldO1xuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXJhbWV0ZXIgXCIke2tleX1cIiBtdXN0IGhhdmUgb25seSBhIHNpbmdsZSB2YWx1ZWApO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFsdWUgPSB2YWx1ZVswXTtcblxuICAgICAgICBpZiAoa2V5ID09PSAnY2xpZW50X21heF93aW5kb3dfYml0cycpIHtcbiAgICAgICAgICBpZiAodmFsdWUgIT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IG51bSA9ICt2YWx1ZTtcbiAgICAgICAgICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihudW0pIHx8IG51bSA8IDggfHwgbnVtID4gMTUpIHtcbiAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICAgICAgICBgSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyIFwiJHtrZXl9XCI6ICR7dmFsdWV9YFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFsdWUgPSBudW07XG4gICAgICAgICAgfSBlbHNlIGlmICghdGhpcy5faXNTZXJ2ZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgICAgIGBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgXCIke2tleX1cIjogJHt2YWx1ZX1gXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdzZXJ2ZXJfbWF4X3dpbmRvd19iaXRzJykge1xuICAgICAgICAgIGNvbnN0IG51bSA9ICt2YWx1ZTtcbiAgICAgICAgICBpZiAoIU51bWJlci5pc0ludGVnZXIobnVtKSB8fCBudW0gPCA4IHx8IG51bSA+IDE1KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgICAgICBgSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyIFwiJHtrZXl9XCI6ICR7dmFsdWV9YFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFsdWUgPSBudW07XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAga2V5ID09PSAnY2xpZW50X25vX2NvbnRleHRfdGFrZW92ZXInIHx8XG4gICAgICAgICAga2V5ID09PSAnc2VydmVyX25vX2NvbnRleHRfdGFrZW92ZXInXG4gICAgICAgICkge1xuICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICAgICAgYEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciBcIiR7a2V5fVwiOiAke3ZhbHVlfWBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBwYXJhbWV0ZXIgXCIke2tleX1cImApO1xuICAgICAgICB9XG5cbiAgICAgICAgcGFyYW1zW2tleV0gPSB2YWx1ZTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNvbmZpZ3VyYXRpb25zO1xuICB9XG5cbiAgLyoqXG4gICAqIERlY29tcHJlc3MgZGF0YS4gQ29uY3VycmVuY3kgbGltaXRlZC5cbiAgICpcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgQ29tcHJlc3NlZCBkYXRhXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZmluIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0aGlzIGlzIHRoZSBsYXN0IGZyYWdtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGRlY29tcHJlc3MoZGF0YSwgZmluLCBjYWxsYmFjaykge1xuICAgIHpsaWJMaW1pdGVyLmFkZCgoZG9uZSkgPT4ge1xuICAgICAgdGhpcy5fZGVjb21wcmVzcyhkYXRhLCBmaW4sIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICBkb25lKCk7XG4gICAgICAgIGNhbGxiYWNrKGVyciwgcmVzdWx0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbXByZXNzIGRhdGEuIENvbmN1cnJlbmN5IGxpbWl0ZWQuXG4gICAqXG4gICAqIEBwYXJhbSB7QnVmZmVyfSBkYXRhIERhdGEgdG8gY29tcHJlc3NcbiAgICogQHBhcmFtIHtCb29sZWFufSBmaW4gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRoaXMgaXMgdGhlIGxhc3QgZnJhZ21lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2tcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgY29tcHJlc3MoZGF0YSwgZmluLCBjYWxsYmFjaykge1xuICAgIHpsaWJMaW1pdGVyLmFkZCgoZG9uZSkgPT4ge1xuICAgICAgdGhpcy5fY29tcHJlc3MoZGF0YSwgZmluLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3VsdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWNvbXByZXNzIGRhdGEuXG4gICAqXG4gICAqIEBwYXJhbSB7QnVmZmVyfSBkYXRhIENvbXByZXNzZWQgZGF0YVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZpbiBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdGhpcyBpcyB0aGUgbGFzdCBmcmFnbWVudFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFja1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgX2RlY29tcHJlc3MoZGF0YSwgZmluLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGVuZHBvaW50ID0gdGhpcy5faXNTZXJ2ZXIgPyAnY2xpZW50JyA6ICdzZXJ2ZXInO1xuXG4gICAgaWYgKCF0aGlzLl9pbmZsYXRlKSB7XG4gICAgICBjb25zdCBrZXkgPSBgJHtlbmRwb2ludH1fbWF4X3dpbmRvd19iaXRzYDtcbiAgICAgIGNvbnN0IHdpbmRvd0JpdHMgPVxuICAgICAgICB0eXBlb2YgdGhpcy5wYXJhbXNba2V5XSAhPT0gJ251bWJlcidcbiAgICAgICAgICA/IHpsaWIuWl9ERUZBVUxUX1dJTkRPV0JJVFNcbiAgICAgICAgICA6IHRoaXMucGFyYW1zW2tleV07XG5cbiAgICAgIHRoaXMuX2luZmxhdGUgPSB6bGliLmNyZWF0ZUluZmxhdGVSYXcoe1xuICAgICAgICAuLi50aGlzLl9vcHRpb25zLnpsaWJJbmZsYXRlT3B0aW9ucyxcbiAgICAgICAgd2luZG93Qml0c1xuICAgICAgfSk7XG4gICAgICB0aGlzLl9pbmZsYXRlW2tQZXJNZXNzYWdlRGVmbGF0ZV0gPSB0aGlzO1xuICAgICAgdGhpcy5faW5mbGF0ZVtrVG90YWxMZW5ndGhdID0gMDtcbiAgICAgIHRoaXMuX2luZmxhdGVba0J1ZmZlcnNdID0gW107XG4gICAgICB0aGlzLl9pbmZsYXRlLm9uKCdlcnJvcicsIGluZmxhdGVPbkVycm9yKTtcbiAgICAgIHRoaXMuX2luZmxhdGUub24oJ2RhdGEnLCBpbmZsYXRlT25EYXRhKTtcbiAgICB9XG5cbiAgICB0aGlzLl9pbmZsYXRlW2tDYWxsYmFja10gPSBjYWxsYmFjaztcblxuICAgIHRoaXMuX2luZmxhdGUud3JpdGUoZGF0YSk7XG4gICAgaWYgKGZpbikgdGhpcy5faW5mbGF0ZS53cml0ZShUUkFJTEVSKTtcblxuICAgIHRoaXMuX2luZmxhdGUuZmx1c2goKCkgPT4ge1xuICAgICAgY29uc3QgZXJyID0gdGhpcy5faW5mbGF0ZVtrRXJyb3JdO1xuXG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHRoaXMuX2luZmxhdGUuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5faW5mbGF0ZSA9IG51bGw7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGF0YSA9IGJ1ZmZlclV0aWwuY29uY2F0KFxuICAgICAgICB0aGlzLl9pbmZsYXRlW2tCdWZmZXJzXSxcbiAgICAgICAgdGhpcy5faW5mbGF0ZVtrVG90YWxMZW5ndGhdXG4gICAgICApO1xuXG4gICAgICBpZiAodGhpcy5faW5mbGF0ZS5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkKSB7XG4gICAgICAgIHRoaXMuX2luZmxhdGUuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5faW5mbGF0ZSA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9pbmZsYXRlW2tUb3RhbExlbmd0aF0gPSAwO1xuICAgICAgICB0aGlzLl9pbmZsYXRlW2tCdWZmZXJzXSA9IFtdO1xuXG4gICAgICAgIGlmIChmaW4gJiYgdGhpcy5wYXJhbXNbYCR7ZW5kcG9pbnR9X25vX2NvbnRleHRfdGFrZW92ZXJgXSkge1xuICAgICAgICAgIHRoaXMuX2luZmxhdGUucmVzZXQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjYWxsYmFjayhudWxsLCBkYXRhKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wcmVzcyBkYXRhLlxuICAgKlxuICAgKiBAcGFyYW0ge0J1ZmZlcn0gZGF0YSBEYXRhIHRvIGNvbXByZXNzXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZmluIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0aGlzIGlzIHRoZSBsYXN0IGZyYWdtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfY29tcHJlc3MoZGF0YSwgZmluLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IGVuZHBvaW50ID0gdGhpcy5faXNTZXJ2ZXIgPyAnc2VydmVyJyA6ICdjbGllbnQnO1xuXG4gICAgaWYgKCF0aGlzLl9kZWZsYXRlKSB7XG4gICAgICBjb25zdCBrZXkgPSBgJHtlbmRwb2ludH1fbWF4X3dpbmRvd19iaXRzYDtcbiAgICAgIGNvbnN0IHdpbmRvd0JpdHMgPVxuICAgICAgICB0eXBlb2YgdGhpcy5wYXJhbXNba2V5XSAhPT0gJ251bWJlcidcbiAgICAgICAgICA/IHpsaWIuWl9ERUZBVUxUX1dJTkRPV0JJVFNcbiAgICAgICAgICA6IHRoaXMucGFyYW1zW2tleV07XG5cbiAgICAgIHRoaXMuX2RlZmxhdGUgPSB6bGliLmNyZWF0ZURlZmxhdGVSYXcoe1xuICAgICAgICAuLi50aGlzLl9vcHRpb25zLnpsaWJEZWZsYXRlT3B0aW9ucyxcbiAgICAgICAgd2luZG93Qml0c1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX2RlZmxhdGVba1RvdGFsTGVuZ3RoXSA9IDA7XG4gICAgICB0aGlzLl9kZWZsYXRlW2tCdWZmZXJzXSA9IFtdO1xuXG4gICAgICAvL1xuICAgICAgLy8gQW4gYCdlcnJvcidgIGV2ZW50IGlzIGVtaXR0ZWQsIG9ubHkgb24gTm9kZS5qcyA8IDEwLjAuMCwgaWYgdGhlXG4gICAgICAvLyBgemxpYi5EZWZsYXRlUmF3YCBpbnN0YW5jZSBpcyBjbG9zZWQgd2hpbGUgZGF0YSBpcyBiZWluZyBwcm9jZXNzZWQuXG4gICAgICAvLyBUaGlzIGNhbiBoYXBwZW4gaWYgYFBlck1lc3NhZ2VEZWZsYXRlI2NsZWFudXAoKWAgaXMgY2FsbGVkIGF0IHRoZSB3cm9uZ1xuICAgICAgLy8gdGltZSBkdWUgdG8gYW4gYWJub3JtYWwgV2ViU29ja2V0IGNsb3N1cmUuXG4gICAgICAvL1xuICAgICAgdGhpcy5fZGVmbGF0ZS5vbignZXJyb3InLCBOT09QKTtcbiAgICAgIHRoaXMuX2RlZmxhdGUub24oJ2RhdGEnLCBkZWZsYXRlT25EYXRhKTtcbiAgICB9XG5cbiAgICB0aGlzLl9kZWZsYXRlW2tDYWxsYmFja10gPSBjYWxsYmFjaztcblxuICAgIHRoaXMuX2RlZmxhdGUud3JpdGUoZGF0YSk7XG4gICAgdGhpcy5fZGVmbGF0ZS5mbHVzaCh6bGliLlpfU1lOQ19GTFVTSCwgKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLl9kZWZsYXRlKSB7XG4gICAgICAgIC8vXG4gICAgICAgIC8vIFRoZSBkZWZsYXRlIHN0cmVhbSB3YXMgY2xvc2VkIHdoaWxlIGRhdGEgd2FzIGJlaW5nIHByb2Nlc3NlZC5cbiAgICAgICAgLy9cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsZXQgZGF0YSA9IGJ1ZmZlclV0aWwuY29uY2F0KFxuICAgICAgICB0aGlzLl9kZWZsYXRlW2tCdWZmZXJzXSxcbiAgICAgICAgdGhpcy5fZGVmbGF0ZVtrVG90YWxMZW5ndGhdXG4gICAgICApO1xuXG4gICAgICBpZiAoZmluKSBkYXRhID0gZGF0YS5zbGljZSgwLCBkYXRhLmxlbmd0aCAtIDQpO1xuXG4gICAgICAvL1xuICAgICAgLy8gRW5zdXJlIHRoYXQgdGhlIGNhbGxiYWNrIHdpbGwgbm90IGJlIGNhbGxlZCBhZ2FpbiBpblxuICAgICAgLy8gYFBlck1lc3NhZ2VEZWZsYXRlI2NsZWFudXAoKWAuXG4gICAgICAvL1xuICAgICAgdGhpcy5fZGVmbGF0ZVtrQ2FsbGJhY2tdID0gbnVsbDtcblxuICAgICAgdGhpcy5fZGVmbGF0ZVtrVG90YWxMZW5ndGhdID0gMDtcbiAgICAgIHRoaXMuX2RlZmxhdGVba0J1ZmZlcnNdID0gW107XG5cbiAgICAgIGlmIChmaW4gJiYgdGhpcy5wYXJhbXNbYCR7ZW5kcG9pbnR9X25vX2NvbnRleHRfdGFrZW92ZXJgXSkge1xuICAgICAgICB0aGlzLl9kZWZsYXRlLnJlc2V0KCk7XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUGVyTWVzc2FnZURlZmxhdGU7XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgemxpYi5EZWZsYXRlUmF3YCBzdHJlYW0gYCdkYXRhJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGNodW5rIEEgY2h1bmsgb2YgZGF0YVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZGVmbGF0ZU9uRGF0YShjaHVuaykge1xuICB0aGlzW2tCdWZmZXJzXS5wdXNoKGNodW5rKTtcbiAgdGhpc1trVG90YWxMZW5ndGhdICs9IGNodW5rLmxlbmd0aDtcbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGB6bGliLkluZmxhdGVSYXdgIHN0cmVhbSBgJ2RhdGEnYCBldmVudC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gY2h1bmsgQSBjaHVuayBvZiBkYXRhXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBpbmZsYXRlT25EYXRhKGNodW5rKSB7XG4gIHRoaXNba1RvdGFsTGVuZ3RoXSArPSBjaHVuay5sZW5ndGg7XG5cbiAgaWYgKFxuICAgIHRoaXNba1Blck1lc3NhZ2VEZWZsYXRlXS5fbWF4UGF5bG9hZCA8IDEgfHxcbiAgICB0aGlzW2tUb3RhbExlbmd0aF0gPD0gdGhpc1trUGVyTWVzc2FnZURlZmxhdGVdLl9tYXhQYXlsb2FkXG4gICkge1xuICAgIHRoaXNba0J1ZmZlcnNdLnB1c2goY2h1bmspO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXNba0Vycm9yXSA9IG5ldyBSYW5nZUVycm9yKCdNYXggcGF5bG9hZCBzaXplIGV4Y2VlZGVkJyk7XG4gIHRoaXNba0Vycm9yXS5jb2RlID0gJ1dTX0VSUl9VTlNVUFBPUlRFRF9NRVNTQUdFX0xFTkdUSCc7XG4gIHRoaXNba0Vycm9yXVtrU3RhdHVzQ29kZV0gPSAxMDA5O1xuICB0aGlzLnJlbW92ZUxpc3RlbmVyKCdkYXRhJywgaW5mbGF0ZU9uRGF0YSk7XG4gIHRoaXMucmVzZXQoKTtcbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGB6bGliLkluZmxhdGVSYXdgIHN0cmVhbSBgJ2Vycm9yJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyIFRoZSBlbWl0dGVkIGVycm9yXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBpbmZsYXRlT25FcnJvcihlcnIpIHtcbiAgLy9cbiAgLy8gVGhlcmUgaXMgbm8gbmVlZCB0byBjYWxsIGBabGliI2Nsb3NlKClgIGFzIHRoZSBoYW5kbGUgaXMgYXV0b21hdGljYWxseVxuICAvLyBjbG9zZWQgd2hlbiBhbiBlcnJvciBpcyBlbWl0dGVkLlxuICAvL1xuICB0aGlzW2tQZXJNZXNzYWdlRGVmbGF0ZV0uX2luZmxhdGUgPSBudWxsO1xuICBlcnJba1N0YXR1c0NvZGVdID0gMTAwNztcbiAgdGhpc1trQ2FsbGJhY2tdKGVycik7XG59XG4iXSwibmFtZXMiOlsiemxpYiIsInJlcXVpcmUiLCJidWZmZXJVdGlsIiwiTGltaXRlciIsImtTdGF0dXNDb2RlIiwiTk9PUCIsIlRSQUlMRVIiLCJCdWZmZXIiLCJmcm9tIiwia1Blck1lc3NhZ2VEZWZsYXRlIiwiU3ltYm9sIiwia1RvdGFsTGVuZ3RoIiwia0NhbGxiYWNrIiwia0J1ZmZlcnMiLCJrRXJyb3IiLCJ6bGliTGltaXRlciIsIlBlck1lc3NhZ2VEZWZsYXRlIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiaXNTZXJ2ZXIiLCJtYXhQYXlsb2FkIiwiX21heFBheWxvYWQiLCJfb3B0aW9ucyIsIl90aHJlc2hvbGQiLCJ0aHJlc2hvbGQiLCJ1bmRlZmluZWQiLCJfaXNTZXJ2ZXIiLCJfZGVmbGF0ZSIsIl9pbmZsYXRlIiwicGFyYW1zIiwiY29uY3VycmVuY3kiLCJjb25jdXJyZW5jeUxpbWl0IiwiZXh0ZW5zaW9uTmFtZSIsIm9mZmVyIiwic2VydmVyTm9Db250ZXh0VGFrZW92ZXIiLCJzZXJ2ZXJfbm9fY29udGV4dF90YWtlb3ZlciIsImNsaWVudE5vQ29udGV4dFRha2VvdmVyIiwiY2xpZW50X25vX2NvbnRleHRfdGFrZW92ZXIiLCJzZXJ2ZXJNYXhXaW5kb3dCaXRzIiwic2VydmVyX21heF93aW5kb3dfYml0cyIsImNsaWVudE1heFdpbmRvd0JpdHMiLCJjbGllbnRfbWF4X3dpbmRvd19iaXRzIiwiYWNjZXB0IiwiY29uZmlndXJhdGlvbnMiLCJub3JtYWxpemVQYXJhbXMiLCJhY2NlcHRBc1NlcnZlciIsImFjY2VwdEFzQ2xpZW50IiwiY2xlYW51cCIsImNsb3NlIiwiY2FsbGJhY2siLCJFcnJvciIsIm9mZmVycyIsIm9wdHMiLCJhY2NlcHRlZCIsImZpbmQiLCJyZXNwb25zZSIsImZvckVhY2giLCJPYmplY3QiLCJrZXlzIiwia2V5IiwidmFsdWUiLCJsZW5ndGgiLCJudW0iLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJUeXBlRXJyb3IiLCJkZWNvbXByZXNzIiwiZGF0YSIsImZpbiIsImFkZCIsImRvbmUiLCJfZGVjb21wcmVzcyIsImVyciIsInJlc3VsdCIsImNvbXByZXNzIiwiX2NvbXByZXNzIiwiZW5kcG9pbnQiLCJ3aW5kb3dCaXRzIiwiWl9ERUZBVUxUX1dJTkRPV0JJVFMiLCJjcmVhdGVJbmZsYXRlUmF3IiwiemxpYkluZmxhdGVPcHRpb25zIiwib24iLCJpbmZsYXRlT25FcnJvciIsImluZmxhdGVPbkRhdGEiLCJ3cml0ZSIsImZsdXNoIiwiY29uY2F0IiwiX3JlYWRhYmxlU3RhdGUiLCJlbmRFbWl0dGVkIiwicmVzZXQiLCJjcmVhdGVEZWZsYXRlUmF3IiwiemxpYkRlZmxhdGVPcHRpb25zIiwiZGVmbGF0ZU9uRGF0YSIsIlpfU1lOQ19GTFVTSCIsInNsaWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNodW5rIiwicHVzaCIsIlJhbmdlRXJyb3IiLCJjb2RlIiwicmVtb3ZlTGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Writable } = __webpack_require__(/*! stream */ \"stream\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, kStatusCode, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { concat, toArrayBuffer, unmask } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst { isValidStatusCode, isValidUTF8 } = __webpack_require__(/*! ./validation */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */ class Receiver extends Writable {\n    /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} [binaryType=nodebuffer] The type for binary data\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Boolean} [isServer=false] Specifies whether to operate in client or\n   *     server mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(binaryType, extensions, isServer, maxPayload){\n        super();\n        this._binaryType = binaryType || BINARY_TYPES[0];\n        this[kWebSocket] = undefined;\n        this._extensions = extensions || {};\n        this._isServer = !!isServer;\n        this._maxPayload = maxPayload | 0;\n        this._bufferedBytes = 0;\n        this._buffers = [];\n        this._compressed = false;\n        this._payloadLength = 0;\n        this._mask = undefined;\n        this._fragmented = 0;\n        this._masked = false;\n        this._fin = false;\n        this._opcode = 0;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragments = [];\n        this._state = GET_INFO;\n        this._loop = false;\n    }\n    /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */ _write(chunk, encoding, cb) {\n        if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n        this._bufferedBytes += chunk.length;\n        this._buffers.push(chunk);\n        this.startLoop(cb);\n    }\n    /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */ consume(n) {\n        this._bufferedBytes -= n;\n        if (n === this._buffers[0].length) return this._buffers.shift();\n        if (n < this._buffers[0].length) {\n            const buf = this._buffers[0];\n            this._buffers[0] = buf.slice(n);\n            return buf.slice(0, n);\n        }\n        const dst = Buffer.allocUnsafe(n);\n        do {\n            const buf = this._buffers[0];\n            const offset = dst.length - n;\n            if (n >= buf.length) {\n                dst.set(this._buffers.shift(), offset);\n            } else {\n                dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n                this._buffers[0] = buf.slice(n);\n            }\n            n -= buf.length;\n        }while (n > 0);\n        return dst;\n    }\n    /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */ startLoop(cb) {\n        let err;\n        this._loop = true;\n        do {\n            switch(this._state){\n                case GET_INFO:\n                    err = this.getInfo();\n                    break;\n                case GET_PAYLOAD_LENGTH_16:\n                    err = this.getPayloadLength16();\n                    break;\n                case GET_PAYLOAD_LENGTH_64:\n                    err = this.getPayloadLength64();\n                    break;\n                case GET_MASK:\n                    this.getMask();\n                    break;\n                case GET_DATA:\n                    err = this.getData(cb);\n                    break;\n                default:\n                    // `INFLATING`\n                    this._loop = false;\n                    return;\n            }\n        }while (this._loop);\n        cb(err);\n    }\n    /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getInfo() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(2);\n        if ((buf[0] & 0x30) !== 0x00) {\n            this._loop = false;\n            return error(RangeError, \"RSV2 and RSV3 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_2_3\");\n        }\n        const compressed = (buf[0] & 0x40) === 0x40;\n        if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n            this._loop = false;\n            return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n        }\n        this._fin = (buf[0] & 0x80) === 0x80;\n        this._opcode = buf[0] & 0x0f;\n        this._payloadLength = buf[1] & 0x7f;\n        if (this._opcode === 0x00) {\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (!this._fragmented) {\n                this._loop = false;\n                return error(RangeError, \"invalid opcode 0\", true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._opcode = this._fragmented;\n        } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n            if (this._fragmented) {\n                this._loop = false;\n                return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._compressed = compressed;\n        } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n            if (!this._fin) {\n                this._loop = false;\n                return error(RangeError, \"FIN must be set\", true, 1002, \"WS_ERR_EXPECTED_FIN\");\n            }\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (this._payloadLength > 0x7d) {\n                this._loop = false;\n                return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            }\n        } else {\n            this._loop = false;\n            return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n        }\n        if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n        this._masked = (buf[1] & 0x80) === 0x80;\n        if (this._isServer) {\n            if (!this._masked) {\n                this._loop = false;\n                return error(RangeError, \"MASK must be set\", true, 1002, \"WS_ERR_EXPECTED_MASK\");\n            }\n        } else if (this._masked) {\n            this._loop = false;\n            return error(RangeError, \"MASK must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_MASK\");\n        }\n        if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n        else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n        else return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength16() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        this._payloadLength = this.consume(2).readUInt16BE(0);\n        return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength64() {\n        if (this._bufferedBytes < 8) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(8);\n        const num = buf.readUInt32BE(0);\n        //\n        // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n        // if payload length is greater than this number.\n        //\n        if (num > Math.pow(2, 53 - 32) - 1) {\n            this._loop = false;\n            return error(RangeError, \"Unsupported WebSocket frame: payload length > 2^53 - 1\", false, 1009, \"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH\");\n        }\n        this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n        return this.haveLength();\n    }\n    /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ haveLength() {\n        if (this._payloadLength && this._opcode < 0x08) {\n            this._totalPayloadLength += this._payloadLength;\n            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n                this._loop = false;\n                return error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\");\n            }\n        }\n        if (this._masked) this._state = GET_MASK;\n        else this._state = GET_DATA;\n    }\n    /**\n   * Reads mask bytes.\n   *\n   * @private\n   */ getMask() {\n        if (this._bufferedBytes < 4) {\n            this._loop = false;\n            return;\n        }\n        this._mask = this.consume(4);\n        this._state = GET_DATA;\n    }\n    /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ getData(cb) {\n        let data = EMPTY_BUFFER;\n        if (this._payloadLength) {\n            if (this._bufferedBytes < this._payloadLength) {\n                this._loop = false;\n                return;\n            }\n            data = this.consume(this._payloadLength);\n            if (this._masked) unmask(data, this._mask);\n        }\n        if (this._opcode > 0x07) return this.controlMessage(data);\n        if (this._compressed) {\n            this._state = INFLATING;\n            this.decompress(data, cb);\n            return;\n        }\n        if (data.length) {\n            //\n            // This message is not compressed so its lenght is the sum of the payload\n            // length of all fragments.\n            //\n            this._messageLength = this._totalPayloadLength;\n            this._fragments.push(data);\n        }\n        return this.dataMessage();\n    }\n    /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */ decompress(data, cb) {\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        perMessageDeflate.decompress(data, this._fin, (err, buf)=>{\n            if (err) return cb(err);\n            if (buf.length) {\n                this._messageLength += buf.length;\n                if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n                    return cb(error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\"));\n                }\n                this._fragments.push(buf);\n            }\n            const er = this.dataMessage();\n            if (er) return cb(er);\n            this.startLoop(cb);\n        });\n    }\n    /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */ dataMessage() {\n        if (this._fin) {\n            const messageLength = this._messageLength;\n            const fragments = this._fragments;\n            this._totalPayloadLength = 0;\n            this._messageLength = 0;\n            this._fragmented = 0;\n            this._fragments = [];\n            if (this._opcode === 2) {\n                let data;\n                if (this._binaryType === \"nodebuffer\") {\n                    data = concat(fragments, messageLength);\n                } else if (this._binaryType === \"arraybuffer\") {\n                    data = toArrayBuffer(concat(fragments, messageLength));\n                } else {\n                    data = fragments;\n                }\n                this.emit(\"message\", data);\n            } else {\n                const buf = concat(fragments, messageLength);\n                if (!isValidUTF8(buf)) {\n                    this._loop = false;\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"message\", buf.toString());\n            }\n        }\n        this._state = GET_INFO;\n    }\n    /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ controlMessage(data) {\n        if (this._opcode === 0x08) {\n            this._loop = false;\n            if (data.length === 0) {\n                this.emit(\"conclude\", 1005, \"\");\n                this.end();\n            } else if (data.length === 1) {\n                return error(RangeError, \"invalid payload length 1\", true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            } else {\n                const code = data.readUInt16BE(0);\n                if (!isValidStatusCode(code)) {\n                    return error(RangeError, `invalid status code ${code}`, true, 1002, \"WS_ERR_INVALID_CLOSE_CODE\");\n                }\n                const buf = data.slice(2);\n                if (!isValidUTF8(buf)) {\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"conclude\", code, buf.toString());\n                this.end();\n            }\n        } else if (this._opcode === 0x09) {\n            this.emit(\"ping\", data);\n        } else {\n            this.emit(\"pong\", data);\n        }\n        this._state = GET_INFO;\n    }\n}\nmodule.exports = Receiver;\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */ function error(ErrorCtor, message, prefix, statusCode, errorCode) {\n    const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n    Error.captureStackTrace(err, error);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */ \nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomFillSync } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { isValidStatusCode } = __webpack_require__(/*! ./validation */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst { mask: applyMask, toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst mask = Buffer.alloc(4);\n/**\n * HyBi Sender implementation.\n */ class Sender {\n    /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   */ constructor(socket, extensions){\n        this._extensions = extensions || {};\n        this._socket = socket;\n        this._firstFragment = true;\n        this._compress = false;\n        this._bufferedBytes = 0;\n        this._deflating = false;\n        this._queue = [];\n    }\n    /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */ static frame(data, options) {\n        const merge = options.mask && options.readOnly;\n        let offset = options.mask ? 6 : 2;\n        let payloadLength = data.length;\n        if (data.length >= 65536) {\n            offset += 8;\n            payloadLength = 127;\n        } else if (data.length > 125) {\n            offset += 2;\n            payloadLength = 126;\n        }\n        const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n        target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n        if (options.rsv1) target[0] |= 0x40;\n        target[1] = payloadLength;\n        if (payloadLength === 126) {\n            target.writeUInt16BE(data.length, 2);\n        } else if (payloadLength === 127) {\n            target.writeUInt32BE(0, 2);\n            target.writeUInt32BE(data.length, 6);\n        }\n        if (!options.mask) return [\n            target,\n            data\n        ];\n        randomFillSync(mask, 0, 4);\n        target[1] |= 0x80;\n        target[offset - 4] = mask[0];\n        target[offset - 3] = mask[1];\n        target[offset - 2] = mask[2];\n        target[offset - 1] = mask[3];\n        if (merge) {\n            applyMask(data, mask, target, offset, data.length);\n            return [\n                target\n            ];\n        }\n        applyMask(data, mask, data, 0, data.length);\n        return [\n            target,\n            data\n        ];\n    }\n    /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {String} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(code, data, mask, cb) {\n        let buf;\n        if (code === undefined) {\n            buf = EMPTY_BUFFER;\n        } else if (typeof code !== \"number\" || !isValidStatusCode(code)) {\n            throw new TypeError(\"First argument must be a valid error code number\");\n        } else if (data === undefined || data === \"\") {\n            buf = Buffer.allocUnsafe(2);\n            buf.writeUInt16BE(code, 0);\n        } else {\n            const length = Buffer.byteLength(data);\n            if (length > 123) {\n                throw new RangeError(\"The message must not be greater than 123 bytes\");\n            }\n            buf = Buffer.allocUnsafe(2 + length);\n            buf.writeUInt16BE(code, 0);\n            buf.write(data, 2);\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doClose,\n                buf,\n                mask,\n                cb\n            ]);\n        } else {\n            this.doClose(buf, mask, cb);\n        }\n    }\n    /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @private\n   */ doClose(data, mask, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x08,\n            mask,\n            readOnly: false\n        }), cb);\n    }\n    /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ ping(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPing,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPing(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a ping message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPing(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x09,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ pong(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPong,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPong(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a pong message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPong(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x0a,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ send(data, options, cb) {\n        const buf = toBuffer(data);\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        let opcode = options.binary ? 2 : 1;\n        let rsv1 = options.compress;\n        if (this._firstFragment) {\n            this._firstFragment = false;\n            if (rsv1 && perMessageDeflate) {\n                rsv1 = buf.length >= perMessageDeflate._threshold;\n            }\n            this._compress = rsv1;\n        } else {\n            rsv1 = false;\n            opcode = 0;\n        }\n        if (options.fin) this._firstFragment = true;\n        if (perMessageDeflate) {\n            const opts = {\n                fin: options.fin,\n                rsv1,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            };\n            if (this._deflating) {\n                this.enqueue([\n                    this.dispatch,\n                    buf,\n                    this._compress,\n                    opts,\n                    cb\n                ]);\n            } else {\n                this.dispatch(buf, this._compress, opts, cb);\n            }\n        } else {\n            this.sendFrame(Sender.frame(buf, {\n                fin: options.fin,\n                rsv1: false,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            }), cb);\n        }\n    }\n    /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */ dispatch(data, compress, options, cb) {\n        if (!compress) {\n            this.sendFrame(Sender.frame(data, options), cb);\n            return;\n        }\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        this._bufferedBytes += data.length;\n        this._deflating = true;\n        perMessageDeflate.compress(data, options.fin, (_, buf)=>{\n            if (this._socket.destroyed) {\n                const err = new Error(\"The socket was closed while data was being compressed\");\n                if (typeof cb === \"function\") cb(err);\n                for(let i = 0; i < this._queue.length; i++){\n                    const callback = this._queue[i][4];\n                    if (typeof callback === \"function\") callback(err);\n                }\n                return;\n            }\n            this._bufferedBytes -= data.length;\n            this._deflating = false;\n            options.readOnly = false;\n            this.sendFrame(Sender.frame(buf, options), cb);\n            this.dequeue();\n        });\n    }\n    /**\n   * Executes queued send operations.\n   *\n   * @private\n   */ dequeue() {\n        while(!this._deflating && this._queue.length){\n            const params = this._queue.shift();\n            this._bufferedBytes -= params[1].length;\n            Reflect.apply(params[0], this, params.slice(1));\n        }\n    }\n    /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */ enqueue(params) {\n        this._bufferedBytes += params[1].length;\n        this._queue.push(params);\n    }\n    /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */ sendFrame(list, cb) {\n        if (list.length === 2) {\n            this._socket.cork();\n            this._socket.write(list[0]);\n            this._socket.write(list[1], cb);\n            this._socket.uncork();\n        } else {\n            this._socket.write(list[0], cb);\n        }\n    }\n}\nmodule.exports = Sender;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\");\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */ function emitClose(stream) {\n    stream.emit(\"close\");\n}\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */ function duplexOnEnd() {\n    if (!this.destroyed && this._writableState.finished) {\n        this.destroy();\n    }\n}\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */ function duplexOnError(err) {\n    this.removeListener(\"error\", duplexOnError);\n    this.destroy();\n    if (this.listenerCount(\"error\") === 0) {\n        // Do not suppress the throwing behavior.\n        this.emit(\"error\", err);\n    }\n}\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */ function createWebSocketStream(ws, options) {\n    let resumeOnReceiverDrain = true;\n    let terminateOnDestroy = true;\n    function receiverOnDrain() {\n        if (resumeOnReceiverDrain) ws._socket.resume();\n    }\n    if (ws.readyState === ws.CONNECTING) {\n        ws.once(\"open\", function open() {\n            ws._receiver.removeAllListeners(\"drain\");\n            ws._receiver.on(\"drain\", receiverOnDrain);\n        });\n    } else {\n        ws._receiver.removeAllListeners(\"drain\");\n        ws._receiver.on(\"drain\", receiverOnDrain);\n    }\n    const duplex = new Duplex({\n        ...options,\n        autoDestroy: false,\n        emitClose: false,\n        objectMode: false,\n        writableObjectMode: false\n    });\n    ws.on(\"message\", function message(msg) {\n        if (!duplex.push(msg)) {\n            resumeOnReceiverDrain = false;\n            ws._socket.pause();\n        }\n    });\n    ws.once(\"error\", function error(err) {\n        if (duplex.destroyed) return;\n        // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n        //\n        // - If the `'error'` event is emitted before the `'open'` event, then\n        //   `ws.terminate()` is a noop as no socket is assigned.\n        // - Otherwise, the error is re-emitted by the listener of the `'error'`\n        //   event of the `Receiver` object. The listener already closes the\n        //   connection by calling `ws.close()`. This allows a close frame to be\n        //   sent to the other peer. If `ws.terminate()` is called right after this,\n        //   then the close frame might not be sent.\n        terminateOnDestroy = false;\n        duplex.destroy(err);\n    });\n    ws.once(\"close\", function close() {\n        if (duplex.destroyed) return;\n        duplex.push(null);\n    });\n    duplex._destroy = function(err, callback) {\n        if (ws.readyState === ws.CLOSED) {\n            callback(err);\n            process.nextTick(emitClose, duplex);\n            return;\n        }\n        let called = false;\n        ws.once(\"error\", function error(err) {\n            called = true;\n            callback(err);\n        });\n        ws.once(\"close\", function close() {\n            if (!called) callback(err);\n            process.nextTick(emitClose, duplex);\n        });\n        if (terminateOnDestroy) ws.terminate();\n    };\n    duplex._final = function(callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._final(callback);\n            });\n            return;\n        }\n        // If the value of the `_socket` property is `null` it means that `ws` is a\n        // client websocket and the handshake failed. In fact, when this happens, a\n        // socket is never assigned to the websocket. Wait for the `'error'` event\n        // that will be emitted by the websocket.\n        if (ws._socket === null) return;\n        if (ws._socket._writableState.finished) {\n            callback();\n            if (duplex._readableState.endEmitted) duplex.destroy();\n        } else {\n            ws._socket.once(\"finish\", function finish() {\n                // `duplex` is not destroyed here because the `'end'` event will be\n                // emitted on `duplex` after this `'finish'` event. The EOF signaling\n                // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n                callback();\n            });\n            ws.close();\n        }\n    };\n    duplex._read = function() {\n        if ((ws.readyState === ws.OPEN || ws.readyState === ws.CLOSING) && !resumeOnReceiverDrain) {\n            resumeOnReceiverDrain = true;\n            if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n        }\n    };\n    duplex._write = function(chunk, encoding, callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._write(chunk, encoding, callback);\n            });\n            return;\n        }\n        ws.send(chunk, callback);\n    };\n    duplex.on(\"end\", duplexOnEnd);\n    duplex.on(\"error\", duplexOnError);\n    return duplex;\n}\nmodule.exports = createWebSocketStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */ function isValidStatusCode(code) {\n    return code >= 1000 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3000 && code <= 4999;\n}\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */ function _isValidUTF8(buf) {\n    const len = buf.length;\n    let i = 0;\n    while(i < len){\n        if ((buf[i] & 0x80) === 0) {\n            // 0xxxxxxx\n            i++;\n        } else if ((buf[i] & 0xe0) === 0xc0) {\n            // 110xxxxx 10xxxxxx\n            if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // Overlong\n            ) {\n                return false;\n            }\n            i += 2;\n        } else if ((buf[i] & 0xf0) === 0xe0) {\n            // 1110xxxx 10xxxxxx 10xxxxxx\n            if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // Overlong\n            buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // Surrogate (U+D800 - U+DFFF)\n            ) {\n                return false;\n            }\n            i += 3;\n        } else if ((buf[i] & 0xf8) === 0xf0) {\n            // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n            if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // Overlong\n            buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF\n            ) {\n                return false;\n            }\n            i += 4;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\ntry {\n    let isValidUTF8 = __webpack_require__(/*! utf-8-validate */ \"(ssr)/../node_modules/utf-8-validate/index.js\");\n    /* istanbul ignore if */ if (typeof isValidUTF8 === \"object\") {\n        isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0\n    }\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8 (buf) {\n            return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8: _isValidUTF8\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3ZhbGlkYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxrQkFBa0JDLElBQUk7SUFDN0IsT0FDRSxRQUFTLFFBQ1BBLFFBQVEsUUFDUkEsU0FBUyxRQUNUQSxTQUFTLFFBQ1RBLFNBQVMsUUFDVkEsUUFBUSxRQUFRQSxRQUFRO0FBRTdCO0FBRUE7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxhQUFhQyxHQUFHO0lBQ3ZCLE1BQU1DLE1BQU1ELElBQUlFLE1BQU07SUFDdEIsSUFBSUMsSUFBSTtJQUVSLE1BQU9BLElBQUlGLElBQUs7UUFDZCxJQUFJLENBQUNELEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxHQUFHO1lBQ3pCLFdBQVc7WUFDWEE7UUFDRixPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxFQUFFLEdBQUcsSUFBRyxNQUFPLE1BQU07WUFDbkMsb0JBQW9CO1lBQ3BCLElBQ0VBLElBQUksTUFBTUYsT0FDVixDQUFDRCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN4QixDQUFDSCxHQUFHLENBQUNHLEVBQUUsR0FBRyxJQUFHLE1BQU8sS0FBSyxXQUFXO2NBQ3BDO2dCQUNBLE9BQU87WUFDVDtZQUVBQSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxNQUFNO1lBQ25DLDZCQUE2QjtZQUM3QixJQUNFQSxJQUFJLEtBQUtGLE9BQ1QsQ0FBQ0QsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDdkJILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFBUyxXQUFXO1lBQy9ESCxHQUFHLENBQUNHLEVBQUUsS0FBSyxRQUFRLENBQUNILEdBQUcsQ0FBQ0csSUFBSSxFQUFFLEdBQUcsSUFBRyxNQUFPLEtBQU0sOEJBQThCO2NBQ2hGO2dCQUNBLE9BQU87WUFDVDtZQUVBQSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxNQUFNO1lBQ25DLHNDQUFzQztZQUN0QyxJQUNFQSxJQUFJLEtBQUtGLE9BQ1QsQ0FBQ0QsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDdkJILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFBUyxXQUFXO1lBQy9ESCxHQUFHLENBQUNHLEVBQUUsS0FBSyxRQUFRSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLFFBQ2pDSCxHQUFHLENBQUNHLEVBQUUsR0FBRyxLQUFLLGFBQWE7Y0FDM0I7Z0JBQ0EsT0FBTztZQUNUO1lBRUFBLEtBQUs7UUFDUCxPQUFPO1lBQ0wsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFFQSxJQUFJO0lBQ0YsSUFBSUMsY0FBY0MsbUJBQU9BLENBQUM7SUFFMUIsc0JBQXNCLEdBQ3RCLElBQUksT0FBT0QsZ0JBQWdCLFVBQVU7UUFDbkNBLGNBQWNBLFlBQVlFLFVBQVUsQ0FBQ0YsV0FBVyxFQUFFLHdCQUF3QjtJQUM1RTtJQUVBRyxPQUFPQyxPQUFPLEdBQUc7UUFDZlg7UUFDQU8sYUFBWUosR0FBRztZQUNiLE9BQU9BLElBQUlFLE1BQU0sR0FBRyxNQUFNSCxhQUFhQyxPQUFPSSxZQUFZSjtRQUM1RDtJQUNGO0FBQ0YsRUFBRSxPQUFPUyxHQUFHLHdCQUF3QixHQUFHO0lBQ3JDRixPQUFPQyxPQUFPLEdBQUc7UUFDZlg7UUFDQU8sYUFBYUw7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvdmFsaWRhdGlvbi5qcz80YTc0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBzdGF0dXMgY29kZSBpcyBhbGxvd2VkIGluIGEgY2xvc2UgZnJhbWUuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGNvZGUgVGhlIHN0YXR1cyBjb2RlXG4gKiBAcmV0dXJuIHtCb29sZWFufSBgdHJ1ZWAgaWYgdGhlIHN0YXR1cyBjb2RlIGlzIHZhbGlkLCBlbHNlIGBmYWxzZWBcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gaXNWYWxpZFN0YXR1c0NvZGUoY29kZSkge1xuICByZXR1cm4gKFxuICAgIChjb2RlID49IDEwMDAgJiZcbiAgICAgIGNvZGUgPD0gMTAxNCAmJlxuICAgICAgY29kZSAhPT0gMTAwNCAmJlxuICAgICAgY29kZSAhPT0gMTAwNSAmJlxuICAgICAgY29kZSAhPT0gMTAwNikgfHxcbiAgICAoY29kZSA+PSAzMDAwICYmIGNvZGUgPD0gNDk5OSlcbiAgKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBidWZmZXIgY29udGFpbnMgb25seSBjb3JyZWN0IFVURi04LlxuICogUG9ydGVkIGZyb20gaHR0cHM6Ly93d3cuY2wuY2FtLmFjLnVrLyU3RW1nazI1L3Vjcy91dGY4X2NoZWNrLmMgYnlcbiAqIE1hcmt1cyBLdWhuLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBidWYgVGhlIGJ1ZmZlciB0byBjaGVja1xuICogQHJldHVybiB7Qm9vbGVhbn0gYHRydWVgIGlmIGBidWZgIGNvbnRhaW5zIG9ubHkgY29ycmVjdCBVVEYtOCwgZWxzZSBgZmFsc2VgXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIF9pc1ZhbGlkVVRGOChidWYpIHtcbiAgY29uc3QgbGVuID0gYnVmLmxlbmd0aDtcbiAgbGV0IGkgPSAwO1xuXG4gIHdoaWxlIChpIDwgbGVuKSB7XG4gICAgaWYgKChidWZbaV0gJiAweDgwKSA9PT0gMCkge1xuICAgICAgLy8gMHh4eHh4eHhcbiAgICAgIGkrKztcbiAgICB9IGVsc2UgaWYgKChidWZbaV0gJiAweGUwKSA9PT0gMHhjMCkge1xuICAgICAgLy8gMTEweHh4eHggMTB4eHh4eHhcbiAgICAgIGlmIChcbiAgICAgICAgaSArIDEgPT09IGxlbiB8fFxuICAgICAgICAoYnVmW2kgKyAxXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaV0gJiAweGZlKSA9PT0gMHhjMCAvLyBPdmVybG9uZ1xuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaSArPSAyO1xuICAgIH0gZWxzZSBpZiAoKGJ1ZltpXSAmIDB4ZjApID09PSAweGUwKSB7XG4gICAgICAvLyAxMTEweHh4eCAxMHh4eHh4eCAxMHh4eHh4eFxuICAgICAgaWYgKFxuICAgICAgICBpICsgMiA+PSBsZW4gfHxcbiAgICAgICAgKGJ1ZltpICsgMV0gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2kgKyAyXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaV0gPT09IDB4ZTAgJiYgKGJ1ZltpICsgMV0gJiAweGUwKSA9PT0gMHg4MCkgfHwgLy8gT3ZlcmxvbmdcbiAgICAgICAgKGJ1ZltpXSA9PT0gMHhlZCAmJiAoYnVmW2kgKyAxXSAmIDB4ZTApID09PSAweGEwKSAvLyBTdXJyb2dhdGUgKFUrRDgwMCAtIFUrREZGRilcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGkgKz0gMztcbiAgICB9IGVsc2UgaWYgKChidWZbaV0gJiAweGY4KSA9PT0gMHhmMCkge1xuICAgICAgLy8gMTExMTB4eHggMTB4eHh4eHggMTB4eHh4eHggMTB4eHh4eHhcbiAgICAgIGlmIChcbiAgICAgICAgaSArIDMgPj0gbGVuIHx8XG4gICAgICAgIChidWZbaSArIDFdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpICsgMl0gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2kgKyAzXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaV0gPT09IDB4ZjAgJiYgKGJ1ZltpICsgMV0gJiAweGYwKSA9PT0gMHg4MCkgfHwgLy8gT3ZlcmxvbmdcbiAgICAgICAgKGJ1ZltpXSA9PT0gMHhmNCAmJiBidWZbaSArIDFdID4gMHg4ZikgfHxcbiAgICAgICAgYnVmW2ldID4gMHhmNCAvLyA+IFUrMTBGRkZGXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpICs9IDQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxudHJ5IHtcbiAgbGV0IGlzVmFsaWRVVEY4ID0gcmVxdWlyZSgndXRmLTgtdmFsaWRhdGUnKTtcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKHR5cGVvZiBpc1ZhbGlkVVRGOCA9PT0gJ29iamVjdCcpIHtcbiAgICBpc1ZhbGlkVVRGOCA9IGlzVmFsaWRVVEY4LlZhbGlkYXRpb24uaXNWYWxpZFVURjg7IC8vIHV0Zi04LXZhbGlkYXRlQDwzLjAuMFxuICB9XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaXNWYWxpZFN0YXR1c0NvZGUsXG4gICAgaXNWYWxpZFVURjgoYnVmKSB7XG4gICAgICByZXR1cm4gYnVmLmxlbmd0aCA8IDE1MCA/IF9pc1ZhbGlkVVRGOChidWYpIDogaXNWYWxpZFVURjgoYnVmKTtcbiAgICB9XG4gIH07XG59IGNhdGNoIChlKSAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyB7XG4gIG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlzVmFsaWRTdGF0dXNDb2RlLFxuICAgIGlzVmFsaWRVVEY4OiBfaXNWYWxpZFVURjhcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJpc1ZhbGlkU3RhdHVzQ29kZSIsImNvZGUiLCJfaXNWYWxpZFVURjgiLCJidWYiLCJsZW4iLCJsZW5ndGgiLCJpIiwiaXNWYWxpZFVURjgiLCJyZXF1aXJlIiwiVmFsaWRhdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst WebSocket = __webpack_require__(/*! ./websocket */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { GUID, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */ class WebSocketServer extends EventEmitter {\n    /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [callback] A listener for the `listening` event\n   */ constructor(options, callback){\n        super();\n        options = {\n            maxPayload: 100 * 1024 * 1024,\n            perMessageDeflate: false,\n            handleProtocols: null,\n            clientTracking: true,\n            verifyClient: null,\n            noServer: false,\n            backlog: null,\n            server: null,\n            host: null,\n            path: null,\n            port: null,\n            ...options\n        };\n        if (options.port == null && !options.server && !options.noServer || options.port != null && (options.server || options.noServer) || options.server && options.noServer) {\n            throw new TypeError('One and only one of the \"port\", \"server\", or \"noServer\" options ' + \"must be specified\");\n        }\n        if (options.port != null) {\n            this._server = http.createServer((req, res)=>{\n                const body = http.STATUS_CODES[426];\n                res.writeHead(426, {\n                    \"Content-Length\": body.length,\n                    \"Content-Type\": \"text/plain\"\n                });\n                res.end(body);\n            });\n            this._server.listen(options.port, options.host, options.backlog, callback);\n        } else if (options.server) {\n            this._server = options.server;\n        }\n        if (this._server) {\n            const emitConnection = this.emit.bind(this, \"connection\");\n            this._removeListeners = addListeners(this._server, {\n                listening: this.emit.bind(this, \"listening\"),\n                error: this.emit.bind(this, \"error\"),\n                upgrade: (req, socket, head)=>{\n                    this.handleUpgrade(req, socket, head, emitConnection);\n                }\n            });\n        }\n        if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n        if (options.clientTracking) this.clients = new Set();\n        this.options = options;\n        this._state = RUNNING;\n    }\n    /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */ address() {\n        if (this.options.noServer) {\n            throw new Error('The server is operating in \"noServer\" mode');\n        }\n        if (!this._server) return null;\n        return this._server.address();\n    }\n    /**\n   * Close the server.\n   *\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(cb) {\n        if (cb) this.once(\"close\", cb);\n        if (this._state === CLOSED) {\n            process.nextTick(emitClose, this);\n            return;\n        }\n        if (this._state === CLOSING) return;\n        this._state = CLOSING;\n        //\n        // Terminate all associated clients.\n        //\n        if (this.clients) {\n            for (const client of this.clients)client.terminate();\n        }\n        const server = this._server;\n        if (server) {\n            this._removeListeners();\n            this._removeListeners = this._server = null;\n            //\n            // Close the http server if it was internally created.\n            //\n            if (this.options.port != null) {\n                server.close(emitClose.bind(undefined, this));\n                return;\n            }\n        }\n        process.nextTick(emitClose, this);\n    }\n    /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */ shouldHandle(req) {\n        if (this.options.path) {\n            const index = req.url.indexOf(\"?\");\n            const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n            if (pathname !== this.options.path) return false;\n        }\n        return true;\n    }\n    /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */ handleUpgrade(req, socket, head, cb) {\n        socket.on(\"error\", socketOnError);\n        const key = req.headers[\"sec-websocket-key\"] !== undefined ? req.headers[\"sec-websocket-key\"].trim() : false;\n        const version = +req.headers[\"sec-websocket-version\"];\n        const extensions = {};\n        if (req.method !== \"GET\" || req.headers.upgrade.toLowerCase() !== \"websocket\" || !key || !keyRegex.test(key) || version !== 8 && version !== 13 || !this.shouldHandle(req)) {\n            return abortHandshake(socket, 400);\n        }\n        if (this.options.perMessageDeflate) {\n            const perMessageDeflate = new PerMessageDeflate(this.options.perMessageDeflate, true, this.options.maxPayload);\n            try {\n                const offers = parse(req.headers[\"sec-websocket-extensions\"]);\n                if (offers[PerMessageDeflate.extensionName]) {\n                    perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n                    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n                }\n            } catch (err) {\n                return abortHandshake(socket, 400);\n            }\n        }\n        //\n        // Optionally call external client verification handler.\n        //\n        if (this.options.verifyClient) {\n            const info = {\n                origin: req.headers[`${version === 8 ? \"sec-websocket-origin\" : \"origin\"}`],\n                secure: !!(req.socket.authorized || req.socket.encrypted),\n                req\n            };\n            if (this.options.verifyClient.length === 2) {\n                this.options.verifyClient(info, (verified, code, message, headers)=>{\n                    if (!verified) {\n                        return abortHandshake(socket, code || 401, message, headers);\n                    }\n                    this.completeUpgrade(key, extensions, req, socket, head, cb);\n                });\n                return;\n            }\n            if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n        }\n        this.completeUpgrade(key, extensions, req, socket, head, cb);\n    }\n    /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */ completeUpgrade(key, extensions, req, socket, head, cb) {\n        //\n        // Destroy the socket if the client has already sent a FIN packet.\n        //\n        if (!socket.readable || !socket.writable) return socket.destroy();\n        if (socket[kWebSocket]) {\n            throw new Error(\"server.handleUpgrade() was called more than once with the same \" + \"socket, possibly due to a misconfiguration\");\n        }\n        if (this._state > RUNNING) return abortHandshake(socket, 503);\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        const headers = [\n            \"HTTP/1.1 101 Switching Protocols\",\n            \"Upgrade: websocket\",\n            \"Connection: Upgrade\",\n            `Sec-WebSocket-Accept: ${digest}`\n        ];\n        const ws = new WebSocket(null);\n        let protocol = req.headers[\"sec-websocket-protocol\"];\n        if (protocol) {\n            protocol = protocol.split(\",\").map(trim);\n            //\n            // Optionally call external protocol selection handler.\n            //\n            if (this.options.handleProtocols) {\n                protocol = this.options.handleProtocols(protocol, req);\n            } else {\n                protocol = protocol[0];\n            }\n            if (protocol) {\n                headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n                ws._protocol = protocol;\n            }\n        }\n        if (extensions[PerMessageDeflate.extensionName]) {\n            const params = extensions[PerMessageDeflate.extensionName].params;\n            const value = format({\n                [PerMessageDeflate.extensionName]: [\n                    params\n                ]\n            });\n            headers.push(`Sec-WebSocket-Extensions: ${value}`);\n            ws._extensions = extensions;\n        }\n        //\n        // Allow external modification/inspection of handshake headers.\n        //\n        this.emit(\"headers\", headers, req);\n        socket.write(headers.concat(\"\\r\\n\").join(\"\\r\\n\"));\n        socket.removeListener(\"error\", socketOnError);\n        ws.setSocket(socket, head, this.options.maxPayload);\n        if (this.clients) {\n            this.clients.add(ws);\n            ws.on(\"close\", ()=>this.clients.delete(ws));\n        }\n        cb(ws, req);\n    }\n}\nmodule.exports = WebSocketServer;\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */ function addListeners(server, map) {\n    for (const event of Object.keys(map))server.on(event, map[event]);\n    return function removeListeners() {\n        for (const event of Object.keys(map)){\n            server.removeListener(event, map[event]);\n        }\n    };\n}\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */ function emitClose(server) {\n    server._state = CLOSED;\n    server.emit(\"close\");\n}\n/**\n * Handle premature socket errors.\n *\n * @private\n */ function socketOnError() {\n    this.destroy();\n}\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */ function abortHandshake(socket, code, message, headers) {\n    if (socket.writable) {\n        message = message || http.STATUS_CODES[code];\n        headers = {\n            Connection: \"close\",\n            \"Content-Type\": \"text/html\",\n            \"Content-Length\": Buffer.byteLength(message),\n            ...headers\n        };\n        socket.write(`HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` + Object.keys(headers).map((h)=>`${h}: ${headers[h]}`).join(\"\\r\\n\") + \"\\r\\n\\r\\n\" + message);\n    }\n    socket.removeListener(\"error\", socketOnError);\n    socket.destroy();\n}\n/**\n * Remove whitespace characters from both ends of a string.\n *\n * @param {String} str The string\n * @return {String} A new string representing `str` stripped of whitespace\n *     characters from both its beginning and end\n * @private\n */ function trim(str) {\n    return str.trim();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomBytes, createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { Readable } = __webpack_require__(/*! stream */ \"stream\");\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst Receiver = __webpack_require__(/*! ./receiver */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nconst Sender = __webpack_require__(/*! ./sender */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, GUID, kStatusCode, kWebSocket, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { addEventListener, removeEventListener } = __webpack_require__(/*! ./event-target */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst readyStates = [\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n];\nconst protocolVersions = [\n    8,\n    13\n];\nconst closeTimeout = 30 * 1000;\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */ class WebSocket extends EventEmitter {\n    /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */ constructor(address, protocols, options){\n        super();\n        this._binaryType = BINARY_TYPES[0];\n        this._closeCode = 1006;\n        this._closeFrameReceived = false;\n        this._closeFrameSent = false;\n        this._closeMessage = \"\";\n        this._closeTimer = null;\n        this._extensions = {};\n        this._protocol = \"\";\n        this._readyState = WebSocket.CONNECTING;\n        this._receiver = null;\n        this._sender = null;\n        this._socket = null;\n        if (address !== null) {\n            this._bufferedAmount = 0;\n            this._isServer = false;\n            this._redirects = 0;\n            if (Array.isArray(protocols)) {\n                protocols = protocols.join(\", \");\n            } else if (typeof protocols === \"object\" && protocols !== null) {\n                options = protocols;\n                protocols = undefined;\n            }\n            initAsClient(this, address, protocols, options);\n        } else {\n            this._isServer = true;\n        }\n    }\n    /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */ get binaryType() {\n        return this._binaryType;\n    }\n    set binaryType(type) {\n        if (!BINARY_TYPES.includes(type)) return;\n        this._binaryType = type;\n        //\n        // Allow to change `binaryType` on the fly.\n        //\n        if (this._receiver) this._receiver._binaryType = type;\n    }\n    /**\n   * @type {Number}\n   */ get bufferedAmount() {\n        if (!this._socket) return this._bufferedAmount;\n        return this._socket._writableState.length + this._sender._bufferedBytes;\n    }\n    /**\n   * @type {String}\n   */ get extensions() {\n        return Object.keys(this._extensions).join();\n    }\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onclose() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onclose(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onerror() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onerror(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onopen() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onopen(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onmessage() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onmessage(listener) {}\n    /**\n   * @type {String}\n   */ get protocol() {\n        return this._protocol;\n    }\n    /**\n   * @type {Number}\n   */ get readyState() {\n        return this._readyState;\n    }\n    /**\n   * @type {String}\n   */ get url() {\n        return this._url;\n    }\n    /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} [maxPayload=0] The maximum allowed message size\n   * @private\n   */ setSocket(socket, head, maxPayload) {\n        const receiver = new Receiver(this.binaryType, this._extensions, this._isServer, maxPayload);\n        this._sender = new Sender(socket, this._extensions);\n        this._receiver = receiver;\n        this._socket = socket;\n        receiver[kWebSocket] = this;\n        socket[kWebSocket] = this;\n        receiver.on(\"conclude\", receiverOnConclude);\n        receiver.on(\"drain\", receiverOnDrain);\n        receiver.on(\"error\", receiverOnError);\n        receiver.on(\"message\", receiverOnMessage);\n        receiver.on(\"ping\", receiverOnPing);\n        receiver.on(\"pong\", receiverOnPong);\n        socket.setTimeout(0);\n        socket.setNoDelay();\n        if (head.length > 0) socket.unshift(head);\n        socket.on(\"close\", socketOnClose);\n        socket.on(\"data\", socketOnData);\n        socket.on(\"end\", socketOnEnd);\n        socket.on(\"error\", socketOnError);\n        this._readyState = WebSocket.OPEN;\n        this.emit(\"open\");\n    }\n    /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */ emitClose() {\n        if (!this._socket) {\n            this._readyState = WebSocket.CLOSED;\n            this.emit(\"close\", this._closeCode, this._closeMessage);\n            return;\n        }\n        if (this._extensions[PerMessageDeflate.extensionName]) {\n            this._extensions[PerMessageDeflate.extensionName].cleanup();\n        }\n        this._receiver.removeAllListeners();\n        this._readyState = WebSocket.CLOSED;\n        this.emit(\"close\", this._closeCode, this._closeMessage);\n    }\n    /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {String} [data] A string explaining why the connection is closing\n   * @public\n   */ close(code, data) {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this.readyState === WebSocket.CLOSING) {\n            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {\n                this._socket.end();\n            }\n            return;\n        }\n        this._readyState = WebSocket.CLOSING;\n        this._sender.close(code, data, !this._isServer, (err)=>{\n            //\n            // This error is handled by the `'error'` listener on the socket. We only\n            // want to know if the close frame has been sent here.\n            //\n            if (err) return;\n            this._closeFrameSent = true;\n            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {\n                this._socket.end();\n            }\n        });\n        //\n        // Specify a timeout for the closing handshake to complete.\n        //\n        this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), closeTimeout);\n    }\n    /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */ ping(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */ pong(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */ send(data, options, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof options === \"function\") {\n            cb = options;\n            options = {};\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        const opts = {\n            binary: typeof data !== \"string\",\n            mask: !this._isServer,\n            compress: true,\n            fin: true,\n            ...options\n        };\n        if (!this._extensions[PerMessageDeflate.extensionName]) {\n            opts.compress = false;\n        }\n        this._sender.send(data || EMPTY_BUFFER, opts, cb);\n    }\n    /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */ terminate() {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this._socket) {\n            this._readyState = WebSocket.CLOSING;\n            this._socket.destroy();\n        }\n    }\n}\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n[\n    \"binaryType\",\n    \"bufferedAmount\",\n    \"extensions\",\n    \"protocol\",\n    \"readyState\",\n    \"url\"\n].forEach((property)=>{\n    Object.defineProperty(WebSocket.prototype, property, {\n        enumerable: true\n    });\n});\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n[\n    \"open\",\n    \"error\",\n    \"close\",\n    \"message\"\n].forEach((method)=>{\n    Object.defineProperty(WebSocket.prototype, `on${method}`, {\n        enumerable: true,\n        get () {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                if (listeners[i]._listener) return listeners[i]._listener;\n            }\n            return undefined;\n        },\n        set (listener) {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                //\n                // Remove only the listeners added via `addEventListener`.\n                //\n                if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n            }\n            this.addEventListener(method, listener);\n        }\n    });\n});\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\nmodule.exports = WebSocket;\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {String} [protocols] The subprotocols\n * @param {Object} [options] Connection options\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @private\n */ function initAsClient(websocket, address, protocols, options) {\n    const opts = {\n        protocolVersion: protocolVersions[1],\n        maxPayload: 100 * 1024 * 1024,\n        perMessageDeflate: true,\n        followRedirects: false,\n        maxRedirects: 10,\n        ...options,\n        createConnection: undefined,\n        socketPath: undefined,\n        hostname: undefined,\n        protocol: undefined,\n        timeout: undefined,\n        method: undefined,\n        host: undefined,\n        path: undefined,\n        port: undefined\n    };\n    if (!protocolVersions.includes(opts.protocolVersion)) {\n        throw new RangeError(`Unsupported protocol version: ${opts.protocolVersion} ` + `(supported versions: ${protocolVersions.join(\", \")})`);\n    }\n    let parsedUrl;\n    if (address instanceof URL) {\n        parsedUrl = address;\n        websocket._url = address.href;\n    } else {\n        parsedUrl = new URL(address);\n        websocket._url = address;\n    }\n    const isUnixSocket = parsedUrl.protocol === \"ws+unix:\";\n    if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n        const err = new Error(`Invalid URL: ${websocket.url}`);\n        if (websocket._redirects === 0) {\n            throw err;\n        } else {\n            emitErrorAndClose(websocket, err);\n            return;\n        }\n    }\n    const isSecure = parsedUrl.protocol === \"wss:\" || parsedUrl.protocol === \"https:\";\n    const defaultPort = isSecure ? 443 : 80;\n    const key = randomBytes(16).toString(\"base64\");\n    const get = isSecure ? https.get : http.get;\n    let perMessageDeflate;\n    opts.createConnection = isSecure ? tlsConnect : netConnect;\n    opts.defaultPort = opts.defaultPort || defaultPort;\n    opts.port = parsedUrl.port || defaultPort;\n    opts.host = parsedUrl.hostname.startsWith(\"[\") ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;\n    opts.headers = {\n        \"Sec-WebSocket-Version\": opts.protocolVersion,\n        \"Sec-WebSocket-Key\": key,\n        Connection: \"Upgrade\",\n        Upgrade: \"websocket\",\n        ...opts.headers\n    };\n    opts.path = parsedUrl.pathname + parsedUrl.search;\n    opts.timeout = opts.handshakeTimeout;\n    if (opts.perMessageDeflate) {\n        perMessageDeflate = new PerMessageDeflate(opts.perMessageDeflate !== true ? opts.perMessageDeflate : {}, false, opts.maxPayload);\n        opts.headers[\"Sec-WebSocket-Extensions\"] = format({\n            [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n        });\n    }\n    if (protocols) {\n        opts.headers[\"Sec-WebSocket-Protocol\"] = protocols;\n    }\n    if (opts.origin) {\n        if (opts.protocolVersion < 13) {\n            opts.headers[\"Sec-WebSocket-Origin\"] = opts.origin;\n        } else {\n            opts.headers.Origin = opts.origin;\n        }\n    }\n    if (parsedUrl.username || parsedUrl.password) {\n        opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n    }\n    if (isUnixSocket) {\n        const parts = opts.path.split(\":\");\n        opts.socketPath = parts[0];\n        opts.path = parts[1];\n    }\n    if (opts.followRedirects) {\n        if (websocket._redirects === 0) {\n            websocket._originalUnixSocket = isUnixSocket;\n            websocket._originalSecure = isSecure;\n            websocket._originalHostOrSocketPath = isUnixSocket ? opts.socketPath : parsedUrl.host;\n            const headers = options && options.headers;\n            //\n            // Shallow copy the user provided options so that headers can be changed\n            // without mutating the original object.\n            //\n            options = {\n                ...options,\n                headers: {}\n            };\n            if (headers) {\n                for (const [key, value] of Object.entries(headers)){\n                    options.headers[key.toLowerCase()] = value;\n                }\n            }\n        } else {\n            const isSameHost = isUnixSocket ? websocket._originalUnixSocket ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalUnixSocket ? false : parsedUrl.host === websocket._originalHostOrSocketPath;\n            if (!isSameHost || websocket._originalSecure && !isSecure) {\n                //\n                // Match curl 7.77.0 behavior and drop the following headers. These\n                // headers are also dropped when following a redirect to a subdomain.\n                //\n                delete opts.headers.authorization;\n                delete opts.headers.cookie;\n                if (!isSameHost) delete opts.headers.host;\n                opts.auth = undefined;\n            }\n        }\n        //\n        // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n        // If the `Authorization` header is set, then there is nothing to do as it\n        // will take precedence.\n        //\n        if (opts.auth && !options.headers.authorization) {\n            options.headers.authorization = \"Basic \" + Buffer.from(opts.auth).toString(\"base64\");\n        }\n    }\n    let req = websocket._req = get(opts);\n    if (opts.timeout) {\n        req.on(\"timeout\", ()=>{\n            abortHandshake(websocket, req, \"Opening handshake has timed out\");\n        });\n    }\n    req.on(\"error\", (err)=>{\n        if (req === null || req.aborted) return;\n        req = websocket._req = null;\n        emitErrorAndClose(websocket, err);\n    });\n    req.on(\"response\", (res)=>{\n        const location = res.headers.location;\n        const statusCode = res.statusCode;\n        if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {\n            if (++websocket._redirects > opts.maxRedirects) {\n                abortHandshake(websocket, req, \"Maximum redirects exceeded\");\n                return;\n            }\n            req.abort();\n            let addr;\n            try {\n                addr = new URL(location, address);\n            } catch (err) {\n                emitErrorAndClose(websocket, err);\n                return;\n            }\n            initAsClient(websocket, addr, protocols, options);\n        } else if (!websocket.emit(\"unexpected-response\", req, res)) {\n            abortHandshake(websocket, req, `Unexpected server response: ${res.statusCode}`);\n        }\n    });\n    req.on(\"upgrade\", (res, socket, head)=>{\n        websocket.emit(\"upgrade\", res);\n        //\n        // The user may have closed the connection from a listener of the `upgrade`\n        // event.\n        //\n        if (websocket.readyState !== WebSocket.CONNECTING) return;\n        req = websocket._req = null;\n        if (res.headers.upgrade.toLowerCase() !== \"websocket\") {\n            abortHandshake(websocket, socket, \"Invalid Upgrade header\");\n            return;\n        }\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        if (res.headers[\"sec-websocket-accept\"] !== digest) {\n            abortHandshake(websocket, socket, \"Invalid Sec-WebSocket-Accept header\");\n            return;\n        }\n        const serverProt = res.headers[\"sec-websocket-protocol\"];\n        const protList = (protocols || \"\").split(/, */);\n        let protError;\n        if (!protocols && serverProt) {\n            protError = \"Server sent a subprotocol but none was requested\";\n        } else if (protocols && !serverProt) {\n            protError = \"Server sent no subprotocol\";\n        } else if (serverProt && !protList.includes(serverProt)) {\n            protError = \"Server sent an invalid subprotocol\";\n        }\n        if (protError) {\n            abortHandshake(websocket, socket, protError);\n            return;\n        }\n        if (serverProt) websocket._protocol = serverProt;\n        const secWebSocketExtensions = res.headers[\"sec-websocket-extensions\"];\n        if (secWebSocketExtensions !== undefined) {\n            if (!perMessageDeflate) {\n                const message = \"Server sent a Sec-WebSocket-Extensions header but no extension \" + \"was requested\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            let extensions;\n            try {\n                extensions = parse(secWebSocketExtensions);\n            } catch (err) {\n                const message = \"Invalid Sec-WebSocket-Extensions header\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            const extensionNames = Object.keys(extensions);\n            if (extensionNames.length) {\n                if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {\n                    const message = \"Server indicated an extension that was not requested\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                try {\n                    perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n                } catch (err) {\n                    const message = \"Invalid Sec-WebSocket-Extensions header\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n            }\n        }\n        websocket.setSocket(socket, head, opts.maxPayload);\n    });\n}\n/**\n * Emit the `'error'` and `'close'` event.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */ function emitErrorAndClose(websocket, err) {\n    websocket._readyState = WebSocket.CLOSING;\n    websocket.emit(\"error\", err);\n    websocket.emitClose();\n}\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */ function netConnect(options) {\n    options.path = options.socketPath;\n    return net.connect(options);\n}\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */ function tlsConnect(options) {\n    options.path = undefined;\n    if (!options.servername && options.servername !== \"\") {\n        options.servername = net.isIP(options.host) ? \"\" : options.host;\n    }\n    return tls.connect(options);\n}\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */ function abortHandshake(websocket, stream, message) {\n    websocket._readyState = WebSocket.CLOSING;\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshake);\n    if (stream.setHeader) {\n        stream.abort();\n        if (stream.socket && !stream.socket.destroyed) {\n            //\n            // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n            // called after the request completed. See\n            // https://github.com/websockets/ws/issues/1869.\n            //\n            stream.socket.destroy();\n        }\n        stream.once(\"abort\", websocket.emitClose.bind(websocket));\n        websocket.emit(\"error\", err);\n    } else {\n        stream.destroy(err);\n        stream.once(\"error\", websocket.emit.bind(websocket, \"error\"));\n        stream.once(\"close\", websocket.emitClose.bind(websocket));\n    }\n}\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */ function sendAfterClose(websocket, data, cb) {\n    if (data) {\n        const length = toBuffer(data).length;\n        //\n        // The `_bufferedAmount` property is used only when the peer is a client and\n        // the opening handshake fails. Under these circumstances, in fact, the\n        // `setSocket()` method is not called, so the `_socket` and `_sender`\n        // properties are set to `null`.\n        //\n        if (websocket._socket) websocket._sender._bufferedBytes += length;\n        else websocket._bufferedAmount += length;\n    }\n    if (cb) {\n        const err = new Error(`WebSocket is not open: readyState ${websocket.readyState} ` + `(${readyStates[websocket.readyState]})`);\n        cb(err);\n    }\n}\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */ function receiverOnConclude(code, reason) {\n    const websocket = this[kWebSocket];\n    websocket._closeFrameReceived = true;\n    websocket._closeMessage = reason;\n    websocket._closeCode = code;\n    if (websocket._socket[kWebSocket] === undefined) return;\n    websocket._socket.removeListener(\"data\", socketOnData);\n    process.nextTick(resume, websocket._socket);\n    if (code === 1005) websocket.close();\n    else websocket.close(code, reason);\n}\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */ function receiverOnDrain() {\n    this[kWebSocket]._socket.resume();\n}\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */ function receiverOnError(err) {\n    const websocket = this[kWebSocket];\n    if (websocket._socket[kWebSocket] !== undefined) {\n        websocket._socket.removeListener(\"data\", socketOnData);\n        //\n        // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n        // https://github.com/websockets/ws/issues/1940.\n        //\n        process.nextTick(resume, websocket._socket);\n        websocket.close(err[kStatusCode]);\n    }\n    websocket.emit(\"error\", err);\n}\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */ function receiverOnFinish() {\n    this[kWebSocket].emitClose();\n}\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */ function receiverOnMessage(data) {\n    this[kWebSocket].emit(\"message\", data);\n}\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */ function receiverOnPing(data) {\n    const websocket = this[kWebSocket];\n    websocket.pong(data, !websocket._isServer, NOOP);\n    websocket.emit(\"ping\", data);\n}\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */ function receiverOnPong(data) {\n    this[kWebSocket].emit(\"pong\", data);\n}\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */ function resume(stream) {\n    stream.resume();\n}\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */ function socketOnClose() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"close\", socketOnClose);\n    this.removeListener(\"data\", socketOnData);\n    this.removeListener(\"end\", socketOnEnd);\n    websocket._readyState = WebSocket.CLOSING;\n    let chunk;\n    //\n    // The close frame might not have been received or the `'end'` event emitted,\n    // for example, if the socket was destroyed due to an error. Ensure that the\n    // `receiver` stream is closed after writing any remaining buffered data to\n    // it. If the readable side of the socket is in flowing mode then there is no\n    // buffered data as everything has been already written and `readable.read()`\n    // will return `null`. If instead, the socket is paused, any possible buffered\n    // data will be read as a single chunk.\n    //\n    if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {\n        websocket._receiver.write(chunk);\n    }\n    websocket._receiver.end();\n    this[kWebSocket] = undefined;\n    clearTimeout(websocket._closeTimer);\n    if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {\n        websocket.emitClose();\n    } else {\n        websocket._receiver.on(\"error\", receiverOnFinish);\n        websocket._receiver.on(\"finish\", receiverOnFinish);\n    }\n}\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function socketOnData(chunk) {\n    if (!this[kWebSocket]._receiver.write(chunk)) {\n        this.pause();\n    }\n}\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */ function socketOnEnd() {\n    const websocket = this[kWebSocket];\n    websocket._readyState = WebSocket.CLOSING;\n    websocket._receiver.end();\n    this.end();\n}\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */ function socketOnError() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"error\", socketOnError);\n    this.on(\"error\", NOOP);\n    if (websocket) {\n        websocket._readyState = WebSocket.CLOSING;\n        this.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/../node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/../node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/core.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/core.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst legacy_types_1 = __webpack_require__(/*! @walletconnect/legacy-types */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\");\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nconst socket_1 = tslib_1.__importDefault(__webpack_require__(/*! ./socket */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/socket.js\"));\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! ./events */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/events.js\"));\nconst storage_1 = tslib_1.__importDefault(__webpack_require__(/*! ./storage */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/storage.js\"));\nconst url_1 = __webpack_require__(/*! ./url */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/url.js\");\nclass Connector {\n    constructor(opts){\n        this.protocol = \"wc\";\n        this.version = 1;\n        this._bridge = \"\";\n        this._key = null;\n        this._clientId = \"\";\n        this._clientMeta = null;\n        this._peerId = \"\";\n        this._peerMeta = null;\n        this._handshakeId = 0;\n        this._handshakeTopic = \"\";\n        this._connected = false;\n        this._accounts = [];\n        this._chainId = 0;\n        this._networkId = 0;\n        this._rpcUrl = \"\";\n        this._eventManager = new events_1.default();\n        this._clientMeta = legacy_utils_1.getClientMeta() || opts.connectorOpts.clientMeta || null;\n        this._cryptoLib = opts.cryptoLib;\n        this._sessionStorage = opts.sessionStorage || new storage_1.default(opts.connectorOpts.storageId);\n        this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n        this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n        this._signingMethods = [\n            ...legacy_types_1.SIGNING_METHODS,\n            ...opts.connectorOpts.signingMethods || []\n        ];\n        if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n            throw new Error(legacy_types_1.ERROR_MISSING_REQUIRED);\n        }\n        if (opts.connectorOpts.bridge) {\n            this.bridge = url_1.getBridgeUrl(opts.connectorOpts.bridge);\n        }\n        if (opts.connectorOpts.uri) {\n            this.uri = opts.connectorOpts.uri;\n        }\n        const session = opts.connectorOpts.session || this._getStorageSession();\n        if (session) {\n            this.session = session;\n        }\n        if (this.handshakeId) {\n            this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n        }\n        this._transport = opts.transport || new socket_1.default({\n            protocol: this.protocol,\n            version: this.version,\n            url: this.bridge,\n            subscriptions: [\n                this.clientId\n            ]\n        });\n        this._subscribeToInternalEvents();\n        this._initTransport();\n        if (opts.connectorOpts.uri) {\n            this._subscribeToSessionRequest();\n        }\n        if (opts.pushServerOpts) {\n            this._registerPushServer(opts.pushServerOpts);\n        }\n    }\n    set bridge(value) {\n        if (!value) {\n            return;\n        }\n        this._bridge = value;\n    }\n    get bridge() {\n        return this._bridge;\n    }\n    set key(value) {\n        if (!value) {\n            return;\n        }\n        const key = legacy_utils_1.convertHexToArrayBuffer(value);\n        this._key = key;\n    }\n    get key() {\n        if (this._key) {\n            const key = legacy_utils_1.convertArrayBufferToHex(this._key, true);\n            return key;\n        }\n        return \"\";\n    }\n    set clientId(value) {\n        if (!value) {\n            return;\n        }\n        this._clientId = value;\n    }\n    get clientId() {\n        let clientId = this._clientId;\n        if (!clientId) {\n            clientId = this._clientId = legacy_utils_1.uuid();\n        }\n        return this._clientId;\n    }\n    set peerId(value) {\n        if (!value) {\n            return;\n        }\n        this._peerId = value;\n    }\n    get peerId() {\n        return this._peerId;\n    }\n    set clientMeta(value) {}\n    get clientMeta() {\n        let clientMeta = this._clientMeta;\n        if (!clientMeta) {\n            clientMeta = this._clientMeta = legacy_utils_1.getClientMeta();\n        }\n        return clientMeta;\n    }\n    set peerMeta(value) {\n        this._peerMeta = value;\n    }\n    get peerMeta() {\n        const peerMeta = this._peerMeta;\n        return peerMeta;\n    }\n    set handshakeTopic(value) {\n        if (!value) {\n            return;\n        }\n        this._handshakeTopic = value;\n    }\n    get handshakeTopic() {\n        return this._handshakeTopic;\n    }\n    set handshakeId(value) {\n        if (!value) {\n            return;\n        }\n        this._handshakeId = value;\n    }\n    get handshakeId() {\n        return this._handshakeId;\n    }\n    get uri() {\n        const _uri = this._formatUri();\n        return _uri;\n    }\n    set uri(value) {\n        if (!value) {\n            return;\n        }\n        const { handshakeTopic, bridge, key } = this._parseUri(value);\n        this.handshakeTopic = handshakeTopic;\n        this.bridge = bridge;\n        this.key = key;\n    }\n    set chainId(value) {\n        this._chainId = value;\n    }\n    get chainId() {\n        const chainId = this._chainId;\n        return chainId;\n    }\n    set networkId(value) {\n        this._networkId = value;\n    }\n    get networkId() {\n        const networkId = this._networkId;\n        return networkId;\n    }\n    set accounts(value) {\n        this._accounts = value;\n    }\n    get accounts() {\n        const accounts = this._accounts;\n        return accounts;\n    }\n    set rpcUrl(value) {\n        this._rpcUrl = value;\n    }\n    get rpcUrl() {\n        const rpcUrl = this._rpcUrl;\n        return rpcUrl;\n    }\n    set connected(value) {}\n    get connected() {\n        return this._connected;\n    }\n    set pending(value) {}\n    get pending() {\n        return !!this._handshakeTopic;\n    }\n    get session() {\n        return {\n            connected: this.connected,\n            accounts: this.accounts,\n            chainId: this.chainId,\n            bridge: this.bridge,\n            key: this.key,\n            clientId: this.clientId,\n            clientMeta: this.clientMeta,\n            peerId: this.peerId,\n            peerMeta: this.peerMeta,\n            handshakeId: this.handshakeId,\n            handshakeTopic: this.handshakeTopic\n        };\n    }\n    set session(value) {\n        if (!value) {\n            return;\n        }\n        this._connected = value.connected;\n        this.accounts = value.accounts;\n        this.chainId = value.chainId;\n        this.bridge = value.bridge;\n        this.key = value.key;\n        this.clientId = value.clientId;\n        this.clientMeta = value.clientMeta;\n        this.peerId = value.peerId;\n        this.peerMeta = value.peerMeta;\n        this.handshakeId = value.handshakeId;\n        this.handshakeTopic = value.handshakeTopic;\n    }\n    on(event, callback) {\n        const eventEmitter = {\n            event,\n            callback\n        };\n        this._eventManager.subscribe(eventEmitter);\n    }\n    off(event) {\n        this._eventManager.unsubscribe(event);\n    }\n    createInstantRequest(instantRequest) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this._key = yield this._generateKey();\n            const request = this._formatRequest({\n                method: \"wc_instantRequest\",\n                params: [\n                    {\n                        peerId: this.clientId,\n                        peerMeta: this.clientMeta,\n                        request: this._formatRequest(instantRequest)\n                    }\n                ]\n            });\n            this.handshakeId = request.id;\n            this.handshakeTopic = legacy_utils_1.uuid();\n            this._eventManager.trigger({\n                event: \"display_uri\",\n                params: [\n                    this.uri\n                ]\n            });\n            this.on(\"modal_closed\", ()=>{\n                throw new Error(legacy_types_1.ERROR_QRCODE_MODAL_USER_CLOSED);\n            });\n            const endInstantRequest = ()=>{\n                this.killSession();\n            };\n            try {\n                const result = yield this._sendCallRequest(request);\n                if (result) {\n                    endInstantRequest();\n                }\n                return result;\n            } catch (error) {\n                endInstantRequest();\n                throw error;\n            }\n        });\n    }\n    connect(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._qrcodeModal) {\n                throw new Error(legacy_types_1.ERROR_QRCODE_MODAL_NOT_PROVIDED);\n            }\n            if (this.connected) {\n                return {\n                    chainId: this.chainId,\n                    accounts: this.accounts\n                };\n            }\n            yield this.createSession(opts);\n            return new Promise((resolve, reject)=>tslib_1.__awaiter(this, void 0, void 0, function*() {\n                    this.on(\"modal_closed\", ()=>reject(new Error(legacy_types_1.ERROR_QRCODE_MODAL_USER_CLOSED)));\n                    this.on(\"connect\", (error, payload)=>{\n                        if (error) {\n                            return reject(error);\n                        }\n                        resolve(payload.params[0]);\n                    });\n                }));\n        });\n    }\n    createSession(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_CONNECTED);\n            }\n            if (this.pending) {\n                return;\n            }\n            this._key = yield this._generateKey();\n            const request = this._formatRequest({\n                method: \"wc_sessionRequest\",\n                params: [\n                    {\n                        peerId: this.clientId,\n                        peerMeta: this.clientMeta,\n                        chainId: opts && opts.chainId ? opts.chainId : null\n                    }\n                ]\n            });\n            this.handshakeId = request.id;\n            this.handshakeTopic = legacy_utils_1.uuid();\n            this._sendSessionRequest(request, \"Session update rejected\", {\n                topic: this.handshakeTopic\n            });\n            this._eventManager.trigger({\n                event: \"display_uri\",\n                params: [\n                    this.uri\n                ]\n            });\n        });\n    }\n    approveSession(sessionStatus) {\n        if (this._connected) {\n            throw new Error(legacy_types_1.ERROR_SESSION_CONNECTED);\n        }\n        this.chainId = sessionStatus.chainId;\n        this.accounts = sessionStatus.accounts;\n        this.networkId = sessionStatus.networkId || 0;\n        this.rpcUrl = sessionStatus.rpcUrl || \"\";\n        const sessionParams = {\n            approved: true,\n            chainId: this.chainId,\n            networkId: this.networkId,\n            accounts: this.accounts,\n            rpcUrl: this.rpcUrl,\n            peerId: this.clientId,\n            peerMeta: this.clientMeta\n        };\n        const response = {\n            id: this.handshakeId,\n            jsonrpc: \"2.0\",\n            result: sessionParams\n        };\n        this._sendResponse(response);\n        this._connected = true;\n        this._setStorageSession();\n        this._eventManager.trigger({\n            event: \"connect\",\n            params: [\n                {\n                    peerId: this.peerId,\n                    peerMeta: this.peerMeta,\n                    chainId: this.chainId,\n                    accounts: this.accounts\n                }\n            ]\n        });\n    }\n    rejectSession(sessionError) {\n        if (this._connected) {\n            throw new Error(legacy_types_1.ERROR_SESSION_CONNECTED);\n        }\n        const message = sessionError && sessionError.message ? sessionError.message : legacy_types_1.ERROR_SESSION_REJECTED;\n        const response = this._formatResponse({\n            id: this.handshakeId,\n            error: {\n                message\n            }\n        });\n        this._sendResponse(response);\n        this._connected = false;\n        this._eventManager.trigger({\n            event: \"disconnect\",\n            params: [\n                {\n                    message\n                }\n            ]\n        });\n        this._removeStorageSession();\n    }\n    updateSession(sessionStatus) {\n        if (!this._connected) {\n            throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n        }\n        this.chainId = sessionStatus.chainId;\n        this.accounts = sessionStatus.accounts;\n        this.networkId = sessionStatus.networkId || 0;\n        this.rpcUrl = sessionStatus.rpcUrl || \"\";\n        const sessionParams = {\n            approved: true,\n            chainId: this.chainId,\n            networkId: this.networkId,\n            accounts: this.accounts,\n            rpcUrl: this.rpcUrl\n        };\n        const request = this._formatRequest({\n            method: \"wc_sessionUpdate\",\n            params: [\n                sessionParams\n            ]\n        });\n        this._sendSessionRequest(request, \"Session update rejected\");\n        this._eventManager.trigger({\n            event: \"session_update\",\n            params: [\n                {\n                    chainId: this.chainId,\n                    accounts: this.accounts\n                }\n            ]\n        });\n        this._manageStorageSession();\n    }\n    killSession(sessionError) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const message = sessionError ? sessionError.message : \"Session Disconnected\";\n            const sessionParams = {\n                approved: false,\n                chainId: null,\n                networkId: null,\n                accounts: null\n            };\n            const request = this._formatRequest({\n                method: \"wc_sessionUpdate\",\n                params: [\n                    sessionParams\n                ]\n            });\n            yield this._sendRequest(request);\n            this._handleSessionDisconnect(message);\n        });\n    }\n    sendTransaction(tx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const parsedTx = tx;\n            const request = this._formatRequest({\n                method: \"eth_sendTransaction\",\n                params: [\n                    parsedTx\n                ]\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signTransaction(tx) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const parsedTx = tx;\n            const request = this._formatRequest({\n                method: \"eth_signTransaction\",\n                params: [\n                    parsedTx\n                ]\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signMessage(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const request = this._formatRequest({\n                method: \"eth_sign\",\n                params\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signPersonalMessage(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const request = this._formatRequest({\n                method: \"personal_sign\",\n                params\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    signTypedData(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            const request = this._formatRequest({\n                method: \"eth_signTypedData\",\n                params\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    updateChain(chainParams) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(\"Session currently disconnected\");\n            }\n            const request = this._formatRequest({\n                method: \"wallet_updateChain\",\n                params: [\n                    chainParams\n                ]\n            });\n            const result = yield this._sendCallRequest(request);\n            return result;\n        });\n    }\n    unsafeSend(request, options) {\n        this._sendRequest(request, options);\n        this._eventManager.trigger({\n            event: \"call_request_sent\",\n            params: [\n                {\n                    request,\n                    options\n                }\n            ]\n        });\n        return new Promise((resolve, reject)=>{\n            this._subscribeToResponse(request.id, (error, payload)=>{\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                if (!payload) {\n                    throw new Error(legacy_types_1.ERROR_MISSING_JSON_RPC);\n                }\n                resolve(payload);\n            });\n        });\n    }\n    sendCustomRequest(request, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this._connected) {\n                throw new Error(legacy_types_1.ERROR_SESSION_DISCONNECTED);\n            }\n            switch(request.method){\n                case \"eth_accounts\":\n                    return this.accounts;\n                case \"eth_chainId\":\n                    return legacy_utils_1.convertNumberToHex(this.chainId);\n                case \"eth_sendTransaction\":\n                case \"eth_signTransaction\":\n                    if (request.params) {}\n                    break;\n                case \"personal_sign\":\n                    if (request.params) {}\n                    break;\n                default:\n                    break;\n            }\n            const formattedRequest = this._formatRequest(request);\n            const result = yield this._sendCallRequest(formattedRequest, options);\n            return result;\n        });\n    }\n    approveRequest(response) {\n        if (legacy_utils_1.isJsonRpcResponseSuccess(response)) {\n            const formattedResponse = this._formatResponse(response);\n            this._sendResponse(formattedResponse);\n        } else {\n            throw new Error(legacy_types_1.ERROR_MISSING_RESULT);\n        }\n    }\n    rejectRequest(response) {\n        if (legacy_utils_1.isJsonRpcResponseError(response)) {\n            const formattedResponse = this._formatResponse(response);\n            this._sendResponse(formattedResponse);\n        } else {\n            throw new Error(legacy_types_1.ERROR_MISSING_ERROR);\n        }\n    }\n    transportClose() {\n        this._transport.close();\n    }\n    _sendRequest(request, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const callRequest = this._formatRequest(request);\n            const encryptionPayload = yield this._encrypt(callRequest);\n            const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n            const payload = JSON.stringify(encryptionPayload);\n            const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : legacy_utils_1.isSilentPayload(callRequest);\n            this._transport.send(payload, topic, silent);\n        });\n    }\n    _sendResponse(response) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const encryptionPayload = yield this._encrypt(response);\n            const topic = this.peerId;\n            const payload = JSON.stringify(encryptionPayload);\n            const silent = true;\n            this._transport.send(payload, topic, silent);\n        });\n    }\n    _sendSessionRequest(request, errorMsg, options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this._sendRequest(request, options);\n            this._subscribeToSessionResponse(request.id, errorMsg);\n        });\n    }\n    _sendCallRequest(request, options) {\n        this._sendRequest(request, options);\n        this._eventManager.trigger({\n            event: \"call_request_sent\",\n            params: [\n                {\n                    request,\n                    options\n                }\n            ]\n        });\n        return this._subscribeToCallResponse(request.id);\n    }\n    _formatRequest(request) {\n        if (typeof request.method === \"undefined\") {\n            throw new Error(legacy_types_1.ERROR_MISSING_METHOD);\n        }\n        const formattedRequest = {\n            id: typeof request.id === \"undefined\" ? legacy_utils_1.payloadId() : request.id,\n            jsonrpc: \"2.0\",\n            method: request.method,\n            params: typeof request.params === \"undefined\" ? [] : request.params\n        };\n        return formattedRequest;\n    }\n    _formatResponse(response) {\n        if (typeof response.id === \"undefined\") {\n            throw new Error(legacy_types_1.ERROR_MISSING_ID);\n        }\n        const baseResponse = {\n            id: response.id,\n            jsonrpc: \"2.0\"\n        };\n        if (legacy_utils_1.isJsonRpcResponseError(response)) {\n            const error = legacy_utils_1.formatRpcError(response.error);\n            const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n                error\n            });\n            return errorResponse;\n        } else if (legacy_utils_1.isJsonRpcResponseSuccess(response)) {\n            const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n            return successResponse;\n        }\n        throw new Error(legacy_types_1.ERROR_INVALID_RESPONSE);\n    }\n    _handleSessionDisconnect(errorMsg) {\n        const message = errorMsg || \"Session Disconnected\";\n        if (!this._connected) {\n            if (this._qrcodeModal) {\n                this._qrcodeModal.close();\n            }\n            legacy_utils_1.removeLocal(legacy_types_1.MOBILE_LINK_CHOICE_KEY);\n        }\n        if (this._connected) {\n            this._connected = false;\n        }\n        if (this._handshakeId) {\n            this._handshakeId = 0;\n        }\n        if (this._handshakeTopic) {\n            this._handshakeTopic = \"\";\n        }\n        if (this._peerId) {\n            this._peerId = \"\";\n        }\n        this._eventManager.trigger({\n            event: \"disconnect\",\n            params: [\n                {\n                    message\n                }\n            ]\n        });\n        this._removeStorageSession();\n        this.transportClose();\n    }\n    _handleSessionResponse(errorMsg, sessionParams) {\n        if (sessionParams) {\n            if (sessionParams.approved) {\n                if (!this._connected) {\n                    this._connected = true;\n                    if (sessionParams.chainId) {\n                        this.chainId = sessionParams.chainId;\n                    }\n                    if (sessionParams.accounts) {\n                        this.accounts = sessionParams.accounts;\n                    }\n                    if (sessionParams.peerId && !this.peerId) {\n                        this.peerId = sessionParams.peerId;\n                    }\n                    if (sessionParams.peerMeta && !this.peerMeta) {\n                        this.peerMeta = sessionParams.peerMeta;\n                    }\n                    this._eventManager.trigger({\n                        event: \"connect\",\n                        params: [\n                            {\n                                peerId: this.peerId,\n                                peerMeta: this.peerMeta,\n                                chainId: this.chainId,\n                                accounts: this.accounts\n                            }\n                        ]\n                    });\n                } else {\n                    if (sessionParams.chainId) {\n                        this.chainId = sessionParams.chainId;\n                    }\n                    if (sessionParams.accounts) {\n                        this.accounts = sessionParams.accounts;\n                    }\n                    this._eventManager.trigger({\n                        event: \"session_update\",\n                        params: [\n                            {\n                                chainId: this.chainId,\n                                accounts: this.accounts\n                            }\n                        ]\n                    });\n                }\n                this._manageStorageSession();\n            } else {\n                this._handleSessionDisconnect(errorMsg);\n            }\n        } else {\n            this._handleSessionDisconnect(errorMsg);\n        }\n    }\n    _handleIncomingMessages(socketMessage) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const activeTopics = [\n                this.clientId,\n                this.handshakeTopic\n            ];\n            if (!activeTopics.includes(socketMessage.topic)) {\n                return;\n            }\n            let encryptionPayload;\n            try {\n                encryptionPayload = JSON.parse(socketMessage.payload);\n            } catch (error) {\n                return;\n            }\n            const payload = yield this._decrypt(encryptionPayload);\n            if (payload) {\n                this._eventManager.trigger(payload);\n            }\n        });\n    }\n    _subscribeToSessionRequest() {\n        this._transport.subscribe(this.handshakeTopic);\n    }\n    _subscribeToResponse(id, callback) {\n        this.on(`response:${id}`, callback);\n    }\n    _subscribeToSessionResponse(id, errorMsg) {\n        this._subscribeToResponse(id, (error, payload)=>{\n            if (error) {\n                this._handleSessionResponse(error.message);\n                return;\n            }\n            if (legacy_utils_1.isJsonRpcResponseSuccess(payload)) {\n                this._handleSessionResponse(errorMsg, payload.result);\n            } else if (payload.error && payload.error.message) {\n                this._handleSessionResponse(payload.error.message);\n            } else {\n                this._handleSessionResponse(errorMsg);\n            }\n        });\n    }\n    _subscribeToCallResponse(id) {\n        return new Promise((resolve, reject)=>{\n            this._subscribeToResponse(id, (error, payload)=>{\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                if (legacy_utils_1.isJsonRpcResponseSuccess(payload)) {\n                    resolve(payload.result);\n                } else if (payload.error && payload.error.message) {\n                    reject(payload.error);\n                } else {\n                    reject(new Error(legacy_types_1.ERROR_INVALID_RESPONSE));\n                }\n            });\n        });\n    }\n    _subscribeToInternalEvents() {\n        this.on(\"display_uri\", ()=>{\n            if (this._qrcodeModal) {\n                this._qrcodeModal.open(this.uri, ()=>{\n                    this._eventManager.trigger({\n                        event: \"modal_closed\",\n                        params: []\n                    });\n                }, this._qrcodeModalOptions);\n            }\n        });\n        this.on(\"connect\", ()=>{\n            if (this._qrcodeModal) {\n                this._qrcodeModal.close();\n            }\n        });\n        this.on(\"call_request_sent\", (error, payload)=>{\n            const { request } = payload.params[0];\n            if (legacy_utils_1.isMobile() && this._signingMethods.includes(request.method)) {\n                const mobileLinkUrl = legacy_utils_1.getLocal(legacy_types_1.MOBILE_LINK_CHOICE_KEY);\n                if (mobileLinkUrl) {\n                    window.location.href = mobileLinkUrl.href;\n                }\n            }\n        });\n        this.on(\"wc_sessionRequest\", (error, payload)=>{\n            if (error) {\n                this._eventManager.trigger({\n                    event: \"error\",\n                    params: [\n                        {\n                            code: \"SESSION_REQUEST_ERROR\",\n                            message: error.toString()\n                        }\n                    ]\n                });\n            }\n            this.handshakeId = payload.id;\n            this.peerId = payload.params[0].peerId;\n            this.peerMeta = payload.params[0].peerMeta;\n            const internalPayload = Object.assign(Object.assign({}, payload), {\n                method: \"session_request\"\n            });\n            this._eventManager.trigger(internalPayload);\n        });\n        this.on(\"wc_sessionUpdate\", (error, payload)=>{\n            if (error) {\n                this._handleSessionResponse(error.message);\n            }\n            this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n        });\n    }\n    _initTransport() {\n        this._transport.on(\"message\", (socketMessage)=>this._handleIncomingMessages(socketMessage));\n        this._transport.on(\"open\", ()=>this._eventManager.trigger({\n                event: \"transport_open\",\n                params: []\n            }));\n        this._transport.on(\"close\", ()=>this._eventManager.trigger({\n                event: \"transport_close\",\n                params: []\n            }));\n        this._transport.on(\"error\", ()=>this._eventManager.trigger({\n                event: \"transport_error\",\n                params: [\n                    \"Websocket connection failed\"\n                ]\n            }));\n        this._transport.open();\n    }\n    _formatUri() {\n        const protocol = this.protocol;\n        const handshakeTopic = this.handshakeTopic;\n        const version = this.version;\n        const bridge = encodeURIComponent(this.bridge);\n        const key = this.key;\n        const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;\n        return uri;\n    }\n    _parseUri(uri) {\n        const result = legacy_utils_1.parseWalletConnectUri(uri);\n        if (result.protocol === this.protocol) {\n            if (!result.handshakeTopic) {\n                throw Error(\"Invalid or missing handshakeTopic parameter value\");\n            }\n            const handshakeTopic = result.handshakeTopic;\n            if (!result.bridge) {\n                throw Error(\"Invalid or missing bridge url parameter value\");\n            }\n            const bridge = decodeURIComponent(result.bridge);\n            if (!result.key) {\n                throw Error(\"Invalid or missing key parameter value\");\n            }\n            const key = result.key;\n            return {\n                handshakeTopic,\n                bridge,\n                key\n            };\n        } else {\n            throw new Error(legacy_types_1.ERROR_INVALID_URI);\n        }\n    }\n    _generateKey() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (this._cryptoLib) {\n                const result = yield this._cryptoLib.generateKey();\n                return result;\n            }\n            return null;\n        });\n    }\n    _encrypt(data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const key = this._key;\n            if (this._cryptoLib && key) {\n                const result = yield this._cryptoLib.encrypt(data, key);\n                return result;\n            }\n            return null;\n        });\n    }\n    _decrypt(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const key = this._key;\n            if (this._cryptoLib && key) {\n                const result = yield this._cryptoLib.decrypt(payload, key);\n                return result;\n            }\n            return null;\n        });\n    }\n    _getStorageSession() {\n        let result = null;\n        if (this._sessionStorage) {\n            result = this._sessionStorage.getSession();\n        }\n        return result;\n    }\n    _setStorageSession() {\n        if (this._sessionStorage) {\n            this._sessionStorage.setSession(this.session);\n        }\n    }\n    _removeStorageSession() {\n        if (this._sessionStorage) {\n            this._sessionStorage.removeSession();\n        }\n    }\n    _manageStorageSession() {\n        if (this._connected) {\n            this._setStorageSession();\n        } else {\n            this._removeStorageSession();\n        }\n    }\n    _registerPushServer(pushServerOpts) {\n        if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n        }\n        if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n        }\n        if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n            throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n        }\n        const pushSubscription = {\n            bridge: this.bridge,\n            topic: this.clientId,\n            type: pushServerOpts.type,\n            token: pushServerOpts.token,\n            peerName: \"\",\n            language: pushServerOpts.language || \"\"\n        };\n        this.on(\"connect\", (error, payload)=>tslib_1.__awaiter(this, void 0, void 0, function*() {\n                if (error) {\n                    throw error;\n                }\n                if (pushServerOpts.peerMeta) {\n                    const peerName = payload.params[0].peerMeta.name;\n                    pushSubscription.peerName = peerName;\n                }\n                try {\n                    const response = yield fetch(`${pushServerOpts.url}/new`, {\n                        method: \"POST\",\n                        headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(pushSubscription)\n                    });\n                    const json = yield response.json();\n                    if (!json.success) {\n                        throw Error(\"Failed to register in Push Server\");\n                    }\n                } catch (error) {\n                    throw Error(\"Failed to register in Push Server\");\n                }\n            }));\n    }\n}\nexports[\"default\"] = Connector; //# sourceMappingURL=core.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/core.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/crypto.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/crypto.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decrypt = exports.encrypt = exports.verifyHmac = exports.generateKey = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst crypto = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/crypto */ \"(ssr)/../node_modules/@walletconnect/crypto/dist/cjs/node/index.js\"));\nconst encoding = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\"));\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nfunction generateKey(length) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const _length = (length || 256) / 8;\n        const bytes = crypto.randomBytes(_length);\n        const result = legacy_utils_1.convertBufferToArrayBuffer(encoding.arrayToBuffer(bytes));\n        return result;\n    });\n}\nexports.generateKey = generateKey;\nfunction verifyHmac(payload, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const cipherText = encoding.hexToArray(payload.data);\n        const iv = encoding.hexToArray(payload.iv);\n        const hmac = encoding.hexToArray(payload.hmac);\n        const hmacHex = encoding.arrayToHex(hmac, false);\n        const unsigned = encoding.concatArrays(cipherText, iv);\n        const chmac = yield crypto.hmacSha256Sign(key, unsigned);\n        const chmacHex = encoding.arrayToHex(chmac, false);\n        if (encoding.removeHexPrefix(hmacHex) === encoding.removeHexPrefix(chmacHex)) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.verifyHmac = verifyHmac;\nfunction encrypt(data, key, providedIv) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const _key = encoding.bufferToArray(legacy_utils_1.convertArrayBufferToBuffer(key));\n        const ivArrayBuffer = providedIv || (yield generateKey(128));\n        const iv = encoding.bufferToArray(legacy_utils_1.convertArrayBufferToBuffer(ivArrayBuffer));\n        const ivHex = encoding.arrayToHex(iv, false);\n        const contentString = JSON.stringify(data);\n        const content = encoding.utf8ToArray(contentString);\n        const cipherText = yield crypto.aesCbcEncrypt(iv, _key, content);\n        const cipherTextHex = encoding.arrayToHex(cipherText, false);\n        const unsigned = encoding.concatArrays(cipherText, iv);\n        const hmac = yield crypto.hmacSha256Sign(_key, unsigned);\n        const hmacHex = encoding.arrayToHex(hmac, false);\n        return {\n            data: cipherTextHex,\n            hmac: hmacHex,\n            iv: ivHex\n        };\n    });\n}\nexports.encrypt = encrypt;\nfunction decrypt(payload, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const _key = encoding.bufferToArray(legacy_utils_1.convertArrayBufferToBuffer(key));\n        if (!_key) {\n            throw new Error(\"Missing key: required for decryption\");\n        }\n        const verified = yield verifyHmac(payload, _key);\n        if (!verified) {\n            return null;\n        }\n        const cipherText = encoding.hexToArray(payload.data);\n        const iv = encoding.hexToArray(payload.iv);\n        const buffer = yield crypto.aesCbcDecrypt(iv, _key, cipherText);\n        const utf8 = encoding.arrayToUtf8(buffer);\n        let data;\n        try {\n            data = JSON.parse(utf8);\n        } catch (error) {\n            return null;\n        }\n        return data;\n    });\n}\nexports.decrypt = decrypt; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/events.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/events.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nclass EventManager {\n    constructor(){\n        this._eventEmitters = [];\n    }\n    subscribe(eventEmitter) {\n        this._eventEmitters.push(eventEmitter);\n    }\n    unsubscribe(event) {\n        this._eventEmitters = this._eventEmitters.filter((x)=>x.event !== event);\n    }\n    trigger(payload) {\n        let eventEmitters = [];\n        let event;\n        if (legacy_utils_1.isJsonRpcRequest(payload)) {\n            event = payload.method;\n        } else if (legacy_utils_1.isJsonRpcResponseSuccess(payload) || legacy_utils_1.isJsonRpcResponseError(payload)) {\n            event = `response:${payload.id}`;\n        } else if (legacy_utils_1.isInternalEvent(payload)) {\n            event = payload.event;\n        } else {\n            event = \"\";\n        }\n        if (event) {\n            eventEmitters = this._eventEmitters.filter((eventEmitter)=>eventEmitter.event === event);\n        }\n        if ((!eventEmitters || !eventEmitters.length) && !legacy_utils_1.isReservedEvent(event) && !legacy_utils_1.isInternalEvent(event)) {\n            eventEmitters = this._eventEmitters.filter((eventEmitter)=>eventEmitter.event === \"call_request\");\n        }\n        eventEmitters.forEach((eventEmitter)=>{\n            if (legacy_utils_1.isJsonRpcResponseError(payload)) {\n                const error = new Error(payload.error.message);\n                eventEmitter.callback(error, null);\n            } else {\n                eventEmitter.callback(null, payload);\n            }\n        });\n    }\n}\nexports[\"default\"] = EventManager; //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsd0dBQTZCO0FBQzVELE1BQU1DO0lBQ0ZDLGFBQWM7UUFDVixJQUFJLENBQUNDLGNBQWMsR0FBRyxFQUFFO0lBQzVCO0lBQ0FDLFVBQVVDLFlBQVksRUFBRTtRQUNwQixJQUFJLENBQUNGLGNBQWMsQ0FBQ0csSUFBSSxDQUFDRDtJQUM3QjtJQUNBRSxZQUFZQyxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUNMLGNBQWMsR0FBRyxJQUFJLENBQUNBLGNBQWMsQ0FBQ00sTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFRixLQUFLLEtBQUtBO0lBQ3RFO0lBQ0FHLFFBQVFDLE9BQU8sRUFBRTtRQUNiLElBQUlDLGdCQUFnQixFQUFFO1FBQ3RCLElBQUlMO1FBQ0osSUFBSVQsZUFBZWUsZ0JBQWdCLENBQUNGLFVBQVU7WUFDMUNKLFFBQVFJLFFBQVFHLE1BQU07UUFDMUIsT0FDSyxJQUFJaEIsZUFBZWlCLHdCQUF3QixDQUFDSixZQUFZYixlQUFla0Isc0JBQXNCLENBQUNMLFVBQVU7WUFDekdKLFFBQVEsQ0FBQyxTQUFTLEVBQUVJLFFBQVFNLEVBQUUsQ0FBQyxDQUFDO1FBQ3BDLE9BQ0ssSUFBSW5CLGVBQWVvQixlQUFlLENBQUNQLFVBQVU7WUFDOUNKLFFBQVFJLFFBQVFKLEtBQUs7UUFDekIsT0FDSztZQUNEQSxRQUFRO1FBQ1o7UUFDQSxJQUFJQSxPQUFPO1lBQ1BLLGdCQUFnQixJQUFJLENBQUNWLGNBQWMsQ0FBQ00sTUFBTSxDQUFDLENBQUNKLGVBQWlCQSxhQUFhRyxLQUFLLEtBQUtBO1FBQ3hGO1FBQ0EsSUFBSSxDQUFDLENBQUNLLGlCQUFpQixDQUFDQSxjQUFjTyxNQUFNLEtBQ3hDLENBQUNyQixlQUFlc0IsZUFBZSxDQUFDYixVQUNoQyxDQUFDVCxlQUFlb0IsZUFBZSxDQUFDWCxRQUFRO1lBQ3hDSyxnQkFBZ0IsSUFBSSxDQUFDVixjQUFjLENBQUNNLE1BQU0sQ0FBQyxDQUFDSixlQUFpQkEsYUFBYUcsS0FBSyxLQUFLO1FBQ3hGO1FBQ0FLLGNBQWNTLE9BQU8sQ0FBQyxDQUFDakI7WUFDbkIsSUFBSU4sZUFBZWtCLHNCQUFzQixDQUFDTCxVQUFVO2dCQUNoRCxNQUFNVyxRQUFRLElBQUlDLE1BQU1aLFFBQVFXLEtBQUssQ0FBQ0UsT0FBTztnQkFDN0NwQixhQUFhcUIsUUFBUSxDQUFDSCxPQUFPO1lBQ2pDLE9BQ0s7Z0JBQ0RsQixhQUFhcUIsUUFBUSxDQUFDLE1BQU1kO1lBQ2hDO1FBQ0o7SUFDSjtBQUNKO0FBQ0FmLGtCQUFlLEdBQUdJLGNBQ2xCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvZXZlbnRzLmpzP2JkY2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBsZWdhY3lfdXRpbHNfMSA9IHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9sZWdhY3ktdXRpbHNcIik7XG5jbGFzcyBFdmVudE1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXJzID0gW107XG4gICAgfVxuICAgIHN1YnNjcmliZShldmVudEVtaXR0ZXIpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVycy5wdXNoKGV2ZW50RW1pdHRlcik7XG4gICAgfVxuICAgIHVuc3Vic2NyaWJlKGV2ZW50KSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlcnMgPSB0aGlzLl9ldmVudEVtaXR0ZXJzLmZpbHRlcih4ID0+IHguZXZlbnQgIT09IGV2ZW50KTtcbiAgICB9XG4gICAgdHJpZ2dlcihwYXlsb2FkKSB7XG4gICAgICAgIGxldCBldmVudEVtaXR0ZXJzID0gW107XG4gICAgICAgIGxldCBldmVudDtcbiAgICAgICAgaWYgKGxlZ2FjeV91dGlsc18xLmlzSnNvblJwY1JlcXVlc3QocGF5bG9hZCkpIHtcbiAgICAgICAgICAgIGV2ZW50ID0gcGF5bG9hZC5tZXRob2Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobGVnYWN5X3V0aWxzXzEuaXNKc29uUnBjUmVzcG9uc2VTdWNjZXNzKHBheWxvYWQpIHx8IGxlZ2FjeV91dGlsc18xLmlzSnNvblJwY1Jlc3BvbnNlRXJyb3IocGF5bG9hZCkpIHtcbiAgICAgICAgICAgIGV2ZW50ID0gYHJlc3BvbnNlOiR7cGF5bG9hZC5pZH1gO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGxlZ2FjeV91dGlsc18xLmlzSW50ZXJuYWxFdmVudChwYXlsb2FkKSkge1xuICAgICAgICAgICAgZXZlbnQgPSBwYXlsb2FkLmV2ZW50O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXZlbnQgPSBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgZXZlbnRFbWl0dGVycyA9IHRoaXMuX2V2ZW50RW1pdHRlcnMuZmlsdGVyKChldmVudEVtaXR0ZXIpID0+IGV2ZW50RW1pdHRlci5ldmVudCA9PT0gZXZlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoIWV2ZW50RW1pdHRlcnMgfHwgIWV2ZW50RW1pdHRlcnMubGVuZ3RoKSAmJlxuICAgICAgICAgICAgIWxlZ2FjeV91dGlsc18xLmlzUmVzZXJ2ZWRFdmVudChldmVudCkgJiZcbiAgICAgICAgICAgICFsZWdhY3lfdXRpbHNfMS5pc0ludGVybmFsRXZlbnQoZXZlbnQpKSB7XG4gICAgICAgICAgICBldmVudEVtaXR0ZXJzID0gdGhpcy5fZXZlbnRFbWl0dGVycy5maWx0ZXIoKGV2ZW50RW1pdHRlcikgPT4gZXZlbnRFbWl0dGVyLmV2ZW50ID09PSBcImNhbGxfcmVxdWVzdFwiKTtcbiAgICAgICAgfVxuICAgICAgICBldmVudEVtaXR0ZXJzLmZvckVhY2goKGV2ZW50RW1pdHRlcikgPT4ge1xuICAgICAgICAgICAgaWYgKGxlZ2FjeV91dGlsc18xLmlzSnNvblJwY1Jlc3BvbnNlRXJyb3IocGF5bG9hZCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihwYXlsb2FkLmVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIGV2ZW50RW1pdHRlci5jYWxsYmFjayhlcnJvciwgbnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBldmVudEVtaXR0ZXIuY2FsbGJhY2sobnVsbCwgcGF5bG9hZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEV2ZW50TWFuYWdlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJsZWdhY3lfdXRpbHNfMSIsInJlcXVpcmUiLCJFdmVudE1hbmFnZXIiLCJjb25zdHJ1Y3RvciIsIl9ldmVudEVtaXR0ZXJzIiwic3Vic2NyaWJlIiwiZXZlbnRFbWl0dGVyIiwicHVzaCIsInVuc3Vic2NyaWJlIiwiZXZlbnQiLCJmaWx0ZXIiLCJ4IiwidHJpZ2dlciIsInBheWxvYWQiLCJldmVudEVtaXR0ZXJzIiwiaXNKc29uUnBjUmVxdWVzdCIsIm1ldGhvZCIsImlzSnNvblJwY1Jlc3BvbnNlU3VjY2VzcyIsImlzSnNvblJwY1Jlc3BvbnNlRXJyb3IiLCJpZCIsImlzSW50ZXJuYWxFdmVudCIsImxlbmd0aCIsImlzUmVzZXJ2ZWRFdmVudCIsImZvckVhY2giLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsImNhbGxiYWNrIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst core_1 = tslib_1.__importDefault(__webpack_require__(/*! ./core */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/core.js\"));\nconst cryptoLib = tslib_1.__importStar(__webpack_require__(/*! ./crypto */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/crypto.js\"));\nclass WalletConnect extends core_1.default {\n    constructor(connectorOpts, pushServerOpts){\n        super({\n            cryptoLib,\n            connectorOpts,\n            pushServerOpts\n        });\n    }\n}\nexports[\"default\"] = WalletConnect; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0RBQU87QUFDL0IsTUFBTUMsU0FBU0YsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyxtRkFBUTtBQUN2RCxNQUFNRyxZQUFZSixRQUFRSyxZQUFZLENBQUNKLG1CQUFPQSxDQUFDLHVGQUFVO0FBQ3pELE1BQU1LLHNCQUFzQkosT0FBT0ssT0FBTztJQUN0Q0MsWUFBWUMsYUFBYSxFQUFFQyxjQUFjLENBQUU7UUFDdkMsS0FBSyxDQUFDO1lBQ0ZOO1lBQ0FLO1lBQ0FDO1FBQ0o7SUFDSjtBQUNKO0FBQ0FaLGtCQUFlLEdBQUdRLGVBQ2xCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvaW5kZXguanM/Mjk0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9jb3JlXCIpKTtcbmNvbnN0IGNyeXB0b0xpYiA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyeXB0b1wiKSk7XG5jbGFzcyBXYWxsZXRDb25uZWN0IGV4dGVuZHMgY29yZV8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rvck9wdHMsIHB1c2hTZXJ2ZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGNyeXB0b0xpYixcbiAgICAgICAgICAgIGNvbm5lY3Rvck9wdHMsXG4gICAgICAgICAgICBwdXNoU2VydmVyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gV2FsbGV0Q29ubmVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiY29yZV8xIiwiX19pbXBvcnREZWZhdWx0IiwiY3J5cHRvTGliIiwiX19pbXBvcnRTdGFyIiwiV2FsbGV0Q29ubmVjdCIsImRlZmF1bHQiLCJjb25zdHJ1Y3RvciIsImNvbm5lY3Rvck9wdHMiLCJwdXNoU2VydmVyT3B0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/network.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/network.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nclass NetworkMonitor {\n    constructor(){\n        this._eventEmitters = [];\n        if (false) {}\n    }\n    on(event, callback) {\n        this._eventEmitters.push({\n            event,\n            callback\n        });\n    }\n    trigger(event) {\n        let eventEmitters = [];\n        if (event) {\n            eventEmitters = this._eventEmitters.filter((eventEmitter)=>eventEmitter.event === event);\n        }\n        eventEmitters.forEach((eventEmitter)=>{\n            eventEmitter.callback();\n        });\n    }\n}\nexports[\"default\"] = NetworkMonitor; //# sourceMappingURL=network.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvbmV0d29yay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQztJQUNGQyxhQUFjO1FBQ1YsSUFBSSxDQUFDQyxjQUFjLEdBQUcsRUFBRTtRQUN4QixJQUFJLEtBQStFLEVBQUUsRUFHcEY7SUFDTDtJQUNBSSxHQUFHQyxLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUNoQixJQUFJLENBQUNOLGNBQWMsQ0FBQ08sSUFBSSxDQUFDO1lBQ3JCRjtZQUNBQztRQUNKO0lBQ0o7SUFDQUgsUUFBUUUsS0FBSyxFQUFFO1FBQ1gsSUFBSUcsZ0JBQWdCLEVBQUU7UUFDdEIsSUFBSUgsT0FBTztZQUNQRyxnQkFBZ0IsSUFBSSxDQUFDUixjQUFjLENBQUNTLE1BQU0sQ0FBQyxDQUFDQyxlQUFpQkEsYUFBYUwsS0FBSyxLQUFLQTtRQUN4RjtRQUNBRyxjQUFjRyxPQUFPLENBQUMsQ0FBQ0Q7WUFDbkJBLGFBQWFKLFFBQVE7UUFDekI7SUFDSjtBQUNKO0FBQ0FWLGtCQUFlLEdBQUdFLGdCQUNsQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktY2xpZW50L2Rpc3QvY2pzL25ldHdvcmsuanM/MzQyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIE5ldHdvcmtNb25pdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVycyA9IFtdO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsICgpID0+IHRoaXMudHJpZ2dlcihcIm9ubGluZVwiKSk7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgKCkgPT4gdGhpcy50cmlnZ2VyKFwib2ZmbGluZVwiKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb24oZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlcnMucHVzaCh7XG4gICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgIGNhbGxiYWNrLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdHJpZ2dlcihldmVudCkge1xuICAgICAgICBsZXQgZXZlbnRFbWl0dGVycyA9IFtdO1xuICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGV2ZW50RW1pdHRlcnMgPSB0aGlzLl9ldmVudEVtaXR0ZXJzLmZpbHRlcigoZXZlbnRFbWl0dGVyKSA9PiBldmVudEVtaXR0ZXIuZXZlbnQgPT09IGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBldmVudEVtaXR0ZXJzLmZvckVhY2goKGV2ZW50RW1pdHRlcikgPT4ge1xuICAgICAgICAgICAgZXZlbnRFbWl0dGVyLmNhbGxiYWNrKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IE5ldHdvcmtNb25pdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmV0d29yay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJOZXR3b3JrTW9uaXRvciIsImNvbnN0cnVjdG9yIiwiX2V2ZW50RW1pdHRlcnMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwidHJpZ2dlciIsIm9uIiwiZXZlbnQiLCJjYWxsYmFjayIsInB1c2giLCJldmVudEVtaXR0ZXJzIiwiZmlsdGVyIiwiZXZlbnRFbWl0dGVyIiwiZm9yRWFjaCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/network.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/socket.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/socket.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nconst network_1 = tslib_1.__importDefault(__webpack_require__(/*! ./network */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/network.js\"));\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/../node_modules/ws/index.js\");\nclass SocketTransport {\n    constructor(opts){\n        this.opts = opts;\n        this._queue = [];\n        this._events = [];\n        this._subscriptions = [];\n        this._protocol = opts.protocol;\n        this._version = opts.version;\n        this._url = \"\";\n        this._netMonitor = null;\n        this._socket = null;\n        this._nextSocket = null;\n        this._subscriptions = opts.subscriptions || [];\n        this._netMonitor = opts.netMonitor || new network_1.default();\n        if (!opts.url || typeof opts.url !== \"string\") {\n            throw new Error(\"Missing or invalid WebSocket url\");\n        }\n        this._url = opts.url;\n        this._netMonitor.on(\"online\", ()=>this._socketCreate());\n    }\n    set readyState(value) {}\n    get readyState() {\n        return this._socket ? this._socket.readyState : -1;\n    }\n    set connecting(value) {}\n    get connecting() {\n        return this.readyState === 0;\n    }\n    set connected(value) {}\n    get connected() {\n        return this.readyState === 1;\n    }\n    set closing(value) {}\n    get closing() {\n        return this.readyState === 2;\n    }\n    set closed(value) {}\n    get closed() {\n        return this.readyState === 3;\n    }\n    open() {\n        this._socketCreate();\n    }\n    close() {\n        this._socketClose();\n    }\n    send(message, topic, silent) {\n        if (!topic || typeof topic !== \"string\") {\n            throw new Error(\"Missing or invalid topic field\");\n        }\n        this._socketSend({\n            topic: topic,\n            type: \"pub\",\n            payload: message,\n            silent: !!silent\n        });\n    }\n    subscribe(topic) {\n        this._socketSend({\n            topic: topic,\n            type: \"sub\",\n            payload: \"\",\n            silent: true\n        });\n    }\n    on(event, callback) {\n        this._events.push({\n            event,\n            callback\n        });\n    }\n    _socketCreate() {\n        if (this._nextSocket) {\n            return;\n        }\n        const url = getWebSocketUrl(this._url, this._protocol, this._version);\n        this._nextSocket = new WS(url);\n        if (!this._nextSocket) {\n            throw new Error(\"Failed to create socket\");\n        }\n        this._nextSocket.onmessage = (event)=>this._socketReceive(event);\n        this._nextSocket.onopen = ()=>this._socketOpen();\n        this._nextSocket.onerror = (event)=>this._socketError(event);\n        this._nextSocket.onclose = ()=>{\n            setTimeout(()=>{\n                this._nextSocket = null;\n                this._socketCreate();\n            }, 1000);\n        };\n    }\n    _socketOpen() {\n        this._socketClose();\n        this._socket = this._nextSocket;\n        this._nextSocket = null;\n        this._queueSubscriptions();\n        this._pushQueue();\n    }\n    _socketClose() {\n        if (this._socket) {\n            this._socket.onclose = ()=>{};\n            this._socket.close();\n        }\n    }\n    _socketSend(socketMessage) {\n        const message = JSON.stringify(socketMessage);\n        if (this._socket && this._socket.readyState === 1) {\n            this._socket.send(message);\n        } else {\n            this._setToQueue(socketMessage);\n            this._socketCreate();\n        }\n    }\n    _socketReceive(event) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            let socketMessage;\n            try {\n                socketMessage = JSON.parse(event.data);\n            } catch (error) {\n                return;\n            }\n            this._socketSend({\n                topic: socketMessage.topic,\n                type: \"ack\",\n                payload: \"\",\n                silent: true\n            });\n            if (this._socket && this._socket.readyState === 1) {\n                const events = this._events.filter((event)=>event.event === \"message\");\n                if (events && events.length) {\n                    events.forEach((event)=>event.callback(socketMessage));\n                }\n            }\n        });\n    }\n    _socketError(e) {\n        const events = this._events.filter((event)=>event.event === \"error\");\n        if (events && events.length) {\n            events.forEach((event)=>event.callback(e));\n        }\n    }\n    _queueSubscriptions() {\n        const subscriptions = this._subscriptions;\n        subscriptions.forEach((topic)=>this._queue.push({\n                topic: topic,\n                type: \"sub\",\n                payload: \"\",\n                silent: true\n            }));\n        this._subscriptions = this.opts.subscriptions || [];\n    }\n    _setToQueue(socketMessage) {\n        this._queue.push(socketMessage);\n    }\n    _pushQueue() {\n        const queue = this._queue;\n        queue.forEach((socketMessage)=>this._socketSend(socketMessage));\n        this._queue = [];\n    }\n}\nfunction getWebSocketUrl(_url, protocol, version) {\n    var _a, _b;\n    const url = _url.startsWith(\"https\") ? _url.replace(\"https\", \"wss\") : _url.startsWith(\"http\") ? _url.replace(\"http\", \"ws\") : _url;\n    const splitUrl = url.split(\"?\");\n    const params = legacy_utils_1.isBrowser() ? {\n        protocol,\n        version,\n        env: \"browser\",\n        host: ((_a = legacy_utils_1.getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\"\n    } : {\n        protocol,\n        version,\n        env: ((_b = legacy_utils_1.detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\"\n    };\n    const queryString = legacy_utils_1.appendToQueryString(legacy_utils_1.getQueryString(splitUrl[1] || \"\"), params);\n    return splitUrl[0] + \"?\" + queryString;\n}\nexports[\"default\"] = SocketTransport; //# sourceMappingURL=socket.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/socket.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/storage.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/storage.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nclass SessionStorage {\n    constructor(storageId = \"walletconnect\"){\n        this.storageId = storageId;\n    }\n    getSession() {\n        let session = null;\n        const json = legacy_utils_1.getLocal(this.storageId);\n        if (json && legacy_utils_1.isWalletConnectSession(json)) {\n            session = json;\n        }\n        return session;\n    }\n    setSession(session) {\n        legacy_utils_1.setLocal(this.storageId, session);\n        return session;\n    }\n    removeSession() {\n        legacy_utils_1.removeLocal(this.storageId);\n    }\n}\nexports[\"default\"] = SessionStorage; //# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxpQkFBaUJDLG1CQUFPQSxDQUFDLHdHQUE2QjtBQUM1RCxNQUFNQztJQUNGQyxZQUFZQyxZQUFZLGVBQWUsQ0FBRTtRQUNyQyxJQUFJLENBQUNBLFNBQVMsR0FBR0E7SUFDckI7SUFDQUMsYUFBYTtRQUNULElBQUlDLFVBQVU7UUFDZCxNQUFNQyxPQUFPUCxlQUFlUSxRQUFRLENBQUMsSUFBSSxDQUFDSixTQUFTO1FBQ25ELElBQUlHLFFBQVFQLGVBQWVTLHNCQUFzQixDQUFDRixPQUFPO1lBQ3JERCxVQUFVQztRQUNkO1FBQ0EsT0FBT0Q7SUFDWDtJQUNBSSxXQUFXSixPQUFPLEVBQUU7UUFDaEJOLGVBQWVXLFFBQVEsQ0FBQyxJQUFJLENBQUNQLFNBQVMsRUFBRUU7UUFDeEMsT0FBT0E7SUFDWDtJQUNBTSxnQkFBZ0I7UUFDWlosZUFBZWEsV0FBVyxDQUFDLElBQUksQ0FBQ1QsU0FBUztJQUM3QztBQUNKO0FBQ0FOLGtCQUFlLEdBQUdJLGdCQUNsQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktY2xpZW50L2Rpc3QvY2pzL3N0b3JhZ2UuanM/NGQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGxlZ2FjeV91dGlsc18xID0gcmVxdWlyZShcIkB3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlsc1wiKTtcbmNsYXNzIFNlc3Npb25TdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlSWQgPSBcIndhbGxldGNvbm5lY3RcIikge1xuICAgICAgICB0aGlzLnN0b3JhZ2VJZCA9IHN0b3JhZ2VJZDtcbiAgICB9XG4gICAgZ2V0U2Vzc2lvbigpIHtcbiAgICAgICAgbGV0IHNlc3Npb24gPSBudWxsO1xuICAgICAgICBjb25zdCBqc29uID0gbGVnYWN5X3V0aWxzXzEuZ2V0TG9jYWwodGhpcy5zdG9yYWdlSWQpO1xuICAgICAgICBpZiAoanNvbiAmJiBsZWdhY3lfdXRpbHNfMS5pc1dhbGxldENvbm5lY3RTZXNzaW9uKGpzb24pKSB7XG4gICAgICAgICAgICBzZXNzaW9uID0ganNvbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9XG4gICAgc2V0U2Vzc2lvbihzZXNzaW9uKSB7XG4gICAgICAgIGxlZ2FjeV91dGlsc18xLnNldExvY2FsKHRoaXMuc3RvcmFnZUlkLCBzZXNzaW9uKTtcbiAgICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfVxuICAgIHJlbW92ZVNlc3Npb24oKSB7XG4gICAgICAgIGxlZ2FjeV91dGlsc18xLnJlbW92ZUxvY2FsKHRoaXMuc3RvcmFnZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTZXNzaW9uU3RvcmFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibGVnYWN5X3V0aWxzXzEiLCJyZXF1aXJlIiwiU2Vzc2lvblN0b3JhZ2UiLCJjb25zdHJ1Y3RvciIsInN0b3JhZ2VJZCIsImdldFNlc3Npb24iLCJzZXNzaW9uIiwianNvbiIsImdldExvY2FsIiwiaXNXYWxsZXRDb25uZWN0U2Vzc2lvbiIsInNldFNlc3Npb24iLCJzZXRMb2NhbCIsInJlbW92ZVNlc3Npb24iLCJyZW1vdmVMb2NhbCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/storage.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/url.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-client/dist/cjs/url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getBridgeUrl = exports.shouldSelectRandomly = exports.selectRandomBridgeUrl = exports.randomBridgeIndex = exports.extractRootDomain = exports.extractHostname = void 0;\nconst domain = \"walletconnect.org\";\nconst alphanumerical = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst bridges = alphanumerical.split(\"\").map((char)=>`https://${char}.bridge.walletconnect.org`);\nfunction extractHostname(url) {\n    let hostname = url.indexOf(\"//\") > -1 ? url.split(\"/\")[2] : url.split(\"/\")[0];\n    hostname = hostname.split(\":\")[0];\n    hostname = hostname.split(\"?\")[0];\n    return hostname;\n}\nexports.extractHostname = extractHostname;\nfunction extractRootDomain(url) {\n    return extractHostname(url).split(\".\").slice(-2).join(\".\");\n}\nexports.extractRootDomain = extractRootDomain;\nfunction randomBridgeIndex() {\n    return Math.floor(Math.random() * bridges.length);\n}\nexports.randomBridgeIndex = randomBridgeIndex;\nfunction selectRandomBridgeUrl() {\n    return bridges[randomBridgeIndex()];\n}\nexports.selectRandomBridgeUrl = selectRandomBridgeUrl;\nfunction shouldSelectRandomly(url) {\n    return extractRootDomain(url) === domain;\n}\nexports.shouldSelectRandomly = shouldSelectRandomly;\nfunction getBridgeUrl(url) {\n    if (shouldSelectRandomly(url)) {\n        return selectRandomBridgeUrl();\n    }\n    return url;\n}\nexports.getBridgeUrl = getBridgeUrl; //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1jbGllbnQvZGlzdC9janMvdXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxvQkFBb0IsR0FBR0EsNEJBQTRCLEdBQUdBLDZCQUE2QixHQUFHQSx5QkFBeUIsR0FBR0EseUJBQXlCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDN0ssTUFBTVEsU0FBUztBQUNmLE1BQU1DLGlCQUFpQjtBQUN2QixNQUFNQyxVQUFVRCxlQUFlRSxLQUFLLENBQUMsSUFBSUMsR0FBRyxDQUFDQyxDQUFBQSxPQUFRLENBQUMsUUFBUSxFQUFFQSxLQUFLLHlCQUF5QixDQUFDO0FBQy9GLFNBQVNOLGdCQUFnQk8sR0FBRztJQUN4QixJQUFJQyxXQUFXRCxJQUFJRSxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUlGLElBQUlILEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHRyxJQUFJSCxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDN0VJLFdBQVdBLFNBQVNKLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUNqQ0ksV0FBV0EsU0FBU0osS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ2pDLE9BQU9JO0FBQ1g7QUFDQWYsdUJBQXVCLEdBQUdPO0FBQzFCLFNBQVNELGtCQUFrQlEsR0FBRztJQUMxQixPQUFPUCxnQkFBZ0JPLEtBQ2xCSCxLQUFLLENBQUMsS0FDTk0sS0FBSyxDQUFDLENBQUMsR0FDUEMsSUFBSSxDQUFDO0FBQ2Q7QUFDQWxCLHlCQUF5QixHQUFHTTtBQUM1QixTQUFTRDtJQUNMLE9BQU9jLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLWCxRQUFRWSxNQUFNO0FBQ3BEO0FBQ0F0Qix5QkFBeUIsR0FBR0s7QUFDNUIsU0FBU0Q7SUFDTCxPQUFPTSxPQUFPLENBQUNMLG9CQUFvQjtBQUN2QztBQUNBTCw2QkFBNkIsR0FBR0k7QUFDaEMsU0FBU0QscUJBQXFCVyxHQUFHO0lBQzdCLE9BQU9SLGtCQUFrQlEsU0FBU047QUFDdEM7QUFDQVIsNEJBQTRCLEdBQUdHO0FBQy9CLFNBQVNELGFBQWFZLEdBQUc7SUFDckIsSUFBSVgscUJBQXFCVyxNQUFNO1FBQzNCLE9BQU9WO0lBQ1g7SUFDQSxPQUFPVTtBQUNYO0FBQ0FkLG9CQUFvQixHQUFHRSxjQUN2QiwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktY2xpZW50L2Rpc3QvY2pzL3VybC5qcz82NDIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRCcmlkZ2VVcmwgPSBleHBvcnRzLnNob3VsZFNlbGVjdFJhbmRvbWx5ID0gZXhwb3J0cy5zZWxlY3RSYW5kb21CcmlkZ2VVcmwgPSBleHBvcnRzLnJhbmRvbUJyaWRnZUluZGV4ID0gZXhwb3J0cy5leHRyYWN0Um9vdERvbWFpbiA9IGV4cG9ydHMuZXh0cmFjdEhvc3RuYW1lID0gdm9pZCAwO1xuY29uc3QgZG9tYWluID0gXCJ3YWxsZXRjb25uZWN0Lm9yZ1wiO1xuY29uc3QgYWxwaGFudW1lcmljYWwgPSBcImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OVwiO1xuY29uc3QgYnJpZGdlcyA9IGFscGhhbnVtZXJpY2FsLnNwbGl0KFwiXCIpLm1hcChjaGFyID0+IGBodHRwczovLyR7Y2hhcn0uYnJpZGdlLndhbGxldGNvbm5lY3Qub3JnYCk7XG5mdW5jdGlvbiBleHRyYWN0SG9zdG5hbWUodXJsKSB7XG4gICAgbGV0IGhvc3RuYW1lID0gdXJsLmluZGV4T2YoXCIvL1wiKSA+IC0xID8gdXJsLnNwbGl0KFwiL1wiKVsyXSA6IHVybC5zcGxpdChcIi9cIilbMF07XG4gICAgaG9zdG5hbWUgPSBob3N0bmFtZS5zcGxpdChcIjpcIilbMF07XG4gICAgaG9zdG5hbWUgPSBob3N0bmFtZS5zcGxpdChcIj9cIilbMF07XG4gICAgcmV0dXJuIGhvc3RuYW1lO1xufVxuZXhwb3J0cy5leHRyYWN0SG9zdG5hbWUgPSBleHRyYWN0SG9zdG5hbWU7XG5mdW5jdGlvbiBleHRyYWN0Um9vdERvbWFpbih1cmwpIHtcbiAgICByZXR1cm4gZXh0cmFjdEhvc3RuYW1lKHVybClcbiAgICAgICAgLnNwbGl0KFwiLlwiKVxuICAgICAgICAuc2xpY2UoLTIpXG4gICAgICAgIC5qb2luKFwiLlwiKTtcbn1cbmV4cG9ydHMuZXh0cmFjdFJvb3REb21haW4gPSBleHRyYWN0Um9vdERvbWFpbjtcbmZ1bmN0aW9uIHJhbmRvbUJyaWRnZUluZGV4KCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBicmlkZ2VzLmxlbmd0aCk7XG59XG5leHBvcnRzLnJhbmRvbUJyaWRnZUluZGV4ID0gcmFuZG9tQnJpZGdlSW5kZXg7XG5mdW5jdGlvbiBzZWxlY3RSYW5kb21CcmlkZ2VVcmwoKSB7XG4gICAgcmV0dXJuIGJyaWRnZXNbcmFuZG9tQnJpZGdlSW5kZXgoKV07XG59XG5leHBvcnRzLnNlbGVjdFJhbmRvbUJyaWRnZVVybCA9IHNlbGVjdFJhbmRvbUJyaWRnZVVybDtcbmZ1bmN0aW9uIHNob3VsZFNlbGVjdFJhbmRvbWx5KHVybCkge1xuICAgIHJldHVybiBleHRyYWN0Um9vdERvbWFpbih1cmwpID09PSBkb21haW47XG59XG5leHBvcnRzLnNob3VsZFNlbGVjdFJhbmRvbWx5ID0gc2hvdWxkU2VsZWN0UmFuZG9tbHk7XG5mdW5jdGlvbiBnZXRCcmlkZ2VVcmwodXJsKSB7XG4gICAgaWYgKHNob3VsZFNlbGVjdFJhbmRvbWx5KHVybCkpIHtcbiAgICAgICAgcmV0dXJuIHNlbGVjdFJhbmRvbUJyaWRnZVVybCgpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufVxuZXhwb3J0cy5nZXRCcmlkZ2VVcmwgPSBnZXRCcmlkZ2VVcmw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0QnJpZGdlVXJsIiwic2hvdWxkU2VsZWN0UmFuZG9tbHkiLCJzZWxlY3RSYW5kb21CcmlkZ2VVcmwiLCJyYW5kb21CcmlkZ2VJbmRleCIsImV4dHJhY3RSb290RG9tYWluIiwiZXh0cmFjdEhvc3RuYW1lIiwiZG9tYWluIiwiYWxwaGFudW1lcmljYWwiLCJicmlkZ2VzIiwic3BsaXQiLCJtYXAiLCJjaGFyIiwidXJsIiwiaG9zdG5hbWUiLCJpbmRleE9mIiwic2xpY2UiLCJqb2luIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/url.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/dist/cjs/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/dist/cjs/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nfunction _interopDefault(ex) {\n    return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n}\nvar legacyUtils = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nvar QRCode = _interopDefault(__webpack_require__(/*! qrcode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/index.js\"));\nvar copy = _interopDefault(__webpack_require__(/*! copy-to-clipboard */ \"(ssr)/../node_modules/copy-to-clipboard/index.js\"));\nvar React = __webpack_require__(/*! preact/compat */ \"(ssr)/../node_modules/preact/compat/dist/compat.js\");\nfunction open(uri) {\n    QRCode.toString(uri, {\n        type: \"terminal\"\n    }).then(console.log);\n}\nvar WALLETCONNECT_STYLE_SHEET = ':root {\\n  --animation-duration: 300ms;\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.animated {\\n  animation-duration: var(--animation-duration);\\n  animation-fill-mode: both;\\n}\\n\\n.fadeIn {\\n  animation-name: fadeIn;\\n}\\n\\n.fadeOut {\\n  animation-name: fadeOut;\\n}\\n\\n#walletconnect-wrapper {\\n  -webkit-user-select: none;\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  left: 0;\\n  pointer-events: none;\\n  position: fixed;\\n  top: 0;\\n  user-select: none;\\n  width: 100%;\\n  z-index: 99999999999999;\\n}\\n\\n.walletconnect-modal__headerLogo {\\n  height: 21px;\\n}\\n\\n.walletconnect-modal__header p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n  align-items: flex-start;\\n  display: flex;\\n  flex: 1;\\n  margin-left: 5px;\\n}\\n\\n.walletconnect-modal__close__wrapper {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  z-index: 10000;\\n  background: white;\\n  border-radius: 26px;\\n  padding: 6px;\\n  box-sizing: border-box;\\n  width: 26px;\\n  height: 26px;\\n  cursor: pointer;\\n}\\n\\n.walletconnect-modal__close__icon {\\n  position: relative;\\n  top: 7px;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transform: rotate(45deg);\\n}\\n\\n.walletconnect-modal__close__line1 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n}\\n\\n.walletconnect-modal__close__line2 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n  transform: rotate(90deg);\\n}\\n\\n.walletconnect-qrcode__base {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  background: rgba(37, 41, 46, 0.95);\\n  height: 100%;\\n  left: 0;\\n  pointer-events: auto;\\n  position: fixed;\\n  top: 0;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  width: 100%;\\n  will-change: opacity;\\n  padding: 40px;\\n  box-sizing: border-box;\\n}\\n\\n.walletconnect-qrcode__text {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 10px 0 20px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 4vw;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-qrcode__image {\\n  width: calc(100% - 30px);\\n  box-sizing: border-box;\\n  cursor: none;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-qrcode__notification {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  font-size: 16px;\\n  padding: 16px 20px;\\n  border-radius: 16px;\\n  text-align: center;\\n  transition: all 0.1s ease-in-out;\\n  background: white;\\n  color: black;\\n  margin-bottom: -60px;\\n  opacity: 0;\\n}\\n\\n.walletconnect-qrcode__notification.notification__show {\\n  opacity: 1;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__header {\\n    height: 130px;\\n  }\\n  .walletconnect-modal__base {\\n    overflow: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\\n  #content {\\n    max-width: 768px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 375px) and (max-width: 415px) {\\n  #content {\\n    max-width: 414px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 320px) and (max-width: 375px) {\\n  #content {\\n    max-width: 375px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  #content {\\n    max-width: 320px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n.walletconnect-modal__base {\\n  -webkit-font-smoothing: antialiased;\\n  background: #ffffff;\\n  border-radius: 24px;\\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\\n  font-family: ui-rounded, \"SF Pro Rounded\", \"SF Pro Text\", medium-content-sans-serif-font,\\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell,\\n    \"Open Sans\", \"Helvetica Neue\", sans-serif;\\n  margin-top: 41px;\\n  padding: 24px 24px 22px;\\n  pointer-events: auto;\\n  position: relative;\\n  text-align: center;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  will-change: transform;\\n  overflow: visible;\\n  transform: translateY(-50%);\\n  top: 50%;\\n  max-width: 500px;\\n  margin: auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__base {\\n    padding: 24px 12px;\\n  }\\n}\\n\\n.walletconnect-modal__base .hidden {\\n  transform: translateY(150%);\\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\\n}\\n\\n.walletconnect-modal__header {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  left: 0;\\n  justify-content: space-between;\\n  position: absolute;\\n  top: -42px;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base .wc-logo {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  margin-top: 15px;\\n  padding-bottom: 15px;\\n  pointer-events: auto;\\n}\\n\\n.walletconnect-modal__base .wc-logo div {\\n  background-color: #3399ff;\\n  height: 21px;\\n  margin-right: 5px;\\n  mask-image: url(\"images/wc-logo.svg\") center no-repeat;\\n  width: 32px;\\n}\\n\\n.walletconnect-modal__base .wc-logo p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n}\\n\\n.walletconnect-modal__base h2 {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 0 0 19px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base__row {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  align-items: center;\\n  border-radius: 20px;\\n  cursor: pointer;\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-between;\\n  padding: 0 15px;\\n  position: relative;\\n  margin: 0px 0px 8px;\\n  text-align: left;\\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  will-change: transform;\\n  text-decoration: none;\\n}\\n\\n.walletconnect-modal__base__row:hover {\\n  background: rgba(60, 66, 82, 0.06);\\n}\\n\\n.walletconnect-modal__base__row:active {\\n  background: rgba(60, 66, 82, 0.06);\\n  transform: scale(0.975);\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n}\\n\\n.walletconnect-modal__base__row__h3 {\\n  color: #25292e;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin: 0;\\n  padding-bottom: 3px;\\n}\\n\\n.walletconnect-modal__base__row__right {\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.walletconnect-modal__base__row__right__app-icon {\\n  border-radius: 8px;\\n  height: 34px;\\n  margin: 0 11px 2px 0;\\n  width: 34px;\\n  background-size: 100%;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-modal__base__row__right__caret {\\n  height: 18px;\\n  opacity: 0.3;\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  width: 8px;\\n  will-change: opacity;\\n}\\n\\n.walletconnect-modal__base__row:hover .caret,\\n.walletconnect-modal__base__row:active .caret {\\n  opacity: 0.6;\\n}\\n\\n.walletconnect-modal__mobile__toggle {\\n  width: 80%;\\n  display: flex;\\n  margin: 0 auto;\\n  position: relative;\\n  overflow: hidden;\\n  border-radius: 8px;\\n  margin-bottom: 18px;\\n  background: #d4d5d9;\\n}\\n\\n.walletconnect-modal__single_wallet {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 7px;\\n  margin-bottom: 18px;\\n}\\n\\n.walletconnect-modal__single_wallet a {\\n  cursor: pointer;\\n  color: rgb(64, 153, 255);\\n  font-size: 21px;\\n  font-weight: 800;\\n  text-decoration: none !important;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-modal__mobile__toggle_selector {\\n  width: calc(50% - 8px);\\n  background: white;\\n  position: absolute;\\n  border-radius: 5px;\\n  height: calc(100% - 8px);\\n  top: 4px;\\n  transition: all 0.2s ease-in-out;\\n  transform: translate3d(4px, 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\\n  transform: translate3d(calc(100% + 12px), 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle a {\\n  font-size: 12px;\\n  width: 50%;\\n  text-align: center;\\n  padding: 8px;\\n  margin: 0;\\n  font-weight: 600;\\n  z-index: 1;\\n}\\n\\n.walletconnect-modal__footer {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__footer {\\n    margin-top: 5vw;\\n  }\\n}\\n\\n.walletconnect-modal__footer a {\\n  cursor: pointer;\\n  color: #898d97;\\n  font-size: 15px;\\n  margin: 0 auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__footer a {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-connect__buttons__wrapper {\\n  max-height: 44vh;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__android {\\n  margin: 50% 0;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__wrap {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  margin: 10px 0;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__buttons__wrapper__wrap {\\n    margin-top: 40px;\\n  }\\n}\\n\\n.walletconnect-connect__button {\\n  background-color: rgb(64, 153, 255);\\n  padding: 12px;\\n  border-radius: 8px;\\n  text-decoration: none;\\n  color: rgb(255, 255, 255);\\n  font-weight: 500;\\n}\\n\\n.walletconnect-connect__button__icon_anchor {\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  margin: 8px;\\n  width: 42px;\\n  justify-self: center;\\n  flex-direction: column;\\n  text-decoration: none !important;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-connect__button__icon_anchor {\\n    margin: 4px;\\n  }\\n}\\n\\n.walletconnect-connect__button__icon {\\n  border-radius: 10px;\\n  height: 42px;\\n  margin: 0;\\n  width: 42px;\\n  background-size: cover !important;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-connect__button__text {\\n  color: #424952;\\n  font-size: 2.7vw;\\n  text-decoration: none !important;\\n  padding: 0;\\n  margin-top: 1.8vw;\\n  font-weight: 600;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__button__text {\\n    font-size: 16px;\\n    margin-top: 12px;\\n  }\\n}\\n\\n.walletconnect-search__input {\\n  border: none;\\n  background: #d4d5d9;\\n  border-style: none;\\n  padding: 8px 16px;\\n  outline: none;\\n  font-style: normal;\\n  font-stretch: normal;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: left;\\n  border-radius: 8px;\\n  width: calc(100% - 16px);\\n  margin: 0;\\n  margin-bottom: 8px;\\n}\\n';\n// A type of promise-like that resolves synchronously and supports only one observer\nvar _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\nvar _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\";\n// Asynchronously call a function and send errors to recovery continuation\nfunction _catch(body, recover) {\n    try {\n        var result = body();\n    } catch (e) {\n        return recover(e);\n    }\n    if (result && result.then) {\n        return result.then(void 0, recover);\n    }\n    return result;\n}\nvar WALLETCONNECT_LOGO_SVG_URL = \"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='300px' height='185px' viewBox='0 0 300 185' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 49.3 (51167) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3EWalletConnect%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E %3Cg id='walletconnect-logo-alt' fill='%233B99FC' fill-rule='nonzero'%3E %3Cpath d='M61.4385429,36.2562612 C110.349767,-11.6319051 189.65053,-11.6319051 238.561752,36.2562612 L244.448297,42.0196786 C246.893858,44.4140867 246.893858,48.2961898 244.448297,50.690599 L224.311602,70.406102 C223.088821,71.6033071 221.106302,71.6033071 219.883521,70.406102 L211.782937,62.4749541 C177.661245,29.0669724 122.339051,29.0669724 88.2173582,62.4749541 L79.542302,70.9685592 C78.3195204,72.1657633 76.337001,72.1657633 75.1142214,70.9685592 L54.9775265,51.2530561 C52.5319653,48.8586469 52.5319653,44.9765439 54.9775265,42.5821357 L61.4385429,36.2562612 Z M280.206339,77.0300061 L298.128036,94.5769031 C300.573585,96.9713 300.573599,100.85338 298.128067,103.247793 L217.317896,182.368927 C214.872352,184.763353 210.907314,184.76338 208.461736,182.368989 C208.461726,182.368979 208.461714,182.368967 208.461704,182.368957 L151.107561,126.214385 C150.496171,125.615783 149.504911,125.615783 148.893521,126.214385 C148.893517,126.214389 148.893514,126.214393 148.89351,126.214396 L91.5405888,182.368927 C89.095052,184.763359 85.1300133,184.763399 82.6844276,182.369014 C82.6844133,182.369 82.684398,182.368986 82.6843827,182.36897 L1.87196327,103.246785 C-0.573596939,100.852377 -0.573596939,96.9702735 1.87196327,94.5758653 L19.7936929,77.028998 C22.2392531,74.6345898 26.2042918,74.6345898 28.6498531,77.028998 L86.0048306,133.184355 C86.6162214,133.782957 87.6074796,133.782957 88.2188704,133.184355 C88.2188796,133.184346 88.2188878,133.184338 88.2188969,133.184331 L145.571,77.028998 C148.016505,74.6345347 151.981544,74.6344449 154.427161,77.028798 C154.427195,77.0288316 154.427229,77.0288653 154.427262,77.028899 L211.782164,133.184331 C212.393554,133.782932 213.384814,133.782932 213.996204,133.184331 L271.350179,77.0300061 C273.79574,74.6355969 277.760778,74.6355969 280.206339,77.0300061 Z' id='WalletConnect'%3E%3C/path%3E %3C/g%3E %3C/g%3E %3C/svg%3E\";\nvar WALLETCONNECT_HEADER_TEXT = \"WalletConnect\";\nvar ANIMATION_DURATION = 300;\nvar DEFAULT_BUTTON_COLOR = \"rgb(64, 153, 255)\";\nvar WALLETCONNECT_WRAPPER_ID = \"walletconnect-wrapper\";\nvar WALLETCONNECT_STYLE_ID = \"walletconnect-style-sheet\";\nvar WALLETCONNECT_MODAL_ID = \"walletconnect-qrcode-modal\";\nvar WALLETCONNECT_CLOSE_BUTTON_ID = \"walletconnect-qrcode-close\";\nvar WALLETCONNECT_CTA_TEXT_ID = \"walletconnect-qrcode-text\";\nvar WALLETCONNECT_CONNECT_BUTTON_ID = \"walletconnect-connect-button\";\nfunction Header(props) {\n    return React.createElement(\"div\", {\n        className: \"walletconnect-modal__header\"\n    }, React.createElement(\"img\", {\n        src: WALLETCONNECT_LOGO_SVG_URL,\n        className: \"walletconnect-modal__headerLogo\"\n    }), React.createElement(\"p\", null, WALLETCONNECT_HEADER_TEXT), React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__wrapper\",\n        onClick: props.onClose\n    }, React.createElement(\"div\", {\n        id: WALLETCONNECT_CLOSE_BUTTON_ID,\n        className: \"walletconnect-modal__close__icon\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__line1\"\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-modal__close__line2\"\n    }))));\n}\nfunction ConnectButton(props) {\n    return React.createElement(\"a\", {\n        className: \"walletconnect-connect__button\",\n        href: props.href,\n        id: WALLETCONNECT_CONNECT_BUTTON_ID + \"-\" + props.name,\n        onClick: props.onClick,\n        rel: \"noopener noreferrer\",\n        style: {\n            backgroundColor: props.color\n        },\n        target: \"_blank\"\n    }, props.name);\n}\nvar CARET_SVG_URL = \"data:image/svg+xml,%3Csvg width='8' height='18' viewBox='0 0 8 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0.586301 0.213898C0.150354 0.552968 0.0718197 1.18124 0.41089 1.61719L5.2892 7.88931C5.57007 8.25042 5.57007 8.75608 5.2892 9.11719L0.410889 15.3893C0.071819 15.8253 0.150353 16.4535 0.586301 16.7926C1.02225 17.1317 1.65052 17.0531 1.98959 16.6172L6.86791 10.3451C7.7105 9.26174 7.7105 7.74476 6.86791 6.66143L1.98959 0.38931C1.65052 -0.0466374 1.02225 -0.125172 0.586301 0.213898Z' fill='%233C4252'/%3E %3C/svg%3E\";\nfunction WalletButton(props) {\n    var color = props.color;\n    var href = props.href;\n    var name = props.name;\n    var logo = props.logo;\n    var onClick = props.onClick;\n    return React.createElement(\"a\", {\n        className: \"walletconnect-modal__base__row\",\n        href: href,\n        onClick: onClick,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, React.createElement(\"h3\", {\n        className: \"walletconnect-modal__base__row__h3\"\n    }, name), React.createElement(\"div\", {\n        className: \"walletconnect-modal__base__row__right\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__base__row__right__app-icon\",\n        style: {\n            background: \"url('\" + logo + \"') \" + color,\n            backgroundSize: \"100%\"\n        }\n    }), React.createElement(\"img\", {\n        src: CARET_SVG_URL,\n        className: \"walletconnect-modal__base__row__right__caret\"\n    })));\n}\nfunction WalletIcon(props) {\n    var color = props.color;\n    var href = props.href;\n    var name = props.name;\n    var logo = props.logo;\n    var onClick = props.onClick;\n    var fontSize = window.innerWidth < 768 ? (name.length > 8 ? 2.5 : 2.7) + \"vw\" : \"inherit\";\n    return React.createElement(\"a\", {\n        className: \"walletconnect-connect__button__icon_anchor\",\n        href: href,\n        onClick: onClick,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-connect__button__icon\",\n        style: {\n            background: \"url('\" + logo + \"') \" + color,\n            backgroundSize: \"100%\"\n        }\n    }), React.createElement(\"div\", {\n        style: {\n            fontSize: fontSize\n        },\n        className: \"walletconnect-connect__button__text\"\n    }, name));\n}\nvar GRID_MIN_COUNT = 5;\nvar LINKS_PER_PAGE = 12;\nfunction LinkDisplay(props) {\n    var android = legacyUtils.isAndroid();\n    var ref = React.useState(\"\");\n    var input = ref[0];\n    var setInput = ref[1];\n    var ref$1 = React.useState(\"\");\n    var filter = ref$1[0];\n    var setFilter = ref$1[1];\n    var ref$2 = React.useState(1);\n    var page = ref$2[0];\n    var setPage = ref$2[1];\n    var links = filter ? props.links.filter(function(link) {\n        return link.name.toLowerCase().includes(filter.toLowerCase());\n    }) : props.links;\n    var errorMessage = props.errorMessage;\n    var grid = filter || links.length > GRID_MIN_COUNT;\n    var pages = Math.ceil(links.length / LINKS_PER_PAGE);\n    var range = [\n        (page - 1) * LINKS_PER_PAGE + 1,\n        page * LINKS_PER_PAGE\n    ];\n    var pageLinks = links.length ? links.filter(function(_, index) {\n        return index + 1 >= range[0] && index + 1 <= range[1];\n    }) : [];\n    var hasPaging = !!(!android && pages > 1);\n    var filterTimeout = undefined;\n    function handleInput(e) {\n        setInput(e.target.value);\n        clearTimeout(filterTimeout);\n        if (e.target.value) {\n            filterTimeout = setTimeout(function() {\n                setFilter(e.target.value);\n                setPage(1);\n            }, 1000);\n        } else {\n            setInput(\"\");\n            setFilter(\"\");\n            setPage(1);\n        }\n    }\n    return React.createElement(\"div\", null, React.createElement(\"p\", {\n        id: WALLETCONNECT_CTA_TEXT_ID,\n        className: \"walletconnect-qrcode__text\"\n    }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet), !android && React.createElement(\"input\", {\n        className: \"walletconnect-search__input\",\n        placeholder: \"Search\",\n        value: input,\n        onChange: handleInput\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-connect__buttons__wrapper\" + (android ? \"__android\" : grid && links.length ? \"__wrap\" : \"\")\n    }, !android ? pageLinks.length ? pageLinks.map(function(entry) {\n        var color = entry.color;\n        var name = entry.name;\n        var shortName = entry.shortName;\n        var logo = entry.logo;\n        var href = legacyUtils.formatIOSMobile(props.uri, entry);\n        var handleClickIOS = React.useCallback(function() {\n            legacyUtils.saveMobileLinkInfo({\n                name: name,\n                href: href\n            });\n        }, [\n            pageLinks\n        ]);\n        return !grid ? React.createElement(WalletButton, {\n            color: color,\n            href: href,\n            name: name,\n            logo: logo,\n            onClick: handleClickIOS\n        }) : React.createElement(WalletIcon, {\n            color: color,\n            href: href,\n            name: shortName || name,\n            logo: logo,\n            onClick: handleClickIOS\n        });\n    }) : React.createElement(React.Fragment, null, React.createElement(\"p\", null, errorMessage.length ? props.errorMessage : !!props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading)) : React.createElement(ConnectButton, {\n        name: props.text.connect,\n        color: DEFAULT_BUTTON_COLOR,\n        href: props.uri,\n        onClick: React.useCallback(function() {\n            legacyUtils.saveMobileLinkInfo({\n                name: \"Unknown\",\n                href: props.uri\n            });\n        }, [])\n    })), hasPaging && React.createElement(\"div\", {\n        className: \"walletconnect-modal__footer\"\n    }, Array(pages).fill(0).map(function(_, index) {\n        var pageNumber = index + 1;\n        var selected = page === pageNumber;\n        return React.createElement(\"a\", {\n            style: {\n                margin: \"auto 10px\",\n                fontWeight: selected ? \"bold\" : \"normal\"\n            },\n            onClick: function() {\n                return setPage(pageNumber);\n            }\n        }, pageNumber);\n    })));\n}\nfunction Notification(props) {\n    var show = !!props.message.trim();\n    return React.createElement(\"div\", {\n        className: \"walletconnect-qrcode__notification\" + (show ? \" notification__show\" : \"\")\n    }, props.message);\n}\nvar formatQRCodeImage = function(data) {\n    try {\n        var result = \"\";\n        return Promise.resolve(QRCode.toString(data, {\n            margin: 0,\n            type: \"svg\"\n        })).then(function(dataString) {\n            if (typeof dataString === \"string\") {\n                result = dataString.replace(\"<svg\", '<svg class=\"walletconnect-qrcode__image\"');\n            }\n            return result;\n        });\n    } catch (e) {\n        return Promise.reject(e);\n    }\n};\nfunction QRCodeDisplay(props) {\n    var ref = React.useState(\"\");\n    var notification = ref[0];\n    var setNotification = ref[1];\n    var ref$1 = React.useState(\"\");\n    var svg = ref$1[0];\n    var setSvg = ref$1[1];\n    React.useEffect(function() {\n        try {\n            return Promise.resolve(formatQRCodeImage(props.uri)).then(function(_formatQRCodeImage) {\n                setSvg(_formatQRCodeImage);\n            });\n        } catch (e) {\n            Promise.reject(e);\n        }\n    }, []);\n    var copyToClipboard = function() {\n        var success = copy(props.uri);\n        if (success) {\n            setNotification(props.text.copied_to_clipboard);\n            setInterval(function() {\n                return setNotification(\"\");\n            }, 1200);\n        } else {\n            setNotification(\"Error\");\n            setInterval(function() {\n                return setNotification(\"\");\n            }, 1200);\n        }\n    };\n    return React.createElement(\"div\", null, React.createElement(\"p\", {\n        id: WALLETCONNECT_CTA_TEXT_ID,\n        className: \"walletconnect-qrcode__text\"\n    }, props.text.scan_qrcode_with_wallet), React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n            __html: svg\n        }\n    }), React.createElement(\"div\", {\n        className: \"walletconnect-modal__footer\"\n    }, React.createElement(\"a\", {\n        onClick: copyToClipboard\n    }, props.text.copy_to_clipboard)), React.createElement(Notification, {\n        message: notification\n    }));\n}\nfunction Modal(props) {\n    var android = legacyUtils.isAndroid();\n    var mobile = legacyUtils.isMobile();\n    var whitelist = mobile ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks ? props.qrcodeModalOptions.mobileLinks : undefined : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks ? props.qrcodeModalOptions.desktopLinks : undefined;\n    var ref = React.useState(false);\n    var loading = ref[0];\n    var setLoading = ref[1];\n    var ref$1 = React.useState(false);\n    var fetched = ref$1[0];\n    var setFetched = ref$1[1];\n    var ref$2 = React.useState(!mobile);\n    var displayQRCode = ref$2[0];\n    var setDisplayQRCode = ref$2[1];\n    var displayProps = {\n        mobile: mobile,\n        text: props.text,\n        uri: props.uri,\n        qrcodeModalOptions: props.qrcodeModalOptions\n    };\n    var ref$3 = React.useState(\"\");\n    var singleLinkHref = ref$3[0];\n    var setSingleLinkHref = ref$3[1];\n    var ref$4 = React.useState(false);\n    var hasSingleLink = ref$4[0];\n    var setHasSingleLink = ref$4[1];\n    var ref$5 = React.useState([]);\n    var links = ref$5[0];\n    var setLinks = ref$5[1];\n    var ref$6 = React.useState(\"\");\n    var errorMessage = ref$6[0];\n    var setErrorMessage = ref$6[1];\n    var getLinksIfNeeded = function() {\n        if (fetched || loading || whitelist && !whitelist.length || links.length > 0) {\n            return;\n        }\n        React.useEffect(function() {\n            var initLinks = function() {\n                try {\n                    if (android) {\n                        return Promise.resolve();\n                    }\n                    setLoading(true);\n                    var _temp = _catch(function() {\n                        var url = props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl ? props.qrcodeModalOptions.registryUrl : legacyUtils.getWalletRegistryUrl();\n                        return Promise.resolve(fetch(url)).then(function(registryResponse) {\n                            return Promise.resolve(registryResponse.json()).then(function(_registryResponse$jso) {\n                                var registry = _registryResponse$jso.listings;\n                                var platform = mobile ? \"mobile\" : \"desktop\";\n                                var _links = legacyUtils.getMobileLinkRegistry(legacyUtils.formatMobileRegistry(registry, platform), whitelist);\n                                setLoading(false);\n                                setFetched(true);\n                                setErrorMessage(!_links.length ? props.text.no_supported_wallets : \"\");\n                                setLinks(_links);\n                                var hasSingleLink = _links.length === 1;\n                                if (hasSingleLink) {\n                                    setSingleLinkHref(legacyUtils.formatIOSMobile(props.uri, _links[0]));\n                                    setDisplayQRCode(true);\n                                }\n                                setHasSingleLink(hasSingleLink);\n                            });\n                        });\n                    }, function(e) {\n                        setLoading(false);\n                        setFetched(true);\n                        setErrorMessage(props.text.something_went_wrong);\n                        console.error(e);\n                    });\n                    return Promise.resolve(_temp && _temp.then ? _temp.then(function() {}) : void 0);\n                } catch (e) {\n                    return Promise.reject(e);\n                }\n            };\n            initLinks();\n        });\n    };\n    getLinksIfNeeded();\n    var rightSelected = mobile ? displayQRCode : !displayQRCode;\n    return React.createElement(\"div\", {\n        id: WALLETCONNECT_MODAL_ID,\n        className: \"walletconnect-qrcode__base animated fadeIn\"\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__base\"\n    }, React.createElement(Header, {\n        onClose: props.onClose\n    }), hasSingleLink && displayQRCode ? React.createElement(\"div\", {\n        className: \"walletconnect-modal__single_wallet\"\n    }, React.createElement(\"a\", {\n        onClick: function() {\n            return legacyUtils.saveMobileLinkInfo({\n                name: links[0].name,\n                href: singleLinkHref\n            });\n        },\n        href: singleLinkHref,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\"\n    }, props.text.connect_with + \" \" + (hasSingleLink ? links[0].name : \"\") + \" ›\")) : android || loading || !loading && links.length ? React.createElement(\"div\", {\n        className: \"walletconnect-modal__mobile__toggle\" + (rightSelected ? \" right__selected\" : \"\")\n    }, React.createElement(\"div\", {\n        className: \"walletconnect-modal__mobile__toggle_selector\"\n    }), mobile ? React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(false), getLinksIfNeeded();\n        }\n    }, props.text.mobile), React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(true);\n        }\n    }, props.text.qrcode)) : React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(true);\n        }\n    }, props.text.qrcode), React.createElement(\"a\", {\n        onClick: function() {\n            return setDisplayQRCode(false), getLinksIfNeeded();\n        }\n    }, props.text.desktop))) : null, React.createElement(\"div\", null, displayQRCode || !android && !loading && !links.length ? React.createElement(QRCodeDisplay, Object.assign({}, displayProps)) : React.createElement(LinkDisplay, Object.assign({}, displayProps, {\n        links: links,\n        errorMessage: errorMessage\n    })))));\n}\nvar de = {\n    choose_preferred_wallet: \"W\\xe4hle bevorzugte Wallet\",\n    connect_mobile_wallet: \"Verbinde mit Mobile Wallet\",\n    scan_qrcode_with_wallet: \"Scanne den QR-code mit einer WalletConnect kompatiblen Wallet\",\n    connect: \"Verbinden\",\n    qrcode: \"QR-Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"In die Zwischenablage kopieren\",\n    copied_to_clipboard: \"In die Zwischenablage kopiert!\",\n    connect_with: \"Verbinden mit Hilfe von\",\n    loading: \"Laden...\",\n    something_went_wrong: \"Etwas ist schief gelaufen\",\n    no_supported_wallets: \"Es gibt noch keine unterst\\xfctzten Wallet\",\n    no_wallets_found: \"keine Wallet gefunden\"\n};\nvar en = {\n    choose_preferred_wallet: \"Choose your preferred wallet\",\n    connect_mobile_wallet: \"Connect to Mobile Wallet\",\n    scan_qrcode_with_wallet: \"Scan QR code with a WalletConnect-compatible wallet\",\n    connect: \"Connect\",\n    qrcode: \"QR Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copy to clipboard\",\n    copied_to_clipboard: \"Copied to clipboard!\",\n    connect_with: \"Connect with\",\n    loading: \"Loading...\",\n    something_went_wrong: \"Something went wrong\",\n    no_supported_wallets: \"There are no supported wallets yet\",\n    no_wallets_found: \"No wallets found\"\n};\nvar es = {\n    choose_preferred_wallet: \"Elige tu billetera preferida\",\n    connect_mobile_wallet: \"Conectar a billetera m\\xf3vil\",\n    scan_qrcode_with_wallet: \"Escanea el c\\xf3digo QR con una billetera compatible con WalletConnect\",\n    connect: \"Conectar\",\n    qrcode: \"C\\xf3digo QR\",\n    mobile: \"M\\xf3vil\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copiar\",\n    copied_to_clipboard: \"Copiado!\",\n    connect_with: \"Conectar mediante\",\n    loading: \"Cargando...\",\n    something_went_wrong: \"Algo sali\\xf3 mal\",\n    no_supported_wallets: \"Todav\\xeda no hay billeteras compatibles\",\n    no_wallets_found: \"No se encontraron billeteras\"\n};\nvar fr = {\n    choose_preferred_wallet: \"Choisissez votre portefeuille pr\\xe9f\\xe9r\\xe9\",\n    connect_mobile_wallet: \"Se connecter au portefeuille mobile\",\n    scan_qrcode_with_wallet: \"Scannez le QR code avec un portefeuille compatible WalletConnect\",\n    connect: \"Se connecter\",\n    qrcode: \"QR Code\",\n    mobile: \"Mobile\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copier\",\n    copied_to_clipboard: \"Copi\\xe9!\",\n    connect_with: \"Connectez-vous \\xe0 l'aide de\",\n    loading: \"Chargement...\",\n    something_went_wrong: \"Quelque chose a mal tourn\\xe9\",\n    no_supported_wallets: \"Il n'y a pas encore de portefeuilles pris en charge\",\n    no_wallets_found: \"Aucun portefeuille trouv\\xe9\"\n};\nvar ko = {\n    choose_preferred_wallet: \"원하는 지갑을 선택하세요\",\n    connect_mobile_wallet: \"모바일 지갑과 연결\",\n    scan_qrcode_with_wallet: \"WalletConnect 지원 지갑에서 QR코드를 스캔하세요\",\n    connect: \"연결\",\n    qrcode: \"QR 코드\",\n    mobile: \"모바일\",\n    desktop: \"데스크탑\",\n    copy_to_clipboard: \"클립보드에 복사\",\n    copied_to_clipboard: \"클립보드에 복사되었습니다!\",\n    connect_with: \"와 연결하다\",\n    loading: \"로드 중...\",\n    something_went_wrong: \"문제가 발생했습니다.\",\n    no_supported_wallets: \"아직 지원되는 지갑이 없습니다\",\n    no_wallets_found: \"지갑을 찾을 수 없습니다\"\n};\nvar pt = {\n    choose_preferred_wallet: \"Escolha sua carteira preferida\",\n    connect_mobile_wallet: \"Conectar-se \\xe0 carteira m\\xf3vel\",\n    scan_qrcode_with_wallet: \"Ler o c\\xf3digo QR com uma carteira compat\\xedvel com WalletConnect\",\n    connect: \"Conectar\",\n    qrcode: \"C\\xf3digo QR\",\n    mobile: \"M\\xf3vel\",\n    desktop: \"Desktop\",\n    copy_to_clipboard: \"Copiar\",\n    copied_to_clipboard: \"Copiado!\",\n    connect_with: \"Ligar por meio de\",\n    loading: \"Carregamento...\",\n    something_went_wrong: \"Algo correu mal\",\n    no_supported_wallets: \"Ainda n\\xe3o h\\xe1 carteiras suportadas\",\n    no_wallets_found: \"Nenhuma carteira encontrada\"\n};\nvar zh = {\n    choose_preferred_wallet: \"选择你的钱包\",\n    connect_mobile_wallet: \"连接至移动端钱包\",\n    scan_qrcode_with_wallet: \"使用兼容 WalletConnect 的钱包扫描二维码\",\n    connect: \"连接\",\n    qrcode: \"二维码\",\n    mobile: \"移动\",\n    desktop: \"桌面\",\n    copy_to_clipboard: \"复制到剪贴板\",\n    copied_to_clipboard: \"复制到剪贴板成功！\",\n    connect_with: \"通过以下方式连接\",\n    loading: \"正在加载...\",\n    something_went_wrong: \"出了问题\",\n    no_supported_wallets: \"目前还没有支持的钱包\",\n    no_wallets_found: \"没有找到钱包\"\n};\nvar fa = {\n    choose_preferred_wallet: \"کیف پول مورد نظر خود را انتخاب کنید\",\n    connect_mobile_wallet: \"به کیف پول موبایل وصل شوید\",\n    scan_qrcode_with_wallet: \"کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید\",\n    connect: \"اتصال\",\n    qrcode: \"کد QR\",\n    mobile: \"سیار\",\n    desktop: \"دسکتاپ\",\n    copy_to_clipboard: \"کپی به کلیپ بورد\",\n    copied_to_clipboard: \"در کلیپ بورد کپی شد!\",\n    connect_with: \"ارتباط با\",\n    loading: \"...بارگذاری\",\n    something_went_wrong: \"مشکلی پیش آمد\",\n    no_supported_wallets: \"هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد\",\n    no_wallets_found: \"هیچ کیف پولی پیدا نشد\"\n};\nvar languages = {\n    de: de,\n    en: en,\n    es: es,\n    fr: fr,\n    ko: ko,\n    pt: pt,\n    zh: zh,\n    fa: fa\n};\nfunction injectStyleSheet() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var prev = doc.getElementById(WALLETCONNECT_STYLE_ID);\n    if (prev) {\n        doc.head.removeChild(prev);\n    }\n    var style = doc.createElement(\"style\");\n    style.setAttribute(\"id\", WALLETCONNECT_STYLE_ID);\n    style.innerText = WALLETCONNECT_STYLE_SHEET;\n    doc.head.appendChild(style);\n}\nfunction renderWrapper() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var wrapper = doc.createElement(\"div\");\n    wrapper.setAttribute(\"id\", WALLETCONNECT_WRAPPER_ID);\n    doc.body.appendChild(wrapper);\n    return wrapper;\n}\nfunction triggerCloseAnimation() {\n    var doc = legacyUtils.getDocumentOrThrow();\n    var modal = doc.getElementById(WALLETCONNECT_MODAL_ID);\n    if (modal) {\n        modal.className = modal.className.replace(\"fadeIn\", \"fadeOut\");\n        setTimeout(function() {\n            var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);\n            if (wrapper) {\n                doc.body.removeChild(wrapper);\n            }\n        }, ANIMATION_DURATION);\n    }\n}\nfunction getWrappedCallback(cb) {\n    return function() {\n        triggerCloseAnimation();\n        if (cb) {\n            cb();\n        }\n    };\n}\nfunction getText() {\n    var lang = legacyUtils.getNavigatorOrThrow().language.split(\"-\")[0] || \"en\";\n    return languages[lang] || languages[\"en\"];\n}\nfunction open$1(uri, cb, qrcodeModalOptions) {\n    injectStyleSheet();\n    var wrapper = renderWrapper();\n    React.render(React.createElement(Modal, {\n        text: getText(),\n        uri: uri,\n        onClose: getWrappedCallback(cb),\n        qrcodeModalOptions: qrcodeModalOptions\n    }), wrapper);\n}\nfunction close$1() {\n    triggerCloseAnimation();\n}\nvar isNode = function() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n};\nfunction open$2(uri, cb, qrcodeModalOptions) {\n    console.log(uri);\n    if (isNode()) {\n        open(uri);\n    } else {\n        open$1(uri, cb, qrcodeModalOptions);\n    }\n}\nfunction close$2() {\n    if (isNode()) ;\n    else {\n        close$1();\n    }\n}\nvar index = {\n    open: open$2,\n    close: close$2\n};\nmodule.exports = index; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/browser.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/browser.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const canPromise = __webpack_require__(/*! ./can-promise */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/can-promise.js\");\nconst QRCode = __webpack_require__(/*! ./core/qrcode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/qrcode.js\");\nconst CanvasRenderer = __webpack_require__(/*! ./renderer/canvas */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/canvas.js\");\nconst SvgRenderer = __webpack_require__(/*! ./renderer/svg-tag.js */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg-tag.js\");\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n    const args = [].slice.call(arguments, 1);\n    const argsNum = args.length;\n    const isLastArgCb = typeof args[argsNum - 1] === \"function\";\n    if (!isLastArgCb && !canPromise()) {\n        throw new Error(\"Callback required as last argument\");\n    }\n    if (isLastArgCb) {\n        if (argsNum < 2) {\n            throw new Error(\"Too few arguments provided\");\n        }\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        } else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === \"undefined\") {\n                cb = opts;\n                opts = undefined;\n            } else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    } else {\n        if (argsNum < 1) {\n            throw new Error(\"Too few arguments provided\");\n        }\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        } else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function(resolve, reject) {\n            try {\n                const data = QRCode.create(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        const data = QRCode.create(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    } catch (e) {\n        cb(e);\n    }\n}\nexports.create = QRCode.create;\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function(data, _, opts) {\n    return SvgRenderer.render(data, opts);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUNBLE1BQU1BLGFBQWFDLG1CQUFPQSxDQUFDO0FBRTNCLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUM7QUFDL0IsTUFBTUcsY0FBY0gsbUJBQU9BLENBQUM7QUFFNUIsU0FBU0ksYUFBY0MsVUFBVSxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxFQUFFO0lBQ3ZELE1BQU1DLE9BQU8sRUFBRSxDQUFDQyxLQUFLLENBQUNDLElBQUksQ0FBQ0MsV0FBVztJQUN0QyxNQUFNQyxVQUFVSixLQUFLSyxNQUFNO0lBQzNCLE1BQU1DLGNBQWMsT0FBT04sSUFBSSxDQUFDSSxVQUFVLEVBQUUsS0FBSztJQUVqRCxJQUFJLENBQUNFLGVBQWUsQ0FBQ2pCLGNBQWM7UUFDakMsTUFBTSxJQUFJa0IsTUFBTTtJQUNsQjtJQUVBLElBQUlELGFBQWE7UUFDZixJQUFJRixVQUFVLEdBQUc7WUFDZixNQUFNLElBQUlHLE1BQU07UUFDbEI7UUFFQSxJQUFJSCxZQUFZLEdBQUc7WUFDakJMLEtBQUtGO1lBQ0xBLE9BQU9EO1lBQ1BBLFNBQVNFLE9BQU9VO1FBQ2xCLE9BQU8sSUFBSUosWUFBWSxHQUFHO1lBQ3hCLElBQUlSLE9BQU9hLFVBQVUsSUFBSSxPQUFPVixPQUFPLGFBQWE7Z0JBQ2xEQSxLQUFLRDtnQkFDTEEsT0FBT1U7WUFDVCxPQUFPO2dCQUNMVCxLQUFLRDtnQkFDTEEsT0FBT0Q7Z0JBQ1BBLE9BQU9EO2dCQUNQQSxTQUFTWTtZQUNYO1FBQ0Y7SUFDRixPQUFPO1FBQ0wsSUFBSUosVUFBVSxHQUFHO1lBQ2YsTUFBTSxJQUFJRyxNQUFNO1FBQ2xCO1FBRUEsSUFBSUgsWUFBWSxHQUFHO1lBQ2pCUCxPQUFPRDtZQUNQQSxTQUFTRSxPQUFPVTtRQUNsQixPQUFPLElBQUlKLFlBQVksS0FBSyxDQUFDUixPQUFPYSxVQUFVLEVBQUU7WUFDOUNYLE9BQU9EO1lBQ1BBLE9BQU9EO1lBQ1BBLFNBQVNZO1FBQ1g7UUFFQSxPQUFPLElBQUlFLFFBQVEsU0FBVUMsT0FBTyxFQUFFQyxNQUFNO1lBQzFDLElBQUk7Z0JBQ0YsTUFBTUMsT0FBT3RCLE9BQU91QixNQUFNLENBQUNqQixNQUFNQztnQkFDakNhLFFBQVFoQixXQUFXa0IsTUFBTWpCLFFBQVFFO1lBQ25DLEVBQUUsT0FBT2lCLEdBQUc7Z0JBQ1ZILE9BQU9HO1lBQ1Q7UUFDRjtJQUNGO0lBRUEsSUFBSTtRQUNGLE1BQU1GLE9BQU90QixPQUFPdUIsTUFBTSxDQUFDakIsTUFBTUM7UUFDakNDLEdBQUcsTUFBTUosV0FBV2tCLE1BQU1qQixRQUFRRTtJQUNwQyxFQUFFLE9BQU9pQixHQUFHO1FBQ1ZoQixHQUFHZ0I7SUFDTDtBQUNGO0FBRUFDLGNBQWMsR0FBR3pCLE9BQU91QixNQUFNO0FBQzlCRSxnQkFBZ0IsR0FBR3RCLGFBQWF3QixJQUFJLENBQUMsTUFBTTFCLGVBQWUyQixNQUFNO0FBQ2hFSCxpQkFBaUIsR0FBR3RCLGFBQWF3QixJQUFJLENBQUMsTUFBTTFCLGVBQWU2QixlQUFlO0FBRTFFLG9CQUFvQjtBQUNwQkwsZ0JBQWdCLEdBQUd0QixhQUFhd0IsSUFBSSxDQUFDLE1BQU0sU0FBVUwsSUFBSSxFQUFFVSxDQUFDLEVBQUV6QixJQUFJO0lBQ2hFLE9BQU9MLFlBQVkwQixNQUFNLENBQUNOLE1BQU1mO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2Jyb3dzZXIuanM/Zjk1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IGNhblByb21pc2UgPSByZXF1aXJlKCcuL2Nhbi1wcm9taXNlJylcblxuY29uc3QgUVJDb2RlID0gcmVxdWlyZSgnLi9jb3JlL3FyY29kZScpXG5jb25zdCBDYW52YXNSZW5kZXJlciA9IHJlcXVpcmUoJy4vcmVuZGVyZXIvY2FudmFzJylcbmNvbnN0IFN2Z1JlbmRlcmVyID0gcmVxdWlyZSgnLi9yZW5kZXJlci9zdmctdGFnLmpzJylcblxuZnVuY3Rpb24gcmVuZGVyQ2FudmFzIChyZW5kZXJGdW5jLCBjYW52YXMsIHRleHQsIG9wdHMsIGNiKSB7XG4gIGNvbnN0IGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSlcbiAgY29uc3QgYXJnc051bSA9IGFyZ3MubGVuZ3RoXG4gIGNvbnN0IGlzTGFzdEFyZ0NiID0gdHlwZW9mIGFyZ3NbYXJnc051bSAtIDFdID09PSAnZnVuY3Rpb24nXG5cbiAgaWYgKCFpc0xhc3RBcmdDYiAmJiAhY2FuUHJvbWlzZSgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYWxsYmFjayByZXF1aXJlZCBhcyBsYXN0IGFyZ3VtZW50JylcbiAgfVxuXG4gIGlmIChpc0xhc3RBcmdDYikge1xuICAgIGlmIChhcmdzTnVtIDwgMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb28gZmV3IGFyZ3VtZW50cyBwcm92aWRlZCcpXG4gICAgfVxuXG4gICAgaWYgKGFyZ3NOdW0gPT09IDIpIHtcbiAgICAgIGNiID0gdGV4dFxuICAgICAgdGV4dCA9IGNhbnZhc1xuICAgICAgY2FudmFzID0gb3B0cyA9IHVuZGVmaW5lZFxuICAgIH0gZWxzZSBpZiAoYXJnc051bSA9PT0gMykge1xuICAgICAgaWYgKGNhbnZhcy5nZXRDb250ZXh0ICYmIHR5cGVvZiBjYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY2IgPSBvcHRzXG4gICAgICAgIG9wdHMgPSB1bmRlZmluZWRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNiID0gb3B0c1xuICAgICAgICBvcHRzID0gdGV4dFxuICAgICAgICB0ZXh0ID0gY2FudmFzXG4gICAgICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoYXJnc051bSA8IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVG9vIGZldyBhcmd1bWVudHMgcHJvdmlkZWQnKVxuICAgIH1cblxuICAgIGlmIChhcmdzTnVtID09PSAxKSB7XG4gICAgICB0ZXh0ID0gY2FudmFzXG4gICAgICBjYW52YXMgPSBvcHRzID0gdW5kZWZpbmVkXG4gICAgfSBlbHNlIGlmIChhcmdzTnVtID09PSAyICYmICFjYW52YXMuZ2V0Q29udGV4dCkge1xuICAgICAgb3B0cyA9IHRleHRcbiAgICAgIHRleHQgPSBjYW52YXNcbiAgICAgIGNhbnZhcyA9IHVuZGVmaW5lZFxuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBkYXRhID0gUVJDb2RlLmNyZWF0ZSh0ZXh0LCBvcHRzKVxuICAgICAgICByZXNvbHZlKHJlbmRlckZ1bmMoZGF0YSwgY2FudmFzLCBvcHRzKSlcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgZGF0YSA9IFFSQ29kZS5jcmVhdGUodGV4dCwgb3B0cylcbiAgICBjYihudWxsLCByZW5kZXJGdW5jKGRhdGEsIGNhbnZhcywgb3B0cykpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjYihlKVxuICB9XG59XG5cbmV4cG9ydHMuY3JlYXRlID0gUVJDb2RlLmNyZWF0ZVxuZXhwb3J0cy50b0NhbnZhcyA9IHJlbmRlckNhbnZhcy5iaW5kKG51bGwsIENhbnZhc1JlbmRlcmVyLnJlbmRlcilcbmV4cG9ydHMudG9EYXRhVVJMID0gcmVuZGVyQ2FudmFzLmJpbmQobnVsbCwgQ2FudmFzUmVuZGVyZXIucmVuZGVyVG9EYXRhVVJMKVxuXG4vLyBvbmx5IHN2ZyBmb3Igbm93LlxuZXhwb3J0cy50b1N0cmluZyA9IHJlbmRlckNhbnZhcy5iaW5kKG51bGwsIGZ1bmN0aW9uIChkYXRhLCBfLCBvcHRzKSB7XG4gIHJldHVybiBTdmdSZW5kZXJlci5yZW5kZXIoZGF0YSwgb3B0cylcbn0pXG4iXSwibmFtZXMiOlsiY2FuUHJvbWlzZSIsInJlcXVpcmUiLCJRUkNvZGUiLCJDYW52YXNSZW5kZXJlciIsIlN2Z1JlbmRlcmVyIiwicmVuZGVyQ2FudmFzIiwicmVuZGVyRnVuYyIsImNhbnZhcyIsInRleHQiLCJvcHRzIiwiY2IiLCJhcmdzIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwiYXJnc051bSIsImxlbmd0aCIsImlzTGFzdEFyZ0NiIiwiRXJyb3IiLCJ1bmRlZmluZWQiLCJnZXRDb250ZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJkYXRhIiwiY3JlYXRlIiwiZSIsImV4cG9ydHMiLCJ0b0NhbnZhcyIsImJpbmQiLCJyZW5kZXIiLCJ0b0RhdGFVUkwiLCJyZW5kZXJUb0RhdGFVUkwiLCJ0b1N0cmluZyIsIl8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/browser.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/can-promise.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/can-promise.js ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
eval("// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function() {\n    return typeof Promise === \"function\" && Promise.prototype && Promise.prototype.then;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jYW4tcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSwwRUFBMEU7QUFDMUUsMEJBQTBCO0FBQzFCLG9EQUFvRDs7QUFFcERBLE9BQU9DLE9BQU8sR0FBRztJQUNmLE9BQU8sT0FBT0MsWUFBWSxjQUFjQSxRQUFRQyxTQUFTLElBQUlELFFBQVFDLFNBQVMsQ0FBQ0MsSUFBSTtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jYW4tcHJvbWlzZS5qcz9lYmNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNhbi1wcm9taXNlIGhhcyBhIGNyYXNoIGluIHNvbWUgdmVyc2lvbnMgb2YgcmVhY3QgbmF0aXZlIHRoYXQgZG9udCBoYXZlXG4vLyBzdGFuZGFyZCBnbG9iYWwgb2JqZWN0c1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NvbGRhaXIvbm9kZS1xcmNvZGUvaXNzdWVzLzE1N1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nICYmIFByb21pc2UucHJvdG90eXBlICYmIFByb21pc2UucHJvdG90eXBlLnRoZW5cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiUHJvbWlzZSIsInByb3RvdHlwZSIsInRoZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/can-promise.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alignment-pattern.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alignment-pattern.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */ const getSymbolSize = (__webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\").getSymbolSize);\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */ exports.getRowColCoords = function getRowColCoords(version) {\n    if (version === 1) return [];\n    const posCount = Math.floor(version / 7) + 2;\n    const size = getSymbolSize(version);\n    const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n    const positions = [\n        size - 7\n    ] // Last coord is always (size - 7)\n    ;\n    for(let i = 1; i < posCount - 1; i++){\n        positions[i] = positions[i - 1] - intervals;\n    }\n    positions.push(6) // First coord is always 6\n    ;\n    return positions.reverse();\n};\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */ exports.getPositions = function getPositions(version) {\n    const coords = [];\n    const pos = exports.getRowColCoords(version);\n    const posLength = pos.length;\n    for(let i = 0; i < posLength; i++){\n        for(let j = 0; j < posLength; j++){\n            // Skip if position is occupied by finder patterns\n            if (i === 0 && j === 0 || // top-left\n            i === 0 && j === posLength - 1 || // bottom-left\n            i === posLength - 1 && j === 0) {\n                continue;\n            }\n            coords.push([\n                pos[i],\n                pos[j]\n            ]);\n        }\n    }\n    return coords;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2FsaWdubWVudC1wYXR0ZXJuLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDLEdBRUQsTUFBTUEsZ0JBQWdCQyw2SUFBZ0M7QUFFdEQ7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNEQyx1QkFBdUIsR0FBRyxTQUFTQyxnQkFBaUJDLE9BQU87SUFDekQsSUFBSUEsWUFBWSxHQUFHLE9BQU8sRUFBRTtJQUU1QixNQUFNQyxXQUFXQyxLQUFLQyxLQUFLLENBQUNILFVBQVUsS0FBSztJQUMzQyxNQUFNSSxPQUFPUixjQUFjSTtJQUMzQixNQUFNSyxZQUFZRCxTQUFTLE1BQU0sS0FBS0YsS0FBS0ksSUFBSSxDQUFDLENBQUNGLE9BQU8sRUFBQyxJQUFNLEtBQUlILFdBQVcsTUFBTTtJQUNwRixNQUFNTSxZQUFZO1FBQUNILE9BQU87S0FBRSxDQUFDLGtDQUFrQzs7SUFFL0QsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUlQLFdBQVcsR0FBR08sSUFBSztRQUNyQ0QsU0FBUyxDQUFDQyxFQUFFLEdBQUdELFNBQVMsQ0FBQ0MsSUFBSSxFQUFFLEdBQUdIO0lBQ3BDO0lBRUFFLFVBQVVFLElBQUksQ0FBQyxHQUFHLDBCQUEwQjs7SUFFNUMsT0FBT0YsVUFBVUcsT0FBTztBQUMxQjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBQ0RaLG9CQUFvQixHQUFHLFNBQVNhLGFBQWNYLE9BQU87SUFDbkQsTUFBTVksU0FBUyxFQUFFO0lBQ2pCLE1BQU1DLE1BQU1mLFFBQVFDLGVBQWUsQ0FBQ0M7SUFDcEMsTUFBTWMsWUFBWUQsSUFBSUUsTUFBTTtJQUU1QixJQUFLLElBQUlQLElBQUksR0FBR0EsSUFBSU0sV0FBV04sSUFBSztRQUNsQyxJQUFLLElBQUlRLElBQUksR0FBR0EsSUFBSUYsV0FBV0UsSUFBSztZQUNsQyxrREFBa0Q7WUFDbEQsSUFBSSxNQUFPLEtBQUtBLE1BQU0sS0FBTSxXQUFXO1lBQ2xDUixNQUFNLEtBQUtRLE1BQU1GLFlBQVksS0FBTSxjQUFjO1lBQ2pETixNQUFNTSxZQUFZLEtBQUtFLE1BQU0sR0FBSTtnQkFDcEM7WUFDRjtZQUVBSixPQUFPSCxJQUFJLENBQUM7Z0JBQUNJLEdBQUcsQ0FBQ0wsRUFBRTtnQkFBRUssR0FBRyxDQUFDRyxFQUFFO2FBQUM7UUFDOUI7SUFDRjtJQUVBLE9BQU9KO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktbW9kYWwvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9hbGlnbm1lbnQtcGF0dGVybi5qcz9iYzlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWxpZ25tZW50IHBhdHRlcm4gYXJlIGZpeGVkIHJlZmVyZW5jZSBwYXR0ZXJuIGluIGRlZmluZWQgcG9zaXRpb25zXG4gKiBpbiBhIG1hdHJpeCBzeW1ib2xvZ3ksIHdoaWNoIGVuYWJsZXMgdGhlIGRlY29kZSBzb2Z0d2FyZSB0byByZS1zeW5jaHJvbmlzZVxuICogdGhlIGNvb3JkaW5hdGUgbWFwcGluZyBvZiB0aGUgaW1hZ2UgbW9kdWxlcyBpbiB0aGUgZXZlbnQgb2YgbW9kZXJhdGUgYW1vdW50c1xuICogb2YgZGlzdG9ydGlvbiBvZiB0aGUgaW1hZ2UuXG4gKlxuICogQWxpZ25tZW50IHBhdHRlcm5zIGFyZSBwcmVzZW50IG9ubHkgaW4gUVIgQ29kZSBzeW1ib2xzIG9mIHZlcnNpb24gMiBvciBsYXJnZXJcbiAqIGFuZCB0aGVpciBudW1iZXIgZGVwZW5kcyBvbiB0aGUgc3ltYm9sIHZlcnNpb24uXG4gKi9cblxuY29uc3QgZ2V0U3ltYm9sU2l6ZSA9IHJlcXVpcmUoJy4vdXRpbHMnKS5nZXRTeW1ib2xTaXplXG5cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSByb3cvY29sdW1uIGNvb3JkaW5hdGVzIG9mIHRoZSBjZW50ZXIgbW9kdWxlIG9mIGVhY2ggYWxpZ25tZW50IHBhdHRlcm5cbiAqIGZvciB0aGUgc3BlY2lmaWVkIFFSIENvZGUgdmVyc2lvbi5cbiAqXG4gKiBUaGUgYWxpZ25tZW50IHBhdHRlcm5zIGFyZSBwb3NpdGlvbmVkIHN5bW1ldHJpY2FsbHkgb24gZWl0aGVyIHNpZGUgb2YgdGhlIGRpYWdvbmFsXG4gKiBydW5uaW5nIGZyb20gdGhlIHRvcCBsZWZ0IGNvcm5lciBvZiB0aGUgc3ltYm9sIHRvIHRoZSBib3R0b20gcmlnaHQgY29ybmVyLlxuICpcbiAqIFNpbmNlIHBvc2l0aW9ucyBhcmUgc2ltbWV0cmljYWwgb25seSBoYWxmIG9mIHRoZSBjb29yZGluYXRlcyBhcmUgcmV0dXJuZWQuXG4gKiBFYWNoIGl0ZW0gb2YgdGhlIGFycmF5IHdpbGwgcmVwcmVzZW50IGluIHR1cm4gdGhlIHggYW5kIHkgY29vcmRpbmF0ZS5cbiAqIEBzZWUge0BsaW5rIGdldFBvc2l0aW9uc31cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHZlcnNpb24gUVIgQ29kZSB2ZXJzaW9uXG4gKiBAcmV0dXJuIHtBcnJheX0gICAgICAgICAgQXJyYXkgb2YgY29vcmRpbmF0ZVxuICovXG5leHBvcnRzLmdldFJvd0NvbENvb3JkcyA9IGZ1bmN0aW9uIGdldFJvd0NvbENvb3JkcyAodmVyc2lvbikge1xuICBpZiAodmVyc2lvbiA9PT0gMSkgcmV0dXJuIFtdXG5cbiAgY29uc3QgcG9zQ291bnQgPSBNYXRoLmZsb29yKHZlcnNpb24gLyA3KSArIDJcbiAgY29uc3Qgc2l6ZSA9IGdldFN5bWJvbFNpemUodmVyc2lvbilcbiAgY29uc3QgaW50ZXJ2YWxzID0gc2l6ZSA9PT0gMTQ1ID8gMjYgOiBNYXRoLmNlaWwoKHNpemUgLSAxMykgLyAoMiAqIHBvc0NvdW50IC0gMikpICogMlxuICBjb25zdCBwb3NpdGlvbnMgPSBbc2l6ZSAtIDddIC8vIExhc3QgY29vcmQgaXMgYWx3YXlzIChzaXplIC0gNylcblxuICBmb3IgKGxldCBpID0gMTsgaSA8IHBvc0NvdW50IC0gMTsgaSsrKSB7XG4gICAgcG9zaXRpb25zW2ldID0gcG9zaXRpb25zW2kgLSAxXSAtIGludGVydmFsc1xuICB9XG5cbiAgcG9zaXRpb25zLnB1c2goNikgLy8gRmlyc3QgY29vcmQgaXMgYWx3YXlzIDZcblxuICByZXR1cm4gcG9zaXRpb25zLnJldmVyc2UoKVxufVxuXG4vKipcbiAqIFJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgcG9zaXRpb25zIG9mIGVhY2ggYWxpZ25tZW50IHBhdHRlcm4uXG4gKiBFYWNoIGFycmF5J3MgZWxlbWVudCByZXByZXNlbnQgdGhlIGNlbnRlciBwb2ludCBvZiB0aGUgcGF0dGVybiBhcyAoeCwgeSkgY29vcmRpbmF0ZXNcbiAqXG4gKiBDb29yZGluYXRlcyBhcmUgY2FsY3VsYXRlZCBleHBhbmRpbmcgdGhlIHJvdy9jb2x1bW4gY29vcmRpbmF0ZXMgcmV0dXJuZWQgYnkge0BsaW5rIGdldFJvd0NvbENvb3Jkc31cbiAqIGFuZCBmaWx0ZXJpbmcgb3V0IHRoZSBpdGVtcyB0aGF0IG92ZXJsYXBzIHdpdGggZmluZGVyIHBhdHRlcm5cbiAqXG4gKiBAZXhhbXBsZVxuICogRm9yIGEgVmVyc2lvbiA3IHN5bWJvbCB7QGxpbmsgZ2V0Um93Q29sQ29vcmRzfSByZXR1cm5zIHZhbHVlcyA2LCAyMiBhbmQgMzguXG4gKiBUaGUgYWxpZ25tZW50IHBhdHRlcm5zLCB0aGVyZWZvcmUsIGFyZSB0byBiZSBjZW50ZXJlZCBvbiAocm93LCBjb2x1bW4pXG4gKiBwb3NpdGlvbnMgKDYsMjIpLCAoMjIsNiksICgyMiwyMiksICgyMiwzOCksICgzOCwyMiksICgzOCwzOCkuXG4gKiBOb3RlIHRoYXQgdGhlIGNvb3JkaW5hdGVzICg2LDYpLCAoNiwzOCksICgzOCw2KSBhcmUgb2NjdXBpZWQgYnkgZmluZGVyIHBhdHRlcm5zXG4gKiBhbmQgYXJlIG5vdCB0aGVyZWZvcmUgdXNlZCBmb3IgYWxpZ25tZW50IHBhdHRlcm5zLlxuICpcbiAqIGxldCBwb3MgPSBnZXRQb3NpdGlvbnMoNylcbiAqIC8vIFtbNiwyMl0sIFsyMiw2XSwgWzIyLDIyXSwgWzIyLDM4XSwgWzM4LDIyXSwgWzM4LDM4XV1cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHZlcnNpb24gUVIgQ29kZSB2ZXJzaW9uXG4gKiBAcmV0dXJuIHtBcnJheX0gICAgICAgICAgQXJyYXkgb2YgY29vcmRpbmF0ZXNcbiAqL1xuZXhwb3J0cy5nZXRQb3NpdGlvbnMgPSBmdW5jdGlvbiBnZXRQb3NpdGlvbnMgKHZlcnNpb24pIHtcbiAgY29uc3QgY29vcmRzID0gW11cbiAgY29uc3QgcG9zID0gZXhwb3J0cy5nZXRSb3dDb2xDb29yZHModmVyc2lvbilcbiAgY29uc3QgcG9zTGVuZ3RoID0gcG9zLmxlbmd0aFxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zTGVuZ3RoOyBpKyspIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHBvc0xlbmd0aDsgaisrKSB7XG4gICAgICAvLyBTa2lwIGlmIHBvc2l0aW9uIGlzIG9jY3VwaWVkIGJ5IGZpbmRlciBwYXR0ZXJuc1xuICAgICAgaWYgKChpID09PSAwICYmIGogPT09IDApIHx8IC8vIHRvcC1sZWZ0XG4gICAgICAgICAgKGkgPT09IDAgJiYgaiA9PT0gcG9zTGVuZ3RoIC0gMSkgfHwgLy8gYm90dG9tLWxlZnRcbiAgICAgICAgICAoaSA9PT0gcG9zTGVuZ3RoIC0gMSAmJiBqID09PSAwKSkgeyAvLyB0b3AtcmlnaHRcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgY29vcmRzLnB1c2goW3Bvc1tpXSwgcG9zW2pdXSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29vcmRzXG59XG4iXSwibmFtZXMiOlsiZ2V0U3ltYm9sU2l6ZSIsInJlcXVpcmUiLCJleHBvcnRzIiwiZ2V0Um93Q29sQ29vcmRzIiwidmVyc2lvbiIsInBvc0NvdW50IiwiTWF0aCIsImZsb29yIiwic2l6ZSIsImludGVydmFscyIsImNlaWwiLCJwb3NpdGlvbnMiLCJpIiwicHVzaCIsInJldmVyc2UiLCJnZXRQb3NpdGlvbnMiLCJjb29yZHMiLCJwb3MiLCJwb3NMZW5ndGgiLCJsZW5ndGgiLCJqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alignment-pattern.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alphanumeric-data.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alphanumeric-data.js ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */ const ALPHA_NUM_CHARS = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \" \",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \"-\",\n    \".\",\n    \"/\",\n    \":\"\n];\nfunction AlphanumericData(data) {\n    this.mode = Mode.ALPHANUMERIC;\n    this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n    let i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for(i = 0; i + 2 <= this.data.length; i += 2){\n        // The character value of the first character is multiplied by 45\n        let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) {\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n};\nmodule.exports = AlphanumericData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2FscGhhbnVtZXJpYy1kYXRhLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVyQjs7Ozs7Ozs7Q0FRQyxHQUNELE1BQU1DLGtCQUFrQjtJQUN0QjtJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUM3QztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUM1RDtJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUM1RDtJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7Q0FDekM7QUFFRCxTQUFTQyxpQkFBa0JDLElBQUk7SUFDN0IsSUFBSSxDQUFDQyxJQUFJLEdBQUdMLEtBQUtNLFlBQVk7SUFDN0IsSUFBSSxDQUFDRixJQUFJLEdBQUdBO0FBQ2Q7QUFFQUQsaUJBQWlCSSxhQUFhLEdBQUcsU0FBU0EsY0FBZUMsTUFBTTtJQUM3RCxPQUFPLEtBQUtDLEtBQUtDLEtBQUssQ0FBQ0YsU0FBUyxLQUFLLElBQUtBLENBQUFBLFNBQVM7QUFDckQ7QUFFQUwsaUJBQWlCUSxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQTtJQUM5QyxPQUFPLElBQUksQ0FBQ1IsSUFBSSxDQUFDSSxNQUFNO0FBQ3pCO0FBRUFMLGlCQUFpQlEsU0FBUyxDQUFDSixhQUFhLEdBQUcsU0FBU0E7SUFDbEQsT0FBT0osaUJBQWlCSSxhQUFhLENBQUMsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE1BQU07QUFDeEQ7QUFFQUwsaUJBQWlCUSxTQUFTLENBQUNFLEtBQUssR0FBRyxTQUFTQSxNQUFPQyxTQUFTO0lBQzFELElBQUlDO0lBRUosa0VBQWtFO0lBQ2xFLHNDQUFzQztJQUN0QyxJQUFLQSxJQUFJLEdBQUdBLElBQUksS0FBSyxJQUFJLENBQUNYLElBQUksQ0FBQ0ksTUFBTSxFQUFFTyxLQUFLLEVBQUc7UUFDN0MsaUVBQWlFO1FBQ2pFLElBQUlDLFFBQVFkLGdCQUFnQmUsT0FBTyxDQUFDLElBQUksQ0FBQ2IsSUFBSSxDQUFDVyxFQUFFLElBQUk7UUFFcEQsa0VBQWtFO1FBQ2xFQyxTQUFTZCxnQkFBZ0JlLE9BQU8sQ0FBQyxJQUFJLENBQUNiLElBQUksQ0FBQ1csSUFBSSxFQUFFO1FBRWpELGlEQUFpRDtRQUNqREQsVUFBVUksR0FBRyxDQUFDRixPQUFPO0lBQ3ZCO0lBRUEsbUVBQW1FO0lBQ25FLGtGQUFrRjtJQUNsRixJQUFJLElBQUksQ0FBQ1osSUFBSSxDQUFDSSxNQUFNLEdBQUcsR0FBRztRQUN4Qk0sVUFBVUksR0FBRyxDQUFDaEIsZ0JBQWdCZSxPQUFPLENBQUMsSUFBSSxDQUFDYixJQUFJLENBQUNXLEVBQUUsR0FBRztJQUN2RDtBQUNGO0FBRUFJLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvYWxwaGFudW1lcmljLWRhdGEuanM/YTdlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNb2RlID0gcmVxdWlyZSgnLi9tb2RlJylcblxuLyoqXG4gKiBBcnJheSBvZiBjaGFyYWN0ZXJzIGF2YWlsYWJsZSBpbiBhbHBoYW51bWVyaWMgbW9kZVxuICpcbiAqIEFzIHBlciBRUiBDb2RlIHNwZWNpZmljYXRpb24sIHRvIGVhY2ggY2hhcmFjdGVyXG4gKiBpcyBhc3NpZ25lZCBhIHZhbHVlIGZyb20gMCB0byA0NCB3aGljaCBpbiB0aGlzIGNhc2UgY29pbmNpZGVzXG4gKiB3aXRoIHRoZSBhcnJheSBpbmRleFxuICpcbiAqIEB0eXBlIHtBcnJheX1cbiAqL1xuY29uc3QgQUxQSEFfTlVNX0NIQVJTID0gW1xuICAnMCcsICcxJywgJzInLCAnMycsICc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOScsXG4gICdBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJyxcbiAgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onLFxuICAnICcsICckJywgJyUnLCAnKicsICcrJywgJy0nLCAnLicsICcvJywgJzonXG5dXG5cbmZ1bmN0aW9uIEFscGhhbnVtZXJpY0RhdGEgKGRhdGEpIHtcbiAgdGhpcy5tb2RlID0gTW9kZS5BTFBIQU5VTUVSSUNcbiAgdGhpcy5kYXRhID0gZGF0YVxufVxuXG5BbHBoYW51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIDExICogTWF0aC5mbG9vcihsZW5ndGggLyAyKSArIDYgKiAobGVuZ3RoICUgMilcbn1cblxuQWxwaGFudW1lcmljRGF0YS5wcm90b3R5cGUuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gZ2V0TGVuZ3RoICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGhcbn1cblxuQWxwaGFudW1lcmljRGF0YS5wcm90b3R5cGUuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKCkge1xuICByZXR1cm4gQWxwaGFudW1lcmljRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbkFscGhhbnVtZXJpY0RhdGEucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKGJpdEJ1ZmZlcikge1xuICBsZXQgaVxuXG4gIC8vIElucHV0IGRhdGEgY2hhcmFjdGVycyBhcmUgZGl2aWRlZCBpbnRvIGdyb3VwcyBvZiB0d28gY2hhcmFjdGVyc1xuICAvLyBhbmQgZW5jb2RlZCBhcyAxMS1iaXQgYmluYXJ5IGNvZGVzLlxuICBmb3IgKGkgPSAwOyBpICsgMiA8PSB0aGlzLmRhdGEubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAvLyBUaGUgY2hhcmFjdGVyIHZhbHVlIG9mIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaXMgbXVsdGlwbGllZCBieSA0NVxuICAgIGxldCB2YWx1ZSA9IEFMUEhBX05VTV9DSEFSUy5pbmRleE9mKHRoaXMuZGF0YVtpXSkgKiA0NVxuXG4gICAgLy8gVGhlIGNoYXJhY3RlciB2YWx1ZSBvZiB0aGUgc2Vjb25kIGRpZ2l0IGlzIGFkZGVkIHRvIHRoZSBwcm9kdWN0XG4gICAgdmFsdWUgKz0gQUxQSEFfTlVNX0NIQVJTLmluZGV4T2YodGhpcy5kYXRhW2kgKyAxXSlcblxuICAgIC8vIFRoZSBzdW0gaXMgdGhlbiBzdG9yZWQgYXMgMTEtYml0IGJpbmFyeSBudW1iZXJcbiAgICBiaXRCdWZmZXIucHV0KHZhbHVlLCAxMSlcbiAgfVxuXG4gIC8vIElmIHRoZSBudW1iZXIgb2YgaW5wdXQgZGF0YSBjaGFyYWN0ZXJzIGlzIG5vdCBhIG11bHRpcGxlIG9mIHR3byxcbiAgLy8gdGhlIGNoYXJhY3RlciB2YWx1ZSBvZiB0aGUgZmluYWwgY2hhcmFjdGVyIGlzIGVuY29kZWQgYXMgYSA2LWJpdCBiaW5hcnkgbnVtYmVyLlxuICBpZiAodGhpcy5kYXRhLmxlbmd0aCAlIDIpIHtcbiAgICBiaXRCdWZmZXIucHV0KEFMUEhBX05VTV9DSEFSUy5pbmRleE9mKHRoaXMuZGF0YVtpXSksIDYpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbHBoYW51bWVyaWNEYXRhXG4iXSwibmFtZXMiOlsiTW9kZSIsInJlcXVpcmUiLCJBTFBIQV9OVU1fQ0hBUlMiLCJBbHBoYW51bWVyaWNEYXRhIiwiZGF0YSIsIm1vZGUiLCJBTFBIQU5VTUVSSUMiLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwidmFsdWUiLCJpbmRleE9mIiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alphanumeric-data.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-buffer.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-buffer.js ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\nBitBuffer.prototype = {\n    get: function(index) {\n        const bufIndex = Math.floor(index / 8);\n        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n    },\n    put: function(num, length) {\n        for(let i = 0; i < length; i++){\n            this.putBit((num >>> length - i - 1 & 1) === 1);\n        }\n    },\n    getLengthInBits: function() {\n        return this.length;\n    },\n    putBit: function(bit) {\n        const bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    }\n};\nmodule.exports = BitBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1idWZmZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBO0lBQ1AsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtJQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBRztBQUNoQjtBQUVBRixVQUFVRyxTQUFTLEdBQUc7SUFFcEJDLEtBQUssU0FBVUMsS0FBSztRQUNsQixNQUFNQyxXQUFXQyxLQUFLQyxLQUFLLENBQUNILFFBQVE7UUFDcEMsT0FBTyxDQUFDLElBQUssQ0FBQ0osTUFBTSxDQUFDSyxTQUFTLEtBQU0sSUFBSUQsUUFBUSxJQUFNLE9BQU87SUFDL0Q7SUFFQUksS0FBSyxTQUFVQyxHQUFHLEVBQUVSLE1BQU07UUFDeEIsSUFBSyxJQUFJUyxJQUFJLEdBQUdBLElBQUlULFFBQVFTLElBQUs7WUFDL0IsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBQyxRQUFVVixTQUFTUyxJQUFJLElBQU0sT0FBTztRQUNuRDtJQUNGO0lBRUFFLGlCQUFpQjtRQUNmLE9BQU8sSUFBSSxDQUFDWCxNQUFNO0lBQ3BCO0lBRUFVLFFBQVEsU0FBVUUsR0FBRztRQUNuQixNQUFNUixXQUFXQyxLQUFLQyxLQUFLLENBQUMsSUFBSSxDQUFDTixNQUFNLEdBQUc7UUFDMUMsSUFBSSxJQUFJLENBQUNELE1BQU0sQ0FBQ0MsTUFBTSxJQUFJSSxVQUFVO1lBQ2xDLElBQUksQ0FBQ0wsTUFBTSxDQUFDYyxJQUFJLENBQUM7UUFDbkI7UUFFQSxJQUFJRCxLQUFLO1lBQ1AsSUFBSSxDQUFDYixNQUFNLENBQUNLLFNBQVMsSUFBSyxTQUFVLElBQUksQ0FBQ0osTUFBTSxHQUFHO1FBQ3BEO1FBRUEsSUFBSSxDQUFDQSxNQUFNO0lBQ2I7QUFDRjtBQUVBYyxPQUFPQyxPQUFPLEdBQUdqQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1idWZmZXIuanM/ZDYwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBCaXRCdWZmZXIgKCkge1xuICB0aGlzLmJ1ZmZlciA9IFtdXG4gIHRoaXMubGVuZ3RoID0gMFxufVxuXG5CaXRCdWZmZXIucHJvdG90eXBlID0ge1xuXG4gIGdldDogZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgY29uc3QgYnVmSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOClcbiAgICByZXR1cm4gKCh0aGlzLmJ1ZmZlcltidWZJbmRleF0gPj4+ICg3IC0gaW5kZXggJSA4KSkgJiAxKSA9PT0gMVxuICB9LFxuXG4gIHB1dDogZnVuY3Rpb24gKG51bSwgbGVuZ3RoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5wdXRCaXQoKChudW0gPj4+IChsZW5ndGggLSBpIC0gMSkpICYgMSkgPT09IDEpXG4gICAgfVxuICB9LFxuXG4gIGdldExlbmd0aEluQml0czogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmxlbmd0aFxuICB9LFxuXG4gIHB1dEJpdDogZnVuY3Rpb24gKGJpdCkge1xuICAgIGNvbnN0IGJ1ZkluZGV4ID0gTWF0aC5mbG9vcih0aGlzLmxlbmd0aCAvIDgpXG4gICAgaWYgKHRoaXMuYnVmZmVyLmxlbmd0aCA8PSBidWZJbmRleCkge1xuICAgICAgdGhpcy5idWZmZXIucHVzaCgwKVxuICAgIH1cblxuICAgIGlmIChiaXQpIHtcbiAgICAgIHRoaXMuYnVmZmVyW2J1ZkluZGV4XSB8PSAoMHg4MCA+Pj4gKHRoaXMubGVuZ3RoICUgOCkpXG4gICAgfVxuXG4gICAgdGhpcy5sZW5ndGgrK1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQml0QnVmZmVyXG4iXSwibmFtZXMiOlsiQml0QnVmZmVyIiwiYnVmZmVyIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0IiwiaW5kZXgiLCJidWZJbmRleCIsIk1hdGgiLCJmbG9vciIsInB1dCIsIm51bSIsImkiLCJwdXRCaXQiLCJnZXRMZW5ndGhJbkJpdHMiLCJiaXQiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-buffer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-matrix.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-matrix.js ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */ \nfunction BitMatrix(size) {\n    if (!size || size < 1) {\n        throw new Error(\"BitMatrix size must be defined and greater than 0\");\n    }\n    this.size = size;\n    this.data = new Uint8Array(size * size);\n    this.reservedBit = new Uint8Array(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */ BitMatrix.prototype.set = function(row, col, value, reserved) {\n    const index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved) this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */ BitMatrix.prototype.get = function(row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */ BitMatrix.prototype.xor = function(row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */ BitMatrix.prototype.isReserved = function(row, col) {\n    return this.reservedBit[row * this.size + col];\n};\nmodule.exports = BitMatrix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2JpdC1tYXRyaXguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0FJQztBQUNELFNBQVNBLFVBQVdDLElBQUk7SUFDdEIsSUFBSSxDQUFDQSxRQUFRQSxPQUFPLEdBQUc7UUFDckIsTUFBTSxJQUFJQyxNQUFNO0lBQ2xCO0lBRUEsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO0lBQ1osSUFBSSxDQUFDRSxJQUFJLEdBQUcsSUFBSUMsV0FBV0gsT0FBT0E7SUFDbEMsSUFBSSxDQUFDSSxXQUFXLEdBQUcsSUFBSUQsV0FBV0gsT0FBT0E7QUFDM0M7QUFFQTs7Ozs7Ozs7Q0FRQyxHQUNERCxVQUFVTSxTQUFTLENBQUNDLEdBQUcsR0FBRyxTQUFVQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxRQUFRO0lBQzNELE1BQU1DLFFBQVFKLE1BQU0sSUFBSSxDQUFDUCxJQUFJLEdBQUdRO0lBQ2hDLElBQUksQ0FBQ04sSUFBSSxDQUFDUyxNQUFNLEdBQUdGO0lBQ25CLElBQUlDLFVBQVUsSUFBSSxDQUFDTixXQUFXLENBQUNPLE1BQU0sR0FBRztBQUMxQztBQUVBOzs7Ozs7Q0FNQyxHQUNEWixVQUFVTSxTQUFTLENBQUNPLEdBQUcsR0FBRyxTQUFVTCxHQUFHLEVBQUVDLEdBQUc7SUFDMUMsT0FBTyxJQUFJLENBQUNOLElBQUksQ0FBQ0ssTUFBTSxJQUFJLENBQUNQLElBQUksR0FBR1EsSUFBSTtBQUN6QztBQUVBOzs7Ozs7O0NBT0MsR0FDRFQsVUFBVU0sU0FBUyxDQUFDUSxHQUFHLEdBQUcsU0FBVU4sR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEtBQUs7SUFDakQsSUFBSSxDQUFDUCxJQUFJLENBQUNLLE1BQU0sSUFBSSxDQUFDUCxJQUFJLEdBQUdRLElBQUksSUFBSUM7QUFDdEM7QUFFQTs7Ozs7O0NBTUMsR0FDRFYsVUFBVU0sU0FBUyxDQUFDUyxVQUFVLEdBQUcsU0FBVVAsR0FBRyxFQUFFQyxHQUFHO0lBQ2pELE9BQU8sSUFBSSxDQUFDSixXQUFXLENBQUNHLE1BQU0sSUFBSSxDQUFDUCxJQUFJLEdBQUdRLElBQUk7QUFDaEQ7QUFFQU8sT0FBT0MsT0FBTyxHQUFHakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktbW9kYWwvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9iaXQtbWF0cml4LmpzP2JjZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXIgY2xhc3MgdG8gaGFuZGxlIFFSIENvZGUgc3ltYm9sIG1vZHVsZXNcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gc2l6ZSBTeW1ib2wgc2l6ZVxuICovXG5mdW5jdGlvbiBCaXRNYXRyaXggKHNpemUpIHtcbiAgaWYgKCFzaXplIHx8IHNpemUgPCAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdCaXRNYXRyaXggc2l6ZSBtdXN0IGJlIGRlZmluZWQgYW5kIGdyZWF0ZXIgdGhhbiAwJylcbiAgfVxuXG4gIHRoaXMuc2l6ZSA9IHNpemVcbiAgdGhpcy5kYXRhID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSAqIHNpemUpXG4gIHRoaXMucmVzZXJ2ZWRCaXQgPSBuZXcgVWludDhBcnJheShzaXplICogc2l6ZSlcbn1cblxuLyoqXG4gKiBTZXQgYml0IHZhbHVlIGF0IHNwZWNpZmllZCBsb2NhdGlvblxuICogSWYgcmVzZXJ2ZWQgZmxhZyBpcyBzZXQsIHRoaXMgYml0IHdpbGwgYmUgaWdub3JlZCBkdXJpbmcgbWFza2luZyBwcm9jZXNzXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9ICByb3dcbiAqIEBwYXJhbSB7TnVtYmVyfSAgY29sXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHZhbHVlXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHJlc2VydmVkXG4gKi9cbkJpdE1hdHJpeC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKHJvdywgY29sLCB2YWx1ZSwgcmVzZXJ2ZWQpIHtcbiAgY29uc3QgaW5kZXggPSByb3cgKiB0aGlzLnNpemUgKyBjb2xcbiAgdGhpcy5kYXRhW2luZGV4XSA9IHZhbHVlXG4gIGlmIChyZXNlcnZlZCkgdGhpcy5yZXNlcnZlZEJpdFtpbmRleF0gPSB0cnVlXG59XG5cbi8qKlxuICogUmV0dXJucyBiaXQgdmFsdWUgYXQgc3BlY2lmaWVkIGxvY2F0aW9uXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSAgcm93XG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICBjb2xcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbkJpdE1hdHJpeC5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKHJvdywgY29sKSB7XG4gIHJldHVybiB0aGlzLmRhdGFbcm93ICogdGhpcy5zaXplICsgY29sXVxufVxuXG4vKipcbiAqIEFwcGxpZXMgeG9yIG9wZXJhdG9yIGF0IHNwZWNpZmllZCBsb2NhdGlvblxuICogKHVzZWQgZHVyaW5nIG1hc2tpbmcgcHJvY2VzcylcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gIHJvd1xuICogQHBhcmFtIHtOdW1iZXJ9ICBjb2xcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdmFsdWVcbiAqL1xuQml0TWF0cml4LnByb3RvdHlwZS54b3IgPSBmdW5jdGlvbiAocm93LCBjb2wsIHZhbHVlKSB7XG4gIHRoaXMuZGF0YVtyb3cgKiB0aGlzLnNpemUgKyBjb2xdIF49IHZhbHVlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYml0IGF0IHNwZWNpZmllZCBsb2NhdGlvbiBpcyByZXNlcnZlZFxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSAgIHJvd1xuICogQHBhcmFtIHtOdW1iZXJ9ICAgY29sXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5CaXRNYXRyaXgucHJvdG90eXBlLmlzUmVzZXJ2ZWQgPSBmdW5jdGlvbiAocm93LCBjb2wpIHtcbiAgcmV0dXJuIHRoaXMucmVzZXJ2ZWRCaXRbcm93ICogdGhpcy5zaXplICsgY29sXVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJpdE1hdHJpeFxuIl0sIm5hbWVzIjpbIkJpdE1hdHJpeCIsInNpemUiLCJFcnJvciIsImRhdGEiLCJVaW50OEFycmF5IiwicmVzZXJ2ZWRCaXQiLCJwcm90b3R5cGUiLCJzZXQiLCJyb3ciLCJjb2wiLCJ2YWx1ZSIsInJlc2VydmVkIiwiaW5kZXgiLCJnZXQiLCJ4b3IiLCJpc1Jlc2VydmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-matrix.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/byte-data.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/byte-data.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst encodeUtf8 = __webpack_require__(/*! encode-utf8 */ \"(ssr)/../node_modules/encode-utf8/index.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nfunction ByteData(data) {\n    this.mode = Mode.BYTE;\n    if (typeof data === \"string\") {\n        data = encodeUtf8(data);\n    }\n    this.data = new Uint8Array(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function(bitBuffer) {\n    for(let i = 0, l = this.data.length; i < l; i++){\n        bitBuffer.put(this.data[i], 8);\n    }\n};\nmodule.exports = ByteData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2J5dGUtZGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsYUFBYUMsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUMsT0FBT0QsbUJBQU9BLENBQUM7QUFFckIsU0FBU0UsU0FBVUMsSUFBSTtJQUNyQixJQUFJLENBQUNDLElBQUksR0FBR0gsS0FBS0ksSUFBSTtJQUNyQixJQUFJLE9BQVFGLFNBQVUsVUFBVTtRQUM5QkEsT0FBT0osV0FBV0k7SUFDcEI7SUFDQSxJQUFJLENBQUNBLElBQUksR0FBRyxJQUFJRyxXQUFXSDtBQUM3QjtBQUVBRCxTQUFTSyxhQUFhLEdBQUcsU0FBU0EsY0FBZUMsTUFBTTtJQUNyRCxPQUFPQSxTQUFTO0FBQ2xCO0FBRUFOLFNBQVNPLFNBQVMsQ0FBQ0MsU0FBUyxHQUFHLFNBQVNBO0lBQ3RDLE9BQU8sSUFBSSxDQUFDUCxJQUFJLENBQUNLLE1BQU07QUFDekI7QUFFQU4sU0FBU08sU0FBUyxDQUFDRixhQUFhLEdBQUcsU0FBU0E7SUFDMUMsT0FBT0wsU0FBU0ssYUFBYSxDQUFDLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxNQUFNO0FBQ2hEO0FBRUFOLFNBQVNPLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFNBQVVDLFNBQVM7SUFDNUMsSUFBSyxJQUFJQyxJQUFJLEdBQUdDLElBQUksSUFBSSxDQUFDWCxJQUFJLENBQUNLLE1BQU0sRUFBRUssSUFBSUMsR0FBR0QsSUFBSztRQUNoREQsVUFBVUcsR0FBRyxDQUFDLElBQUksQ0FBQ1osSUFBSSxDQUFDVSxFQUFFLEVBQUU7SUFDOUI7QUFDRjtBQUVBRyxPQUFPQyxPQUFPLEdBQUdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvYnl0ZS1kYXRhLmpzPzk0MmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZW5jb2RlVXRmOCA9IHJlcXVpcmUoJ2VuY29kZS11dGY4JylcbmNvbnN0IE1vZGUgPSByZXF1aXJlKCcuL21vZGUnKVxuXG5mdW5jdGlvbiBCeXRlRGF0YSAoZGF0YSkge1xuICB0aGlzLm1vZGUgPSBNb2RlLkJZVEVcbiAgaWYgKHR5cGVvZiAoZGF0YSkgPT09ICdzdHJpbmcnKSB7XG4gICAgZGF0YSA9IGVuY29kZVV0ZjgoZGF0YSlcbiAgfVxuICB0aGlzLmRhdGEgPSBuZXcgVWludDhBcnJheShkYXRhKVxufVxuXG5CeXRlRGF0YS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAobGVuZ3RoKSB7XG4gIHJldHVybiBsZW5ndGggKiA4XG59XG5cbkJ5dGVEYXRhLnByb3RvdHlwZS5nZXRMZW5ndGggPSBmdW5jdGlvbiBnZXRMZW5ndGggKCkge1xuICByZXR1cm4gdGhpcy5kYXRhLmxlbmd0aFxufVxuXG5CeXRlRGF0YS5wcm90b3R5cGUuZ2V0Qml0c0xlbmd0aCA9IGZ1bmN0aW9uIGdldEJpdHNMZW5ndGggKCkge1xuICByZXR1cm4gQnl0ZURhdGEuZ2V0Qml0c0xlbmd0aCh0aGlzLmRhdGEubGVuZ3RoKVxufVxuXG5CeXRlRGF0YS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYml0QnVmZmVyKSB7XG4gIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5kYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGJpdEJ1ZmZlci5wdXQodGhpcy5kYXRhW2ldLCA4KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQnl0ZURhdGFcbiJdLCJuYW1lcyI6WyJlbmNvZGVVdGY4IiwicmVxdWlyZSIsIk1vZGUiLCJCeXRlRGF0YSIsImRhdGEiLCJtb2RlIiwiQllURSIsIlVpbnQ4QXJyYXkiLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwibCIsInB1dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/byte-data.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-code.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-code.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const ECLevel = __webpack_require__(/*! ./error-correction-level */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    1,\n    2,\n    2,\n    4,\n    1,\n    2,\n    4,\n    4,\n    2,\n    4,\n    4,\n    4,\n    2,\n    4,\n    6,\n    5,\n    2,\n    4,\n    6,\n    6,\n    2,\n    5,\n    8,\n    8,\n    4,\n    5,\n    8,\n    8,\n    4,\n    5,\n    8,\n    11,\n    4,\n    8,\n    10,\n    11,\n    4,\n    9,\n    12,\n    16,\n    4,\n    9,\n    16,\n    16,\n    6,\n    10,\n    12,\n    18,\n    6,\n    10,\n    17,\n    16,\n    6,\n    11,\n    16,\n    19,\n    6,\n    13,\n    18,\n    21,\n    7,\n    14,\n    21,\n    25,\n    8,\n    16,\n    20,\n    25,\n    8,\n    17,\n    23,\n    25,\n    9,\n    17,\n    23,\n    34,\n    9,\n    18,\n    25,\n    30,\n    10,\n    20,\n    27,\n    32,\n    12,\n    21,\n    29,\n    35,\n    12,\n    23,\n    34,\n    37,\n    12,\n    25,\n    34,\n    40,\n    13,\n    26,\n    35,\n    42,\n    14,\n    28,\n    38,\n    45,\n    15,\n    29,\n    40,\n    48,\n    16,\n    31,\n    43,\n    51,\n    17,\n    33,\n    45,\n    54,\n    18,\n    35,\n    48,\n    57,\n    19,\n    37,\n    51,\n    60,\n    19,\n    38,\n    53,\n    63,\n    20,\n    40,\n    56,\n    66,\n    21,\n    43,\n    59,\n    70,\n    22,\n    45,\n    62,\n    74,\n    24,\n    47,\n    65,\n    77,\n    25,\n    49,\n    68,\n    81\n];\nconst EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7,\n    10,\n    13,\n    17,\n    10,\n    16,\n    22,\n    28,\n    15,\n    26,\n    36,\n    44,\n    20,\n    36,\n    52,\n    64,\n    26,\n    48,\n    72,\n    88,\n    36,\n    64,\n    96,\n    112,\n    40,\n    72,\n    108,\n    130,\n    48,\n    88,\n    132,\n    156,\n    60,\n    110,\n    160,\n    192,\n    72,\n    130,\n    192,\n    224,\n    80,\n    150,\n    224,\n    264,\n    96,\n    176,\n    260,\n    308,\n    104,\n    198,\n    288,\n    352,\n    120,\n    216,\n    320,\n    384,\n    132,\n    240,\n    360,\n    432,\n    144,\n    280,\n    408,\n    480,\n    168,\n    308,\n    448,\n    532,\n    180,\n    338,\n    504,\n    588,\n    196,\n    364,\n    546,\n    650,\n    224,\n    416,\n    600,\n    700,\n    224,\n    442,\n    644,\n    750,\n    252,\n    476,\n    690,\n    816,\n    270,\n    504,\n    750,\n    900,\n    300,\n    560,\n    810,\n    960,\n    312,\n    588,\n    870,\n    1050,\n    336,\n    644,\n    952,\n    1110,\n    360,\n    700,\n    1020,\n    1200,\n    390,\n    728,\n    1050,\n    1260,\n    420,\n    784,\n    1140,\n    1350,\n    450,\n    812,\n    1200,\n    1440,\n    480,\n    868,\n    1290,\n    1530,\n    510,\n    924,\n    1350,\n    1620,\n    540,\n    980,\n    1440,\n    1710,\n    570,\n    1036,\n    1530,\n    1800,\n    570,\n    1064,\n    1590,\n    1890,\n    600,\n    1120,\n    1680,\n    1980,\n    630,\n    1204,\n    1770,\n    2100,\n    660,\n    1260,\n    1860,\n    2220,\n    720,\n    1316,\n    1950,\n    2310,\n    750,\n    1372,\n    2040,\n    2430\n];\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */ exports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\n    switch(errorCorrectionLevel){\n        case ECLevel.L:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case ECLevel.M:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case ECLevel.Q:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case ECLevel.H:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */ exports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n    switch(errorCorrectionLevel){\n        case ECLevel.L:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case ECLevel.M:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case ECLevel.Q:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case ECLevel.H:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-code.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.L = {\n    bit: 1\n};\nexports.M = {\n    bit: 0\n};\nexports.Q = {\n    bit: 3\n};\nexports.H = {\n    bit: 2\n};\nfunction fromString(string) {\n    if (typeof string !== \"string\") {\n        throw new Error(\"Param is not a string\");\n    }\n    const lcStr = string.toLowerCase();\n    switch(lcStr){\n        case \"l\":\n        case \"low\":\n            return exports.L;\n        case \"m\":\n        case \"medium\":\n            return exports.M;\n        case \"q\":\n        case \"quartile\":\n            return exports.Q;\n        case \"h\":\n        case \"high\":\n            return exports.H;\n        default:\n            throw new Error(\"Unknown EC Level: \" + string);\n    }\n}\nexports.isValid = function isValid(level) {\n    return level && typeof level.bit !== \"undefined\" && level.bit >= 0 && level.bit < 4;\n};\nexports.from = function from(value, defaultValue) {\n    if (exports.isValid(value)) {\n        return value;\n    }\n    try {\n        return fromString(value);\n    } catch (e) {\n        return defaultValue;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Vycm9yLWNvcnJlY3Rpb24tbGV2ZWwuanMiLCJtYXBwaW5ncyI6IkFBQUFBLFNBQVMsR0FBRztJQUFFRSxLQUFLO0FBQUU7QUFDckJGLFNBQVMsR0FBRztJQUFFRSxLQUFLO0FBQUU7QUFDckJGLFNBQVMsR0FBRztJQUFFRSxLQUFLO0FBQUU7QUFDckJGLFNBQVMsR0FBRztJQUFFRSxLQUFLO0FBQUU7QUFFckIsU0FBU0ksV0FBWUMsTUFBTTtJQUN6QixJQUFJLE9BQU9BLFdBQVcsVUFBVTtRQUM5QixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxNQUFNQyxRQUFRRixPQUFPRyxXQUFXO0lBRWhDLE9BQVFEO1FBQ04sS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPVCxRQUFRQyxDQUFDO1FBRWxCLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT0QsUUFBUUcsQ0FBQztRQUVsQixLQUFLO1FBQ0wsS0FBSztZQUNILE9BQU9ILFFBQVFJLENBQUM7UUFFbEIsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPSixRQUFRSyxDQUFDO1FBRWxCO1lBQ0UsTUFBTSxJQUFJRyxNQUFNLHVCQUF1QkQ7SUFDM0M7QUFDRjtBQUVBUCxlQUFlLEdBQUcsU0FBU1csUUFBU0MsS0FBSztJQUN2QyxPQUFPQSxTQUFTLE9BQU9BLE1BQU1WLEdBQUcsS0FBSyxlQUNuQ1UsTUFBTVYsR0FBRyxJQUFJLEtBQUtVLE1BQU1WLEdBQUcsR0FBRztBQUNsQztBQUVBRixZQUFZLEdBQUcsU0FBU2EsS0FBTUMsS0FBSyxFQUFFQyxZQUFZO0lBQy9DLElBQUlmLFFBQVFXLE9BQU8sQ0FBQ0csUUFBUTtRQUMxQixPQUFPQTtJQUNUO0lBRUEsSUFBSTtRQUNGLE9BQU9SLFdBQVdRO0lBQ3BCLEVBQUUsT0FBT0UsR0FBRztRQUNWLE9BQU9EO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Vycm9yLWNvcnJlY3Rpb24tbGV2ZWwuanM/ODAwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLkwgPSB7IGJpdDogMSB9XG5leHBvcnRzLk0gPSB7IGJpdDogMCB9XG5leHBvcnRzLlEgPSB7IGJpdDogMyB9XG5leHBvcnRzLkggPSB7IGJpdDogMiB9XG5cbmZ1bmN0aW9uIGZyb21TdHJpbmcgKHN0cmluZykge1xuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1BhcmFtIGlzIG5vdCBhIHN0cmluZycpXG4gIH1cblxuICBjb25zdCBsY1N0ciA9IHN0cmluZy50b0xvd2VyQ2FzZSgpXG5cbiAgc3dpdGNoIChsY1N0cikge1xuICAgIGNhc2UgJ2wnOlxuICAgIGNhc2UgJ2xvdyc6XG4gICAgICByZXR1cm4gZXhwb3J0cy5MXG5cbiAgICBjYXNlICdtJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgcmV0dXJuIGV4cG9ydHMuTVxuXG4gICAgY2FzZSAncSc6XG4gICAgY2FzZSAncXVhcnRpbGUnOlxuICAgICAgcmV0dXJuIGV4cG9ydHMuUVxuXG4gICAgY2FzZSAnaCc6XG4gICAgY2FzZSAnaGlnaCc6XG4gICAgICByZXR1cm4gZXhwb3J0cy5IXG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIEVDIExldmVsOiAnICsgc3RyaW5nKVxuICB9XG59XG5cbmV4cG9ydHMuaXNWYWxpZCA9IGZ1bmN0aW9uIGlzVmFsaWQgKGxldmVsKSB7XG4gIHJldHVybiBsZXZlbCAmJiB0eXBlb2YgbGV2ZWwuYml0ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIGxldmVsLmJpdCA+PSAwICYmIGxldmVsLmJpdCA8IDRcbn1cblxuZXhwb3J0cy5mcm9tID0gZnVuY3Rpb24gZnJvbSAodmFsdWUsIGRlZmF1bHRWYWx1ZSkge1xuICBpZiAoZXhwb3J0cy5pc1ZhbGlkKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gZnJvbVN0cmluZyh2YWx1ZSlcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgfVxufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJMIiwiYml0IiwiTSIsIlEiLCJIIiwiZnJvbVN0cmluZyIsInN0cmluZyIsIkVycm9yIiwibGNTdHIiLCJ0b0xvd2VyQ2FzZSIsImlzVmFsaWQiLCJsZXZlbCIsImZyb20iLCJ2YWx1ZSIsImRlZmF1bHRWYWx1ZSIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/finder-pattern.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/finder-pattern.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const getSymbolSize = (__webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\").getSymbolSize);\nconst FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */ exports.getPositions = function getPositions(version) {\n    const size = getSymbolSize(version);\n    return [\n        // top-left\n        [\n            0,\n            0\n        ],\n        // top-right\n        [\n            size - FINDER_PATTERN_SIZE,\n            0\n        ],\n        // bottom-left\n        [\n            0,\n            size - FINDER_PATTERN_SIZE\n        ]\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2ZpbmRlci1wYXR0ZXJuLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLGdCQUFnQkMsNklBQWdDO0FBQ3RELE1BQU1DLHNCQUFzQjtBQUU1Qjs7Ozs7O0NBTUMsR0FDREMsb0JBQW9CLEdBQUcsU0FBU0MsYUFBY0MsT0FBTztJQUNuRCxNQUFNQyxPQUFPTixjQUFjSztJQUUzQixPQUFPO1FBQ0wsV0FBVztRQUNYO1lBQUM7WUFBRztTQUFFO1FBQ04sWUFBWTtRQUNaO1lBQUNDLE9BQU9KO1lBQXFCO1NBQUU7UUFDL0IsY0FBYztRQUNkO1lBQUM7WUFBR0ksT0FBT0o7U0FBb0I7S0FDaEM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2ZpbmRlci1wYXR0ZXJuLmpzP2MzMDAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2V0U3ltYm9sU2l6ZSA9IHJlcXVpcmUoJy4vdXRpbHMnKS5nZXRTeW1ib2xTaXplXG5jb25zdCBGSU5ERVJfUEFUVEVSTl9TSVpFID0gN1xuXG4vKipcbiAqIFJldHVybnMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgcG9zaXRpb25zIG9mIGVhY2ggZmluZGVyIHBhdHRlcm4uXG4gKiBFYWNoIGFycmF5J3MgZWxlbWVudCByZXByZXNlbnQgdGhlIHRvcC1sZWZ0IHBvaW50IG9mIHRoZSBwYXR0ZXJuIGFzICh4LCB5KSBjb29yZGluYXRlc1xuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge0FycmF5fSAgICAgICAgICBBcnJheSBvZiBjb29yZGluYXRlc1xuICovXG5leHBvcnRzLmdldFBvc2l0aW9ucyA9IGZ1bmN0aW9uIGdldFBvc2l0aW9ucyAodmVyc2lvbikge1xuICBjb25zdCBzaXplID0gZ2V0U3ltYm9sU2l6ZSh2ZXJzaW9uKVxuXG4gIHJldHVybiBbXG4gICAgLy8gdG9wLWxlZnRcbiAgICBbMCwgMF0sXG4gICAgLy8gdG9wLXJpZ2h0XG4gICAgW3NpemUgLSBGSU5ERVJfUEFUVEVSTl9TSVpFLCAwXSxcbiAgICAvLyBib3R0b20tbGVmdFxuICAgIFswLCBzaXplIC0gRklOREVSX1BBVFRFUk5fU0laRV1cbiAgXVxufVxuIl0sIm5hbWVzIjpbImdldFN5bWJvbFNpemUiLCJyZXF1aXJlIiwiRklOREVSX1BBVFRFUk5fU0laRSIsImV4cG9ydHMiLCJnZXRQb3NpdGlvbnMiLCJ2ZXJzaW9uIiwic2l6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/finder-pattern.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/format-info.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/format-info.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\");\nconst G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\nconst G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\nconst G15_BCH = Utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */ exports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n    const data = errorCorrectionLevel.bit << 3 | mask;\n    let d = data << 10;\n    while(Utils.getBCHDigit(d) - G15_BCH >= 0){\n        d ^= G15 << Utils.getBCHDigit(d) - G15_BCH;\n    }\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return (data << 10 | d) ^ G15_MASK;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Zvcm1hdC1pbmZvLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLE1BQU1DLE1BQU0sS0FBTSxLQUFPLEtBQUssSUFBTSxLQUFLLElBQU0sS0FBSyxJQUFNLEtBQUssSUFBTSxLQUFLLElBQU0sS0FBSztBQUNyRixNQUFNQyxXQUFXLEtBQU0sS0FBTyxLQUFLLEtBQU8sS0FBSyxLQUFPLEtBQUssSUFBTSxLQUFLO0FBQ3RFLE1BQU1DLFVBQVVKLE1BQU1LLFdBQVcsQ0FBQ0g7QUFFbEM7Ozs7Ozs7OztDQVNDLEdBQ0RJLHNCQUFzQixHQUFHLFNBQVNDLGVBQWdCQyxvQkFBb0IsRUFBRUMsSUFBSTtJQUMxRSxNQUFNQyxPQUFRLHFCQUFzQkMsR0FBRyxJQUFJLElBQUtGO0lBQ2hELElBQUlHLElBQUlGLFFBQVE7SUFFaEIsTUFBT1YsTUFBTUssV0FBVyxDQUFDTyxLQUFLUixXQUFXLEVBQUc7UUFDMUNRLEtBQU1WLE9BQVFGLE1BQU1LLFdBQVcsQ0FBQ08sS0FBS1I7SUFDdkM7SUFFQSwyREFBMkQ7SUFDM0QsaUVBQWlFO0lBQ2pFLHlDQUF5QztJQUN6QyxPQUFPLENBQUMsUUFBUyxLQUFNUSxDQUFBQSxJQUFLVDtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2Zvcm1hdC1pbmZvLmpzP2U5ODUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY29uc3QgRzE1ID0gKDEgPDwgMTApIHwgKDEgPDwgOCkgfCAoMSA8PCA1KSB8ICgxIDw8IDQpIHwgKDEgPDwgMikgfCAoMSA8PCAxKSB8ICgxIDw8IDApXG5jb25zdCBHMTVfTUFTSyA9ICgxIDw8IDE0KSB8ICgxIDw8IDEyKSB8ICgxIDw8IDEwKSB8ICgxIDw8IDQpIHwgKDEgPDwgMSlcbmNvbnN0IEcxNV9CQ0ggPSBVdGlscy5nZXRCQ0hEaWdpdChHMTUpXG5cbi8qKlxuICogUmV0dXJucyBmb3JtYXQgaW5mb3JtYXRpb24gd2l0aCByZWxhdGl2ZSBlcnJvciBjb3JyZWN0aW9uIGJpdHNcbiAqXG4gKiBUaGUgZm9ybWF0IGluZm9ybWF0aW9uIGlzIGEgMTUtYml0IHNlcXVlbmNlIGNvbnRhaW5pbmcgNSBkYXRhIGJpdHMsXG4gKiB3aXRoIDEwIGVycm9yIGNvcnJlY3Rpb24gYml0cyBjYWxjdWxhdGVkIHVzaW5nIHRoZSAoMTUsIDUpIEJDSCBjb2RlLlxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gZXJyb3JDb3JyZWN0aW9uTGV2ZWwgRXJyb3IgY29ycmVjdGlvbiBsZXZlbFxuICogQHBhcmFtICB7TnVtYmVyfSBtYXNrICAgICAgICAgICAgICAgICBNYXNrIHBhdHRlcm5cbiAqIEByZXR1cm4ge051bWJlcn0gICAgICAgICAgICAgICAgICAgICAgRW5jb2RlZCBmb3JtYXQgaW5mb3JtYXRpb24gYml0c1xuICovXG5leHBvcnRzLmdldEVuY29kZWRCaXRzID0gZnVuY3Rpb24gZ2V0RW5jb2RlZEJpdHMgKGVycm9yQ29ycmVjdGlvbkxldmVsLCBtYXNrKSB7XG4gIGNvbnN0IGRhdGEgPSAoKGVycm9yQ29ycmVjdGlvbkxldmVsLmJpdCA8PCAzKSB8IG1hc2spXG4gIGxldCBkID0gZGF0YSA8PCAxMFxuXG4gIHdoaWxlIChVdGlscy5nZXRCQ0hEaWdpdChkKSAtIEcxNV9CQ0ggPj0gMCkge1xuICAgIGQgXj0gKEcxNSA8PCAoVXRpbHMuZ2V0QkNIRGlnaXQoZCkgLSBHMTVfQkNIKSlcbiAgfVxuXG4gIC8vIHhvciBmaW5hbCBkYXRhIHdpdGggbWFzayBwYXR0ZXJuIGluIG9yZGVyIHRvIGVuc3VyZSB0aGF0XG4gIC8vIG5vIGNvbWJpbmF0aW9uIG9mIEVycm9yIENvcnJlY3Rpb24gTGV2ZWwgYW5kIGRhdGEgbWFzayBwYXR0ZXJuXG4gIC8vIHdpbGwgcmVzdWx0IGluIGFuIGFsbC16ZXJvIGRhdGEgc3RyaW5nXG4gIHJldHVybiAoKGRhdGEgPDwgMTApIHwgZCkgXiBHMTVfTUFTS1xufVxuIl0sIm5hbWVzIjpbIlV0aWxzIiwicmVxdWlyZSIsIkcxNSIsIkcxNV9NQVNLIiwiRzE1X0JDSCIsImdldEJDSERpZ2l0IiwiZXhwb3J0cyIsImdldEVuY29kZWRCaXRzIiwiZXJyb3JDb3JyZWN0aW9uTGV2ZWwiLCJtYXNrIiwiZGF0YSIsImJpdCIsImQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/format-info.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/galois-field.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/galois-field.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("const EXP_TABLE = new Uint8Array(512);\nconst LOG_TABLE = new Uint8Array(256) /**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */ ;\n(function initTables() {\n    let x = 1;\n    for(let i = 0; i < 255; i++){\n        EXP_TABLE[i] = x;\n        LOG_TABLE[x] = i;\n        x <<= 1 // multiply by 2\n        ;\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) {\n            x ^= 0x11D;\n        }\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for(let i = 255; i < 512; i++){\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\n    }\n})();\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */ exports.log = function log(n) {\n    if (n < 1) throw new Error(\"log(\" + n + \")\");\n    return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */ exports.exp = function exp(n) {\n    return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */ exports.mul = function mul(x, y) {\n    if (x === 0 || y === 0) return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2dhbG9pcy1maWVsZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxZQUFZLElBQUlDLFdBQVc7QUFDakMsTUFBTUMsWUFBWSxJQUFJRCxXQUFXLEtBQ2pDOzs7Ozs7O0NBT0M7QUFDQyxVQUFTRTtJQUNULElBQUlDLElBQUk7SUFDUixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxLQUFLQSxJQUFLO1FBQzVCTCxTQUFTLENBQUNLLEVBQUUsR0FBR0Q7UUFDZkYsU0FBUyxDQUFDRSxFQUFFLEdBQUdDO1FBRWZELE1BQU0sRUFBRSxnQkFBZ0I7O1FBRXhCLCtFQUErRTtRQUMvRSxpRkFBaUY7UUFDakYsSUFBSUEsSUFBSSxPQUFPO1lBQ2JBLEtBQUs7UUFDUDtJQUNGO0lBRUEsMEZBQTBGO0lBQzFGLDBGQUEwRjtJQUMxRiw0QkFBNEI7SUFDNUIsbUJBQW1CO0lBQ25CLElBQUssSUFBSUMsSUFBSSxLQUFLQSxJQUFJLEtBQUtBLElBQUs7UUFDOUJMLFNBQVMsQ0FBQ0ssRUFBRSxHQUFHTCxTQUFTLENBQUNLLElBQUksSUFBSTtJQUNuQztBQUNGO0FBRUE7Ozs7O0NBS0MsR0FDREMsV0FBVyxHQUFHLFNBQVNDLElBQUtDLENBQUM7SUFDM0IsSUFBSUEsSUFBSSxHQUFHLE1BQU0sSUFBSUMsTUFBTSxTQUFTRCxJQUFJO0lBQ3hDLE9BQU9OLFNBQVMsQ0FBQ00sRUFBRTtBQUNyQjtBQUVBOzs7OztDQUtDLEdBQ0RGLFdBQVcsR0FBRyxTQUFTSSxJQUFLRixDQUFDO0lBQzNCLE9BQU9SLFNBQVMsQ0FBQ1EsRUFBRTtBQUNyQjtBQUVBOzs7Ozs7Q0FNQyxHQUNERixXQUFXLEdBQUcsU0FBU0ssSUFBS1AsQ0FBQyxFQUFFUSxDQUFDO0lBQzlCLElBQUlSLE1BQU0sS0FBS1EsTUFBTSxHQUFHLE9BQU87SUFFL0IseUZBQXlGO0lBQ3pGLDBCQUEwQjtJQUMxQixPQUFPWixTQUFTLENBQUNFLFNBQVMsQ0FBQ0UsRUFBRSxHQUFHRixTQUFTLENBQUNVLEVBQUUsQ0FBQztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2dhbG9pcy1maWVsZC5qcz84ZjI2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVYUF9UQUJMRSA9IG5ldyBVaW50OEFycmF5KDUxMilcbmNvbnN0IExPR19UQUJMRSA9IG5ldyBVaW50OEFycmF5KDI1Nilcbi8qKlxuICogUHJlY29tcHV0ZSB0aGUgbG9nIGFuZCBhbnRpLWxvZyB0YWJsZXMgZm9yIGZhc3RlciBjb21wdXRhdGlvbiBsYXRlclxuICpcbiAqIEZvciBlYWNoIHBvc3NpYmxlIHZhbHVlIGluIHRoZSBnYWxvaXMgZmllbGQgMl44LCB3ZSB3aWxsIHByZS1jb21wdXRlXG4gKiB0aGUgbG9nYXJpdGhtIGFuZCBhbnRpLWxvZ2FyaXRobSAoZXhwb25lbnRpYWwpIG9mIHRoaXMgdmFsdWVcbiAqXG4gKiByZWYge0BsaW5rIGh0dHBzOi8vZW4ud2lraXZlcnNpdHkub3JnL3dpa2kvUmVlZCVFMiU4MCU5M1NvbG9tb25fY29kZXNfZm9yX2NvZGVycyNJbnRyb2R1Y3Rpb25fdG9fbWF0aGVtYXRpY2FsX2ZpZWxkc31cbiAqL1xuOyhmdW5jdGlvbiBpbml0VGFibGVzICgpIHtcbiAgbGV0IHggPSAxXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMjU1OyBpKyspIHtcbiAgICBFWFBfVEFCTEVbaV0gPSB4XG4gICAgTE9HX1RBQkxFW3hdID0gaVxuXG4gICAgeCA8PD0gMSAvLyBtdWx0aXBseSBieSAyXG5cbiAgICAvLyBUaGUgUVIgY29kZSBzcGVjaWZpY2F0aW9uIHNheXMgdG8gdXNlIGJ5dGUtd2lzZSBtb2R1bG8gMTAwMDExMTAxIGFyaXRobWV0aWMuXG4gICAgLy8gVGhpcyBtZWFucyB0aGF0IHdoZW4gYSBudW1iZXIgaXMgMjU2IG9yIGxhcmdlciwgaXQgc2hvdWxkIGJlIFhPUmVkIHdpdGggMHgxMUQuXG4gICAgaWYgKHggJiAweDEwMCkgeyAvLyBzaW1pbGFyIHRvIHggPj0gMjU2LCBidXQgYSBsb3QgZmFzdGVyIChiZWNhdXNlIDB4MTAwID09IDI1NilcbiAgICAgIHggXj0gMHgxMURcbiAgICB9XG4gIH1cblxuICAvLyBPcHRpbWl6YXRpb246IGRvdWJsZSB0aGUgc2l6ZSBvZiB0aGUgYW50aS1sb2cgdGFibGUgc28gdGhhdCB3ZSBkb24ndCBuZWVkIHRvIG1vZCAyNTUgdG9cbiAgLy8gc3RheSBpbnNpZGUgdGhlIGJvdW5kcyAoYmVjYXVzZSB3ZSB3aWxsIG1haW5seSB1c2UgdGhpcyB0YWJsZSBmb3IgdGhlIG11bHRpcGxpY2F0aW9uIG9mXG4gIC8vIHR3byBHRiBudW1iZXJzLCBubyBtb3JlKS5cbiAgLy8gQHNlZSB7QGxpbmsgbXVsfVxuICBmb3IgKGxldCBpID0gMjU1OyBpIDwgNTEyOyBpKyspIHtcbiAgICBFWFBfVEFCTEVbaV0gPSBFWFBfVEFCTEVbaSAtIDI1NV1cbiAgfVxufSgpKVxuXG4vKipcbiAqIFJldHVybnMgbG9nIHZhbHVlIG9mIG4gaW5zaWRlIEdhbG9pcyBGaWVsZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gblxuICogQHJldHVybiB7TnVtYmVyfVxuICovXG5leHBvcnRzLmxvZyA9IGZ1bmN0aW9uIGxvZyAobikge1xuICBpZiAobiA8IDEpIHRocm93IG5ldyBFcnJvcignbG9nKCcgKyBuICsgJyknKVxuICByZXR1cm4gTE9HX1RBQkxFW25dXG59XG5cbi8qKlxuICogUmV0dXJucyBhbnRpLWxvZyB2YWx1ZSBvZiBuIGluc2lkZSBHYWxvaXMgRmllbGRcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IG5cbiAqIEByZXR1cm4ge051bWJlcn1cbiAqL1xuZXhwb3J0cy5leHAgPSBmdW5jdGlvbiBleHAgKG4pIHtcbiAgcmV0dXJuIEVYUF9UQUJMRVtuXVxufVxuXG4vKipcbiAqIE11bHRpcGxpZXMgdHdvIG51bWJlciBpbnNpZGUgR2Fsb2lzIEZpZWxkXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB4XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHlcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqL1xuZXhwb3J0cy5tdWwgPSBmdW5jdGlvbiBtdWwgKHgsIHkpIHtcbiAgaWYgKHggPT09IDAgfHwgeSA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBzaG91bGQgYmUgRVhQX1RBQkxFWyhMT0dfVEFCTEVbeF0gKyBMT0dfVEFCTEVbeV0pICUgMjU1XSBpZiBFWFBfVEFCTEUgd2Fzbid0IG92ZXJzaXplZFxuICAvLyBAc2VlIHtAbGluayBpbml0VGFibGVzfVxuICByZXR1cm4gRVhQX1RBQkxFW0xPR19UQUJMRVt4XSArIExPR19UQUJMRVt5XV1cbn1cbiJdLCJuYW1lcyI6WyJFWFBfVEFCTEUiLCJVaW50OEFycmF5IiwiTE9HX1RBQkxFIiwiaW5pdFRhYmxlcyIsIngiLCJpIiwiZXhwb3J0cyIsImxvZyIsIm4iLCJFcnJvciIsImV4cCIsIm11bCIsInkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/galois-field.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/kanji-data.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/kanji-data.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\");\nfunction KanjiData(data) {\n    this.mode = Mode.KANJI;\n    this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n    return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function(bitBuffer) {\n    let i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for(i = 0; i < this.data.length; i++){\n        let value = Utils.toSJIS(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) {\n            // Subtract 0x8140 from Shift JIS value\n            value -= 0x8140;\n        // For characters with Shift JIS values from 0xE040 to 0xEBBF\n        } else if (value >= 0xE040 && value <= 0xEBBF) {\n            // Subtract 0xC140 from Shift JIS value\n            value -= 0xC140;\n        } else {\n            throw new Error(\"Invalid SJIS character: \" + this.data[i] + \"\\n\" + \"Make sure your charset is UTF-8\");\n        }\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\nmodule.exports = KanjiData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2thbmppLWRhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE9BQU9DLG1CQUFPQSxDQUFDO0FBQ3JCLE1BQU1DLFFBQVFELG1CQUFPQSxDQUFDO0FBRXRCLFNBQVNFLFVBQVdDLElBQUk7SUFDdEIsSUFBSSxDQUFDQyxJQUFJLEdBQUdMLEtBQUtNLEtBQUs7SUFDdEIsSUFBSSxDQUFDRixJQUFJLEdBQUdBO0FBQ2Q7QUFFQUQsVUFBVUksYUFBYSxHQUFHLFNBQVNBLGNBQWVDLE1BQU07SUFDdEQsT0FBT0EsU0FBUztBQUNsQjtBQUVBTCxVQUFVTSxTQUFTLENBQUNDLFNBQVMsR0FBRyxTQUFTQTtJQUN2QyxPQUFPLElBQUksQ0FBQ04sSUFBSSxDQUFDSSxNQUFNO0FBQ3pCO0FBRUFMLFVBQVVNLFNBQVMsQ0FBQ0YsYUFBYSxHQUFHLFNBQVNBO0lBQzNDLE9BQU9KLFVBQVVJLGFBQWEsQ0FBQyxJQUFJLENBQUNILElBQUksQ0FBQ0ksTUFBTTtBQUNqRDtBQUVBTCxVQUFVTSxTQUFTLENBQUNFLEtBQUssR0FBRyxTQUFVQyxTQUFTO0lBQzdDLElBQUlDO0lBRUosdUZBQXVGO0lBQ3ZGLDREQUE0RDtJQUM1RCw4REFBOEQ7SUFDOUQsSUFBS0EsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1QsSUFBSSxDQUFDSSxNQUFNLEVBQUVLLElBQUs7UUFDckMsSUFBSUMsUUFBUVosTUFBTWEsTUFBTSxDQUFDLElBQUksQ0FBQ1gsSUFBSSxDQUFDUyxFQUFFO1FBRXJDLDhEQUE4RDtRQUM5RCxJQUFJQyxTQUFTLFVBQVVBLFNBQVMsUUFBUTtZQUN0Qyx1Q0FBdUM7WUFDdkNBLFNBQVM7UUFFWCw2REFBNkQ7UUFDN0QsT0FBTyxJQUFJQSxTQUFTLFVBQVVBLFNBQVMsUUFBUTtZQUM3Qyx1Q0FBdUM7WUFDdkNBLFNBQVM7UUFDWCxPQUFPO1lBQ0wsTUFBTSxJQUFJRSxNQUNSLDZCQUE2QixJQUFJLENBQUNaLElBQUksQ0FBQ1MsRUFBRSxHQUFHLE9BQzVDO1FBQ0o7UUFFQSxtREFBbUQ7UUFDbkQsNENBQTRDO1FBQzVDQyxRQUFRLENBQUUsVUFBVyxJQUFLLElBQUcsSUFBSyxPQUFTQSxDQUFBQSxRQUFRLElBQUc7UUFFdEQsMkNBQTJDO1FBQzNDRixVQUFVSyxHQUFHLENBQUNILE9BQU87SUFDdkI7QUFDRjtBQUVBSSxPQUFPQyxPQUFPLEdBQUdoQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL2thbmppLWRhdGEuanM/MDM1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNb2RlID0gcmVxdWlyZSgnLi9tb2RlJylcbmNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmZ1bmN0aW9uIEthbmppRGF0YSAoZGF0YSkge1xuICB0aGlzLm1vZGUgPSBNb2RlLktBTkpJXG4gIHRoaXMuZGF0YSA9IGRhdGFcbn1cblxuS2FuamlEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIGxlbmd0aCAqIDEzXG59XG5cbkthbmppRGF0YS5wcm90b3R5cGUuZ2V0TGVuZ3RoID0gZnVuY3Rpb24gZ2V0TGVuZ3RoICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGhcbn1cblxuS2FuamlEYXRhLnByb3RvdHlwZS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAoKSB7XG4gIHJldHVybiBLYW5qaURhdGEuZ2V0Qml0c0xlbmd0aCh0aGlzLmRhdGEubGVuZ3RoKVxufVxuXG5LYW5qaURhdGEucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gKGJpdEJ1ZmZlcikge1xuICBsZXQgaVxuXG4gIC8vIEluIHRoZSBTaGlmdCBKSVMgc3lzdGVtLCBLYW5qaSBjaGFyYWN0ZXJzIGFyZSByZXByZXNlbnRlZCBieSBhIHR3byBieXRlIGNvbWJpbmF0aW9uLlxuICAvLyBUaGVzZSBieXRlIHZhbHVlcyBhcmUgc2hpZnRlZCBmcm9tIHRoZSBKSVMgWCAwMjA4IHZhbHVlcy5cbiAgLy8gSklTIFggMDIwOCBnaXZlcyBkZXRhaWxzIG9mIHRoZSBzaGlmdCBjb2RlZCByZXByZXNlbnRhdGlvbi5cbiAgZm9yIChpID0gMDsgaSA8IHRoaXMuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIGxldCB2YWx1ZSA9IFV0aWxzLnRvU0pJUyh0aGlzLmRhdGFbaV0pXG5cbiAgICAvLyBGb3IgY2hhcmFjdGVycyB3aXRoIFNoaWZ0IEpJUyB2YWx1ZXMgZnJvbSAweDgxNDAgdG8gMHg5RkZDOlxuICAgIGlmICh2YWx1ZSA+PSAweDgxNDAgJiYgdmFsdWUgPD0gMHg5RkZDKSB7XG4gICAgICAvLyBTdWJ0cmFjdCAweDgxNDAgZnJvbSBTaGlmdCBKSVMgdmFsdWVcbiAgICAgIHZhbHVlIC09IDB4ODE0MFxuXG4gICAgLy8gRm9yIGNoYXJhY3RlcnMgd2l0aCBTaGlmdCBKSVMgdmFsdWVzIGZyb20gMHhFMDQwIHRvIDB4RUJCRlxuICAgIH0gZWxzZSBpZiAodmFsdWUgPj0gMHhFMDQwICYmIHZhbHVlIDw9IDB4RUJCRikge1xuICAgICAgLy8gU3VidHJhY3QgMHhDMTQwIGZyb20gU2hpZnQgSklTIHZhbHVlXG4gICAgICB2YWx1ZSAtPSAweEMxNDBcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnSW52YWxpZCBTSklTIGNoYXJhY3RlcjogJyArIHRoaXMuZGF0YVtpXSArICdcXG4nICtcbiAgICAgICAgJ01ha2Ugc3VyZSB5b3VyIGNoYXJzZXQgaXMgVVRGLTgnKVxuICAgIH1cblxuICAgIC8vIE11bHRpcGx5IG1vc3Qgc2lnbmlmaWNhbnQgYnl0ZSBvZiByZXN1bHQgYnkgMHhDMFxuICAgIC8vIGFuZCBhZGQgbGVhc3Qgc2lnbmlmaWNhbnQgYnl0ZSB0byBwcm9kdWN0XG4gICAgdmFsdWUgPSAoKCh2YWx1ZSA+Pj4gOCkgJiAweGZmKSAqIDB4QzApICsgKHZhbHVlICYgMHhmZilcblxuICAgIC8vIENvbnZlcnQgcmVzdWx0IHRvIGEgMTMtYml0IGJpbmFyeSBzdHJpbmdcbiAgICBiaXRCdWZmZXIucHV0KHZhbHVlLCAxMylcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEthbmppRGF0YVxuIl0sIm5hbWVzIjpbIk1vZGUiLCJyZXF1aXJlIiwiVXRpbHMiLCJLYW5qaURhdGEiLCJkYXRhIiwibW9kZSIsIktBTkpJIiwiZ2V0Qml0c0xlbmd0aCIsImxlbmd0aCIsInByb3RvdHlwZSIsImdldExlbmd0aCIsIndyaXRlIiwiYml0QnVmZmVyIiwiaSIsInZhbHVlIiwidG9TSklTIiwiRXJyb3IiLCJwdXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/kanji-data.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mask-pattern.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mask-pattern.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Data mask pattern reference\n * @type {Object}\n */ exports.Patterns = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n};\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */ const PenaltyScores = {\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n};\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */ exports.isValid = function isValid(mask) {\n    return mask != null && mask !== \"\" && !isNaN(mask) && mask >= 0 && mask <= 7;\n};\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */ exports.from = function from(value) {\n    return exports.isValid(value) ? parseInt(value, 10) : undefined;\n};\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/ exports.getPenaltyN1 = function getPenaltyN1(data) {\n    const size = data.size;\n    let points = 0;\n    let sameCountCol = 0;\n    let sameCountRow = 0;\n    let lastCol = null;\n    let lastRow = null;\n    for(let row = 0; row < size; row++){\n        sameCountCol = sameCountRow = 0;\n        lastCol = lastRow = null;\n        for(let col = 0; col < size; col++){\n            let module = data.get(row, col);\n            if (module === lastCol) {\n                sameCountCol++;\n            } else {\n                if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n                lastCol = module;\n                sameCountCol = 1;\n            }\n            module = data.get(col, row);\n            if (module === lastRow) {\n                sameCountRow++;\n            } else {\n                if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n                lastRow = module;\n                sameCountRow = 1;\n            }\n        }\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n    }\n    return points;\n};\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */ exports.getPenaltyN2 = function getPenaltyN2(data) {\n    const size = data.size;\n    let points = 0;\n    for(let row = 0; row < size - 1; row++){\n        for(let col = 0; col < size - 1; col++){\n            const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n            if (last === 4 || last === 0) points++;\n        }\n    }\n    return points * PenaltyScores.N2;\n};\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */ exports.getPenaltyN3 = function getPenaltyN3(data) {\n    const size = data.size;\n    let points = 0;\n    let bitsCol = 0;\n    let bitsRow = 0;\n    for(let row = 0; row < size; row++){\n        bitsCol = bitsRow = 0;\n        for(let col = 0; col < size; col++){\n            bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n            if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n            bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n            if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n        }\n    }\n    return points * PenaltyScores.N3;\n};\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */ exports.getPenaltyN4 = function getPenaltyN4(data) {\n    let darkCount = 0;\n    const modulesCount = data.data.length;\n    for(let i = 0; i < modulesCount; i++)darkCount += data.data[i];\n    const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n    return k * PenaltyScores.N4;\n};\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */ function getMaskAt(maskPattern, i, j) {\n    switch(maskPattern){\n        case exports.Patterns.PATTERN000:\n            return (i + j) % 2 === 0;\n        case exports.Patterns.PATTERN001:\n            return i % 2 === 0;\n        case exports.Patterns.PATTERN010:\n            return j % 3 === 0;\n        case exports.Patterns.PATTERN011:\n            return (i + j) % 3 === 0;\n        case exports.Patterns.PATTERN100:\n            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n        case exports.Patterns.PATTERN101:\n            return i * j % 2 + i * j % 3 === 0;\n        case exports.Patterns.PATTERN110:\n            return (i * j % 2 + i * j % 3) % 2 === 0;\n        case exports.Patterns.PATTERN111:\n            return (i * j % 3 + (i + j) % 2) % 2 === 0;\n        default:\n            throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n}\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */ exports.applyMask = function applyMask(pattern, data) {\n    const size = data.size;\n    for(let col = 0; col < size; col++){\n        for(let row = 0; row < size; row++){\n            if (data.isReserved(row, col)) continue;\n            data.xor(row, col, getMaskAt(pattern, row, col));\n        }\n    }\n};\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */ exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n    const numPatterns = Object.keys(exports.Patterns).length;\n    let bestPattern = 0;\n    let lowerPenalty = Infinity;\n    for(let p = 0; p < numPatterns; p++){\n        setupFormatFunc(p);\n        exports.applyMask(p, data);\n        // Calculate penalty\n        const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);\n        // Undo previously applied mask\n        exports.applyMask(p, data);\n        if (penalty < lowerPenalty) {\n            lowerPenalty = penalty;\n            bestPattern = p;\n        }\n    }\n    return bestPattern;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mask-pattern.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const VersionCheck = __webpack_require__(/*! ./version-check */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version-check.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/regex.js\");\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */ exports.NUMERIC = {\n    id: \"Numeric\",\n    bit: 1 << 0,\n    ccBits: [\n        10,\n        12,\n        14\n    ]\n};\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */ exports.ALPHANUMERIC = {\n    id: \"Alphanumeric\",\n    bit: 1 << 1,\n    ccBits: [\n        9,\n        11,\n        13\n    ]\n};\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */ exports.BYTE = {\n    id: \"Byte\",\n    bit: 1 << 2,\n    ccBits: [\n        8,\n        16,\n        16\n    ]\n};\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */ exports.KANJI = {\n    id: \"Kanji\",\n    bit: 1 << 3,\n    ccBits: [\n        8,\n        10,\n        12\n    ]\n};\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */ exports.MIXED = {\n    bit: -1\n};\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */ exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n    if (!mode.ccBits) throw new Error(\"Invalid mode: \" + mode);\n    if (!VersionCheck.isValid(version)) {\n        throw new Error(\"Invalid version: \" + version);\n    }\n    if (version >= 1 && version < 10) return mode.ccBits[0];\n    else if (version < 27) return mode.ccBits[1];\n    return mode.ccBits[2];\n};\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */ exports.getBestModeForData = function getBestModeForData(dataStr) {\n    if (Regex.testNumeric(dataStr)) return exports.NUMERIC;\n    else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;\n    else if (Regex.testKanji(dataStr)) return exports.KANJI;\n    else return exports.BYTE;\n};\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */ exports.toString = function toString(mode) {\n    if (mode && mode.id) return mode.id;\n    throw new Error(\"Invalid mode\");\n};\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */ exports.isValid = function isValid(mode) {\n    return mode && mode.bit && mode.ccBits;\n};\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */ function fromString(string) {\n    if (typeof string !== \"string\") {\n        throw new Error(\"Param is not a string\");\n    }\n    const lcStr = string.toLowerCase();\n    switch(lcStr){\n        case \"numeric\":\n            return exports.NUMERIC;\n        case \"alphanumeric\":\n            return exports.ALPHANUMERIC;\n        case \"kanji\":\n            return exports.KANJI;\n        case \"byte\":\n            return exports.BYTE;\n        default:\n            throw new Error(\"Unknown mode: \" + string);\n    }\n}\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */ exports.from = function from(value, defaultValue) {\n    if (exports.isValid(value)) {\n        return value;\n    }\n    try {\n        return fromString(value);\n    } catch (e) {\n        return defaultValue;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/numeric-data.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/numeric-data.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nfunction NumericData(data) {\n    this.mode = Mode.NUMERIC;\n    this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n    return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n    let i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for(i = 0; i + 3 <= this.data.length; i += 3){\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    const remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\nmodule.exports = NumericData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL251bWVyaWMtZGF0YS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFckIsU0FBU0MsWUFBYUMsSUFBSTtJQUN4QixJQUFJLENBQUNDLElBQUksR0FBR0osS0FBS0ssT0FBTztJQUN4QixJQUFJLENBQUNGLElBQUksR0FBR0EsS0FBS0csUUFBUTtBQUMzQjtBQUVBSixZQUFZSyxhQUFhLEdBQUcsU0FBU0EsY0FBZUMsTUFBTTtJQUN4RCxPQUFPLEtBQUtDLEtBQUtDLEtBQUssQ0FBQ0YsU0FBUyxLQUFNLFVBQVUsSUFBTSxTQUFVLElBQUssSUFBSSxJQUFLO0FBQ2hGO0FBRUFOLFlBQVlTLFNBQVMsQ0FBQ0MsU0FBUyxHQUFHLFNBQVNBO0lBQ3pDLE9BQU8sSUFBSSxDQUFDVCxJQUFJLENBQUNLLE1BQU07QUFDekI7QUFFQU4sWUFBWVMsU0FBUyxDQUFDSixhQUFhLEdBQUcsU0FBU0E7SUFDN0MsT0FBT0wsWUFBWUssYUFBYSxDQUFDLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxNQUFNO0FBQ25EO0FBRUFOLFlBQVlTLFNBQVMsQ0FBQ0UsS0FBSyxHQUFHLFNBQVNBLE1BQU9DLFNBQVM7SUFDckQsSUFBSUMsR0FBR0MsT0FBT0M7SUFFZCxnRUFBZ0U7SUFDaEUsK0RBQStEO0lBQy9ELElBQUtGLElBQUksR0FBR0EsSUFBSSxLQUFLLElBQUksQ0FBQ1osSUFBSSxDQUFDSyxNQUFNLEVBQUVPLEtBQUssRUFBRztRQUM3Q0MsUUFBUSxJQUFJLENBQUNiLElBQUksQ0FBQ2UsTUFBTSxDQUFDSCxHQUFHO1FBQzVCRSxRQUFRRSxTQUFTSCxPQUFPO1FBRXhCRixVQUFVTSxHQUFHLENBQUNILE9BQU87SUFDdkI7SUFFQSxtRUFBbUU7SUFDbkUseUVBQXlFO0lBQ3pFLE1BQU1JLGVBQWUsSUFBSSxDQUFDbEIsSUFBSSxDQUFDSyxNQUFNLEdBQUdPO0lBQ3hDLElBQUlNLGVBQWUsR0FBRztRQUNwQkwsUUFBUSxJQUFJLENBQUNiLElBQUksQ0FBQ2UsTUFBTSxDQUFDSDtRQUN6QkUsUUFBUUUsU0FBU0gsT0FBTztRQUV4QkYsVUFBVU0sR0FBRyxDQUFDSCxPQUFPSSxlQUFlLElBQUk7SUFDMUM7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL251bWVyaWMtZGF0YS5qcz8xNTc3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1vZGUgPSByZXF1aXJlKCcuL21vZGUnKVxuXG5mdW5jdGlvbiBOdW1lcmljRGF0YSAoZGF0YSkge1xuICB0aGlzLm1vZGUgPSBNb2RlLk5VTUVSSUNcbiAgdGhpcy5kYXRhID0gZGF0YS50b1N0cmluZygpXG59XG5cbk51bWVyaWNEYXRhLmdldEJpdHNMZW5ndGggPSBmdW5jdGlvbiBnZXRCaXRzTGVuZ3RoIChsZW5ndGgpIHtcbiAgcmV0dXJuIDEwICogTWF0aC5mbG9vcihsZW5ndGggLyAzKSArICgobGVuZ3RoICUgMykgPyAoKGxlbmd0aCAlIDMpICogMyArIDEpIDogMClcbn1cblxuTnVtZXJpY0RhdGEucHJvdG90eXBlLmdldExlbmd0aCA9IGZ1bmN0aW9uIGdldExlbmd0aCAoKSB7XG4gIHJldHVybiB0aGlzLmRhdGEubGVuZ3RoXG59XG5cbk51bWVyaWNEYXRhLnByb3RvdHlwZS5nZXRCaXRzTGVuZ3RoID0gZnVuY3Rpb24gZ2V0Qml0c0xlbmd0aCAoKSB7XG4gIHJldHVybiBOdW1lcmljRGF0YS5nZXRCaXRzTGVuZ3RoKHRoaXMuZGF0YS5sZW5ndGgpXG59XG5cbk51bWVyaWNEYXRhLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uIHdyaXRlIChiaXRCdWZmZXIpIHtcbiAgbGV0IGksIGdyb3VwLCB2YWx1ZVxuXG4gIC8vIFRoZSBpbnB1dCBkYXRhIHN0cmluZyBpcyBkaXZpZGVkIGludG8gZ3JvdXBzIG9mIHRocmVlIGRpZ2l0cyxcbiAgLy8gYW5kIGVhY2ggZ3JvdXAgaXMgY29udmVydGVkIHRvIGl0cyAxMC1iaXQgYmluYXJ5IGVxdWl2YWxlbnQuXG4gIGZvciAoaSA9IDA7IGkgKyAzIDw9IHRoaXMuZGF0YS5sZW5ndGg7IGkgKz0gMykge1xuICAgIGdyb3VwID0gdGhpcy5kYXRhLnN1YnN0cihpLCAzKVxuICAgIHZhbHVlID0gcGFyc2VJbnQoZ3JvdXAsIDEwKVxuXG4gICAgYml0QnVmZmVyLnB1dCh2YWx1ZSwgMTApXG4gIH1cblxuICAvLyBJZiB0aGUgbnVtYmVyIG9mIGlucHV0IGRpZ2l0cyBpcyBub3QgYW4gZXhhY3QgbXVsdGlwbGUgb2YgdGhyZWUsXG4gIC8vIHRoZSBmaW5hbCBvbmUgb3IgdHdvIGRpZ2l0cyBhcmUgY29udmVydGVkIHRvIDQgb3IgNyBiaXRzIHJlc3BlY3RpdmVseS5cbiAgY29uc3QgcmVtYWluaW5nTnVtID0gdGhpcy5kYXRhLmxlbmd0aCAtIGlcbiAgaWYgKHJlbWFpbmluZ051bSA+IDApIHtcbiAgICBncm91cCA9IHRoaXMuZGF0YS5zdWJzdHIoaSlcbiAgICB2YWx1ZSA9IHBhcnNlSW50KGdyb3VwLCAxMClcblxuICAgIGJpdEJ1ZmZlci5wdXQodmFsdWUsIHJlbWFpbmluZ051bSAqIDMgKyAxKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTnVtZXJpY0RhdGFcbiJdLCJuYW1lcyI6WyJNb2RlIiwicmVxdWlyZSIsIk51bWVyaWNEYXRhIiwiZGF0YSIsIm1vZGUiLCJOVU1FUklDIiwidG9TdHJpbmciLCJnZXRCaXRzTGVuZ3RoIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicHJvdG90eXBlIiwiZ2V0TGVuZ3RoIiwid3JpdGUiLCJiaXRCdWZmZXIiLCJpIiwiZ3JvdXAiLCJ2YWx1ZSIsInN1YnN0ciIsInBhcnNlSW50IiwicHV0IiwicmVtYWluaW5nTnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/numeric-data.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/polynomial.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/polynomial.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const GF = __webpack_require__(/*! ./galois-field */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/galois-field.js\");\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */ exports.mul = function mul(p1, p2) {\n    const coeff = new Uint8Array(p1.length + p2.length - 1);\n    for(let i = 0; i < p1.length; i++){\n        for(let j = 0; j < p2.length; j++){\n            coeff[i + j] ^= GF.mul(p1[i], p2[j]);\n        }\n    }\n    return coeff;\n};\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */ exports.mod = function mod(divident, divisor) {\n    let result = new Uint8Array(divident);\n    while(result.length - divisor.length >= 0){\n        const coeff = result[0];\n        for(let i = 0; i < divisor.length; i++){\n            result[i] ^= GF.mul(divisor[i], coeff);\n        }\n        // remove all zeros from buffer head\n        let offset = 0;\n        while(offset < result.length && result[offset] === 0)offset++;\n        result = result.slice(offset);\n    }\n    return result;\n};\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */ exports.generateECPolynomial = function generateECPolynomial(degree) {\n    let poly = new Uint8Array([\n        1\n    ]);\n    for(let i = 0; i < degree; i++){\n        poly = exports.mul(poly, new Uint8Array([\n            1,\n            GF.exp(i)\n        ]));\n    }\n    return poly;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3BvbHlub21pYWwuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBS0MsbUJBQU9BLENBQUM7QUFFbkI7Ozs7OztDQU1DLEdBQ0RDLFdBQVcsR0FBRyxTQUFTQyxJQUFLQyxFQUFFLEVBQUVDLEVBQUU7SUFDaEMsTUFBTUMsUUFBUSxJQUFJQyxXQUFXSCxHQUFHSSxNQUFNLEdBQUdILEdBQUdHLE1BQU0sR0FBRztJQUVyRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUwsR0FBR0ksTUFBTSxFQUFFQyxJQUFLO1FBQ2xDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxHQUFHRyxNQUFNLEVBQUVFLElBQUs7WUFDbENKLEtBQUssQ0FBQ0csSUFBSUMsRUFBRSxJQUFJVixHQUFHRyxHQUFHLENBQUNDLEVBQUUsQ0FBQ0ssRUFBRSxFQUFFSixFQUFFLENBQUNLLEVBQUU7UUFDckM7SUFDRjtJQUVBLE9BQU9KO0FBQ1Q7QUFFQTs7Ozs7O0NBTUMsR0FDREosV0FBVyxHQUFHLFNBQVNTLElBQUtDLFFBQVEsRUFBRUMsT0FBTztJQUMzQyxJQUFJQyxTQUFTLElBQUlQLFdBQVdLO0lBRTVCLE1BQU8sT0FBUUosTUFBTSxHQUFHSyxRQUFRTCxNQUFNLElBQUssRUFBRztRQUM1QyxNQUFNRixRQUFRUSxNQUFNLENBQUMsRUFBRTtRQUV2QixJQUFLLElBQUlMLElBQUksR0FBR0EsSUFBSUksUUFBUUwsTUFBTSxFQUFFQyxJQUFLO1lBQ3ZDSyxNQUFNLENBQUNMLEVBQUUsSUFBSVQsR0FBR0csR0FBRyxDQUFDVSxPQUFPLENBQUNKLEVBQUUsRUFBRUg7UUFDbEM7UUFFQSxvQ0FBb0M7UUFDcEMsSUFBSVMsU0FBUztRQUNiLE1BQU9BLFNBQVNELE9BQU9OLE1BQU0sSUFBSU0sTUFBTSxDQUFDQyxPQUFPLEtBQUssRUFBR0E7UUFDdkRELFNBQVNBLE9BQU9FLEtBQUssQ0FBQ0Q7SUFDeEI7SUFFQSxPQUFPRDtBQUNUO0FBRUE7Ozs7OztDQU1DLEdBQ0RaLDRCQUE0QixHQUFHLFNBQVNlLHFCQUFzQkMsTUFBTTtJQUNsRSxJQUFJQyxPQUFPLElBQUlaLFdBQVc7UUFBQztLQUFFO0lBQzdCLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJUyxRQUFRVCxJQUFLO1FBQy9CVSxPQUFPakIsUUFBUUMsR0FBRyxDQUFDZ0IsTUFBTSxJQUFJWixXQUFXO1lBQUM7WUFBR1AsR0FBR29CLEdBQUcsQ0FBQ1g7U0FBRztJQUN4RDtJQUVBLE9BQU9VO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktbW9kYWwvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS9wb2x5bm9taWFsLmpzPzZjYjIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR0YgPSByZXF1aXJlKCcuL2dhbG9pcy1maWVsZCcpXG5cbi8qKlxuICogTXVsdGlwbGllcyB0d28gcG9seW5vbWlhbHMgaW5zaWRlIEdhbG9pcyBGaWVsZFxuICpcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IHAxIFBvbHlub21pYWxcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IHAyIFBvbHlub21pYWxcbiAqIEByZXR1cm4ge1VpbnQ4QXJyYXl9ICAgIFByb2R1Y3Qgb2YgcDEgYW5kIHAyXG4gKi9cbmV4cG9ydHMubXVsID0gZnVuY3Rpb24gbXVsIChwMSwgcDIpIHtcbiAgY29uc3QgY29lZmYgPSBuZXcgVWludDhBcnJheShwMS5sZW5ndGggKyBwMi5sZW5ndGggLSAxKVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcDEubGVuZ3RoOyBpKyspIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHAyLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb2VmZltpICsgal0gXj0gR0YubXVsKHAxW2ldLCBwMltqXSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29lZmZcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHJlbWFpbmRlciBvZiBwb2x5bm9taWFscyBkaXZpc2lvblxuICpcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IGRpdmlkZW50IFBvbHlub21pYWxcbiAqIEBwYXJhbSAge1VpbnQ4QXJyYXl9IGRpdmlzb3IgIFBvbHlub21pYWxcbiAqIEByZXR1cm4ge1VpbnQ4QXJyYXl9ICAgICAgICAgIFJlbWFpbmRlclxuICovXG5leHBvcnRzLm1vZCA9IGZ1bmN0aW9uIG1vZCAoZGl2aWRlbnQsIGRpdmlzb3IpIHtcbiAgbGV0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGRpdmlkZW50KVxuXG4gIHdoaWxlICgocmVzdWx0Lmxlbmd0aCAtIGRpdmlzb3IubGVuZ3RoKSA+PSAwKSB7XG4gICAgY29uc3QgY29lZmYgPSByZXN1bHRbMF1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGl2aXNvci5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0W2ldIF49IEdGLm11bChkaXZpc29yW2ldLCBjb2VmZilcbiAgICB9XG5cbiAgICAvLyByZW1vdmUgYWxsIHplcm9zIGZyb20gYnVmZmVyIGhlYWRcbiAgICBsZXQgb2Zmc2V0ID0gMFxuICAgIHdoaWxlIChvZmZzZXQgPCByZXN1bHQubGVuZ3RoICYmIHJlc3VsdFtvZmZzZXRdID09PSAwKSBvZmZzZXQrK1xuICAgIHJlc3VsdCA9IHJlc3VsdC5zbGljZShvZmZzZXQpXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8qKlxuICogR2VuZXJhdGUgYW4gaXJyZWR1Y2libGUgZ2VuZXJhdG9yIHBvbHlub21pYWwgb2Ygc3BlY2lmaWVkIGRlZ3JlZVxuICogKHVzZWQgYnkgUmVlZC1Tb2xvbW9uIGVuY29kZXIpXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBkZWdyZWUgRGVncmVlIG9mIHRoZSBnZW5lcmF0b3IgcG9seW5vbWlhbFxuICogQHJldHVybiB7VWludDhBcnJheX0gICAgQnVmZmVyIGNvbnRhaW5pbmcgcG9seW5vbWlhbCBjb2VmZmljaWVudHNcbiAqL1xuZXhwb3J0cy5nZW5lcmF0ZUVDUG9seW5vbWlhbCA9IGZ1bmN0aW9uIGdlbmVyYXRlRUNQb2x5bm9taWFsIChkZWdyZWUpIHtcbiAgbGV0IHBvbHkgPSBuZXcgVWludDhBcnJheShbMV0pXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGVncmVlOyBpKyspIHtcbiAgICBwb2x5ID0gZXhwb3J0cy5tdWwocG9seSwgbmV3IFVpbnQ4QXJyYXkoWzEsIEdGLmV4cChpKV0pKVxuICB9XG5cbiAgcmV0dXJuIHBvbHlcbn1cbiJdLCJuYW1lcyI6WyJHRiIsInJlcXVpcmUiLCJleHBvcnRzIiwibXVsIiwicDEiLCJwMiIsImNvZWZmIiwiVWludDhBcnJheSIsImxlbmd0aCIsImkiLCJqIiwibW9kIiwiZGl2aWRlbnQiLCJkaXZpc29yIiwicmVzdWx0Iiwib2Zmc2V0Iiwic2xpY2UiLCJnZW5lcmF0ZUVDUG9seW5vbWlhbCIsImRlZ3JlZSIsInBvbHkiLCJleHAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/polynomial.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/qrcode.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/qrcode.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst BitBuffer = __webpack_require__(/*! ./bit-buffer */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-buffer.js\");\nconst BitMatrix = __webpack_require__(/*! ./bit-matrix */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/bit-matrix.js\");\nconst AlignmentPattern = __webpack_require__(/*! ./alignment-pattern */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alignment-pattern.js\");\nconst FinderPattern = __webpack_require__(/*! ./finder-pattern */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/finder-pattern.js\");\nconst MaskPattern = __webpack_require__(/*! ./mask-pattern */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mask-pattern.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ReedSolomonEncoder = __webpack_require__(/*! ./reed-solomon-encoder */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js\");\nconst Version = __webpack_require__(/*! ./version */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version.js\");\nconst FormatInfo = __webpack_require__(/*! ./format-info */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/format-info.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nconst Segments = __webpack_require__(/*! ./segments */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/segments.js\");\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/ /**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function setupFinderPattern(matrix, version) {\n    const size = matrix.size;\n    const pos = FinderPattern.getPositions(version);\n    for(let i = 0; i < pos.length; i++){\n        const row = pos[i][0];\n        const col = pos[i][1];\n        for(let r = -1; r <= 7; r++){\n            if (row + r <= -1 || size <= row + r) continue;\n            for(let c = -1; c <= 7; c++){\n                if (col + c <= -1 || size <= col + c) continue;\n                if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {\n                    matrix.set(row + r, col + c, true, true);\n                } else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */ function setupTimingPattern(matrix) {\n    const size = matrix.size;\n    for(let r = 8; r < size - 8; r++){\n        const value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function setupAlignmentPattern(matrix, version) {\n    const pos = AlignmentPattern.getPositions(version);\n    for(let i = 0; i < pos.length; i++){\n        const row = pos[i][0];\n        const col = pos[i][1];\n        for(let r = -2; r <= 2; r++){\n            for(let c = -2; c <= 2; c++){\n                if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {\n                    matrix.set(row + r, col + c, true, true);\n                } else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */ function setupVersionInfo(matrix, version) {\n    const size = matrix.size;\n    const bits = Version.getEncodedBits(version);\n    let row, col, mod;\n    for(let i = 0; i < 18; i++){\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = (bits >> i & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */ function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    const size = matrix.size;\n    const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n    let i, mod;\n    for(i = 0; i < 15; i++){\n        mod = (bits >> i & 1) === 1;\n        // vertical\n        if (i < 6) {\n            matrix.set(i, 8, mod, true);\n        } else if (i < 8) {\n            matrix.set(i + 1, 8, mod, true);\n        } else {\n            matrix.set(size - 15 + i, 8, mod, true);\n        }\n        // horizontal\n        if (i < 8) {\n            matrix.set(8, size - i - 1, mod, true);\n        } else if (i < 9) {\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\n        } else {\n            matrix.set(8, 15 - i - 1, mod, true);\n        }\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */ function setupData(matrix, data) {\n    const size = matrix.size;\n    let inc = -1;\n    let row = size - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for(let col = size - 1; col > 0; col -= 2){\n        if (col === 6) col--;\n        while(true){\n            for(let c = 0; c < 2; c++){\n                if (!matrix.isReserved(row, col - c)) {\n                    let dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n                    }\n                    matrix.set(row, col - c, dark);\n                    bitIndex--;\n                    if (bitIndex === -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */ function createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    const buffer = new BitBuffer();\n    segments.forEach(function(data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    const totalCodewords = Utils.getSymbolTotalCodewords(version);\n    const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n        buffer.put(0, 4);\n    }\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while(buffer.getLengthInBits() % 8 !== 0){\n        buffer.putBit(0);\n    }\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for(let i = 0; i < remainingByte; i++){\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    }\n    return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */ function createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    const totalCodewords = Utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    const dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    const blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    const rs = new ReedSolomonEncoder(ecCount);\n    let offset = 0;\n    const dcData = new Array(ecTotalBlocks);\n    const ecData = new Array(ecTotalBlocks);\n    let maxDataSize = 0;\n    const buffer = new Uint8Array(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for(let b = 0; b < ecTotalBlocks; b++){\n        const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    const data = new Uint8Array(totalCodewords);\n    let index = 0;\n    let i, r;\n    // Add data codewords\n    for(i = 0; i < maxDataSize; i++){\n        for(r = 0; r < ecTotalBlocks; r++){\n            if (i < dcData[r].length) {\n                data[index++] = dcData[r][i];\n            }\n        }\n    }\n    // Apped EC codewords\n    for(i = 0; i < ecCount; i++){\n        for(r = 0; r < ecTotalBlocks; r++){\n            data[index++] = ecData[r][i];\n        }\n    }\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */ function createSymbol(data, version, errorCorrectionLevel, maskPattern) {\n    let segments;\n    if (Array.isArray(data)) {\n        segments = Segments.fromArray(data);\n    } else if (typeof data === \"string\") {\n        let estimatedVersion = version;\n        if (!estimatedVersion) {\n            const rawSegments = Segments.rawSplit(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments = Segments.fromString(data, estimatedVersion || 40);\n    } else {\n        throw new Error(\"Invalid data\");\n    }\n    // Get the min version that can contain data\n    const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) {\n        throw new Error(\"The amount of data is too big to be stored in a QR Code\");\n    }\n    // If not specified, use min version as default\n    if (!version) {\n        version = bestVersion;\n    // Check if the specified version can contain the data\n    } else if (version < bestVersion) {\n        throw new Error(\"\\n\" + \"The chosen QR Code version cannot contain this amount of data.\\n\" + \"Minimum version required to store current data is: \" + bestVersion + \".\\n\");\n    }\n    const dataBits = createData(version, errorCorrectionLevel, segments);\n    // Allocate matrix buffer\n    const moduleCount = Utils.getSymbolSize(version);\n    const modules = new BitMatrix(moduleCount);\n    // Add function modules\n    setupFinderPattern(modules, version);\n    setupTimingPattern(modules);\n    setupAlignmentPattern(modules, version);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version >= 7) {\n        setupVersionInfo(modules, version);\n    }\n    // Add data codewords\n    setupData(modules, dataBits);\n    if (isNaN(maskPattern)) {\n        // Find best mask pattern\n        maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    }\n    // Apply mask pattern\n    MaskPattern.applyMask(maskPattern, modules);\n    // Replace format info bits with correct values\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern);\n    return {\n        modules: modules,\n        version: version,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern,\n        segments: segments\n    };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */ exports.create = function create(data, options) {\n    if (typeof data === \"undefined\" || data === \"\") {\n        throw new Error(\"No input text\");\n    }\n    let errorCorrectionLevel = ECLevel.M;\n    let version;\n    let mask;\n    if (typeof options !== \"undefined\") {\n        // Use higher error correction level as default\n        errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);\n        version = Version.from(options.version);\n        mask = MaskPattern.from(options.maskPattern);\n        if (options.toSJISFunc) {\n            Utils.setToSJISFunction(options.toSJISFunc);\n        }\n    }\n    return createSymbol(data, version, errorCorrectionLevel, mask);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/qrcode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Polynomial = __webpack_require__(/*! ./polynomial */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/polynomial.js\");\nfunction ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree) this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */ ReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = Polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */ ReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) {\n        throw new Error(\"Encoder not initialized\");\n    }\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    const paddedData = new Uint8Array(data.length + this.degree);\n    paddedData.set(data);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    const remainder = Polynomial.mod(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    const start = this.degree - remainder.length;\n    if (start > 0) {\n        const buff = new Uint8Array(this.degree);\n        buff.set(remainder, start);\n        return buff;\n    }\n    return remainder;\n};\nmodule.exports = ReedSolomonEncoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZWQtc29sb21vbi1lbmNvZGVyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUUzQixTQUFTQyxtQkFBb0JDLE1BQU07SUFDakMsSUFBSSxDQUFDQyxPQUFPLEdBQUdDO0lBQ2YsSUFBSSxDQUFDRixNQUFNLEdBQUdBO0lBRWQsSUFBSSxJQUFJLENBQUNBLE1BQU0sRUFBRSxJQUFJLENBQUNHLFVBQVUsQ0FBQyxJQUFJLENBQUNILE1BQU07QUFDOUM7QUFFQTs7Ozs7Q0FLQyxHQUNERCxtQkFBbUJLLFNBQVMsQ0FBQ0QsVUFBVSxHQUFHLFNBQVNBLFdBQVlILE1BQU07SUFDbkUsNkNBQTZDO0lBQzdDLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtJQUNkLElBQUksQ0FBQ0MsT0FBTyxHQUFHSixXQUFXUSxvQkFBb0IsQ0FBQyxJQUFJLENBQUNMLE1BQU07QUFDNUQ7QUFFQTs7Ozs7Q0FLQyxHQUNERCxtQkFBbUJLLFNBQVMsQ0FBQ0UsTUFBTSxHQUFHLFNBQVNBLE9BQVFDLElBQUk7SUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQ04sT0FBTyxFQUFFO1FBQ2pCLE1BQU0sSUFBSU8sTUFBTTtJQUNsQjtJQUVBLG1DQUFtQztJQUNuQyx5Q0FBeUM7SUFDekMsTUFBTUMsYUFBYSxJQUFJQyxXQUFXSCxLQUFLSSxNQUFNLEdBQUcsSUFBSSxDQUFDWCxNQUFNO0lBQzNEUyxXQUFXRyxHQUFHLENBQUNMO0lBRWYscUZBQXFGO0lBQ3JGLDRCQUE0QjtJQUM1QixNQUFNTSxZQUFZaEIsV0FBV2lCLEdBQUcsQ0FBQ0wsWUFBWSxJQUFJLENBQUNSLE9BQU87SUFFekQsd0VBQXdFO0lBQ3hFLG9FQUFvRTtJQUNwRSxxRUFBcUU7SUFDckUsTUFBTWMsUUFBUSxJQUFJLENBQUNmLE1BQU0sR0FBR2EsVUFBVUYsTUFBTTtJQUM1QyxJQUFJSSxRQUFRLEdBQUc7UUFDYixNQUFNQyxPQUFPLElBQUlOLFdBQVcsSUFBSSxDQUFDVixNQUFNO1FBQ3ZDZ0IsS0FBS0osR0FBRyxDQUFDQyxXQUFXRTtRQUVwQixPQUFPQztJQUNUO0lBRUEsT0FBT0g7QUFDVDtBQUVBSSxPQUFPQyxPQUFPLEdBQUduQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZWQtc29sb21vbi1lbmNvZGVyLmpzPzIzOTkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUG9seW5vbWlhbCA9IHJlcXVpcmUoJy4vcG9seW5vbWlhbCcpXG5cbmZ1bmN0aW9uIFJlZWRTb2xvbW9uRW5jb2RlciAoZGVncmVlKSB7XG4gIHRoaXMuZ2VuUG9seSA9IHVuZGVmaW5lZFxuICB0aGlzLmRlZ3JlZSA9IGRlZ3JlZVxuXG4gIGlmICh0aGlzLmRlZ3JlZSkgdGhpcy5pbml0aWFsaXplKHRoaXMuZGVncmVlKVxufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIGVuY29kZXIuXG4gKiBUaGUgaW5wdXQgcGFyYW0gc2hvdWxkIGNvcnJlc3BvbmQgdG8gdGhlIG51bWJlciBvZiBlcnJvciBjb3JyZWN0aW9uIGNvZGV3b3Jkcy5cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGRlZ3JlZVxuICovXG5SZWVkU29sb21vbkVuY29kZXIucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiBpbml0aWFsaXplIChkZWdyZWUpIHtcbiAgLy8gY3JlYXRlIGFuIGlycmVkdWNpYmxlIGdlbmVyYXRvciBwb2x5bm9taWFsXG4gIHRoaXMuZGVncmVlID0gZGVncmVlXG4gIHRoaXMuZ2VuUG9seSA9IFBvbHlub21pYWwuZ2VuZXJhdGVFQ1BvbHlub21pYWwodGhpcy5kZWdyZWUpXG59XG5cbi8qKlxuICogRW5jb2RlcyBhIGNodW5rIG9mIGRhdGFcbiAqXG4gKiBAcGFyYW0gIHtVaW50OEFycmF5fSBkYXRhIEJ1ZmZlciBjb250YWluaW5nIGlucHV0IGRhdGFcbiAqIEByZXR1cm4ge1VpbnQ4QXJyYXl9ICAgICAgQnVmZmVyIGNvbnRhaW5pbmcgZW5jb2RlZCBkYXRhXG4gKi9cblJlZWRTb2xvbW9uRW5jb2Rlci5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24gZW5jb2RlIChkYXRhKSB7XG4gIGlmICghdGhpcy5nZW5Qb2x5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFbmNvZGVyIG5vdCBpbml0aWFsaXplZCcpXG4gIH1cblxuICAvLyBDYWxjdWxhdGUgRUMgZm9yIHRoaXMgZGF0YSBibG9ja1xuICAvLyBleHRlbmRzIGRhdGEgc2l6ZSB0byBkYXRhK2dlblBvbHkgc2l6ZVxuICBjb25zdCBwYWRkZWREYXRhID0gbmV3IFVpbnQ4QXJyYXkoZGF0YS5sZW5ndGggKyB0aGlzLmRlZ3JlZSlcbiAgcGFkZGVkRGF0YS5zZXQoZGF0YSlcblxuICAvLyBUaGUgZXJyb3IgY29ycmVjdGlvbiBjb2Rld29yZHMgYXJlIHRoZSByZW1haW5kZXIgYWZ0ZXIgZGl2aWRpbmcgdGhlIGRhdGEgY29kZXdvcmRzXG4gIC8vIGJ5IGEgZ2VuZXJhdG9yIHBvbHlub21pYWxcbiAgY29uc3QgcmVtYWluZGVyID0gUG9seW5vbWlhbC5tb2QocGFkZGVkRGF0YSwgdGhpcy5nZW5Qb2x5KVxuXG4gIC8vIHJldHVybiBFQyBkYXRhIGJsb2NrcyAobGFzdCBuIGJ5dGUsIHdoZXJlIG4gaXMgdGhlIGRlZ3JlZSBvZiBnZW5Qb2x5KVxuICAvLyBJZiBjb2VmZmljaWVudHMgbnVtYmVyIGluIHJlbWFpbmRlciBhcmUgbGVzcyB0aGFuIGdlblBvbHkgZGVncmVlLFxuICAvLyBwYWQgd2l0aCAwcyB0byB0aGUgbGVmdCB0byByZWFjaCB0aGUgbmVlZGVkIG51bWJlciBvZiBjb2VmZmljaWVudHNcbiAgY29uc3Qgc3RhcnQgPSB0aGlzLmRlZ3JlZSAtIHJlbWFpbmRlci5sZW5ndGhcbiAgaWYgKHN0YXJ0ID4gMCkge1xuICAgIGNvbnN0IGJ1ZmYgPSBuZXcgVWludDhBcnJheSh0aGlzLmRlZ3JlZSlcbiAgICBidWZmLnNldChyZW1haW5kZXIsIHN0YXJ0KVxuXG4gICAgcmV0dXJuIGJ1ZmZcbiAgfVxuXG4gIHJldHVybiByZW1haW5kZXJcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZWVkU29sb21vbkVuY29kZXJcbiJdLCJuYW1lcyI6WyJQb2x5bm9taWFsIiwicmVxdWlyZSIsIlJlZWRTb2xvbW9uRW5jb2RlciIsImRlZ3JlZSIsImdlblBvbHkiLCJ1bmRlZmluZWQiLCJpbml0aWFsaXplIiwicHJvdG90eXBlIiwiZ2VuZXJhdGVFQ1BvbHlub21pYWwiLCJlbmNvZGUiLCJkYXRhIiwiRXJyb3IiLCJwYWRkZWREYXRhIiwiVWludDhBcnJheSIsImxlbmd0aCIsInNldCIsInJlbWFpbmRlciIsIm1vZCIsInN0YXJ0IiwiYnVmZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/reed-solomon-encoder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/regex.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/regex.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("const numeric = \"[0-9]+\";\nconst alphanumeric = \"[A-Z $%*+\\\\-./:]+\";\nlet kanji = \"(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|\" + \"[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|\" + \"[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|\" + \"[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+\";\nkanji = kanji.replace(/u/g, \"\\\\u\");\nconst byte = \"(?:(?![A-Z0-9 $%*+\\\\-./:]|\" + kanji + \")(?:.|[\\r\\n]))+\";\nexports.KANJI = new RegExp(kanji, \"g\");\nexports.BYTE_KANJI = new RegExp(\"[^A-Z0-9 $%*+\\\\-./:]+\", \"g\");\nexports.BYTE = new RegExp(byte, \"g\");\nexports.NUMERIC = new RegExp(numeric, \"g\");\nexports.ALPHANUMERIC = new RegExp(alphanumeric, \"g\");\nconst TEST_KANJI = new RegExp(\"^\" + kanji + \"$\");\nconst TEST_NUMERIC = new RegExp(\"^\" + numeric + \"$\");\nconst TEST_ALPHANUMERIC = new RegExp(\"^[A-Z0-9 $%*+\\\\-./:]+$\");\nexports.testKanji = function testKanji(str) {\n    return TEST_KANJI.test(str);\n};\nexports.testNumeric = function testNumeric(str) {\n    return TEST_NUMERIC.test(str);\n};\nexports.testAlphanumeric = function testAlphanumeric(str) {\n    return TEST_ALPHANUMERIC.test(str);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3JlZ2V4LmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVU7QUFDaEIsTUFBTUMsZUFBZTtBQUNyQixJQUFJQyxRQUFRLGtEQUNWLG1FQUNBLDBEQUNBO0FBQ0ZBLFFBQVFBLE1BQU1DLE9BQU8sQ0FBQyxNQUFNO0FBRTVCLE1BQU1DLE9BQU8sK0JBQStCRixRQUFRO0FBRXBERyxhQUFhLEdBQUcsSUFBSUUsT0FBT0wsT0FBTztBQUNsQ0csa0JBQWtCLEdBQUcsSUFBSUUsT0FBTyx5QkFBeUI7QUFDekRGLFlBQVksR0FBRyxJQUFJRSxPQUFPSCxNQUFNO0FBQ2hDQyxlQUFlLEdBQUcsSUFBSUUsT0FBT1AsU0FBUztBQUN0Q0ssb0JBQW9CLEdBQUcsSUFBSUUsT0FBT04sY0FBYztBQUVoRCxNQUFNVyxhQUFhLElBQUlMLE9BQU8sTUFBTUwsUUFBUTtBQUM1QyxNQUFNVyxlQUFlLElBQUlOLE9BQU8sTUFBTVAsVUFBVTtBQUNoRCxNQUFNYyxvQkFBb0IsSUFBSVAsT0FBTztBQUVyQ0YsaUJBQWlCLEdBQUcsU0FBU1UsVUFBV0MsR0FBRztJQUN6QyxPQUFPSixXQUFXSyxJQUFJLENBQUNEO0FBQ3pCO0FBRUFYLG1CQUFtQixHQUFHLFNBQVNhLFlBQWFGLEdBQUc7SUFDN0MsT0FBT0gsYUFBYUksSUFBSSxDQUFDRDtBQUMzQjtBQUVBWCx3QkFBd0IsR0FBRyxTQUFTYyxpQkFBa0JILEdBQUc7SUFDdkQsT0FBT0Ysa0JBQWtCRyxJQUFJLENBQUNEO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvcmVnZXguanM/ZjNkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBudW1lcmljID0gJ1swLTldKydcbmNvbnN0IGFscGhhbnVtZXJpYyA9ICdbQS1aICQlKitcXFxcLS4vOl0rJ1xubGV0IGthbmppID0gJyg/Olt1MzAwMC11MzAzRl18W3UzMDQwLXUzMDlGXXxbdTMwQTAtdTMwRkZdfCcgK1xuICAnW3VGRjAwLXVGRkVGXXxbdTRFMDAtdTlGQUZdfFt1MjYwNS11MjYwNl18W3UyMTkwLXUyMTk1XXx1MjAzQnwnICtcbiAgJ1t1MjAxMHUyMDE1dTIwMTh1MjAxOXUyMDI1dTIwMjZ1MjAxQ3UyMDFEdTIyMjV1MjI2MF18JyArXG4gICdbdTAzOTEtdTA0NTFdfFt1MDBBN3UwMEE4dTAwQjF1MDBCNHUwMEQ3dTAwRjddKSsnXG5rYW5qaSA9IGthbmppLnJlcGxhY2UoL3UvZywgJ1xcXFx1JylcblxuY29uc3QgYnl0ZSA9ICcoPzooPyFbQS1aMC05ICQlKitcXFxcLS4vOl18JyArIGthbmppICsgJykoPzoufFtcXHJcXG5dKSkrJ1xuXG5leHBvcnRzLktBTkpJID0gbmV3IFJlZ0V4cChrYW5qaSwgJ2cnKVxuZXhwb3J0cy5CWVRFX0tBTkpJID0gbmV3IFJlZ0V4cCgnW15BLVowLTkgJCUqK1xcXFwtLi86XSsnLCAnZycpXG5leHBvcnRzLkJZVEUgPSBuZXcgUmVnRXhwKGJ5dGUsICdnJylcbmV4cG9ydHMuTlVNRVJJQyA9IG5ldyBSZWdFeHAobnVtZXJpYywgJ2cnKVxuZXhwb3J0cy5BTFBIQU5VTUVSSUMgPSBuZXcgUmVnRXhwKGFscGhhbnVtZXJpYywgJ2cnKVxuXG5jb25zdCBURVNUX0tBTkpJID0gbmV3IFJlZ0V4cCgnXicgKyBrYW5qaSArICckJylcbmNvbnN0IFRFU1RfTlVNRVJJQyA9IG5ldyBSZWdFeHAoJ14nICsgbnVtZXJpYyArICckJylcbmNvbnN0IFRFU1RfQUxQSEFOVU1FUklDID0gbmV3IFJlZ0V4cCgnXltBLVowLTkgJCUqK1xcXFwtLi86XSskJylcblxuZXhwb3J0cy50ZXN0S2FuamkgPSBmdW5jdGlvbiB0ZXN0S2FuamkgKHN0cikge1xuICByZXR1cm4gVEVTVF9LQU5KSS50ZXN0KHN0cilcbn1cblxuZXhwb3J0cy50ZXN0TnVtZXJpYyA9IGZ1bmN0aW9uIHRlc3ROdW1lcmljIChzdHIpIHtcbiAgcmV0dXJuIFRFU1RfTlVNRVJJQy50ZXN0KHN0cilcbn1cblxuZXhwb3J0cy50ZXN0QWxwaGFudW1lcmljID0gZnVuY3Rpb24gdGVzdEFscGhhbnVtZXJpYyAoc3RyKSB7XG4gIHJldHVybiBURVNUX0FMUEhBTlVNRVJJQy50ZXN0KHN0cilcbn1cbiJdLCJuYW1lcyI6WyJudW1lcmljIiwiYWxwaGFudW1lcmljIiwia2FuamkiLCJyZXBsYWNlIiwiYnl0ZSIsImV4cG9ydHMiLCJLQU5KSSIsIlJlZ0V4cCIsIkJZVEVfS0FOSkkiLCJCWVRFIiwiTlVNRVJJQyIsIkFMUEhBTlVNRVJJQyIsIlRFU1RfS0FOSkkiLCJURVNUX05VTUVSSUMiLCJURVNUX0FMUEhBTlVNRVJJQyIsInRlc3RLYW5qaSIsInN0ciIsInRlc3QiLCJ0ZXN0TnVtZXJpYyIsInRlc3RBbHBoYW51bWVyaWMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/regex.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/segments.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/segments.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nconst NumericData = __webpack_require__(/*! ./numeric-data */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/numeric-data.js\");\nconst AlphanumericData = __webpack_require__(/*! ./alphanumeric-data */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/alphanumeric-data.js\");\nconst ByteData = __webpack_require__(/*! ./byte-data */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/byte-data.js\");\nconst KanjiData = __webpack_require__(/*! ./kanji-data */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/kanji-data.js\");\nconst Regex = __webpack_require__(/*! ./regex */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/regex.js\");\nconst Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\");\nconst dijkstra = __webpack_require__(/*! dijkstrajs */ \"(ssr)/../node_modules/dijkstrajs/dijkstra.js\");\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */ function getStringByteLength(str) {\n    return unescape(encodeURIComponent(str)).length;\n}\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */ function getSegments(regex, mode, str) {\n    const segments = [];\n    let result;\n    while((result = regex.exec(str)) !== null){\n        segments.push({\n            data: result[0],\n            index: result.index,\n            mode: mode,\n            length: result[0].length\n        });\n    }\n    return segments;\n}\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */ function getSegmentsFromString(dataStr) {\n    const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);\n    const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);\n    let byteSegs;\n    let kanjiSegs;\n    if (Utils.isKanjiModeEnabled()) {\n        byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);\n        kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);\n    } else {\n        byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);\n        kanjiSegs = [];\n    }\n    const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n    return segs.sort(function(s1, s2) {\n        return s1.index - s2.index;\n    }).map(function(obj) {\n        return {\n            data: obj.data,\n            mode: obj.mode,\n            length: obj.length\n        };\n    });\n}\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */ function getSegmentBitsLength(length, mode) {\n    switch(mode){\n        case Mode.NUMERIC:\n            return NumericData.getBitsLength(length);\n        case Mode.ALPHANUMERIC:\n            return AlphanumericData.getBitsLength(length);\n        case Mode.KANJI:\n            return KanjiData.getBitsLength(length);\n        case Mode.BYTE:\n            return ByteData.getBitsLength(length);\n    }\n}\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */ function mergeSegments(segs) {\n    return segs.reduce(function(acc, curr) {\n        const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n        if (prevSeg && prevSeg.mode === curr.mode) {\n            acc[acc.length - 1].data += curr.data;\n            return acc;\n        }\n        acc.push(curr);\n        return acc;\n    }, []);\n}\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */ function buildNodes(segs) {\n    const nodes = [];\n    for(let i = 0; i < segs.length; i++){\n        const seg = segs[i];\n        switch(seg.mode){\n            case Mode.NUMERIC:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: Mode.ALPHANUMERIC,\n                        length: seg.length\n                    },\n                    {\n                        data: seg.data,\n                        mode: Mode.BYTE,\n                        length: seg.length\n                    }\n                ]);\n                break;\n            case Mode.ALPHANUMERIC:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: Mode.BYTE,\n                        length: seg.length\n                    }\n                ]);\n                break;\n            case Mode.KANJI:\n                nodes.push([\n                    seg,\n                    {\n                        data: seg.data,\n                        mode: Mode.BYTE,\n                        length: getStringByteLength(seg.data)\n                    }\n                ]);\n                break;\n            case Mode.BYTE:\n                nodes.push([\n                    {\n                        data: seg.data,\n                        mode: Mode.BYTE,\n                        length: getStringByteLength(seg.data)\n                    }\n                ]);\n        }\n    }\n    return nodes;\n}\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */ function buildGraph(nodes, version) {\n    const table = {};\n    const graph = {\n        start: {}\n    };\n    let prevNodeIds = [\n        \"start\"\n    ];\n    for(let i = 0; i < nodes.length; i++){\n        const nodeGroup = nodes[i];\n        const currentNodeIds = [];\n        for(let j = 0; j < nodeGroup.length; j++){\n            const node = nodeGroup[j];\n            const key = \"\" + i + j;\n            currentNodeIds.push(key);\n            table[key] = {\n                node: node,\n                lastCount: 0\n            };\n            graph[key] = {};\n            for(let n = 0; n < prevNodeIds.length; n++){\n                const prevNodeId = prevNodeIds[n];\n                if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                    graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                    table[prevNodeId].lastCount += node.length;\n                } else {\n                    if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;\n                    graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n                    ;\n                }\n            }\n        }\n        prevNodeIds = currentNodeIds;\n    }\n    for(let n = 0; n < prevNodeIds.length; n++){\n        graph[prevNodeIds[n]].end = 0;\n    }\n    return {\n        map: graph,\n        table: table\n    };\n}\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */ function buildSingleSegment(data, modesHint) {\n    let mode;\n    const bestMode = Mode.getBestModeForData(data);\n    mode = Mode.from(modesHint, bestMode);\n    // Make sure data can be encoded\n    if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n        throw new Error('\"' + data + '\"' + \" cannot be encoded with mode \" + Mode.toString(mode) + \".\\n Suggested mode is: \" + Mode.toString(bestMode));\n    }\n    // Use Mode.BYTE if Kanji support is disabled\n    if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n        mode = Mode.BYTE;\n    }\n    switch(mode){\n        case Mode.NUMERIC:\n            return new NumericData(data);\n        case Mode.ALPHANUMERIC:\n            return new AlphanumericData(data);\n        case Mode.KANJI:\n            return new KanjiData(data);\n        case Mode.BYTE:\n            return new ByteData(data);\n    }\n}\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */ exports.fromArray = function fromArray(array) {\n    return array.reduce(function(acc, seg) {\n        if (typeof seg === \"string\") {\n            acc.push(buildSingleSegment(seg, null));\n        } else if (seg.data) {\n            acc.push(buildSingleSegment(seg.data, seg.mode));\n        }\n        return acc;\n    }, []);\n};\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */ exports.fromString = function fromString(data, version) {\n    const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());\n    const nodes = buildNodes(segs);\n    const graph = buildGraph(nodes, version);\n    const path = dijkstra.find_path(graph.map, \"start\", \"end\");\n    const optimizedSegs = [];\n    for(let i = 1; i < path.length - 1; i++){\n        optimizedSegs.push(graph.table[path[i]].node);\n    }\n    return exports.fromArray(mergeSegments(optimizedSegs));\n};\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */ exports.rawSplit = function rawSplit(data) {\n    return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/segments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("let toSJISFunction;\nconst CODEWORDS_COUNT = [\n    0,\n    26,\n    44,\n    70,\n    100,\n    134,\n    172,\n    196,\n    242,\n    292,\n    346,\n    404,\n    466,\n    532,\n    581,\n    655,\n    733,\n    815,\n    901,\n    991,\n    1085,\n    1156,\n    1258,\n    1364,\n    1474,\n    1588,\n    1706,\n    1828,\n    1921,\n    2051,\n    2185,\n    2323,\n    2465,\n    2611,\n    2761,\n    2876,\n    3034,\n    3196,\n    3362,\n    3532,\n    3706\n];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */ exports.getSymbolSize = function getSymbolSize(version) {\n    if (!version) throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */ exports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n    return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */ exports.getBCHDigit = function(data) {\n    let digit = 0;\n    while(data !== 0){\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\nexports.setToSJISFunction = function setToSJISFunction(f) {\n    if (typeof f !== \"function\") {\n        throw new Error('\"toSJISFunc\" is not a valid function.');\n    }\n    toSJISFunction = f;\n};\nexports.isKanjiModeEnabled = function() {\n    return typeof toSJISFunction !== \"undefined\";\n};\nexports.toSJIS = function toSJIS(kanji) {\n    return toSJISFunction(kanji);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBO0FBQ0osTUFBTUMsa0JBQWtCO0lBQ3RCO0lBQ0E7SUFBSTtJQUFJO0lBQUk7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFDMUM7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFBSztJQUFLO0lBQUs7SUFDN0M7SUFBTTtJQUFNO0lBQU07SUFBTTtJQUFNO0lBQU07SUFBTTtJQUFNO0lBQU07SUFDdEQ7SUFBTTtJQUFNO0lBQU07SUFBTTtJQUFNO0lBQU07SUFBTTtJQUFNO0lBQU07Q0FDdkQ7QUFFRDs7Ozs7Q0FLQyxHQUNEQyxxQkFBcUIsR0FBRyxTQUFTQyxjQUFlQyxPQUFPO0lBQ3JELElBQUksQ0FBQ0EsU0FBUyxNQUFNLElBQUlDLE1BQU07SUFDOUIsSUFBSUQsVUFBVSxLQUFLQSxVQUFVLElBQUksTUFBTSxJQUFJQyxNQUFNO0lBQ2pELE9BQU9ELFVBQVUsSUFBSTtBQUN2QjtBQUVBOzs7OztDQUtDLEdBQ0RGLCtCQUErQixHQUFHLFNBQVNJLHdCQUF5QkYsT0FBTztJQUN6RSxPQUFPSCxlQUFlLENBQUNHLFFBQVE7QUFDakM7QUFFQTs7Ozs7Q0FLQyxHQUNERixtQkFBbUIsR0FBRyxTQUFVTSxJQUFJO0lBQ2xDLElBQUlDLFFBQVE7SUFFWixNQUFPRCxTQUFTLEVBQUc7UUFDakJDO1FBQ0FELFVBQVU7SUFDWjtJQUVBLE9BQU9DO0FBQ1Q7QUFFQVAseUJBQXlCLEdBQUcsU0FBU1Esa0JBQW1CQyxDQUFDO0lBQ3ZELElBQUksT0FBT0EsTUFBTSxZQUFZO1FBQzNCLE1BQU0sSUFBSU4sTUFBTTtJQUNsQjtJQUVBTCxpQkFBaUJXO0FBQ25CO0FBRUFULDBCQUEwQixHQUFHO0lBQzNCLE9BQU8sT0FBT0YsbUJBQW1CO0FBQ25DO0FBRUFFLGNBQWMsR0FBRyxTQUFTVyxPQUFRQyxLQUFLO0lBQ3JDLE9BQU9kLGVBQWVjO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2NvcmUvdXRpbHMuanM/MGJkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgdG9TSklTRnVuY3Rpb25cbmNvbnN0IENPREVXT1JEU19DT1VOVCA9IFtcbiAgMCwgLy8gTm90IHVzZWRcbiAgMjYsIDQ0LCA3MCwgMTAwLCAxMzQsIDE3MiwgMTk2LCAyNDIsIDI5MiwgMzQ2LFxuICA0MDQsIDQ2NiwgNTMyLCA1ODEsIDY1NSwgNzMzLCA4MTUsIDkwMSwgOTkxLCAxMDg1LFxuICAxMTU2LCAxMjU4LCAxMzY0LCAxNDc0LCAxNTg4LCAxNzA2LCAxODI4LCAxOTIxLCAyMDUxLCAyMTg1LFxuICAyMzIzLCAyNDY1LCAyNjExLCAyNzYxLCAyODc2LCAzMDM0LCAzMTk2LCAzMzYyLCAzNTMyLCAzNzA2XG5dXG5cbi8qKlxuICogUmV0dXJucyB0aGUgUVIgQ29kZSBzaXplIGZvciB0aGUgc3BlY2lmaWVkIHZlcnNpb25cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHZlcnNpb24gUVIgQ29kZSB2ZXJzaW9uXG4gKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgICAgc2l6ZSBvZiBRUiBjb2RlXG4gKi9cbmV4cG9ydHMuZ2V0U3ltYm9sU2l6ZSA9IGZ1bmN0aW9uIGdldFN5bWJvbFNpemUgKHZlcnNpb24pIHtcbiAgaWYgKCF2ZXJzaW9uKSB0aHJvdyBuZXcgRXJyb3IoJ1widmVyc2lvblwiIGNhbm5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZCcpXG4gIGlmICh2ZXJzaW9uIDwgMSB8fCB2ZXJzaW9uID4gNDApIHRocm93IG5ldyBFcnJvcignXCJ2ZXJzaW9uXCIgc2hvdWxkIGJlIGluIHJhbmdlIGZyb20gMSB0byA0MCcpXG4gIHJldHVybiB2ZXJzaW9uICogNCArIDE3XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgdG90YWwgbnVtYmVyIG9mIGNvZGV3b3JkcyB1c2VkIHRvIHN0b3JlIGRhdGEgYW5kIEVDIGluZm9ybWF0aW9uLlxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gdmVyc2lvbiBRUiBDb2RlIHZlcnNpb25cbiAqIEByZXR1cm4ge051bWJlcn0gICAgICAgICBEYXRhIGxlbmd0aCBpbiBiaXRzXG4gKi9cbmV4cG9ydHMuZ2V0U3ltYm9sVG90YWxDb2Rld29yZHMgPSBmdW5jdGlvbiBnZXRTeW1ib2xUb3RhbENvZGV3b3JkcyAodmVyc2lvbikge1xuICByZXR1cm4gQ09ERVdPUkRTX0NPVU5UW3ZlcnNpb25dXG59XG5cbi8qKlxuICogRW5jb2RlIGRhdGEgd2l0aCBCb3NlLUNoYXVkaHVyaS1Ib2NxdWVuZ2hlbVxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gZGF0YSBWYWx1ZSB0byBlbmNvZGVcbiAqIEByZXR1cm4ge051bWJlcn0gICAgICBFbmNvZGVkIHZhbHVlXG4gKi9cbmV4cG9ydHMuZ2V0QkNIRGlnaXQgPSBmdW5jdGlvbiAoZGF0YSkge1xuICBsZXQgZGlnaXQgPSAwXG5cbiAgd2hpbGUgKGRhdGEgIT09IDApIHtcbiAgICBkaWdpdCsrXG4gICAgZGF0YSA+Pj49IDFcbiAgfVxuXG4gIHJldHVybiBkaWdpdFxufVxuXG5leHBvcnRzLnNldFRvU0pJU0Z1bmN0aW9uID0gZnVuY3Rpb24gc2V0VG9TSklTRnVuY3Rpb24gKGYpIHtcbiAgaWYgKHR5cGVvZiBmICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdcInRvU0pJU0Z1bmNcIiBpcyBub3QgYSB2YWxpZCBmdW5jdGlvbi4nKVxuICB9XG5cbiAgdG9TSklTRnVuY3Rpb24gPSBmXG59XG5cbmV4cG9ydHMuaXNLYW5qaU1vZGVFbmFibGVkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIHRvU0pJU0Z1bmN0aW9uICE9PSAndW5kZWZpbmVkJ1xufVxuXG5leHBvcnRzLnRvU0pJUyA9IGZ1bmN0aW9uIHRvU0pJUyAoa2FuamkpIHtcbiAgcmV0dXJuIHRvU0pJU0Z1bmN0aW9uKGthbmppKVxufVxuIl0sIm5hbWVzIjpbInRvU0pJU0Z1bmN0aW9uIiwiQ09ERVdPUkRTX0NPVU5UIiwiZXhwb3J0cyIsImdldFN5bWJvbFNpemUiLCJ2ZXJzaW9uIiwiRXJyb3IiLCJnZXRTeW1ib2xUb3RhbENvZGV3b3JkcyIsImdldEJDSERpZ2l0IiwiZGF0YSIsImRpZ2l0Iiwic2V0VG9TSklTRnVuY3Rpb24iLCJmIiwiaXNLYW5qaU1vZGVFbmFibGVkIiwidG9TSklTIiwia2FuamkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version-check.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version-check.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */ exports.isValid = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9jb3JlL3ZlcnNpb24tY2hlY2suanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0NBS0MsR0FDREEsZUFBZSxHQUFHLFNBQVNDLFFBQVNDLE9BQU87SUFDekMsT0FBTyxDQUFDQyxNQUFNRCxZQUFZQSxXQUFXLEtBQUtBLFdBQVc7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktbW9kYWwvbm9kZV9tb2R1bGVzL3FyY29kZS9saWIvY29yZS92ZXJzaW9uLWNoZWNrLmpzP2QzOGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVjayBpZiBRUiBDb2RlIHZlcnNpb24gaXMgdmFsaWRcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICB2ZXJzaW9uIFFSIENvZGUgdmVyc2lvblxuICogQHJldHVybiB7Qm9vbGVhbn0gICAgICAgICB0cnVlIGlmIHZhbGlkIHZlcnNpb24sIGZhbHNlIG90aGVyd2lzZVxuICovXG5leHBvcnRzLmlzVmFsaWQgPSBmdW5jdGlvbiBpc1ZhbGlkICh2ZXJzaW9uKSB7XG4gIHJldHVybiAhaXNOYU4odmVyc2lvbikgJiYgdmVyc2lvbiA+PSAxICYmIHZlcnNpb24gPD0gNDBcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiaXNWYWxpZCIsInZlcnNpb24iLCJpc05hTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version-check.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/utils.js\");\nconst ECCode = __webpack_require__(/*! ./error-correction-code */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-code.js\");\nconst ECLevel = __webpack_require__(/*! ./error-correction-level */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/error-correction-level.js\");\nconst Mode = __webpack_require__(/*! ./mode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/mode.js\");\nconst VersionCheck = __webpack_require__(/*! ./version-check */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version-check.js\");\n// Generator polynomial used to encode version information\nconst G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\nconst G18_BCH = Utils.getBCHDigit(G18);\nfunction getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n    for(let currentVersion = 1; currentVersion <= 40; currentVersion++){\n        if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n            return currentVersion;\n        }\n    }\n    return undefined;\n}\nfunction getReservedBitsCount(mode, version) {\n    // Character count indicator + mode indicator bits\n    return Mode.getCharCountIndicator(mode, version) + 4;\n}\nfunction getTotalBitsFromDataArray(segments, version) {\n    let totalBits = 0;\n    segments.forEach(function(data) {\n        const reservedBits = getReservedBitsCount(data.mode, version);\n        totalBits += reservedBits + data.getBitsLength();\n    });\n    return totalBits;\n}\nfunction getBestVersionForMixedData(segments, errorCorrectionLevel) {\n    for(let currentVersion = 1; currentVersion <= 40; currentVersion++){\n        const length = getTotalBitsFromDataArray(segments, currentVersion);\n        if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n            return currentVersion;\n        }\n    }\n    return undefined;\n}\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */ exports.from = function from(value, defaultValue) {\n    if (VersionCheck.isValid(value)) {\n        return parseInt(value, 10);\n    }\n    return defaultValue;\n};\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */ exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {\n    if (!VersionCheck.isValid(version)) {\n        throw new Error(\"Invalid QR Code version\");\n    }\n    // Use Byte mode as default\n    if (typeof mode === \"undefined\") mode = Mode.BYTE;\n    // Total codewords for this QR code version (Data + Error correction)\n    const totalCodewords = Utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    if (mode === Mode.MIXED) return dataTotalCodewordsBits;\n    const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);\n    // Return max number of storable codewords\n    switch(mode){\n        case Mode.NUMERIC:\n            return Math.floor(usableBits / 10 * 3);\n        case Mode.ALPHANUMERIC:\n            return Math.floor(usableBits / 11 * 2);\n        case Mode.KANJI:\n            return Math.floor(usableBits / 13);\n        case Mode.BYTE:\n        default:\n            return Math.floor(usableBits / 8);\n    }\n};\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */ exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {\n    let seg;\n    const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);\n    if (Array.isArray(data)) {\n        if (data.length > 1) {\n            return getBestVersionForMixedData(data, ecl);\n        }\n        if (data.length === 0) {\n            return 1;\n        }\n        seg = data[0];\n    } else {\n        seg = data;\n    }\n    return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n};\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */ exports.getEncodedBits = function getEncodedBits(version) {\n    if (!VersionCheck.isValid(version) || version < 7) {\n        throw new Error(\"Invalid QR Code version\");\n    }\n    let d = version << 12;\n    while(Utils.getBCHDigit(d) - G18_BCH >= 0){\n        d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;\n    }\n    return version << 12 | d;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/version.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/index.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/index.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n*copyright Ryan Day 2012\n*\n* Licensed under the MIT license:\n*   http://www.opensource.org/licenses/mit-license.php\n*\n* this is the main server side application file for node-qrcode.\n* these exports use serverside canvas api methods for file IO and buffers\n*\n*/ \nmodule.exports = __webpack_require__(/*! ./server */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/server.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FBU0E7QUFFQUEsMklBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL2luZGV4LmpzP2I5Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbipjb3B5cmlnaHQgUnlhbiBEYXkgMjAxMlxuKlxuKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2U6XG4qICAgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbipcbiogdGhpcyBpcyB0aGUgbWFpbiBzZXJ2ZXIgc2lkZSBhcHBsaWNhdGlvbiBmaWxlIGZvciBub2RlLXFyY29kZS5cbiogdGhlc2UgZXhwb3J0cyB1c2Ugc2VydmVyc2lkZSBjYW52YXMgYXBpIG1ldGhvZHMgZm9yIGZpbGUgSU8gYW5kIGJ1ZmZlcnNcbipcbiovXG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9zZXJ2ZXInKVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/canvas.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/canvas.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js\");\nfunction clearCanvas(ctx, canvas, size) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (!canvas.style) canvas.style = {};\n    canvas.height = size;\n    canvas.width = size;\n    canvas.style.height = size + \"px\";\n    canvas.style.width = size + \"px\";\n}\nfunction getCanvasElement() {\n    try {\n        return document.createElement(\"canvas\");\n    } catch (e) {\n        throw new Error(\"You need to specify a canvas element\");\n    }\n}\nexports.render = function render(qrData, canvas, options) {\n    let opts = options;\n    let canvasEl = canvas;\n    if (typeof opts === \"undefined\" && (!canvas || !canvas.getContext)) {\n        opts = canvas;\n        canvas = undefined;\n    }\n    if (!canvas) {\n        canvasEl = getCanvasElement();\n    }\n    opts = Utils.getOptions(opts);\n    const size = Utils.getImageWidth(qrData.modules.size, opts);\n    const ctx = canvasEl.getContext(\"2d\");\n    const image = ctx.createImageData(size, size);\n    Utils.qrToImageData(image.data, qrData, opts);\n    clearCanvas(ctx, canvasEl, size);\n    ctx.putImageData(image, 0, 0);\n    return canvasEl;\n};\nexports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n    let opts = options;\n    if (typeof opts === \"undefined\" && (!canvas || !canvas.getContext)) {\n        opts = canvas;\n        canvas = undefined;\n    }\n    if (!opts) opts = {};\n    const canvasEl = exports.render(qrData, canvas, opts);\n    const type = opts.type || \"image/png\";\n    const rendererOpts = opts.rendererOpts || {};\n    return canvasEl.toDataURL(type, rendererOpts.quality);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9jYW52YXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFFdEIsU0FBU0MsWUFBYUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLElBQUk7SUFDckNGLElBQUlHLFNBQVMsQ0FBQyxHQUFHLEdBQUdGLE9BQU9HLEtBQUssRUFBRUgsT0FBT0ksTUFBTTtJQUUvQyxJQUFJLENBQUNKLE9BQU9LLEtBQUssRUFBRUwsT0FBT0ssS0FBSyxHQUFHLENBQUM7SUFDbkNMLE9BQU9JLE1BQU0sR0FBR0g7SUFDaEJELE9BQU9HLEtBQUssR0FBR0Y7SUFDZkQsT0FBT0ssS0FBSyxDQUFDRCxNQUFNLEdBQUdILE9BQU87SUFDN0JELE9BQU9LLEtBQUssQ0FBQ0YsS0FBSyxHQUFHRixPQUFPO0FBQzlCO0FBRUEsU0FBU0s7SUFDUCxJQUFJO1FBQ0YsT0FBT0MsU0FBU0MsYUFBYSxDQUFDO0lBQ2hDLEVBQUUsT0FBT0MsR0FBRztRQUNWLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGO0FBRUFDLGNBQWMsR0FBRyxTQUFTQyxPQUFRQyxNQUFNLEVBQUViLE1BQU0sRUFBRWMsT0FBTztJQUN2RCxJQUFJQyxPQUFPRDtJQUNYLElBQUlFLFdBQVdoQjtJQUVmLElBQUksT0FBT2UsU0FBUyxlQUFnQixFQUFDZixVQUFVLENBQUNBLE9BQU9pQixVQUFVLEdBQUc7UUFDbEVGLE9BQU9mO1FBQ1BBLFNBQVNrQjtJQUNYO0lBRUEsSUFBSSxDQUFDbEIsUUFBUTtRQUNYZ0IsV0FBV1Y7SUFDYjtJQUVBUyxPQUFPbkIsTUFBTXVCLFVBQVUsQ0FBQ0o7SUFDeEIsTUFBTWQsT0FBT0wsTUFBTXdCLGFBQWEsQ0FBQ1AsT0FBT1EsT0FBTyxDQUFDcEIsSUFBSSxFQUFFYztJQUV0RCxNQUFNaEIsTUFBTWlCLFNBQVNDLFVBQVUsQ0FBQztJQUNoQyxNQUFNSyxRQUFRdkIsSUFBSXdCLGVBQWUsQ0FBQ3RCLE1BQU1BO0lBQ3hDTCxNQUFNNEIsYUFBYSxDQUFDRixNQUFNRyxJQUFJLEVBQUVaLFFBQVFFO0lBRXhDakIsWUFBWUMsS0FBS2lCLFVBQVVmO0lBQzNCRixJQUFJMkIsWUFBWSxDQUFDSixPQUFPLEdBQUc7SUFFM0IsT0FBT047QUFDVDtBQUVBTCx1QkFBdUIsR0FBRyxTQUFTZ0IsZ0JBQWlCZCxNQUFNLEVBQUViLE1BQU0sRUFBRWMsT0FBTztJQUN6RSxJQUFJQyxPQUFPRDtJQUVYLElBQUksT0FBT0MsU0FBUyxlQUFnQixFQUFDZixVQUFVLENBQUNBLE9BQU9pQixVQUFVLEdBQUc7UUFDbEVGLE9BQU9mO1FBQ1BBLFNBQVNrQjtJQUNYO0lBRUEsSUFBSSxDQUFDSCxNQUFNQSxPQUFPLENBQUM7SUFFbkIsTUFBTUMsV0FBV0wsUUFBUUMsTUFBTSxDQUFDQyxRQUFRYixRQUFRZTtJQUVoRCxNQUFNYSxPQUFPYixLQUFLYSxJQUFJLElBQUk7SUFDMUIsTUFBTUMsZUFBZWQsS0FBS2MsWUFBWSxJQUFJLENBQUM7SUFFM0MsT0FBT2IsU0FBU2MsU0FBUyxDQUFDRixNQUFNQyxhQUFhRSxPQUFPO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL2NhbnZhcy5qcz9lNGYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmZ1bmN0aW9uIGNsZWFyQ2FudmFzIChjdHgsIGNhbnZhcywgc2l6ZSkge1xuICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodClcblxuICBpZiAoIWNhbnZhcy5zdHlsZSkgY2FudmFzLnN0eWxlID0ge31cbiAgY2FudmFzLmhlaWdodCA9IHNpemVcbiAgY2FudmFzLndpZHRoID0gc2l6ZVxuICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gc2l6ZSArICdweCdcbiAgY2FudmFzLnN0eWxlLndpZHRoID0gc2l6ZSArICdweCdcbn1cblxuZnVuY3Rpb24gZ2V0Q2FudmFzRWxlbWVudCAoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBuZWVkIHRvIHNwZWNpZnkgYSBjYW52YXMgZWxlbWVudCcpXG4gIH1cbn1cblxuZXhwb3J0cy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKHFyRGF0YSwgY2FudmFzLCBvcHRpb25zKSB7XG4gIGxldCBvcHRzID0gb3B0aW9uc1xuICBsZXQgY2FudmFzRWwgPSBjYW52YXNcblxuICBpZiAodHlwZW9mIG9wdHMgPT09ICd1bmRlZmluZWQnICYmICghY2FudmFzIHx8ICFjYW52YXMuZ2V0Q29udGV4dCkpIHtcbiAgICBvcHRzID0gY2FudmFzXG4gICAgY2FudmFzID0gdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIWNhbnZhcykge1xuICAgIGNhbnZhc0VsID0gZ2V0Q2FudmFzRWxlbWVudCgpXG4gIH1cblxuICBvcHRzID0gVXRpbHMuZ2V0T3B0aW9ucyhvcHRzKVxuICBjb25zdCBzaXplID0gVXRpbHMuZ2V0SW1hZ2VXaWR0aChxckRhdGEubW9kdWxlcy5zaXplLCBvcHRzKVxuXG4gIGNvbnN0IGN0eCA9IGNhbnZhc0VsLmdldENvbnRleHQoJzJkJylcbiAgY29uc3QgaW1hZ2UgPSBjdHguY3JlYXRlSW1hZ2VEYXRhKHNpemUsIHNpemUpXG4gIFV0aWxzLnFyVG9JbWFnZURhdGEoaW1hZ2UuZGF0YSwgcXJEYXRhLCBvcHRzKVxuXG4gIGNsZWFyQ2FudmFzKGN0eCwgY2FudmFzRWwsIHNpemUpXG4gIGN0eC5wdXRJbWFnZURhdGEoaW1hZ2UsIDAsIDApXG5cbiAgcmV0dXJuIGNhbnZhc0VsXG59XG5cbmV4cG9ydHMucmVuZGVyVG9EYXRhVVJMID0gZnVuY3Rpb24gcmVuZGVyVG9EYXRhVVJMIChxckRhdGEsIGNhbnZhcywgb3B0aW9ucykge1xuICBsZXQgb3B0cyA9IG9wdGlvbnNcblxuICBpZiAodHlwZW9mIG9wdHMgPT09ICd1bmRlZmluZWQnICYmICghY2FudmFzIHx8ICFjYW52YXMuZ2V0Q29udGV4dCkpIHtcbiAgICBvcHRzID0gY2FudmFzXG4gICAgY2FudmFzID0gdW5kZWZpbmVkXG4gIH1cblxuICBpZiAoIW9wdHMpIG9wdHMgPSB7fVxuXG4gIGNvbnN0IGNhbnZhc0VsID0gZXhwb3J0cy5yZW5kZXIocXJEYXRhLCBjYW52YXMsIG9wdHMpXG5cbiAgY29uc3QgdHlwZSA9IG9wdHMudHlwZSB8fCAnaW1hZ2UvcG5nJ1xuICBjb25zdCByZW5kZXJlck9wdHMgPSBvcHRzLnJlbmRlcmVyT3B0cyB8fCB7fVxuXG4gIHJldHVybiBjYW52YXNFbC50b0RhdGFVUkwodHlwZSwgcmVuZGVyZXJPcHRzLnF1YWxpdHkpXG59XG4iXSwibmFtZXMiOlsiVXRpbHMiLCJyZXF1aXJlIiwiY2xlYXJDYW52YXMiLCJjdHgiLCJjYW52YXMiLCJzaXplIiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJzdHlsZSIsImdldENhbnZhc0VsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJlIiwiRXJyb3IiLCJleHBvcnRzIiwicmVuZGVyIiwicXJEYXRhIiwib3B0aW9ucyIsIm9wdHMiLCJjYW52YXNFbCIsImdldENvbnRleHQiLCJ1bmRlZmluZWQiLCJnZXRPcHRpb25zIiwiZ2V0SW1hZ2VXaWR0aCIsIm1vZHVsZXMiLCJpbWFnZSIsImNyZWF0ZUltYWdlRGF0YSIsInFyVG9JbWFnZURhdGEiLCJkYXRhIiwicHV0SW1hZ2VEYXRhIiwicmVuZGVyVG9EYXRhVVJMIiwidHlwZSIsInJlbmRlcmVyT3B0cyIsInRvRGF0YVVSTCIsInF1YWxpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/canvas.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/png.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/png.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const fs = __webpack_require__(/*! fs */ \"fs\");\nconst PNG = (__webpack_require__(/*! pngjs */ \"(ssr)/../node_modules/pngjs/lib/png.js\").PNG);\nconst Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js\");\nexports.render = function render(qrData, options) {\n    const opts = Utils.getOptions(options);\n    const pngOpts = opts.rendererOpts;\n    const size = Utils.getImageWidth(qrData.modules.size, opts);\n    pngOpts.width = size;\n    pngOpts.height = size;\n    const pngImage = new PNG(pngOpts);\n    Utils.qrToImageData(pngImage.data, qrData, opts);\n    return pngImage;\n};\nexports.renderToDataURL = function renderToDataURL(qrData, options, cb) {\n    if (typeof cb === \"undefined\") {\n        cb = options;\n        options = undefined;\n    }\n    exports.renderToBuffer(qrData, options, function(err, output) {\n        if (err) cb(err);\n        let url = \"data:image/png;base64,\";\n        url += output.toString(\"base64\");\n        cb(null, url);\n    });\n};\nexports.renderToBuffer = function renderToBuffer(qrData, options, cb) {\n    if (typeof cb === \"undefined\") {\n        cb = options;\n        options = undefined;\n    }\n    const png = exports.render(qrData, options);\n    const buffer = [];\n    png.on(\"error\", cb);\n    png.on(\"data\", function(data) {\n        buffer.push(data);\n    });\n    png.on(\"end\", function() {\n        cb(null, Buffer.concat(buffer));\n    });\n    png.pack();\n};\nexports.renderToFile = function renderToFile(path, qrData, options, cb) {\n    if (typeof cb === \"undefined\") {\n        cb = options;\n        options = undefined;\n    }\n    let called = false;\n    const done = (...args)=>{\n        if (called) return;\n        called = true;\n        cb.apply(null, args);\n    };\n    const stream = fs.createWriteStream(path);\n    stream.on(\"error\", done);\n    stream.on(\"close\", done);\n    exports.renderToFileStream(stream, qrData, options);\n};\nexports.renderToFileStream = function renderToFileStream(stream, qrData, options) {\n    const png = exports.render(qrData, options);\n    png.pack().pipe(stream);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9wbmcuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBS0MsbUJBQU9BLENBQUM7QUFDbkIsTUFBTUMsTUFBTUQsZ0ZBQW9CO0FBQ2hDLE1BQU1FLFFBQVFGLG1CQUFPQSxDQUFDO0FBRXRCRyxjQUFjLEdBQUcsU0FBU0MsT0FBUUMsTUFBTSxFQUFFQyxPQUFPO0lBQy9DLE1BQU1DLE9BQU9MLE1BQU1NLFVBQVUsQ0FBQ0Y7SUFDOUIsTUFBTUcsVUFBVUYsS0FBS0csWUFBWTtJQUNqQyxNQUFNQyxPQUFPVCxNQUFNVSxhQUFhLENBQUNQLE9BQU9RLE9BQU8sQ0FBQ0YsSUFBSSxFQUFFSjtJQUV0REUsUUFBUUssS0FBSyxHQUFHSDtJQUNoQkYsUUFBUU0sTUFBTSxHQUFHSjtJQUVqQixNQUFNSyxXQUFXLElBQUlmLElBQUlRO0lBQ3pCUCxNQUFNZSxhQUFhLENBQUNELFNBQVNFLElBQUksRUFBRWIsUUFBUUU7SUFFM0MsT0FBT1M7QUFDVDtBQUVBYix1QkFBdUIsR0FBRyxTQUFTZ0IsZ0JBQWlCZCxNQUFNLEVBQUVDLE9BQU8sRUFBRWMsRUFBRTtJQUNyRSxJQUFJLE9BQU9BLE9BQU8sYUFBYTtRQUM3QkEsS0FBS2Q7UUFDTEEsVUFBVWU7SUFDWjtJQUVBbEIsUUFBUW1CLGNBQWMsQ0FBQ2pCLFFBQVFDLFNBQVMsU0FBVWlCLEdBQUcsRUFBRUMsTUFBTTtRQUMzRCxJQUFJRCxLQUFLSCxHQUFHRztRQUNaLElBQUlFLE1BQU07UUFDVkEsT0FBT0QsT0FBT0UsUUFBUSxDQUFDO1FBQ3ZCTixHQUFHLE1BQU1LO0lBQ1g7QUFDRjtBQUVBdEIsc0JBQXNCLEdBQUcsU0FBU21CLGVBQWdCakIsTUFBTSxFQUFFQyxPQUFPLEVBQUVjLEVBQUU7SUFDbkUsSUFBSSxPQUFPQSxPQUFPLGFBQWE7UUFDN0JBLEtBQUtkO1FBQ0xBLFVBQVVlO0lBQ1o7SUFFQSxNQUFNTSxNQUFNeEIsUUFBUUMsTUFBTSxDQUFDQyxRQUFRQztJQUNuQyxNQUFNc0IsU0FBUyxFQUFFO0lBRWpCRCxJQUFJRSxFQUFFLENBQUMsU0FBU1Q7SUFFaEJPLElBQUlFLEVBQUUsQ0FBQyxRQUFRLFNBQVVYLElBQUk7UUFDM0JVLE9BQU9FLElBQUksQ0FBQ1o7SUFDZDtJQUVBUyxJQUFJRSxFQUFFLENBQUMsT0FBTztRQUNaVCxHQUFHLE1BQU1XLE9BQU9DLE1BQU0sQ0FBQ0o7SUFDekI7SUFFQUQsSUFBSU0sSUFBSTtBQUNWO0FBRUE5QixvQkFBb0IsR0FBRyxTQUFTK0IsYUFBY0MsSUFBSSxFQUFFOUIsTUFBTSxFQUFFQyxPQUFPLEVBQUVjLEVBQUU7SUFDckUsSUFBSSxPQUFPQSxPQUFPLGFBQWE7UUFDN0JBLEtBQUtkO1FBQ0xBLFVBQVVlO0lBQ1o7SUFFQSxJQUFJZSxTQUFTO0lBQ2IsTUFBTUMsT0FBTyxDQUFDLEdBQUdDO1FBQ2YsSUFBSUYsUUFBUTtRQUNaQSxTQUFTO1FBQ1RoQixHQUFHbUIsS0FBSyxDQUFDLE1BQU1EO0lBQ2pCO0lBQ0EsTUFBTUUsU0FBU3pDLEdBQUcwQyxpQkFBaUIsQ0FBQ047SUFFcENLLE9BQU9YLEVBQUUsQ0FBQyxTQUFTUTtJQUNuQkcsT0FBT1gsRUFBRSxDQUFDLFNBQVNRO0lBRW5CbEMsUUFBUXVDLGtCQUFrQixDQUFDRixRQUFRbkMsUUFBUUM7QUFDN0M7QUFFQUgsMEJBQTBCLEdBQUcsU0FBU3VDLG1CQUFvQkYsTUFBTSxFQUFFbkMsTUFBTSxFQUFFQyxPQUFPO0lBQy9FLE1BQU1xQixNQUFNeEIsUUFBUUMsTUFBTSxDQUFDQyxRQUFRQztJQUNuQ3FCLElBQUlNLElBQUksR0FBR1UsSUFBSSxDQUFDSDtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9wbmcuanM/YjZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcbmNvbnN0IFBORyA9IHJlcXVpcmUoJ3BuZ2pzJykuUE5HXG5jb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5leHBvcnRzLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAocXJEYXRhLCBvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSBVdGlscy5nZXRPcHRpb25zKG9wdGlvbnMpXG4gIGNvbnN0IHBuZ09wdHMgPSBvcHRzLnJlbmRlcmVyT3B0c1xuICBjb25zdCBzaXplID0gVXRpbHMuZ2V0SW1hZ2VXaWR0aChxckRhdGEubW9kdWxlcy5zaXplLCBvcHRzKVxuXG4gIHBuZ09wdHMud2lkdGggPSBzaXplXG4gIHBuZ09wdHMuaGVpZ2h0ID0gc2l6ZVxuXG4gIGNvbnN0IHBuZ0ltYWdlID0gbmV3IFBORyhwbmdPcHRzKVxuICBVdGlscy5xclRvSW1hZ2VEYXRhKHBuZ0ltYWdlLmRhdGEsIHFyRGF0YSwgb3B0cylcblxuICByZXR1cm4gcG5nSW1hZ2Vcbn1cblxuZXhwb3J0cy5yZW5kZXJUb0RhdGFVUkwgPSBmdW5jdGlvbiByZW5kZXJUb0RhdGFVUkwgKHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjYiA9IG9wdGlvbnNcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkXG4gIH1cblxuICBleHBvcnRzLnJlbmRlclRvQnVmZmVyKHFyRGF0YSwgb3B0aW9ucywgZnVuY3Rpb24gKGVyciwgb3V0cHV0KSB7XG4gICAgaWYgKGVycikgY2IoZXJyKVxuICAgIGxldCB1cmwgPSAnZGF0YTppbWFnZS9wbmc7YmFzZTY0LCdcbiAgICB1cmwgKz0gb3V0cHV0LnRvU3RyaW5nKCdiYXNlNjQnKVxuICAgIGNiKG51bGwsIHVybClcbiAgfSlcbn1cblxuZXhwb3J0cy5yZW5kZXJUb0J1ZmZlciA9IGZ1bmN0aW9uIHJlbmRlclRvQnVmZmVyIChxckRhdGEsIG9wdGlvbnMsIGNiKSB7XG4gIGlmICh0eXBlb2YgY2IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2IgPSBvcHRpb25zXG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgY29uc3QgcG5nID0gZXhwb3J0cy5yZW5kZXIocXJEYXRhLCBvcHRpb25zKVxuICBjb25zdCBidWZmZXIgPSBbXVxuXG4gIHBuZy5vbignZXJyb3InLCBjYilcblxuICBwbmcub24oJ2RhdGEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGJ1ZmZlci5wdXNoKGRhdGEpXG4gIH0pXG5cbiAgcG5nLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2IobnVsbCwgQnVmZmVyLmNvbmNhdChidWZmZXIpKVxuICB9KVxuXG4gIHBuZy5wYWNrKClcbn1cblxuZXhwb3J0cy5yZW5kZXJUb0ZpbGUgPSBmdW5jdGlvbiByZW5kZXJUb0ZpbGUgKHBhdGgsIHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjYiA9IG9wdGlvbnNcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkXG4gIH1cblxuICBsZXQgY2FsbGVkID0gZmFsc2VcbiAgY29uc3QgZG9uZSA9ICguLi5hcmdzKSA9PiB7XG4gICAgaWYgKGNhbGxlZCkgcmV0dXJuXG4gICAgY2FsbGVkID0gdHJ1ZVxuICAgIGNiLmFwcGx5KG51bGwsIGFyZ3MpXG4gIH1cbiAgY29uc3Qgc3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aClcblxuICBzdHJlYW0ub24oJ2Vycm9yJywgZG9uZSlcbiAgc3RyZWFtLm9uKCdjbG9zZScsIGRvbmUpXG5cbiAgZXhwb3J0cy5yZW5kZXJUb0ZpbGVTdHJlYW0oc3RyZWFtLCBxckRhdGEsIG9wdGlvbnMpXG59XG5cbmV4cG9ydHMucmVuZGVyVG9GaWxlU3RyZWFtID0gZnVuY3Rpb24gcmVuZGVyVG9GaWxlU3RyZWFtIChzdHJlYW0sIHFyRGF0YSwgb3B0aW9ucykge1xuICBjb25zdCBwbmcgPSBleHBvcnRzLnJlbmRlcihxckRhdGEsIG9wdGlvbnMpXG4gIHBuZy5wYWNrKCkucGlwZShzdHJlYW0pXG59XG4iXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwiUE5HIiwiVXRpbHMiLCJleHBvcnRzIiwicmVuZGVyIiwicXJEYXRhIiwib3B0aW9ucyIsIm9wdHMiLCJnZXRPcHRpb25zIiwicG5nT3B0cyIsInJlbmRlcmVyT3B0cyIsInNpemUiLCJnZXRJbWFnZVdpZHRoIiwibW9kdWxlcyIsIndpZHRoIiwiaGVpZ2h0IiwicG5nSW1hZ2UiLCJxclRvSW1hZ2VEYXRhIiwiZGF0YSIsInJlbmRlclRvRGF0YVVSTCIsImNiIiwidW5kZWZpbmVkIiwicmVuZGVyVG9CdWZmZXIiLCJlcnIiLCJvdXRwdXQiLCJ1cmwiLCJ0b1N0cmluZyIsInBuZyIsImJ1ZmZlciIsIm9uIiwicHVzaCIsIkJ1ZmZlciIsImNvbmNhdCIsInBhY2siLCJyZW5kZXJUb0ZpbGUiLCJwYXRoIiwiY2FsbGVkIiwiZG9uZSIsImFyZ3MiLCJhcHBseSIsInN0cmVhbSIsImNyZWF0ZVdyaXRlU3RyZWFtIiwicmVuZGVyVG9GaWxlU3RyZWFtIiwicGlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/png.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg-tag.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg-tag.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js\");\nfunction getColorAttrib(color, attrib) {\n    const alpha = color.a / 255;\n    const str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1 ? str + \" \" + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"' : str;\n}\nfunction svgCmd(cmd, x, y) {\n    let str = cmd + x;\n    if (typeof y !== \"undefined\") str += \" \" + y;\n    return str;\n}\nfunction qrToPath(data, size, margin) {\n    let path = \"\";\n    let moveBy = 0;\n    let newRow = false;\n    let lineLength = 0;\n    for(let i = 0; i < data.length; i++){\n        const col = Math.floor(i % size);\n        const row = Math.floor(i / size);\n        if (!col && !newRow) newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow ? svgCmd(\"M\", col + margin, 0.5 + row + margin) : svgCmd(\"m\", moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += svgCmd(\"h\", lineLength);\n                lineLength = 0;\n            }\n        } else {\n            moveBy++;\n        }\n    }\n    return path;\n}\nexports.render = function render(qrData, options, cb) {\n    const opts = Utils.getOptions(options);\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    const qrcodesize = size + opts.margin * 2;\n    const bg = !opts.color.light.a ? \"\" : \"<path \" + getColorAttrib(opts.color.light, \"fill\") + ' d=\"M0 0h' + qrcodesize + \"v\" + qrcodesize + 'H0z\"/>';\n    const path = \"<path \" + getColorAttrib(opts.color.dark, \"stroke\") + ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n    const viewBox = 'viewBox=\"' + \"0 0 \" + qrcodesize + \" \" + qrcodesize + '\"';\n    const width = !opts.width ? \"\" : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + \"</svg>\\n\";\n    if (typeof cb === \"function\") {\n        cb(null, svgTag);\n    }\n    return svgTag;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9zdmctdGFnLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLFNBQVNDLGVBQWdCQyxLQUFLLEVBQUVDLE1BQU07SUFDcEMsTUFBTUMsUUFBUUYsTUFBTUcsQ0FBQyxHQUFHO0lBQ3hCLE1BQU1DLE1BQU1ILFNBQVMsT0FBT0QsTUFBTUssR0FBRyxHQUFHO0lBRXhDLE9BQU9ILFFBQVEsSUFDWEUsTUFBTSxNQUFNSCxTQUFTLGVBQWVDLE1BQU1JLE9BQU8sQ0FBQyxHQUFHQyxLQUFLLENBQUMsS0FBSyxNQUNoRUg7QUFDTjtBQUVBLFNBQVNJLE9BQVFDLEdBQUcsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQ3hCLElBQUlQLE1BQU1LLE1BQU1DO0lBQ2hCLElBQUksT0FBT0MsTUFBTSxhQUFhUCxPQUFPLE1BQU1PO0lBRTNDLE9BQU9QO0FBQ1Q7QUFFQSxTQUFTUSxTQUFVQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsTUFBTTtJQUNuQyxJQUFJQyxPQUFPO0lBQ1gsSUFBSUMsU0FBUztJQUNiLElBQUlDLFNBQVM7SUFDYixJQUFJQyxhQUFhO0lBRWpCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxLQUFLUSxNQUFNLEVBQUVELElBQUs7UUFDcEMsTUFBTUUsTUFBTUMsS0FBS0MsS0FBSyxDQUFDSixJQUFJTjtRQUMzQixNQUFNVyxNQUFNRixLQUFLQyxLQUFLLENBQUNKLElBQUlOO1FBRTNCLElBQUksQ0FBQ1EsT0FBTyxDQUFDSixRQUFRQSxTQUFTO1FBRTlCLElBQUlMLElBQUksQ0FBQ08sRUFBRSxFQUFFO1lBQ1hEO1lBRUEsSUFBSSxDQUFFQyxDQUFBQSxJQUFJLEtBQUtFLE1BQU0sS0FBS1QsSUFBSSxDQUFDTyxJQUFJLEVBQUUsR0FBRztnQkFDdENKLFFBQVFFLFNBQ0pWLE9BQU8sS0FBS2MsTUFBTVAsUUFBUSxNQUFNVSxNQUFNVixVQUN0Q1AsT0FBTyxLQUFLUyxRQUFRO2dCQUV4QkEsU0FBUztnQkFDVEMsU0FBUztZQUNYO1lBRUEsSUFBSSxDQUFFSSxDQUFBQSxNQUFNLElBQUlSLFFBQVFELElBQUksQ0FBQ08sSUFBSSxFQUFFLEdBQUc7Z0JBQ3BDSixRQUFRUixPQUFPLEtBQUtXO2dCQUNwQkEsYUFBYTtZQUNmO1FBQ0YsT0FBTztZQUNMRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPRDtBQUNUO0FBRUFVLGNBQWMsR0FBRyxTQUFTQyxPQUFRQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsRUFBRTtJQUNuRCxNQUFNQyxPQUFPbEMsTUFBTW1DLFVBQVUsQ0FBQ0g7SUFDOUIsTUFBTWYsT0FBT2MsT0FBT0ssT0FBTyxDQUFDbkIsSUFBSTtJQUNoQyxNQUFNRCxPQUFPZSxPQUFPSyxPQUFPLENBQUNwQixJQUFJO0lBQ2hDLE1BQU1xQixhQUFhcEIsT0FBT2lCLEtBQUtoQixNQUFNLEdBQUc7SUFFeEMsTUFBTW9CLEtBQUssQ0FBQ0osS0FBSy9CLEtBQUssQ0FBQ29DLEtBQUssQ0FBQ2pDLENBQUMsR0FDMUIsS0FDQSxXQUFXSixlQUFlZ0MsS0FBSy9CLEtBQUssQ0FBQ29DLEtBQUssRUFBRSxVQUM1QyxjQUFjRixhQUFhLE1BQU1BLGFBQWE7SUFFbEQsTUFBTWxCLE9BQ0osV0FBV2pCLGVBQWVnQyxLQUFLL0IsS0FBSyxDQUFDcUMsSUFBSSxFQUFFLFlBQzNDLFNBQVN6QixTQUFTQyxNQUFNQyxNQUFNaUIsS0FBS2hCLE1BQU0sSUFBSTtJQUUvQyxNQUFNdUIsVUFBVSxjQUFjLFNBQVNKLGFBQWEsTUFBTUEsYUFBYTtJQUV2RSxNQUFNSyxRQUFRLENBQUNSLEtBQUtRLEtBQUssR0FBRyxLQUFLLFlBQVlSLEtBQUtRLEtBQUssR0FBRyxlQUFlUixLQUFLUSxLQUFLLEdBQUc7SUFFdEYsTUFBTUMsU0FBUyw2Q0FBNkNELFFBQVFELFVBQVUsbUNBQW1DSCxLQUFLbkIsT0FBTztJQUU3SCxJQUFJLE9BQU9jLE9BQU8sWUFBWTtRQUM1QkEsR0FBRyxNQUFNVTtJQUNYO0lBRUEsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9zdmctdGFnLmpzP2NjZDYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuZnVuY3Rpb24gZ2V0Q29sb3JBdHRyaWIgKGNvbG9yLCBhdHRyaWIpIHtcbiAgY29uc3QgYWxwaGEgPSBjb2xvci5hIC8gMjU1XG4gIGNvbnN0IHN0ciA9IGF0dHJpYiArICc9XCInICsgY29sb3IuaGV4ICsgJ1wiJ1xuXG4gIHJldHVybiBhbHBoYSA8IDFcbiAgICA/IHN0ciArICcgJyArIGF0dHJpYiArICctb3BhY2l0eT1cIicgKyBhbHBoYS50b0ZpeGVkKDIpLnNsaWNlKDEpICsgJ1wiJ1xuICAgIDogc3RyXG59XG5cbmZ1bmN0aW9uIHN2Z0NtZCAoY21kLCB4LCB5KSB7XG4gIGxldCBzdHIgPSBjbWQgKyB4XG4gIGlmICh0eXBlb2YgeSAhPT0gJ3VuZGVmaW5lZCcpIHN0ciArPSAnICcgKyB5XG5cbiAgcmV0dXJuIHN0clxufVxuXG5mdW5jdGlvbiBxclRvUGF0aCAoZGF0YSwgc2l6ZSwgbWFyZ2luKSB7XG4gIGxldCBwYXRoID0gJydcbiAgbGV0IG1vdmVCeSA9IDBcbiAgbGV0IG5ld1JvdyA9IGZhbHNlXG4gIGxldCBsaW5lTGVuZ3RoID0gMFxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNvbCA9IE1hdGguZmxvb3IoaSAlIHNpemUpXG4gICAgY29uc3Qgcm93ID0gTWF0aC5mbG9vcihpIC8gc2l6ZSlcblxuICAgIGlmICghY29sICYmICFuZXdSb3cpIG5ld1JvdyA9IHRydWVcblxuICAgIGlmIChkYXRhW2ldKSB7XG4gICAgICBsaW5lTGVuZ3RoKytcblxuICAgICAgaWYgKCEoaSA+IDAgJiYgY29sID4gMCAmJiBkYXRhW2kgLSAxXSkpIHtcbiAgICAgICAgcGF0aCArPSBuZXdSb3dcbiAgICAgICAgICA/IHN2Z0NtZCgnTScsIGNvbCArIG1hcmdpbiwgMC41ICsgcm93ICsgbWFyZ2luKVxuICAgICAgICAgIDogc3ZnQ21kKCdtJywgbW92ZUJ5LCAwKVxuXG4gICAgICAgIG1vdmVCeSA9IDBcbiAgICAgICAgbmV3Um93ID0gZmFsc2VcbiAgICAgIH1cblxuICAgICAgaWYgKCEoY29sICsgMSA8IHNpemUgJiYgZGF0YVtpICsgMV0pKSB7XG4gICAgICAgIHBhdGggKz0gc3ZnQ21kKCdoJywgbGluZUxlbmd0aClcbiAgICAgICAgbGluZUxlbmd0aCA9IDBcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbW92ZUJ5KytcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGF0aFxufVxuXG5leHBvcnRzLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAocXJEYXRhLCBvcHRpb25zLCBjYikge1xuICBjb25zdCBvcHRzID0gVXRpbHMuZ2V0T3B0aW9ucyhvcHRpb25zKVxuICBjb25zdCBzaXplID0gcXJEYXRhLm1vZHVsZXMuc2l6ZVxuICBjb25zdCBkYXRhID0gcXJEYXRhLm1vZHVsZXMuZGF0YVxuICBjb25zdCBxcmNvZGVzaXplID0gc2l6ZSArIG9wdHMubWFyZ2luICogMlxuXG4gIGNvbnN0IGJnID0gIW9wdHMuY29sb3IubGlnaHQuYVxuICAgID8gJydcbiAgICA6ICc8cGF0aCAnICsgZ2V0Q29sb3JBdHRyaWIob3B0cy5jb2xvci5saWdodCwgJ2ZpbGwnKSArXG4gICAgICAnIGQ9XCJNMCAwaCcgKyBxcmNvZGVzaXplICsgJ3YnICsgcXJjb2Rlc2l6ZSArICdIMHpcIi8+J1xuXG4gIGNvbnN0IHBhdGggPVxuICAgICc8cGF0aCAnICsgZ2V0Q29sb3JBdHRyaWIob3B0cy5jb2xvci5kYXJrLCAnc3Ryb2tlJykgK1xuICAgICcgZD1cIicgKyBxclRvUGF0aChkYXRhLCBzaXplLCBvcHRzLm1hcmdpbikgKyAnXCIvPidcblxuICBjb25zdCB2aWV3Qm94ID0gJ3ZpZXdCb3g9XCInICsgJzAgMCAnICsgcXJjb2Rlc2l6ZSArICcgJyArIHFyY29kZXNpemUgKyAnXCInXG5cbiAgY29uc3Qgd2lkdGggPSAhb3B0cy53aWR0aCA/ICcnIDogJ3dpZHRoPVwiJyArIG9wdHMud2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIG9wdHMud2lkdGggKyAnXCIgJ1xuXG4gIGNvbnN0IHN2Z1RhZyA9ICc8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiAnICsgd2lkdGggKyB2aWV3Qm94ICsgJyBzaGFwZS1yZW5kZXJpbmc9XCJjcmlzcEVkZ2VzXCI+JyArIGJnICsgcGF0aCArICc8L3N2Zz5cXG4nXG5cbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiKG51bGwsIHN2Z1RhZylcbiAgfVxuXG4gIHJldHVybiBzdmdUYWdcbn1cbiJdLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJnZXRDb2xvckF0dHJpYiIsImNvbG9yIiwiYXR0cmliIiwiYWxwaGEiLCJhIiwic3RyIiwiaGV4IiwidG9GaXhlZCIsInNsaWNlIiwic3ZnQ21kIiwiY21kIiwieCIsInkiLCJxclRvUGF0aCIsImRhdGEiLCJzaXplIiwibWFyZ2luIiwicGF0aCIsIm1vdmVCeSIsIm5ld1JvdyIsImxpbmVMZW5ndGgiLCJpIiwibGVuZ3RoIiwiY29sIiwiTWF0aCIsImZsb29yIiwicm93IiwiZXhwb3J0cyIsInJlbmRlciIsInFyRGF0YSIsIm9wdGlvbnMiLCJjYiIsIm9wdHMiLCJnZXRPcHRpb25zIiwibW9kdWxlcyIsInFyY29kZXNpemUiLCJiZyIsImxpZ2h0IiwiZGFyayIsInZpZXdCb3giLCJ3aWR0aCIsInN2Z1RhZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg-tag.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const svgTagRenderer = __webpack_require__(/*! ./svg-tag */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg-tag.js\");\nexports.render = svgTagRenderer.render;\nexports.renderToFile = function renderToFile(path, qrData, options, cb) {\n    if (typeof cb === \"undefined\") {\n        cb = options;\n        options = undefined;\n    }\n    const fs = __webpack_require__(/*! fs */ \"fs\");\n    const svgTag = exports.render(qrData, options);\n    const xmlStr = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' + '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' + svgTag;\n    fs.writeFile(path, xmlStr, cb);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci9zdmcuanMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsaUJBQWlCQyxtQkFBT0EsQ0FBQztBQUUvQkMsY0FBYyxHQUFHRixlQUFlRyxNQUFNO0FBRXRDRCxvQkFBb0IsR0FBRyxTQUFTRSxhQUFjQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxFQUFFO0lBQ3JFLElBQUksT0FBT0EsT0FBTyxhQUFhO1FBQzdCQSxLQUFLRDtRQUNMQSxVQUFVRTtJQUNaO0lBRUEsTUFBTUMsS0FBS1QsbUJBQU9BLENBQUM7SUFDbkIsTUFBTVUsU0FBU1QsUUFBUUMsTUFBTSxDQUFDRyxRQUFRQztJQUV0QyxNQUFNSyxTQUFTLDJDQUNiLHVHQUNBRDtJQUVGRCxHQUFHRyxTQUFTLENBQUNSLE1BQU1PLFFBQVFKO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL3N2Zy5qcz80MTc4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHN2Z1RhZ1JlbmRlcmVyID0gcmVxdWlyZSgnLi9zdmctdGFnJylcblxuZXhwb3J0cy5yZW5kZXIgPSBzdmdUYWdSZW5kZXJlci5yZW5kZXJcblxuZXhwb3J0cy5yZW5kZXJUb0ZpbGUgPSBmdW5jdGlvbiByZW5kZXJUb0ZpbGUgKHBhdGgsIHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjYiA9IG9wdGlvbnNcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkXG4gIH1cblxuICBjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcbiAgY29uc3Qgc3ZnVGFnID0gZXhwb3J0cy5yZW5kZXIocXJEYXRhLCBvcHRpb25zKVxuXG4gIGNvbnN0IHhtbFN0ciA9ICc8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJ1dGYtOFwiPz4nICtcbiAgICAnPCFET0NUWVBFIHN2ZyBQVUJMSUMgXCItLy9XM0MvL0RURCBTVkcgMS4xLy9FTlwiIFwiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkXCI+JyArXG4gICAgc3ZnVGFnXG5cbiAgZnMud3JpdGVGaWxlKHBhdGgsIHhtbFN0ciwgY2IpXG59XG4iXSwibmFtZXMiOlsic3ZnVGFnUmVuZGVyZXIiLCJyZXF1aXJlIiwiZXhwb3J0cyIsInJlbmRlciIsInJlbmRlclRvRmlsZSIsInBhdGgiLCJxckRhdGEiLCJvcHRpb25zIiwiY2IiLCJ1bmRlZmluZWQiLCJmcyIsInN2Z1RhZyIsInhtbFN0ciIsIndyaXRlRmlsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const big = __webpack_require__(/*! ./terminal/terminal */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal.js\");\nconst small = __webpack_require__(/*! ./terminal/terminal-small */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal-small.js\");\nexports.render = function(qrData, options, cb) {\n    if (options && options.small) {\n        return small.render(qrData, options, cb);\n    }\n    return big.render(qrData, options, cb);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci90ZXJtaW5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNQyxtQkFBT0EsQ0FBQztBQUNwQixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUV0QkUsY0FBYyxHQUFHLFNBQVVFLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxFQUFFO0lBQzVDLElBQUlELFdBQVdBLFFBQVFKLEtBQUssRUFBRTtRQUM1QixPQUFPQSxNQUFNRSxNQUFNLENBQUNDLFFBQVFDLFNBQVNDO0lBQ3ZDO0lBQ0EsT0FBT1AsSUFBSUksTUFBTSxDQUFDQyxRQUFRQyxTQUFTQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci90ZXJtaW5hbC5qcz80OTBiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJpZyA9IHJlcXVpcmUoJy4vdGVybWluYWwvdGVybWluYWwnKVxuY29uc3Qgc21hbGwgPSByZXF1aXJlKCcuL3Rlcm1pbmFsL3Rlcm1pbmFsLXNtYWxsJylcblxuZXhwb3J0cy5yZW5kZXIgPSBmdW5jdGlvbiAocXJEYXRhLCBvcHRpb25zLCBjYikge1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnNtYWxsKSB7XG4gICAgcmV0dXJuIHNtYWxsLnJlbmRlcihxckRhdGEsIG9wdGlvbnMsIGNiKVxuICB9XG4gIHJldHVybiBiaWcucmVuZGVyKHFyRGF0YSwgb3B0aW9ucywgY2IpXG59XG4iXSwibmFtZXMiOlsiYmlnIiwicmVxdWlyZSIsInNtYWxsIiwiZXhwb3J0cyIsInJlbmRlciIsInFyRGF0YSIsIm9wdGlvbnMiLCJjYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal-small.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal-small.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("const backgroundWhite = \"\\x1b[47m\";\nconst backgroundBlack = \"\\x1b[40m\";\nconst foregroundWhite = \"\\x1b[37m\";\nconst foregroundBlack = \"\\x1b[30m\";\nconst reset = \"\\x1b[0m\";\nconst lineSetupNormal = backgroundWhite + foregroundBlack // setup colors\n;\nconst lineSetupInverse = backgroundBlack + foregroundWhite // setup colors\n;\nconst createPalette = function(lineSetup, foregroundWhite, foregroundBlack) {\n    return {\n        // 1 ... white, 2 ... black, 0 ... transparent (default)\n        \"00\": reset + \" \" + lineSetup,\n        \"01\": reset + foregroundWhite + \"▄\" + lineSetup,\n        \"02\": reset + foregroundBlack + \"▄\" + lineSetup,\n        10: reset + foregroundWhite + \"▀\" + lineSetup,\n        11: \" \",\n        12: \"▄\",\n        20: reset + foregroundBlack + \"▀\" + lineSetup,\n        21: \"▀\",\n        22: \"█\"\n    };\n};\n/**\n * Returns code for QR pixel\n * @param {boolean[][]} modules\n * @param {number} size\n * @param {number} x\n * @param {number} y\n * @return {'0' | '1' | '2'}\n */ const mkCodePixel = function(modules, size, x, y) {\n    const sizePlus = size + 1;\n    if (x >= sizePlus || y >= sizePlus || y < -1 || x < -1) return \"0\";\n    if (x >= size || y >= size || y < 0 || x < 0) return \"1\";\n    const idx = y * size + x;\n    return modules[idx] ? \"2\" : \"1\";\n};\n/**\n * Returns code for four QR pixels. Suitable as key in palette.\n * @param {boolean[][]} modules\n * @param {number} size\n * @param {number} x\n * @param {number} y\n * @return {keyof palette}\n */ const mkCode = function(modules, size, x, y) {\n    return mkCodePixel(modules, size, x, y) + mkCodePixel(modules, size, x, y + 1);\n};\nexports.render = function(qrData, options, cb) {\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    const inverse = !!(options && options.inverse);\n    const lineSetup = options && options.inverse ? lineSetupInverse : lineSetupNormal;\n    const white = inverse ? foregroundBlack : foregroundWhite;\n    const black = inverse ? foregroundWhite : foregroundBlack;\n    const palette = createPalette(lineSetup, white, black);\n    const newLine = reset + \"\\n\" + lineSetup;\n    let output = lineSetup // setup colors\n    ;\n    for(let y = -1; y < size + 1; y += 2){\n        for(let x = -1; x < size; x++){\n            output += palette[mkCode(data, size, x, y)];\n        }\n        output += palette[mkCode(data, size, size, y)] + newLine;\n    }\n    output += reset;\n    if (typeof cb === \"function\") {\n        cb(null, output);\n    }\n    return output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci90ZXJtaW5hbC90ZXJtaW5hbC1zbWFsbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxrQkFBa0I7QUFDeEIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxrQkFBa0I7QUFDeEIsTUFBTUMsUUFBUTtBQUNkLE1BQU1DLGtCQUFrQkwsa0JBQWtCRyxnQkFBZ0IsZUFBZTs7QUFDekUsTUFBTUcsbUJBQW1CTCxrQkFBa0JDLGdCQUFnQixlQUFlOztBQUUxRSxNQUFNSyxnQkFBZ0IsU0FBVUMsU0FBUyxFQUFFTixlQUFlLEVBQUVDLGVBQWU7SUFDekUsT0FBTztRQUNMLHdEQUF3RDtRQUV4RCxNQUFNQyxRQUFRLE1BQU1JO1FBQ3BCLE1BQU1KLFFBQVFGLGtCQUFrQixNQUFNTTtRQUN0QyxNQUFNSixRQUFRRCxrQkFBa0IsTUFBTUs7UUFDdEMsSUFBSUosUUFBUUYsa0JBQWtCLE1BQU1NO1FBQ3BDLElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSUosUUFBUUQsa0JBQWtCLE1BQU1LO1FBQ3BDLElBQUk7UUFDSixJQUFJO0lBQ047QUFDRjtBQUVBOzs7Ozs7O0NBT0MsR0FDRCxNQUFNQyxjQUFjLFNBQVVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxDQUFDLEVBQUVDLENBQUM7SUFDL0MsTUFBTUMsV0FBV0gsT0FBTztJQUN4QixJQUFJLEtBQU1HLFlBQWNELEtBQUtDLFlBQWNELElBQUksQ0FBQyxLQUFPRCxJQUFJLENBQUMsR0FBSSxPQUFPO0lBQ3ZFLElBQUksS0FBTUQsUUFBVUUsS0FBS0YsUUFBVUUsSUFBSSxLQUFPRCxJQUFJLEdBQUksT0FBTztJQUM3RCxNQUFNRyxNQUFNLElBQUtKLE9BQVFDO0lBQ3pCLE9BQU9GLE9BQU8sQ0FBQ0ssSUFBSSxHQUFHLE1BQU07QUFDOUI7QUFFQTs7Ozs7OztDQU9DLEdBQ0QsTUFBTUMsU0FBUyxTQUFVTixPQUFPLEVBQUVDLElBQUksRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFDLE9BQ0VKLFlBQVlDLFNBQVNDLE1BQU1DLEdBQUdDLEtBQzlCSixZQUFZQyxTQUFTQyxNQUFNQyxHQUFHQyxJQUFJO0FBRXRDO0FBRUFJLGNBQWMsR0FBRyxTQUFVRSxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsRUFBRTtJQUM1QyxNQUFNVixPQUFPUSxPQUFPVCxPQUFPLENBQUNDLElBQUk7SUFDaEMsTUFBTVcsT0FBT0gsT0FBT1QsT0FBTyxDQUFDWSxJQUFJO0lBRWhDLE1BQU1DLFVBQVUsQ0FBQyxDQUFFSCxDQUFBQSxXQUFXQSxRQUFRRyxPQUFPO0lBQzdDLE1BQU1mLFlBQVlZLFdBQVdBLFFBQVFHLE9BQU8sR0FBR2pCLG1CQUFtQkQ7SUFDbEUsTUFBTW1CLFFBQVFELFVBQVVwQixrQkFBa0JEO0lBQzFDLE1BQU11QixRQUFRRixVQUFVckIsa0JBQWtCQztJQUUxQyxNQUFNdUIsVUFBVW5CLGNBQWNDLFdBQVdnQixPQUFPQztJQUNoRCxNQUFNRSxVQUFVdkIsUUFBUSxPQUFPSTtJQUUvQixJQUFJb0IsU0FBU3BCLFVBQVUsZUFBZTs7SUFFdEMsSUFBSyxJQUFJSyxJQUFJLENBQUMsR0FBR0EsSUFBSUYsT0FBTyxHQUFHRSxLQUFLLEVBQUc7UUFDckMsSUFBSyxJQUFJRCxJQUFJLENBQUMsR0FBR0EsSUFBSUQsTUFBTUMsSUFBSztZQUM5QmdCLFVBQVVGLE9BQU8sQ0FBQ1YsT0FBT00sTUFBTVgsTUFBTUMsR0FBR0MsR0FBRztRQUM3QztRQUVBZSxVQUFVRixPQUFPLENBQUNWLE9BQU9NLE1BQU1YLE1BQU1BLE1BQU1FLEdBQUcsR0FBR2M7SUFDbkQ7SUFFQUMsVUFBVXhCO0lBRVYsSUFBSSxPQUFPaUIsT0FBTyxZQUFZO1FBQzVCQSxHQUFHLE1BQU1PO0lBQ1g7SUFFQSxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL3Rlcm1pbmFsL3Rlcm1pbmFsLXNtYWxsLmpzP2FjMTUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFja2dyb3VuZFdoaXRlID0gJ1xceDFiWzQ3bSdcbmNvbnN0IGJhY2tncm91bmRCbGFjayA9ICdcXHgxYls0MG0nXG5jb25zdCBmb3JlZ3JvdW5kV2hpdGUgPSAnXFx4MWJbMzdtJ1xuY29uc3QgZm9yZWdyb3VuZEJsYWNrID0gJ1xceDFiWzMwbSdcbmNvbnN0IHJlc2V0ID0gJ1xceDFiWzBtJ1xuY29uc3QgbGluZVNldHVwTm9ybWFsID0gYmFja2dyb3VuZFdoaXRlICsgZm9yZWdyb3VuZEJsYWNrIC8vIHNldHVwIGNvbG9yc1xuY29uc3QgbGluZVNldHVwSW52ZXJzZSA9IGJhY2tncm91bmRCbGFjayArIGZvcmVncm91bmRXaGl0ZSAvLyBzZXR1cCBjb2xvcnNcblxuY29uc3QgY3JlYXRlUGFsZXR0ZSA9IGZ1bmN0aW9uIChsaW5lU2V0dXAsIGZvcmVncm91bmRXaGl0ZSwgZm9yZWdyb3VuZEJsYWNrKSB7XG4gIHJldHVybiB7XG4gICAgLy8gMSAuLi4gd2hpdGUsIDIgLi4uIGJsYWNrLCAwIC4uLiB0cmFuc3BhcmVudCAoZGVmYXVsdClcblxuICAgICcwMCc6IHJlc2V0ICsgJyAnICsgbGluZVNldHVwLFxuICAgICcwMSc6IHJlc2V0ICsgZm9yZWdyb3VuZFdoaXRlICsgJ+KWhCcgKyBsaW5lU2V0dXAsXG4gICAgJzAyJzogcmVzZXQgKyBmb3JlZ3JvdW5kQmxhY2sgKyAn4paEJyArIGxpbmVTZXR1cCxcbiAgICAxMDogcmVzZXQgKyBmb3JlZ3JvdW5kV2hpdGUgKyAn4paAJyArIGxpbmVTZXR1cCxcbiAgICAxMTogJyAnLFxuICAgIDEyOiAn4paEJyxcbiAgICAyMDogcmVzZXQgKyBmb3JlZ3JvdW5kQmxhY2sgKyAn4paAJyArIGxpbmVTZXR1cCxcbiAgICAyMTogJ+KWgCcsXG4gICAgMjI6ICfilognXG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIGNvZGUgZm9yIFFSIHBpeGVsXG4gKiBAcGFyYW0ge2Jvb2xlYW5bXVtdfSBtb2R1bGVzXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICogQHBhcmFtIHtudW1iZXJ9IHhcbiAqIEBwYXJhbSB7bnVtYmVyfSB5XG4gKiBAcmV0dXJuIHsnMCcgfCAnMScgfCAnMid9XG4gKi9cbmNvbnN0IG1rQ29kZVBpeGVsID0gZnVuY3Rpb24gKG1vZHVsZXMsIHNpemUsIHgsIHkpIHtcbiAgY29uc3Qgc2l6ZVBsdXMgPSBzaXplICsgMVxuICBpZiAoKHggPj0gc2l6ZVBsdXMpIHx8ICh5ID49IHNpemVQbHVzKSB8fCAoeSA8IC0xKSB8fCAoeCA8IC0xKSkgcmV0dXJuICcwJ1xuICBpZiAoKHggPj0gc2l6ZSkgfHwgKHkgPj0gc2l6ZSkgfHwgKHkgPCAwKSB8fCAoeCA8IDApKSByZXR1cm4gJzEnXG4gIGNvbnN0IGlkeCA9ICh5ICogc2l6ZSkgKyB4XG4gIHJldHVybiBtb2R1bGVzW2lkeF0gPyAnMicgOiAnMSdcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGNvZGUgZm9yIGZvdXIgUVIgcGl4ZWxzLiBTdWl0YWJsZSBhcyBrZXkgaW4gcGFsZXR0ZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbltdW119IG1vZHVsZXNcbiAqIEBwYXJhbSB7bnVtYmVyfSBzaXplXG4gKiBAcGFyYW0ge251bWJlcn0geFxuICogQHBhcmFtIHtudW1iZXJ9IHlcbiAqIEByZXR1cm4ge2tleW9mIHBhbGV0dGV9XG4gKi9cbmNvbnN0IG1rQ29kZSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBzaXplLCB4LCB5KSB7XG4gIHJldHVybiAoXG4gICAgbWtDb2RlUGl4ZWwobW9kdWxlcywgc2l6ZSwgeCwgeSkgK1xuICAgIG1rQ29kZVBpeGVsKG1vZHVsZXMsIHNpemUsIHgsIHkgKyAxKVxuICApXG59XG5cbmV4cG9ydHMucmVuZGVyID0gZnVuY3Rpb24gKHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgY29uc3Qgc2l6ZSA9IHFyRGF0YS5tb2R1bGVzLnNpemVcbiAgY29uc3QgZGF0YSA9IHFyRGF0YS5tb2R1bGVzLmRhdGFcblxuICBjb25zdCBpbnZlcnNlID0gISEob3B0aW9ucyAmJiBvcHRpb25zLmludmVyc2UpXG4gIGNvbnN0IGxpbmVTZXR1cCA9IG9wdGlvbnMgJiYgb3B0aW9ucy5pbnZlcnNlID8gbGluZVNldHVwSW52ZXJzZSA6IGxpbmVTZXR1cE5vcm1hbFxuICBjb25zdCB3aGl0ZSA9IGludmVyc2UgPyBmb3JlZ3JvdW5kQmxhY2sgOiBmb3JlZ3JvdW5kV2hpdGVcbiAgY29uc3QgYmxhY2sgPSBpbnZlcnNlID8gZm9yZWdyb3VuZFdoaXRlIDogZm9yZWdyb3VuZEJsYWNrXG5cbiAgY29uc3QgcGFsZXR0ZSA9IGNyZWF0ZVBhbGV0dGUobGluZVNldHVwLCB3aGl0ZSwgYmxhY2spXG4gIGNvbnN0IG5ld0xpbmUgPSByZXNldCArICdcXG4nICsgbGluZVNldHVwXG5cbiAgbGV0IG91dHB1dCA9IGxpbmVTZXR1cCAvLyBzZXR1cCBjb2xvcnNcblxuICBmb3IgKGxldCB5ID0gLTE7IHkgPCBzaXplICsgMTsgeSArPSAyKSB7XG4gICAgZm9yIChsZXQgeCA9IC0xOyB4IDwgc2l6ZTsgeCsrKSB7XG4gICAgICBvdXRwdXQgKz0gcGFsZXR0ZVtta0NvZGUoZGF0YSwgc2l6ZSwgeCwgeSldXG4gICAgfVxuXG4gICAgb3V0cHV0ICs9IHBhbGV0dGVbbWtDb2RlKGRhdGEsIHNpemUsIHNpemUsIHkpXSArIG5ld0xpbmVcbiAgfVxuXG4gIG91dHB1dCArPSByZXNldFxuXG4gIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYihudWxsLCBvdXRwdXQpXG4gIH1cblxuICByZXR1cm4gb3V0cHV0XG59XG4iXSwibmFtZXMiOlsiYmFja2dyb3VuZFdoaXRlIiwiYmFja2dyb3VuZEJsYWNrIiwiZm9yZWdyb3VuZFdoaXRlIiwiZm9yZWdyb3VuZEJsYWNrIiwicmVzZXQiLCJsaW5lU2V0dXBOb3JtYWwiLCJsaW5lU2V0dXBJbnZlcnNlIiwiY3JlYXRlUGFsZXR0ZSIsImxpbmVTZXR1cCIsIm1rQ29kZVBpeGVsIiwibW9kdWxlcyIsInNpemUiLCJ4IiwieSIsInNpemVQbHVzIiwiaWR4IiwibWtDb2RlIiwiZXhwb3J0cyIsInJlbmRlciIsInFyRGF0YSIsIm9wdGlvbnMiLCJjYiIsImRhdGEiLCJpbnZlcnNlIiwid2hpdGUiLCJibGFjayIsInBhbGV0dGUiLCJuZXdMaW5lIiwib3V0cHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal-small.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// let Utils = require('./utils')\nexports.render = function(qrData, options, cb) {\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    // let opts = Utils.getOptions(options)\n    // use same scheme as https://github.com/gtanner/qrcode-terminal because it actually works! =)\n    const black = \"\\x1b[40m  \\x1b[0m\";\n    const white = \"\\x1b[47m  \\x1b[0m\";\n    let output = \"\";\n    const hMargin = Array(size + 3).join(white);\n    const vMargin = Array(2).join(white);\n    output += hMargin + \"\\n\";\n    for(let i = 0; i < size; ++i){\n        output += white;\n        for(let j = 0; j < size; j++){\n            // let topModule = data[i * size + j]\n            // let bottomModule = data[(i + 1) * size + j]\n            output += data[i * size + j] ? black : white // getBlockChar(topModule, bottomModule)\n            ;\n        }\n        // output += white+'\\n'\n        output += vMargin + \"\\n\";\n    }\n    output += hMargin + \"\\n\";\n    if (typeof cb === \"function\") {\n        cb(null, output);\n    }\n    return output;\n} /*\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  let fs = require('fs')\n  let utf8 = exports.render(qrData, options)\n  fs.writeFile(path, utf8, cb)\n}\n*/ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci90ZXJtaW5hbC90ZXJtaW5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUM7QUFFakNBLGNBQWMsR0FBRyxTQUFVRSxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsRUFBRTtJQUM1QyxNQUFNQyxPQUFPSCxPQUFPSSxPQUFPLENBQUNELElBQUk7SUFDaEMsTUFBTUUsT0FBT0wsT0FBT0ksT0FBTyxDQUFDQyxJQUFJO0lBRWhDLHVDQUF1QztJQUV2Qyw4RkFBOEY7SUFDOUYsTUFBTUMsUUFBUTtJQUNkLE1BQU1DLFFBQVE7SUFFZCxJQUFJQyxTQUFTO0lBQ2IsTUFBTUMsVUFBVUMsTUFBTVAsT0FBTyxHQUFHUSxJQUFJLENBQUNKO0lBQ3JDLE1BQU1LLFVBQVVGLE1BQU0sR0FBR0MsSUFBSSxDQUFDSjtJQUU5QkMsVUFBVUMsVUFBVTtJQUNwQixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSVYsTUFBTSxFQUFFVSxFQUFHO1FBQzdCTCxVQUFVRDtRQUNWLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJWCxNQUFNVyxJQUFLO1lBQzdCLHFDQUFxQztZQUNyQyw4Q0FBOEM7WUFFOUNOLFVBQVVILElBQUksQ0FBQ1EsSUFBSVYsT0FBT1csRUFBRSxHQUFHUixRQUFRQyxNQUFLLHdDQUF3Qzs7UUFDdEY7UUFDQSx1QkFBdUI7UUFDdkJDLFVBQVVJLFVBQVU7SUFDdEI7SUFFQUosVUFBVUMsVUFBVTtJQUVwQixJQUFJLE9BQU9QLE9BQU8sWUFBWTtRQUM1QkEsR0FBRyxNQUFNTTtJQUNYO0lBRUEsT0FBT0E7QUFDVCxFQUNBOzs7Ozs7Ozs7OztBQVdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL3Rlcm1pbmFsL3Rlcm1pbmFsLmpzP2MxOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGV0IFV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmV4cG9ydHMucmVuZGVyID0gZnVuY3Rpb24gKHFyRGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgY29uc3Qgc2l6ZSA9IHFyRGF0YS5tb2R1bGVzLnNpemVcbiAgY29uc3QgZGF0YSA9IHFyRGF0YS5tb2R1bGVzLmRhdGFcblxuICAvLyBsZXQgb3B0cyA9IFV0aWxzLmdldE9wdGlvbnMob3B0aW9ucylcblxuICAvLyB1c2Ugc2FtZSBzY2hlbWUgYXMgaHR0cHM6Ly9naXRodWIuY29tL2d0YW5uZXIvcXJjb2RlLXRlcm1pbmFsIGJlY2F1c2UgaXQgYWN0dWFsbHkgd29ya3MhID0pXG4gIGNvbnN0IGJsYWNrID0gJ1xceDFiWzQwbSAgXFx4MWJbMG0nXG4gIGNvbnN0IHdoaXRlID0gJ1xceDFiWzQ3bSAgXFx4MWJbMG0nXG5cbiAgbGV0IG91dHB1dCA9ICcnXG4gIGNvbnN0IGhNYXJnaW4gPSBBcnJheShzaXplICsgMykuam9pbih3aGl0ZSlcbiAgY29uc3Qgdk1hcmdpbiA9IEFycmF5KDIpLmpvaW4od2hpdGUpXG5cbiAgb3V0cHV0ICs9IGhNYXJnaW4gKyAnXFxuJ1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7ICsraSkge1xuICAgIG91dHB1dCArPSB3aGl0ZVxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgaisrKSB7XG4gICAgICAvLyBsZXQgdG9wTW9kdWxlID0gZGF0YVtpICogc2l6ZSArIGpdXG4gICAgICAvLyBsZXQgYm90dG9tTW9kdWxlID0gZGF0YVsoaSArIDEpICogc2l6ZSArIGpdXG5cbiAgICAgIG91dHB1dCArPSBkYXRhW2kgKiBzaXplICsgal0gPyBibGFjayA6IHdoaXRlLy8gZ2V0QmxvY2tDaGFyKHRvcE1vZHVsZSwgYm90dG9tTW9kdWxlKVxuICAgIH1cbiAgICAvLyBvdXRwdXQgKz0gd2hpdGUrJ1xcbidcbiAgICBvdXRwdXQgKz0gdk1hcmdpbiArICdcXG4nXG4gIH1cblxuICBvdXRwdXQgKz0gaE1hcmdpbiArICdcXG4nXG5cbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiKG51bGwsIG91dHB1dClcbiAgfVxuXG4gIHJldHVybiBvdXRwdXRcbn1cbi8qXG5leHBvcnRzLnJlbmRlclRvRmlsZSA9IGZ1bmN0aW9uIHJlbmRlclRvRmlsZSAocGF0aCwgcXJEYXRhLCBvcHRpb25zLCBjYikge1xuICBpZiAodHlwZW9mIGNiID09PSAndW5kZWZpbmVkJykge1xuICAgIGNiID0gb3B0aW9uc1xuICAgIG9wdGlvbnMgPSB1bmRlZmluZWRcbiAgfVxuXG4gIGxldCBmcyA9IHJlcXVpcmUoJ2ZzJylcbiAgbGV0IHV0ZjggPSBleHBvcnRzLnJlbmRlcihxckRhdGEsIG9wdGlvbnMpXG4gIGZzLndyaXRlRmlsZShwYXRoLCB1dGY4LCBjYilcbn1cbiovXG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlbmRlciIsInFyRGF0YSIsIm9wdGlvbnMiLCJjYiIsInNpemUiLCJtb2R1bGVzIiwiZGF0YSIsImJsYWNrIiwid2hpdGUiLCJvdXRwdXQiLCJoTWFyZ2luIiwiQXJyYXkiLCJqb2luIiwidk1hcmdpbiIsImkiLCJqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal/terminal.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utf8.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utf8.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const Utils = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js\");\nconst BLOCK_CHAR = {\n    WW: \" \",\n    WB: \"▄\",\n    BB: \"█\",\n    BW: \"▀\"\n};\nconst INVERTED_BLOCK_CHAR = {\n    BB: \" \",\n    BW: \"▄\",\n    WW: \"█\",\n    WB: \"▀\"\n};\nfunction getBlockChar(top, bottom, blocks) {\n    if (top && bottom) return blocks.BB;\n    if (top && !bottom) return blocks.BW;\n    if (!top && bottom) return blocks.WB;\n    return blocks.WW;\n}\nexports.render = function(qrData, options, cb) {\n    const opts = Utils.getOptions(options);\n    let blocks = BLOCK_CHAR;\n    if (opts.color.dark.hex === \"#ffffff\" || opts.color.light.hex === \"#000000\") {\n        blocks = INVERTED_BLOCK_CHAR;\n    }\n    const size = qrData.modules.size;\n    const data = qrData.modules.data;\n    let output = \"\";\n    let hMargin = Array(size + opts.margin * 2 + 1).join(blocks.WW);\n    hMargin = Array(opts.margin / 2 + 1).join(hMargin + \"\\n\");\n    const vMargin = Array(opts.margin + 1).join(blocks.WW);\n    output += hMargin;\n    for(let i = 0; i < size; i += 2){\n        output += vMargin;\n        for(let j = 0; j < size; j++){\n            const topModule = data[i * size + j];\n            const bottomModule = data[(i + 1) * size + j];\n            output += getBlockChar(topModule, bottomModule, blocks);\n        }\n        output += vMargin + \"\\n\";\n    }\n    output += hMargin.slice(0, -1);\n    if (typeof cb === \"function\") {\n        cb(null, output);\n    }\n    return output;\n};\nexports.renderToFile = function renderToFile(path, qrData, options, cb) {\n    if (typeof cb === \"undefined\") {\n        cb = options;\n        options = undefined;\n    }\n    const fs = __webpack_require__(/*! fs */ \"fs\");\n    const utf8 = exports.render(qrData, options);\n    fs.writeFile(path, utf8, cb);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS1tb2RhbC9ub2RlX21vZHVsZXMvcXJjb2RlL2xpYi9yZW5kZXJlci91dGY4LmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLE1BQU1DLGFBQWE7SUFDakJDLElBQUk7SUFDSkMsSUFBSTtJQUNKQyxJQUFJO0lBQ0pDLElBQUk7QUFDTjtBQUVBLE1BQU1DLHNCQUFzQjtJQUMxQkYsSUFBSTtJQUNKQyxJQUFJO0lBQ0pILElBQUk7SUFDSkMsSUFBSTtBQUNOO0FBRUEsU0FBU0ksYUFBY0MsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDeEMsSUFBSUYsT0FBT0MsUUFBUSxPQUFPQyxPQUFPTixFQUFFO0lBQ25DLElBQUlJLE9BQU8sQ0FBQ0MsUUFBUSxPQUFPQyxPQUFPTCxFQUFFO0lBQ3BDLElBQUksQ0FBQ0csT0FBT0MsUUFBUSxPQUFPQyxPQUFPUCxFQUFFO0lBQ3BDLE9BQU9PLE9BQU9SLEVBQUU7QUFDbEI7QUFFQVMsY0FBYyxHQUFHLFNBQVVFLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxFQUFFO0lBQzVDLE1BQU1DLE9BQU9qQixNQUFNa0IsVUFBVSxDQUFDSDtJQUM5QixJQUFJSixTQUFTVDtJQUNiLElBQUllLEtBQUtFLEtBQUssQ0FBQ0MsSUFBSSxDQUFDQyxHQUFHLEtBQUssYUFBYUosS0FBS0UsS0FBSyxDQUFDRyxLQUFLLENBQUNELEdBQUcsS0FBSyxXQUFXO1FBQzNFVixTQUFTSjtJQUNYO0lBRUEsTUFBTWdCLE9BQU9ULE9BQU9VLE9BQU8sQ0FBQ0QsSUFBSTtJQUNoQyxNQUFNRSxPQUFPWCxPQUFPVSxPQUFPLENBQUNDLElBQUk7SUFFaEMsSUFBSUMsU0FBUztJQUNiLElBQUlDLFVBQVVDLE1BQU1MLE9BQVFOLEtBQUtZLE1BQU0sR0FBRyxJQUFLLEdBQUdDLElBQUksQ0FBQ25CLE9BQU9SLEVBQUU7SUFDaEV3QixVQUFVQyxNQUFNLEtBQU1DLE1BQU0sR0FBRyxJQUFLLEdBQUdDLElBQUksQ0FBQ0gsVUFBVTtJQUV0RCxNQUFNSSxVQUFVSCxNQUFNWCxLQUFLWSxNQUFNLEdBQUcsR0FBR0MsSUFBSSxDQUFDbkIsT0FBT1IsRUFBRTtJQUVyRHVCLFVBQVVDO0lBQ1YsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUlULE1BQU1TLEtBQUssRUFBRztRQUNoQ04sVUFBVUs7UUFDVixJQUFLLElBQUlFLElBQUksR0FBR0EsSUFBSVYsTUFBTVUsSUFBSztZQUM3QixNQUFNQyxZQUFZVCxJQUFJLENBQUNPLElBQUlULE9BQU9VLEVBQUU7WUFDcEMsTUFBTUUsZUFBZVYsSUFBSSxDQUFDLENBQUNPLElBQUksS0FBS1QsT0FBT1UsRUFBRTtZQUU3Q1AsVUFBVWxCLGFBQWEwQixXQUFXQyxjQUFjeEI7UUFDbEQ7UUFFQWUsVUFBVUssVUFBVTtJQUN0QjtJQUVBTCxVQUFVQyxRQUFRUyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBRTVCLElBQUksT0FBT3BCLE9BQU8sWUFBWTtRQUM1QkEsR0FBRyxNQUFNVTtJQUNYO0lBRUEsT0FBT0E7QUFDVDtBQUVBZCxvQkFBb0IsR0FBRyxTQUFTeUIsYUFBY0MsSUFBSSxFQUFFeEIsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLEVBQUU7SUFDckUsSUFBSSxPQUFPQSxPQUFPLGFBQWE7UUFDN0JBLEtBQUtEO1FBQ0xBLFVBQVV3QjtJQUNaO0lBRUEsTUFBTUMsS0FBS3ZDLG1CQUFPQSxDQUFDO0lBQ25CLE1BQU13QyxPQUFPN0IsUUFBUUMsTUFBTSxDQUFDQyxRQUFRQztJQUNwQ3lCLEdBQUdFLFNBQVMsQ0FBQ0osTUFBTUcsTUFBTXpCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LW1vZGFsL25vZGVfbW9kdWxlcy9xcmNvZGUvbGliL3JlbmRlcmVyL3V0ZjguanM/MjA1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5jb25zdCBCTE9DS19DSEFSID0ge1xuICBXVzogJyAnLFxuICBXQjogJ+KWhCcsXG4gIEJCOiAn4paIJyxcbiAgQlc6ICfiloAnXG59XG5cbmNvbnN0IElOVkVSVEVEX0JMT0NLX0NIQVIgPSB7XG4gIEJCOiAnICcsXG4gIEJXOiAn4paEJyxcbiAgV1c6ICfilognLFxuICBXQjogJ+KWgCdcbn1cblxuZnVuY3Rpb24gZ2V0QmxvY2tDaGFyICh0b3AsIGJvdHRvbSwgYmxvY2tzKSB7XG4gIGlmICh0b3AgJiYgYm90dG9tKSByZXR1cm4gYmxvY2tzLkJCXG4gIGlmICh0b3AgJiYgIWJvdHRvbSkgcmV0dXJuIGJsb2Nrcy5CV1xuICBpZiAoIXRvcCAmJiBib3R0b20pIHJldHVybiBibG9ja3MuV0JcbiAgcmV0dXJuIGJsb2Nrcy5XV1xufVxuXG5leHBvcnRzLnJlbmRlciA9IGZ1bmN0aW9uIChxckRhdGEsIG9wdGlvbnMsIGNiKSB7XG4gIGNvbnN0IG9wdHMgPSBVdGlscy5nZXRPcHRpb25zKG9wdGlvbnMpXG4gIGxldCBibG9ja3MgPSBCTE9DS19DSEFSXG4gIGlmIChvcHRzLmNvbG9yLmRhcmsuaGV4ID09PSAnI2ZmZmZmZicgfHwgb3B0cy5jb2xvci5saWdodC5oZXggPT09ICcjMDAwMDAwJykge1xuICAgIGJsb2NrcyA9IElOVkVSVEVEX0JMT0NLX0NIQVJcbiAgfVxuXG4gIGNvbnN0IHNpemUgPSBxckRhdGEubW9kdWxlcy5zaXplXG4gIGNvbnN0IGRhdGEgPSBxckRhdGEubW9kdWxlcy5kYXRhXG5cbiAgbGV0IG91dHB1dCA9ICcnXG4gIGxldCBoTWFyZ2luID0gQXJyYXkoc2l6ZSArIChvcHRzLm1hcmdpbiAqIDIpICsgMSkuam9pbihibG9ja3MuV1cpXG4gIGhNYXJnaW4gPSBBcnJheSgob3B0cy5tYXJnaW4gLyAyKSArIDEpLmpvaW4oaE1hcmdpbiArICdcXG4nKVxuXG4gIGNvbnN0IHZNYXJnaW4gPSBBcnJheShvcHRzLm1hcmdpbiArIDEpLmpvaW4oYmxvY2tzLldXKVxuXG4gIG91dHB1dCArPSBoTWFyZ2luXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSArPSAyKSB7XG4gICAgb3V0cHV0ICs9IHZNYXJnaW5cbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgY29uc3QgdG9wTW9kdWxlID0gZGF0YVtpICogc2l6ZSArIGpdXG4gICAgICBjb25zdCBib3R0b21Nb2R1bGUgPSBkYXRhWyhpICsgMSkgKiBzaXplICsgal1cblxuICAgICAgb3V0cHV0ICs9IGdldEJsb2NrQ2hhcih0b3BNb2R1bGUsIGJvdHRvbU1vZHVsZSwgYmxvY2tzKVxuICAgIH1cblxuICAgIG91dHB1dCArPSB2TWFyZ2luICsgJ1xcbidcbiAgfVxuXG4gIG91dHB1dCArPSBoTWFyZ2luLnNsaWNlKDAsIC0xKVxuXG4gIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYihudWxsLCBvdXRwdXQpXG4gIH1cblxuICByZXR1cm4gb3V0cHV0XG59XG5cbmV4cG9ydHMucmVuZGVyVG9GaWxlID0gZnVuY3Rpb24gcmVuZGVyVG9GaWxlIChwYXRoLCBxckRhdGEsIG9wdGlvbnMsIGNiKSB7XG4gIGlmICh0eXBlb2YgY2IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2IgPSBvcHRpb25zXG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG4gIGNvbnN0IHV0ZjggPSBleHBvcnRzLnJlbmRlcihxckRhdGEsIG9wdGlvbnMpXG4gIGZzLndyaXRlRmlsZShwYXRoLCB1dGY4LCBjYilcbn1cbiJdLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJCTE9DS19DSEFSIiwiV1ciLCJXQiIsIkJCIiwiQlciLCJJTlZFUlRFRF9CTE9DS19DSEFSIiwiZ2V0QmxvY2tDaGFyIiwidG9wIiwiYm90dG9tIiwiYmxvY2tzIiwiZXhwb3J0cyIsInJlbmRlciIsInFyRGF0YSIsIm9wdGlvbnMiLCJjYiIsIm9wdHMiLCJnZXRPcHRpb25zIiwiY29sb3IiLCJkYXJrIiwiaGV4IiwibGlnaHQiLCJzaXplIiwibW9kdWxlcyIsImRhdGEiLCJvdXRwdXQiLCJoTWFyZ2luIiwiQXJyYXkiLCJtYXJnaW4iLCJqb2luIiwidk1hcmdpbiIsImkiLCJqIiwidG9wTW9kdWxlIiwiYm90dG9tTW9kdWxlIiwic2xpY2UiLCJyZW5kZXJUb0ZpbGUiLCJwYXRoIiwidW5kZWZpbmVkIiwiZnMiLCJ1dGY4Iiwid3JpdGVGaWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utf8.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("function hex2rgba(hex) {\n    if (typeof hex === \"number\") {\n        hex = hex.toString();\n    }\n    if (typeof hex !== \"string\") {\n        throw new Error(\"Color should be defined as hex string\");\n    }\n    let hexCode = hex.slice().replace(\"#\", \"\").split(\"\");\n    if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n        throw new Error(\"Invalid hex color: \" + hex);\n    }\n    // Convert from short to long form (fff -> ffffff)\n    if (hexCode.length === 3 || hexCode.length === 4) {\n        hexCode = Array.prototype.concat.apply([], hexCode.map(function(c) {\n            return [\n                c,\n                c\n            ];\n        }));\n    }\n    // Add default alpha value\n    if (hexCode.length === 6) hexCode.push(\"F\", \"F\");\n    const hexValue = parseInt(hexCode.join(\"\"), 16);\n    return {\n        r: hexValue >> 24 & 255,\n        g: hexValue >> 16 & 255,\n        b: hexValue >> 8 & 255,\n        a: hexValue & 255,\n        hex: \"#\" + hexCode.slice(0, 6).join(\"\")\n    };\n}\nexports.getOptions = function getOptions(options) {\n    if (!options) options = {};\n    if (!options.color) options.color = {};\n    const margin = typeof options.margin === \"undefined\" || options.margin === null || options.margin < 0 ? 4 : options.margin;\n    const width = options.width && options.width >= 21 ? options.width : undefined;\n    const scale = options.scale || 4;\n    return {\n        width: width,\n        scale: width ? 4 : scale,\n        margin: margin,\n        color: {\n            dark: hex2rgba(options.color.dark || \"#000000ff\"),\n            light: hex2rgba(options.color.light || \"#ffffffff\")\n        },\n        type: options.type,\n        rendererOpts: options.rendererOpts || {}\n    };\n};\nexports.getScale = function getScale(qrSize, opts) {\n    return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n};\nexports.getImageWidth = function getImageWidth(qrSize, opts) {\n    const scale = exports.getScale(qrSize, opts);\n    return Math.floor((qrSize + opts.margin * 2) * scale);\n};\nexports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n    const size = qr.modules.size;\n    const data = qr.modules.data;\n    const scale = exports.getScale(size, opts);\n    const symbolSize = Math.floor((size + opts.margin * 2) * scale);\n    const scaledMargin = opts.margin * scale;\n    const palette = [\n        opts.color.light,\n        opts.color.dark\n    ];\n    for(let i = 0; i < symbolSize; i++){\n        for(let j = 0; j < symbolSize; j++){\n            let posDst = (i * symbolSize + j) * 4;\n            let pxColor = opts.color.light;\n            if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n                const iSrc = Math.floor((i - scaledMargin) / scale);\n                const jSrc = Math.floor((j - scaledMargin) / scale);\n                pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n            }\n            imgData[posDst++] = pxColor.r;\n            imgData[posDst++] = pxColor.g;\n            imgData[posDst++] = pxColor.b;\n            imgData[posDst] = pxColor.a;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/server.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/server.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const canPromise = __webpack_require__(/*! ./can-promise */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/can-promise.js\");\nconst QRCode = __webpack_require__(/*! ./core/qrcode */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/core/qrcode.js\");\nconst PngRenderer = __webpack_require__(/*! ./renderer/png */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/png.js\");\nconst Utf8Renderer = __webpack_require__(/*! ./renderer/utf8 */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/utf8.js\");\nconst TerminalRenderer = __webpack_require__(/*! ./renderer/terminal */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/terminal.js\");\nconst SvgRenderer = __webpack_require__(/*! ./renderer/svg */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/renderer/svg.js\");\nfunction checkParams(text, opts, cb) {\n    if (typeof text === \"undefined\") {\n        throw new Error(\"String required as first argument\");\n    }\n    if (typeof cb === \"undefined\") {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof cb !== \"function\") {\n        if (!canPromise()) {\n            throw new Error(\"Callback required as last argument\");\n        } else {\n            opts = cb || {};\n            cb = null;\n        }\n    }\n    return {\n        opts: opts,\n        cb: cb\n    };\n}\nfunction getTypeFromFilename(path) {\n    return path.slice((path.lastIndexOf(\".\") - 1 >>> 0) + 2).toLowerCase();\n}\nfunction getRendererFromType(type) {\n    switch(type){\n        case \"svg\":\n            return SvgRenderer;\n        case \"txt\":\n        case \"utf8\":\n            return Utf8Renderer;\n        case \"png\":\n        case \"image/png\":\n        default:\n            return PngRenderer;\n    }\n}\nfunction getStringRendererFromType(type) {\n    switch(type){\n        case \"svg\":\n            return SvgRenderer;\n        case \"terminal\":\n            return TerminalRenderer;\n        case \"utf8\":\n        default:\n            return Utf8Renderer;\n    }\n}\nfunction render(renderFunc, text, params) {\n    if (!params.cb) {\n        return new Promise(function(resolve, reject) {\n            try {\n                const data = QRCode.create(text, params.opts);\n                return renderFunc(data, params.opts, function(err, data) {\n                    return err ? reject(err) : resolve(data);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        const data = QRCode.create(text, params.opts);\n        return renderFunc(data, params.opts, params.cb);\n    } catch (e) {\n        params.cb(e);\n    }\n}\nexports.create = QRCode.create;\nexports.toCanvas = __webpack_require__(/*! ./browser */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/browser.js\").toCanvas;\nexports.toString = function toString(text, opts, cb) {\n    const params = checkParams(text, opts, cb);\n    const type = params.opts ? params.opts.type : undefined;\n    const renderer = getStringRendererFromType(type);\n    return render(renderer.render, text, params);\n};\nexports.toDataURL = function toDataURL(text, opts, cb) {\n    const params = checkParams(text, opts, cb);\n    const renderer = getRendererFromType(params.opts.type);\n    return render(renderer.renderToDataURL, text, params);\n};\nexports.toBuffer = function toBuffer(text, opts, cb) {\n    const params = checkParams(text, opts, cb);\n    const renderer = getRendererFromType(params.opts.type);\n    return render(renderer.renderToBuffer, text, params);\n};\nexports.toFile = function toFile(path, text, opts, cb) {\n    if (typeof path !== \"string\" || !(typeof text === \"string\" || typeof text === \"object\")) {\n        throw new Error(\"Invalid argument\");\n    }\n    if (arguments.length < 3 && !canPromise()) {\n        throw new Error(\"Too few arguments provided\");\n    }\n    const params = checkParams(text, opts, cb);\n    const type = params.opts.type || getTypeFromFilename(path);\n    const renderer = getRendererFromType(type);\n    const renderToFile = renderer.renderToFile.bind(null, path);\n    return render(renderToFile, text, params);\n};\nexports.toFileStream = function toFileStream(stream, text, opts) {\n    if (arguments.length < 2) {\n        throw new Error(\"Too few arguments provided\");\n    }\n    const params = checkParams(text, opts, stream.emit.bind(stream, \"error\"));\n    const renderer = getRendererFromType(\"png\") // Only png support for now\n    ;\n    const renderToFileStream = renderer.renderToFileStream.bind(null, stream);\n    render(renderToFileStream, text, params);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-modal/node_modules/qrcode/lib/server.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-provider/dist/cjs/index.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-provider/dist/cjs/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst jsonrpc_provider_1 = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\nconst jsonrpc_http_connection_1 = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\");\nconst legacy_types_1 = __webpack_require__(/*! @walletconnect/legacy-types */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\");\nconst legacy_utils_1 = __webpack_require__(/*! @walletconnect/legacy-utils */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\");\nconst signer_1 = __webpack_require__(/*! ./signer */ \"(ssr)/../node_modules/@walletconnect/legacy-provider/dist/cjs/signer.js\");\nclass WalletConnectProvider {\n    constructor(opts){\n        this.events = new events_1.default();\n        this.rpc = {\n            infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n            custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n        };\n        this.signer = new jsonrpc_provider_1.JsonRpcProvider(new signer_1.SignerConnection(opts));\n        const chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n        this.http = this.setHttpProvider(chainId);\n        this.registerEventListeners();\n    }\n    get connected() {\n        return this.signer.connection.connected;\n    }\n    get connector() {\n        return this.signer.connection.connector;\n    }\n    get accounts() {\n        return this.signer.connection.accounts;\n    }\n    get chainId() {\n        return this.signer.connection.chainId;\n    }\n    get rpcUrl() {\n        var _a;\n        return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n    request(args) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            switch(args.method){\n                case \"eth_requestAccounts\":\n                    yield this.connect();\n                    return this.signer.connection.accounts;\n                case \"eth_accounts\":\n                    return this.signer.connection.accounts;\n                case \"eth_chainId\":\n                    return this.signer.connection.chainId;\n                default:\n                    break;\n            }\n            if (legacy_types_1.SIGNING_METHODS.includes(args.method)) {\n                return this.signer.request(args);\n            }\n            if (typeof this.http === \"undefined\") {\n                throw new Error(`Cannot request JSON-RPC method (${args.method}) without provided rpc url`);\n            }\n            return this.http.request(args);\n        });\n    }\n    sendAsync(args, callback) {\n        this.request(args).then((response)=>callback(null, response)).catch((error)=>callback(error, undefined));\n    }\n    enable() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const accounts = yield this.request({\n                method: \"eth_requestAccounts\"\n            });\n            return accounts;\n        });\n    }\n    connect() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (!this.signer.connection.connected) {\n                yield this.signer.connect();\n            }\n        });\n    }\n    disconnect() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (this.signer.connection.connected) {\n                yield this.signer.disconnect();\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    get isWalletConnect() {\n        return true;\n    }\n    registerEventListeners() {\n        this.signer.connection.on(\"accountsChanged\", (accounts)=>{\n            this.events.emit(\"accountsChanged\", accounts);\n        });\n        this.signer.connection.on(\"chainChanged\", (chainId)=>{\n            this.http = this.setHttpProvider(chainId);\n            this.events.emit(\"chainChanged\", chainId);\n        });\n        this.signer.on(\"disconnect\", ()=>{\n            this.events.emit(\"disconnect\");\n        });\n    }\n    setHttpProvider(chainId) {\n        const rpcUrl = legacy_utils_1.getRpcUrl(chainId, this.rpc);\n        if (typeof rpcUrl === \"undefined\") return undefined;\n        const http = new jsonrpc_provider_1.JsonRpcProvider(new jsonrpc_http_connection_1.HttpConnection(rpcUrl));\n        return http;\n    }\n}\nexports[\"default\"] = WalletConnectProvider; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-provider/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-provider/dist/cjs/signer.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-provider/dist/cjs/signer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SignerConnection = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst events_1 = tslib_1.__importDefault(__webpack_require__(/*! events */ \"events\"));\nconst legacy_client_1 = tslib_1.__importDefault(__webpack_require__(/*! @walletconnect/legacy-client */ \"(ssr)/../node_modules/@walletconnect/legacy-client/dist/cjs/index.js\"));\nconst legacy_modal_1 = tslib_1.__importDefault(__webpack_require__(/*! @walletconnect/legacy-modal */ \"(ssr)/../node_modules/@walletconnect/legacy-modal/dist/cjs/index.js\"));\nconst jsonrpc_types_1 = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js\");\nconst jsonrpc_utils_1 = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\nclass SignerConnection extends jsonrpc_types_1.IJsonRpcConnection {\n    constructor(opts){\n        super();\n        this.events = new events_1.default();\n        this.accounts = [];\n        this.chainId = 1;\n        this.pending = false;\n        this.bridge = \"https://bridge.walletconnect.org\";\n        this.qrcode = true;\n        this.qrcodeModalOptions = undefined;\n        this.opts = opts;\n        this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n        this.wc = this.register(opts);\n    }\n    get connected() {\n        return typeof this.wc !== \"undefined\" && this.wc.connected;\n    }\n    get connecting() {\n        return this.pending;\n    }\n    get connector() {\n        this.wc = this.register(this.opts);\n        return this.wc;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open(chainId) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (this.connected) {\n                this.onOpen();\n                return;\n            }\n            return new Promise((resolve, reject)=>{\n                this.on(\"error\", (err)=>{\n                    reject(err);\n                });\n                this.on(\"open\", ()=>{\n                    resolve();\n                });\n                this.create(chainId);\n            });\n        });\n    }\n    close() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            if (typeof this.wc === \"undefined\") return;\n            if (this.wc.connected) {\n                this.wc.killSession();\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this.wc = this.register(this.opts);\n            if (!this.connected) yield this.open();\n            this.sendPayload(payload).then((res)=>this.events.emit(\"payload\", res)).catch((e)=>this.events.emit(\"payload\", jsonrpc_utils_1.formatJsonRpcError(payload.id, e.message)));\n        });\n    }\n    register(opts) {\n        if (this.wc) return this.wc;\n        this.opts = opts || this.opts;\n        this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector) ? opts.connector.bridge : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n        this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n        this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n        this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n        const connectorOpts = {\n            bridge: this.bridge,\n            qrcodeModal: this.qrcode ? legacy_modal_1.default : undefined,\n            qrcodeModalOptions: this.qrcodeModalOptions,\n            storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n            signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n            clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n        };\n        this.wc = typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new legacy_client_1.default(connectorOpts);\n        if (typeof this.wc === \"undefined\") {\n            throw new Error(\"Failed to register WalletConnect connector\");\n        }\n        if (this.wc.accounts.length) {\n            this.accounts = this.wc.accounts;\n        }\n        if (this.wc.chainId) {\n            this.chainId = this.wc.chainId;\n        }\n        this.registerConnectorEvents();\n        return this.wc;\n    }\n    onOpen(wc) {\n        this.pending = false;\n        if (wc) {\n            this.wc = wc;\n        }\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.pending = false;\n        if (this.wc) {\n            this.wc = undefined;\n        }\n        this.events.emit(\"close\");\n    }\n    onError(payload, message = \"Failed or Rejected Request\", code = -32000) {\n        const errorPayload = {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            error: {\n                code,\n                message\n            }\n        };\n        this.events.emit(\"payload\", errorPayload);\n        return errorPayload;\n    }\n    create(chainId) {\n        this.wc = this.register(this.opts);\n        this.chainId = chainId || this.chainId;\n        if (this.connected || this.pending) return;\n        this.pending = true;\n        this.registerConnectorEvents();\n        this.wc.createSession({\n            chainId: this.chainId\n        }).then(()=>this.events.emit(\"created\")).catch((e)=>this.events.emit(\"error\", e));\n    }\n    registerConnectorEvents() {\n        this.wc = this.register(this.opts);\n        this.wc.on(\"connect\", (err)=>{\n            var _a, _b;\n            if (err) {\n                this.events.emit(\"error\", err);\n                return;\n            }\n            this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n            this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n            this.onOpen();\n        });\n        this.wc.on(\"disconnect\", (err)=>{\n            if (err) {\n                this.events.emit(\"error\", err);\n                return;\n            }\n            this.onClose();\n        });\n        this.wc.on(\"modal_closed\", ()=>{\n            this.events.emit(\"error\", new Error(\"User closed modal\"));\n        });\n        this.wc.on(\"session_update\", (error, payload)=>{\n            const { accounts, chainId } = payload.params[0];\n            if (!this.accounts || accounts && this.accounts !== accounts) {\n                this.accounts = accounts;\n                this.events.emit(\"accountsChanged\", accounts);\n            }\n            if (!this.chainId || chainId && this.chainId !== chainId) {\n                this.chainId = chainId;\n                this.events.emit(\"chainChanged\", chainId);\n            }\n        });\n    }\n    sendPayload(payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this.wc = this.register(this.opts);\n            try {\n                const response = yield this.wc.unsafeSend(payload);\n                return this.sanitizeResponse(response);\n            } catch (error) {\n                return this.onError(payload, error.message);\n            }\n        });\n    }\n    sanitizeResponse(response) {\n        return typeof response.error !== \"undefined\" && typeof response.error.code === \"undefined\" ? jsonrpc_utils_1.formatJsonRpcError(response.id, response.error.message, response.error.data) : response;\n    }\n}\nexports.SignerConnection = SignerConnection;\nexports[\"default\"] = SignerConnection; //# sourceMappingURL=signer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-provider/dist/cjs/signer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/errors.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/errors.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ERROR_QRCODE_MODAL_USER_CLOSED = exports.ERROR_QRCODE_MODAL_NOT_PROVIDED = exports.ERROR_INVALID_URI = exports.ERROR_INVALID_RESPONSE = exports.ERROR_MISSING_REQUIRED = exports.ERROR_MISSING_ID = exports.ERROR_MISSING_METHOD = exports.ERROR_MISSING_ERROR = exports.ERROR_MISSING_RESULT = exports.ERROR_MISSING_JSON_RPC = exports.ERROR_SESSION_REJECTED = exports.ERROR_SESSION_DISCONNECTED = exports.ERROR_SESSION_CONNECTED = void 0;\nexports.ERROR_SESSION_CONNECTED = \"Session currently connected\";\nexports.ERROR_SESSION_DISCONNECTED = \"Session currently disconnected\";\nexports.ERROR_SESSION_REJECTED = \"Session Rejected\";\nexports.ERROR_MISSING_JSON_RPC = \"Missing JSON RPC response\";\nexports.ERROR_MISSING_RESULT = `JSON-RPC success response must include \"result\" field`;\nexports.ERROR_MISSING_ERROR = `JSON-RPC error response must include \"error\" field`;\nexports.ERROR_MISSING_METHOD = `JSON RPC request must have valid \"method\" value`;\nexports.ERROR_MISSING_ID = `JSON RPC request must have valid \"id\" value`;\nexports.ERROR_MISSING_REQUIRED = \"Missing one of the required parameters: bridge / uri / session\";\nexports.ERROR_INVALID_RESPONSE = \"JSON RPC response format is invalid\";\nexports.ERROR_INVALID_URI = \"URI format is invalid\";\nexports.ERROR_QRCODE_MODAL_NOT_PROVIDED = \"QRCode Modal not provided\";\nexports.ERROR_QRCODE_MODAL_USER_CLOSED = \"User close QRCode Modal\"; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsdUNBQXVDLEdBQUdBLHlCQUF5QixHQUFHQSw4QkFBOEIsR0FBR0EsOEJBQThCLEdBQUdBLHdCQUF3QixHQUFHQSw0QkFBNEIsR0FBR0EsMkJBQTJCLEdBQUdBLDRCQUE0QixHQUFHQSw4QkFBOEIsR0FBR0EsOEJBQThCLEdBQUdBLGtDQUFrQyxHQUFHQSwrQkFBK0IsR0FBRyxLQUFLO0FBQ3RiQSwrQkFBK0IsR0FBRztBQUNsQ0Esa0NBQWtDLEdBQUc7QUFDckNBLDhCQUE4QixHQUFHO0FBQ2pDQSw4QkFBOEIsR0FBRztBQUNqQ0EsNEJBQTRCLEdBQUcsQ0FBQyxxREFBcUQsQ0FBQztBQUN0RkEsMkJBQTJCLEdBQUcsQ0FBQyxrREFBa0QsQ0FBQztBQUNsRkEsNEJBQTRCLEdBQUcsQ0FBQywrQ0FBK0MsQ0FBQztBQUNoRkEsd0JBQXdCLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQztBQUN4RUEsOEJBQThCLEdBQUc7QUFDakNBLDhCQUE4QixHQUFHO0FBQ2pDQSx5QkFBeUIsR0FBRztBQUM1QkEsdUNBQXVDLEdBQUc7QUFDMUNBLHNDQUFzQyxHQUFHLDJCQUN6QyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvY29uc3RhbnRzL2Vycm9ycy5qcz8zZWIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FUlJPUl9RUkNPREVfTU9EQUxfVVNFUl9DTE9TRUQgPSBleHBvcnRzLkVSUk9SX1FSQ09ERV9NT0RBTF9OT1RfUFJPVklERUQgPSBleHBvcnRzLkVSUk9SX0lOVkFMSURfVVJJID0gZXhwb3J0cy5FUlJPUl9JTlZBTElEX1JFU1BPTlNFID0gZXhwb3J0cy5FUlJPUl9NSVNTSU5HX1JFUVVJUkVEID0gZXhwb3J0cy5FUlJPUl9NSVNTSU5HX0lEID0gZXhwb3J0cy5FUlJPUl9NSVNTSU5HX01FVEhPRCA9IGV4cG9ydHMuRVJST1JfTUlTU0lOR19FUlJPUiA9IGV4cG9ydHMuRVJST1JfTUlTU0lOR19SRVNVTFQgPSBleHBvcnRzLkVSUk9SX01JU1NJTkdfSlNPTl9SUEMgPSBleHBvcnRzLkVSUk9SX1NFU1NJT05fUkVKRUNURUQgPSBleHBvcnRzLkVSUk9SX1NFU1NJT05fRElTQ09OTkVDVEVEID0gZXhwb3J0cy5FUlJPUl9TRVNTSU9OX0NPTk5FQ1RFRCA9IHZvaWQgMDtcbmV4cG9ydHMuRVJST1JfU0VTU0lPTl9DT05ORUNURUQgPSBcIlNlc3Npb24gY3VycmVudGx5IGNvbm5lY3RlZFwiO1xuZXhwb3J0cy5FUlJPUl9TRVNTSU9OX0RJU0NPTk5FQ1RFRCA9IFwiU2Vzc2lvbiBjdXJyZW50bHkgZGlzY29ubmVjdGVkXCI7XG5leHBvcnRzLkVSUk9SX1NFU1NJT05fUkVKRUNURUQgPSBcIlNlc3Npb24gUmVqZWN0ZWRcIjtcbmV4cG9ydHMuRVJST1JfTUlTU0lOR19KU09OX1JQQyA9IFwiTWlzc2luZyBKU09OIFJQQyByZXNwb25zZVwiO1xuZXhwb3J0cy5FUlJPUl9NSVNTSU5HX1JFU1VMVCA9IGBKU09OLVJQQyBzdWNjZXNzIHJlc3BvbnNlIG11c3QgaW5jbHVkZSBcInJlc3VsdFwiIGZpZWxkYDtcbmV4cG9ydHMuRVJST1JfTUlTU0lOR19FUlJPUiA9IGBKU09OLVJQQyBlcnJvciByZXNwb25zZSBtdXN0IGluY2x1ZGUgXCJlcnJvclwiIGZpZWxkYDtcbmV4cG9ydHMuRVJST1JfTUlTU0lOR19NRVRIT0QgPSBgSlNPTiBSUEMgcmVxdWVzdCBtdXN0IGhhdmUgdmFsaWQgXCJtZXRob2RcIiB2YWx1ZWA7XG5leHBvcnRzLkVSUk9SX01JU1NJTkdfSUQgPSBgSlNPTiBSUEMgcmVxdWVzdCBtdXN0IGhhdmUgdmFsaWQgXCJpZFwiIHZhbHVlYDtcbmV4cG9ydHMuRVJST1JfTUlTU0lOR19SRVFVSVJFRCA9IFwiTWlzc2luZyBvbmUgb2YgdGhlIHJlcXVpcmVkIHBhcmFtZXRlcnM6IGJyaWRnZSAvIHVyaSAvIHNlc3Npb25cIjtcbmV4cG9ydHMuRVJST1JfSU5WQUxJRF9SRVNQT05TRSA9IFwiSlNPTiBSUEMgcmVzcG9uc2UgZm9ybWF0IGlzIGludmFsaWRcIjtcbmV4cG9ydHMuRVJST1JfSU5WQUxJRF9VUkkgPSBcIlVSSSBmb3JtYXQgaXMgaW52YWxpZFwiO1xuZXhwb3J0cy5FUlJPUl9RUkNPREVfTU9EQUxfTk9UX1BST1ZJREVEID0gXCJRUkNvZGUgTW9kYWwgbm90IHByb3ZpZGVkXCI7XG5leHBvcnRzLkVSUk9SX1FSQ09ERV9NT0RBTF9VU0VSX0NMT1NFRCA9IFwiVXNlciBjbG9zZSBRUkNvZGUgTW9kYWxcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJFUlJPUl9RUkNPREVfTU9EQUxfVVNFUl9DTE9TRUQiLCJFUlJPUl9RUkNPREVfTU9EQUxfTk9UX1BST1ZJREVEIiwiRVJST1JfSU5WQUxJRF9VUkkiLCJFUlJPUl9JTlZBTElEX1JFU1BPTlNFIiwiRVJST1JfTUlTU0lOR19SRVFVSVJFRCIsIkVSUk9SX01JU1NJTkdfSUQiLCJFUlJPUl9NSVNTSU5HX01FVEhPRCIsIkVSUk9SX01JU1NJTkdfRVJST1IiLCJFUlJPUl9NSVNTSU5HX1JFU1VMVCIsIkVSUk9SX01JU1NJTkdfSlNPTl9SUEMiLCJFUlJPUl9TRVNTSU9OX1JFSkVDVEVEIiwiRVJST1JfU0VTU0lPTl9ESVNDT05ORUNURUQiLCJFUlJPUl9TRVNTSU9OX0NPTk5FQ1RFRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/events.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/events.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.reservedEvents = exports.RESERVED_EVENTS = void 0;\nexports.RESERVED_EVENTS = [\n    \"session_request\",\n    \"session_update\",\n    \"exchange_key\",\n    \"connect\",\n    \"disconnect\",\n    \"display_uri\",\n    \"modal_closed\",\n    \"transport_open\",\n    \"transport_close\",\n    \"transport_error\"\n];\nexports.reservedEvents = exports.RESERVED_EVENTS; //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0EsdUJBQXVCLEdBQUcsS0FBSztBQUN4REEsdUJBQXVCLEdBQUc7SUFDdEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUNEQSxzQkFBc0IsR0FBR0EsUUFBUUcsZUFBZSxFQUNoRCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvY29uc3RhbnRzL2V2ZW50cy5qcz9jYTU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXNlcnZlZEV2ZW50cyA9IGV4cG9ydHMuUkVTRVJWRURfRVZFTlRTID0gdm9pZCAwO1xuZXhwb3J0cy5SRVNFUlZFRF9FVkVOVFMgPSBbXG4gICAgXCJzZXNzaW9uX3JlcXVlc3RcIixcbiAgICBcInNlc3Npb25fdXBkYXRlXCIsXG4gICAgXCJleGNoYW5nZV9rZXlcIixcbiAgICBcImNvbm5lY3RcIixcbiAgICBcImRpc2Nvbm5lY3RcIixcbiAgICBcImRpc3BsYXlfdXJpXCIsXG4gICAgXCJtb2RhbF9jbG9zZWRcIixcbiAgICBcInRyYW5zcG9ydF9vcGVuXCIsXG4gICAgXCJ0cmFuc3BvcnRfY2xvc2VcIixcbiAgICBcInRyYW5zcG9ydF9lcnJvclwiLFxuXTtcbmV4cG9ydHMucmVzZXJ2ZWRFdmVudHMgPSBleHBvcnRzLlJFU0VSVkVEX0VWRU5UUztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyZXNlcnZlZEV2ZW50cyIsIlJFU0VSVkVEX0VWRU5UUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/index.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./errors */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/errors.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./events */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/events.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./jsonrpc */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/jsonrpc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mobile */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/mobile.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./networks */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/networks.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0RBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsZ0dBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsZ0dBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0dBQVcsR0FBR0g7QUFDM0NFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsZ0dBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsb0dBQVksR0FBR0gsVUFDNUMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzL2Rpc3QvY2pzL2NvbnN0YW50cy9pbmRleC5qcz9lZGU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ldmVudHNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vanNvbnJwY1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb2JpbGVcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbmV0d29ya3NcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/jsonrpc.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/jsonrpc.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.stateMethods = exports.signingMethods = exports.STATE_METHODS = exports.SIGNING_METHODS = exports.WALLET_METHODS = void 0;\nexports.WALLET_METHODS = [\n    \"wallet_addEthereumChain\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\"\n];\nexports.SIGNING_METHODS = [\n    \"eth_sendTransaction\",\n    \"eth_signTransaction\",\n    \"eth_sign\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v1\",\n    \"eth_signTypedData_v2\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"personal_sign\",\n    ...exports.WALLET_METHODS\n];\nexports.STATE_METHODS = [\n    \"eth_accounts\",\n    \"eth_chainId\",\n    \"net_version\"\n];\nexports.signingMethods = exports.SIGNING_METHODS;\nexports.stateMethods = exports.STATE_METHODS; //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvanNvbnJwYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLHNCQUFzQixHQUFHQSxxQkFBcUIsR0FBR0EsdUJBQXVCLEdBQUdBLHNCQUFzQixHQUFHLEtBQUs7QUFDaElBLHNCQUFzQixHQUFHO0lBQ3JCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0g7QUFDREEsdUJBQXVCLEdBQUc7SUFDdEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO09BQ0dBLFFBQVFNLGNBQWM7Q0FDNUI7QUFDRE4scUJBQXFCLEdBQUc7SUFBQztJQUFnQjtJQUFlO0NBQWM7QUFDdEVBLHNCQUFzQixHQUFHQSxRQUFRSyxlQUFlO0FBQ2hETCxvQkFBb0IsR0FBR0EsUUFBUUksYUFBYSxFQUM1QyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvY29uc3RhbnRzL2pzb25ycGMuanM/NWEzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3RhdGVNZXRob2RzID0gZXhwb3J0cy5zaWduaW5nTWV0aG9kcyA9IGV4cG9ydHMuU1RBVEVfTUVUSE9EUyA9IGV4cG9ydHMuU0lHTklOR19NRVRIT0RTID0gZXhwb3J0cy5XQUxMRVRfTUVUSE9EUyA9IHZvaWQgMDtcbmV4cG9ydHMuV0FMTEVUX01FVEhPRFMgPSBbXG4gICAgXCJ3YWxsZXRfYWRkRXRoZXJldW1DaGFpblwiLFxuICAgIFwid2FsbGV0X3N3aXRjaEV0aGVyZXVtQ2hhaW5cIixcbiAgICBcIndhbGxldF9nZXRQZXJtaXNzaW9uc1wiLFxuICAgIFwid2FsbGV0X3JlcXVlc3RQZXJtaXNzaW9uc1wiLFxuICAgIFwid2FsbGV0X3JlZ2lzdGVyT25ib2FyZGluZ1wiLFxuICAgIFwid2FsbGV0X3dhdGNoQXNzZXRcIixcbiAgICBcIndhbGxldF9zY2FuUVJDb2RlXCIsXG5dO1xuZXhwb3J0cy5TSUdOSU5HX01FVEhPRFMgPSBbXG4gICAgXCJldGhfc2VuZFRyYW5zYWN0aW9uXCIsXG4gICAgXCJldGhfc2lnblRyYW5zYWN0aW9uXCIsXG4gICAgXCJldGhfc2lnblwiLFxuICAgIFwiZXRoX3NpZ25UeXBlZERhdGFcIixcbiAgICBcImV0aF9zaWduVHlwZWREYXRhX3YxXCIsXG4gICAgXCJldGhfc2lnblR5cGVkRGF0YV92MlwiLFxuICAgIFwiZXRoX3NpZ25UeXBlZERhdGFfdjNcIixcbiAgICBcImV0aF9zaWduVHlwZWREYXRhX3Y0XCIsXG4gICAgXCJwZXJzb25hbF9zaWduXCIsXG4gICAgLi4uZXhwb3J0cy5XQUxMRVRfTUVUSE9EUyxcbl07XG5leHBvcnRzLlNUQVRFX01FVEhPRFMgPSBbXCJldGhfYWNjb3VudHNcIiwgXCJldGhfY2hhaW5JZFwiLCBcIm5ldF92ZXJzaW9uXCJdO1xuZXhwb3J0cy5zaWduaW5nTWV0aG9kcyA9IGV4cG9ydHMuU0lHTklOR19NRVRIT0RTO1xuZXhwb3J0cy5zdGF0ZU1ldGhvZHMgPSBleHBvcnRzLlNUQVRFX01FVEhPRFM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29ucnBjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInN0YXRlTWV0aG9kcyIsInNpZ25pbmdNZXRob2RzIiwiU1RBVEVfTUVUSE9EUyIsIlNJR05JTkdfTUVUSE9EUyIsIldBTExFVF9NRVRIT0RTIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/mobile.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/mobile.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.mobileLinkChoiceKey = exports.MOBILE_LINK_CHOICE_KEY = void 0;\nexports.MOBILE_LINK_CHOICE_KEY = \"WALLETCONNECT_DEEPLINK_CHOICE\";\nexports.mobileLinkChoiceKey = exports.MOBILE_LINK_CHOICE_KEY; //# sourceMappingURL=mobile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvbW9iaWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUNwRUEsOEJBQThCLEdBQUc7QUFDakNBLDJCQUEyQixHQUFHQSxRQUFRRyxzQkFBc0IsRUFDNUQsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzL2Rpc3QvY2pzL2NvbnN0YW50cy9tb2JpbGUuanM/YWVjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubW9iaWxlTGlua0Nob2ljZUtleSA9IGV4cG9ydHMuTU9CSUxFX0xJTktfQ0hPSUNFX0tFWSA9IHZvaWQgMDtcbmV4cG9ydHMuTU9CSUxFX0xJTktfQ0hPSUNFX0tFWSA9IFwiV0FMTEVUQ09OTkVDVF9ERUVQTElOS19DSE9JQ0VcIjtcbmV4cG9ydHMubW9iaWxlTGlua0Nob2ljZUtleSA9IGV4cG9ydHMuTU9CSUxFX0xJTktfQ0hPSUNFX0tFWTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vYmlsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2JpbGVMaW5rQ2hvaWNlS2V5IiwiTU9CSUxFX0xJTktfQ0hPSUNFX0tFWSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/mobile.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/networks.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/constants/networks.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.infuraNetworks = exports.INFURA_NETWORKS = void 0;\nexports.INFURA_NETWORKS = {\n    1: \"mainnet\",\n    3: \"ropsten\",\n    4: \"rinkeby\",\n    5: \"goerli\",\n    42: \"kovan\"\n};\nexports.infuraNetworks = exports.INFURA_NETWORKS; //# sourceMappingURL=networks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvbmV0d29ya3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSx1QkFBdUIsR0FBRyxLQUFLO0FBQ3hEQSx1QkFBdUIsR0FBRztJQUN0QixHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsSUFBSTtBQUNSO0FBQ0FBLHNCQUFzQixHQUFHQSxRQUFRRyxlQUFlLEVBQ2hELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jb25zdGFudHMvbmV0d29ya3MuanM/NWY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5mdXJhTmV0d29ya3MgPSBleHBvcnRzLklORlVSQV9ORVRXT1JLUyA9IHZvaWQgMDtcbmV4cG9ydHMuSU5GVVJBX05FVFdPUktTID0ge1xuICAgIDE6IFwibWFpbm5ldFwiLFxuICAgIDM6IFwicm9wc3RlblwiLFxuICAgIDQ6IFwicmlua2VieVwiLFxuICAgIDU6IFwiZ29lcmxpXCIsXG4gICAgNDI6IFwia292YW5cIixcbn07XG5leHBvcnRzLmluZnVyYU5ldHdvcmtzID0gZXhwb3J0cy5JTkZVUkFfTkVUV09SS1M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXR3b3Jrcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpbmZ1cmFOZXR3b3JrcyIsIklORlVSQV9ORVRXT1JLUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/networks.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/crypto.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/crypto.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9jcnlwdG8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0Qsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzL2Rpc3QvY2pzL2NyeXB0by5qcz9jYzY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/ethereum.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/ethereum.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=ethereum.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9ldGhlcmV1bS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvZXRoZXJldW0uanM/YjI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV0aGVyZXVtLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/ethereum.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/events.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/events.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IEvents = void 0;\nclass IEvents {\n}\nexports.IEvents = IEvents; //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9ldmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLE1BQU1FO0FBQ047QUFDQUYsZUFBZSxHQUFHRSxTQUNsQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvZXZlbnRzLmpzPzc4YWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklFdmVudHMgPSB2b2lkIDA7XG5jbGFzcyBJRXZlbnRzIHtcbn1cbmV4cG9ydHMuSUV2ZW50cyA9IElFdmVudHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/events.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/constants/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./ethereum */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/ethereum.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./events */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/events.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./jsonrpc */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/jsonrpc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./network */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/network.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./protocol */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/protocol.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./qrcode */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/qrcode.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./registry */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/registry.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./socket */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/socket.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./storage */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/storage.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSDtBQUMxQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrR0FBYSxHQUFHSDtBQUM3Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSDtBQUMxQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx3RkFBVyxHQUFHSDtBQUMzQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx3RkFBVyxHQUFHSDtBQUMzQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSDtBQUMxQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSDtBQUMxQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx3RkFBVyxHQUFHSCxVQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvaW5kZXguanM/OWY5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcnlwdG9cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V0aGVyZXVtXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V2ZW50c1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9qc29ucnBjXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL25ldHdvcmtcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcHJvdG9jb2xcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcXJjb2RlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3JlZ2lzdHJ5XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NvY2tldFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdG9yYWdlXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/jsonrpc.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/jsonrpc.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9qc29ucnBjLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9qc29ucnBjLmpzP2QzNTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29ucnBjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/network.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/network.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=network.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9uZXR3b3JrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9uZXR3b3JrLmpzPzMwNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXR3b3JrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/network.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/protocol.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/protocol.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvcHJvdG9jb2wuanM/MzY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29sLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/protocol.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/qrcode.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/qrcode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=qrcode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9xcmNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0Qsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzL2Rpc3QvY2pzL3FyY29kZS5qcz84NDU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXJjb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/qrcode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/registry.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/registry.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=registry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9yZWdpc3RyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXMvZGlzdC9janMvcmVnaXN0cnkuanM/M2I2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZ2lzdHJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/registry.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/socket.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/socket.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=socket.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9zb2NrZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0Qsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzL2Rpc3QvY2pzL3NvY2tldC5qcz8xNDlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29ja2V0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/socket.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/storage.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-types/dist/cjs/storage.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS10eXBlcy9kaXN0L2Nqcy9zdG9yYWdlLmpzP2JjZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/storage.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/encoding.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/encoding.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.convertNumberToHex = exports.convertNumberToUtf8 = exports.convertNumberToArrayBuffer = exports.convertNumberToBuffer = exports.convertHexToNumber = exports.convertHexToUtf8 = exports.convertHexToArrayBuffer = exports.convertHexToBuffer = exports.convertUtf8ToNumber = exports.convertUtf8ToHex = exports.convertUtf8ToBuffer = exports.convertUtf8ToArrayBuffer = exports.concatBuffers = exports.convertBufferToNumber = exports.convertBufferToHex = exports.convertBufferToUtf8 = exports.convertBufferToArrayBuffer = exports.concatArrayBuffers = exports.convertArrayBufferToNumber = exports.convertArrayBufferToHex = exports.convertArrayBufferToUtf8 = exports.convertArrayBufferToBuffer = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst encoding = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\"));\nfunction convertArrayBufferToBuffer(arrBuf) {\n    return encoding.arrayToBuffer(new Uint8Array(arrBuf));\n}\nexports.convertArrayBufferToBuffer = convertArrayBufferToBuffer;\nfunction convertArrayBufferToUtf8(arrBuf) {\n    return encoding.arrayToUtf8(new Uint8Array(arrBuf));\n}\nexports.convertArrayBufferToUtf8 = convertArrayBufferToUtf8;\nfunction convertArrayBufferToHex(arrBuf, noPrefix) {\n    return encoding.arrayToHex(new Uint8Array(arrBuf), !noPrefix);\n}\nexports.convertArrayBufferToHex = convertArrayBufferToHex;\nfunction convertArrayBufferToNumber(arrBuf) {\n    return encoding.arrayToNumber(new Uint8Array(arrBuf));\n}\nexports.convertArrayBufferToNumber = convertArrayBufferToNumber;\nfunction concatArrayBuffers(...args) {\n    return encoding.hexToArray(args.map((b)=>encoding.arrayToHex(new Uint8Array(b))).join(\"\")).buffer;\n}\nexports.concatArrayBuffers = concatArrayBuffers;\nfunction convertBufferToArrayBuffer(buf) {\n    return encoding.bufferToArray(buf).buffer;\n}\nexports.convertBufferToArrayBuffer = convertBufferToArrayBuffer;\nfunction convertBufferToUtf8(buf) {\n    return encoding.bufferToUtf8(buf);\n}\nexports.convertBufferToUtf8 = convertBufferToUtf8;\nfunction convertBufferToHex(buf, noPrefix) {\n    return encoding.bufferToHex(buf, !noPrefix);\n}\nexports.convertBufferToHex = convertBufferToHex;\nfunction convertBufferToNumber(buf) {\n    return encoding.bufferToNumber(buf);\n}\nexports.convertBufferToNumber = convertBufferToNumber;\nfunction concatBuffers(...args) {\n    return encoding.concatBuffers(...args);\n}\nexports.concatBuffers = concatBuffers;\nfunction convertUtf8ToArrayBuffer(utf8) {\n    return encoding.utf8ToArray(utf8).buffer;\n}\nexports.convertUtf8ToArrayBuffer = convertUtf8ToArrayBuffer;\nfunction convertUtf8ToBuffer(utf8) {\n    return encoding.utf8ToBuffer(utf8);\n}\nexports.convertUtf8ToBuffer = convertUtf8ToBuffer;\nfunction convertUtf8ToHex(utf8, noPrefix) {\n    return encoding.utf8ToHex(utf8, !noPrefix);\n}\nexports.convertUtf8ToHex = convertUtf8ToHex;\nfunction convertUtf8ToNumber(utf8) {\n    return encoding.utf8ToNumber(utf8);\n}\nexports.convertUtf8ToNumber = convertUtf8ToNumber;\nfunction convertHexToBuffer(hex) {\n    return encoding.hexToBuffer(hex);\n}\nexports.convertHexToBuffer = convertHexToBuffer;\nfunction convertHexToArrayBuffer(hex) {\n    return encoding.hexToArray(hex).buffer;\n}\nexports.convertHexToArrayBuffer = convertHexToArrayBuffer;\nfunction convertHexToUtf8(hex) {\n    return encoding.hexToUtf8(hex);\n}\nexports.convertHexToUtf8 = convertHexToUtf8;\nfunction convertHexToNumber(hex) {\n    return encoding.hexToNumber(hex);\n}\nexports.convertHexToNumber = convertHexToNumber;\nfunction convertNumberToBuffer(num) {\n    return encoding.numberToBuffer(num);\n}\nexports.convertNumberToBuffer = convertNumberToBuffer;\nfunction convertNumberToArrayBuffer(num) {\n    return encoding.numberToArray(num).buffer;\n}\nexports.convertNumberToArrayBuffer = convertNumberToArrayBuffer;\nfunction convertNumberToUtf8(num) {\n    return encoding.numberToUtf8(num);\n}\nexports.convertNumberToUtf8 = convertNumberToUtf8;\nfunction convertNumberToHex(num, noPrefix) {\n    return encoding.numberToHex(Number(num), !noPrefix);\n}\nexports.convertNumberToHex = convertNumberToHex; //# sourceMappingURL=encoding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/encoding.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/env.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isMobile = exports.isIOS = exports.isAndroid = exports.detectOS = exports.detectEnv = void 0;\nconst detect_browser_1 = __webpack_require__(/*! detect-browser */ \"(ssr)/../node_modules/detect-browser/es/index.js\");\nconst window_1 = __webpack_require__(/*! ./window */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js\");\nfunction detectEnv(userAgent) {\n    return detect_browser_1.detect(userAgent);\n}\nexports.detectEnv = detectEnv;\nfunction detectOS() {\n    const env = detectEnv();\n    return env && env.os ? env.os : undefined;\n}\nexports.detectOS = detectOS;\nfunction isAndroid() {\n    const os = detectOS();\n    return os ? os.toLowerCase().includes(\"android\") : false;\n}\nexports.isAndroid = isAndroid;\nfunction isIOS() {\n    const os = detectOS();\n    return os ? os.toLowerCase().includes(\"ios\") || os.toLowerCase().includes(\"mac\") && navigator.maxTouchPoints > 1 : false;\n}\nexports.isIOS = isIOS;\nfunction isMobile() {\n    const os = detectOS();\n    return os ? isAndroid() || isIOS() : false;\n}\nexports.isMobile = isMobile;\nfunction isNode() {\n    const env = detectEnv();\n    const result = env && env.name ? env.name.toLowerCase() === \"node\" : false;\n    return result;\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    const result = !isNode() && !!window_1.getNavigator();\n    return result;\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9lbnYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQixHQUFHQSxjQUFjLEdBQUdBLGdCQUFnQixHQUFHQSxhQUFhLEdBQUdBLGlCQUFpQixHQUFHQSxnQkFBZ0IsR0FBR0EsaUJBQWlCLEdBQUcsS0FBSztBQUN4SSxNQUFNUyxtQkFBbUJDLG1CQUFPQSxDQUFDLHdFQUFnQjtBQUNqRCxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyxzRkFBVTtBQUNuQyxTQUFTRixVQUFVSSxTQUFTO0lBQ3hCLE9BQU9ILGlCQUFpQkksTUFBTSxDQUFDRDtBQUNuQztBQUNBWixpQkFBaUIsR0FBR1E7QUFDcEIsU0FBU0Q7SUFDTCxNQUFNTyxNQUFNTjtJQUNaLE9BQU9NLE9BQU9BLElBQUlDLEVBQUUsR0FBR0QsSUFBSUMsRUFBRSxHQUFHQztBQUNwQztBQUNBaEIsZ0JBQWdCLEdBQUdPO0FBQ25CLFNBQVNEO0lBQ0wsTUFBTVMsS0FBS1I7SUFDWCxPQUFPUSxLQUFLQSxHQUFHRSxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxhQUFhO0FBQ3ZEO0FBQ0FsQixpQkFBaUIsR0FBR007QUFDcEIsU0FBU0Q7SUFDTCxNQUFNVSxLQUFLUjtJQUNYLE9BQU9RLEtBQ0RBLEdBQUdFLFdBQVcsR0FBR0MsUUFBUSxDQUFDLFVBQ3ZCSCxHQUFHRSxXQUFXLEdBQUdDLFFBQVEsQ0FBQyxVQUFVQyxVQUFVQyxjQUFjLEdBQUcsSUFDbEU7QUFDVjtBQUNBcEIsYUFBYSxHQUFHSztBQUNoQixTQUFTRDtJQUNMLE1BQU1XLEtBQUtSO0lBQ1gsT0FBT1EsS0FBS1QsZUFBZUQsVUFBVTtBQUN6QztBQUNBTCxnQkFBZ0IsR0FBR0k7QUFDbkIsU0FBU0Q7SUFDTCxNQUFNVyxNQUFNTjtJQUNaLE1BQU1hLFNBQVNQLE9BQU9BLElBQUlRLElBQUksR0FBR1IsSUFBSVEsSUFBSSxDQUFDTCxXQUFXLE9BQU8sU0FBUztJQUNyRSxPQUFPSTtBQUNYO0FBQ0FyQixjQUFjLEdBQUdHO0FBQ2pCLFNBQVNEO0lBQ0wsTUFBTW1CLFNBQVMsQ0FBQ2xCLFlBQVksQ0FBQyxDQUFDUSxTQUFTWSxZQUFZO0lBQ25ELE9BQU9GO0FBQ1g7QUFDQXJCLGlCQUFpQixHQUFHRSxXQUNwQiwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdXRpbHMvZGlzdC9janMvZW52LmpzP2QyZDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlciA9IGV4cG9ydHMuaXNOb2RlID0gZXhwb3J0cy5pc01vYmlsZSA9IGV4cG9ydHMuaXNJT1MgPSBleHBvcnRzLmlzQW5kcm9pZCA9IGV4cG9ydHMuZGV0ZWN0T1MgPSBleHBvcnRzLmRldGVjdEVudiA9IHZvaWQgMDtcbmNvbnN0IGRldGVjdF9icm93c2VyXzEgPSByZXF1aXJlKFwiZGV0ZWN0LWJyb3dzZXJcIik7XG5jb25zdCB3aW5kb3dfMSA9IHJlcXVpcmUoXCIuL3dpbmRvd1wiKTtcbmZ1bmN0aW9uIGRldGVjdEVudih1c2VyQWdlbnQpIHtcbiAgICByZXR1cm4gZGV0ZWN0X2Jyb3dzZXJfMS5kZXRlY3QodXNlckFnZW50KTtcbn1cbmV4cG9ydHMuZGV0ZWN0RW52ID0gZGV0ZWN0RW52O1xuZnVuY3Rpb24gZGV0ZWN0T1MoKSB7XG4gICAgY29uc3QgZW52ID0gZGV0ZWN0RW52KCk7XG4gICAgcmV0dXJuIGVudiAmJiBlbnYub3MgPyBlbnYub3MgOiB1bmRlZmluZWQ7XG59XG5leHBvcnRzLmRldGVjdE9TID0gZGV0ZWN0T1M7XG5mdW5jdGlvbiBpc0FuZHJvaWQoKSB7XG4gICAgY29uc3Qgb3MgPSBkZXRlY3RPUygpO1xuICAgIHJldHVybiBvcyA/IG9zLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJhbmRyb2lkXCIpIDogZmFsc2U7XG59XG5leHBvcnRzLmlzQW5kcm9pZCA9IGlzQW5kcm9pZDtcbmZ1bmN0aW9uIGlzSU9TKCkge1xuICAgIGNvbnN0IG9zID0gZGV0ZWN0T1MoKTtcbiAgICByZXR1cm4gb3NcbiAgICAgICAgPyBvcy50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwiaW9zXCIpIHx8XG4gICAgICAgICAgICAob3MudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcIm1hY1wiKSAmJiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAxKVxuICAgICAgICA6IGZhbHNlO1xufVxuZXhwb3J0cy5pc0lPUyA9IGlzSU9TO1xuZnVuY3Rpb24gaXNNb2JpbGUoKSB7XG4gICAgY29uc3Qgb3MgPSBkZXRlY3RPUygpO1xuICAgIHJldHVybiBvcyA/IGlzQW5kcm9pZCgpIHx8IGlzSU9TKCkgOiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNNb2JpbGUgPSBpc01vYmlsZTtcbmZ1bmN0aW9uIGlzTm9kZSgpIHtcbiAgICBjb25zdCBlbnYgPSBkZXRlY3RFbnYoKTtcbiAgICBjb25zdCByZXN1bHQgPSBlbnYgJiYgZW52Lm5hbWUgPyBlbnYubmFtZS50b0xvd2VyQ2FzZSgpID09PSBcIm5vZGVcIiA6IGZhbHNlO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmlzTm9kZSA9IGlzTm9kZTtcbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICBjb25zdCByZXN1bHQgPSAhaXNOb2RlKCkgJiYgISF3aW5kb3dfMS5nZXROYXZpZ2F0b3IoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5pc0Jyb3dzZXIgPSBpc0Jyb3dzZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyIiwiaXNOb2RlIiwiaXNNb2JpbGUiLCJpc0lPUyIsImlzQW5kcm9pZCIsImRldGVjdE9TIiwiZGV0ZWN0RW52IiwiZGV0ZWN0X2Jyb3dzZXJfMSIsInJlcXVpcmUiLCJ3aW5kb3dfMSIsInVzZXJBZ2VudCIsImRldGVjdCIsImVudiIsIm9zIiwidW5kZWZpbmVkIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsIm5hdmlnYXRvciIsIm1heFRvdWNoUG9pbnRzIiwicmVzdWx0IiwibmFtZSIsImdldE5hdmlnYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./encoding */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/encoding.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/env.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./json */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/json.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./local */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/local.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./meta */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/meta.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./mobile */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/mobile.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./payload */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/payload.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./registry */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/registry.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./session */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/session.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./url */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/url.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./validators */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/validators.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./window */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxnRkFBTyxHQUFHSDtBQUN2Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrRkFBUSxHQUFHSDtBQUN4Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxvRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrRkFBUSxHQUFHSDtBQUN4Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrRkFBUSxHQUFHSDtBQUN4Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSDtBQUMxQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx3RkFBVyxHQUFHSDtBQUMzQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBWSxHQUFHSDtBQUM1Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx3RkFBVyxHQUFHSDtBQUMzQ0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxnRkFBTyxHQUFHSDtBQUN2Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyw4RkFBYyxHQUFHSDtBQUM5Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxzRkFBVSxHQUFHSCxVQUMxQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdXRpbHMvZGlzdC9janMvaW5kZXguanM/MDEyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbmNvZGluZ1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnZcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vanNvblwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2NhbFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tZXRhXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21pc2NcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbW9iaWxlXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BheWxvYWRcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVnaXN0cnlcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2Vzc2lvblwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91cmxcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93aW5kb3dcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/json.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/json.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.safeJsonStringify = exports.safeJsonParse = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst safeJson = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\"));\nexports.safeJsonParse = safeJson.safeJsonParse;\nexports.safeJsonStringify = safeJson.safeJsonStringify; //# sourceMappingURL=json.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9qc29uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5QkFBeUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN6RCxNQUFNSSxVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQixNQUFNQyxXQUFXRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLGtHQUEwQjtBQUN4RUwscUJBQXFCLEdBQUdNLFNBQVNILGFBQWE7QUFDOUNILHlCQUF5QixHQUFHTSxTQUFTSixpQkFBaUIsRUFDdEQsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXV0aWxzL2Rpc3QvY2pzL2pzb24uanM/YzEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2FmZUpzb25TdHJpbmdpZnkgPSBleHBvcnRzLnNhZmVKc29uUGFyc2UgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3Qgc2FmZUpzb24gPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uXCIpKTtcbmV4cG9ydHMuc2FmZUpzb25QYXJzZSA9IHNhZmVKc29uLnNhZmVKc29uUGFyc2U7XG5leHBvcnRzLnNhZmVKc29uU3RyaW5naWZ5ID0gc2FmZUpzb24uc2FmZUpzb25TdHJpbmdpZnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInNhZmVKc29uU3RyaW5naWZ5Iiwic2FmZUpzb25QYXJzZSIsInRzbGliXzEiLCJyZXF1aXJlIiwic2FmZUpzb24iLCJfX2ltcG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/json.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/local.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/local.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removeLocal = exports.getLocal = exports.setLocal = void 0;\nconst json_1 = __webpack_require__(/*! ./json */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/json.js\");\nconst window_1 = __webpack_require__(/*! ./window */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js\");\nfunction setLocal(key, data) {\n    const raw = json_1.safeJsonStringify(data);\n    const local = window_1.getLocalStorage();\n    if (local) {\n        local.setItem(key, raw);\n    }\n}\nexports.setLocal = setLocal;\nfunction getLocal(key) {\n    let data = null;\n    let raw = null;\n    const local = window_1.getLocalStorage();\n    if (local) {\n        raw = local.getItem(key);\n    }\n    data = raw ? json_1.safeJsonParse(raw) : raw;\n    return data;\n}\nexports.getLocal = getLocal;\nfunction removeLocal(key) {\n    const local = window_1.getLocalStorage();\n    if (local) {\n        local.removeItem(key);\n    }\n}\nexports.removeLocal = removeLocal; //# sourceMappingURL=local.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9sb2NhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbUJBQW1CLEdBQUdBLGdCQUFnQixHQUFHQSxnQkFBZ0IsR0FBRyxLQUFLO0FBQ2pFLE1BQU1LLFNBQVNDLG1CQUFPQSxDQUFDLGtGQUFRO0FBQy9CLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLHNGQUFVO0FBQ25DLFNBQVNGLFNBQVNJLEdBQUcsRUFBRUMsSUFBSTtJQUN2QixNQUFNQyxNQUFNTCxPQUFPTSxpQkFBaUIsQ0FBQ0Y7SUFDckMsTUFBTUcsUUFBUUwsU0FBU00sZUFBZTtJQUN0QyxJQUFJRCxPQUFPO1FBQ1BBLE1BQU1FLE9BQU8sQ0FBQ04sS0FBS0U7SUFDdkI7QUFDSjtBQUNBVixnQkFBZ0IsR0FBR0k7QUFDbkIsU0FBU0QsU0FBU0ssR0FBRztJQUNqQixJQUFJQyxPQUFPO0lBQ1gsSUFBSUMsTUFBTTtJQUNWLE1BQU1FLFFBQVFMLFNBQVNNLGVBQWU7SUFDdEMsSUFBSUQsT0FBTztRQUNQRixNQUFNRSxNQUFNRyxPQUFPLENBQUNQO0lBQ3hCO0lBQ0FDLE9BQU9DLE1BQU1MLE9BQU9XLGFBQWEsQ0FBQ04sT0FBT0E7SUFDekMsT0FBT0Q7QUFDWDtBQUNBVCxnQkFBZ0IsR0FBR0c7QUFDbkIsU0FBU0QsWUFBWU0sR0FBRztJQUNwQixNQUFNSSxRQUFRTCxTQUFTTSxlQUFlO0lBQ3RDLElBQUlELE9BQU87UUFDUEEsTUFBTUssVUFBVSxDQUFDVDtJQUNyQjtBQUNKO0FBQ0FSLG1CQUFtQixHQUFHRSxhQUN0QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdXRpbHMvZGlzdC9janMvbG9jYWwuanM/OWJkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVtb3ZlTG9jYWwgPSBleHBvcnRzLmdldExvY2FsID0gZXhwb3J0cy5zZXRMb2NhbCA9IHZvaWQgMDtcbmNvbnN0IGpzb25fMSA9IHJlcXVpcmUoXCIuL2pzb25cIik7XG5jb25zdCB3aW5kb3dfMSA9IHJlcXVpcmUoXCIuL3dpbmRvd1wiKTtcbmZ1bmN0aW9uIHNldExvY2FsKGtleSwgZGF0YSkge1xuICAgIGNvbnN0IHJhdyA9IGpzb25fMS5zYWZlSnNvblN0cmluZ2lmeShkYXRhKTtcbiAgICBjb25zdCBsb2NhbCA9IHdpbmRvd18xLmdldExvY2FsU3RvcmFnZSgpO1xuICAgIGlmIChsb2NhbCkge1xuICAgICAgICBsb2NhbC5zZXRJdGVtKGtleSwgcmF3KTtcbiAgICB9XG59XG5leHBvcnRzLnNldExvY2FsID0gc2V0TG9jYWw7XG5mdW5jdGlvbiBnZXRMb2NhbChrZXkpIHtcbiAgICBsZXQgZGF0YSA9IG51bGw7XG4gICAgbGV0IHJhdyA9IG51bGw7XG4gICAgY29uc3QgbG9jYWwgPSB3aW5kb3dfMS5nZXRMb2NhbFN0b3JhZ2UoKTtcbiAgICBpZiAobG9jYWwpIHtcbiAgICAgICAgcmF3ID0gbG9jYWwuZ2V0SXRlbShrZXkpO1xuICAgIH1cbiAgICBkYXRhID0gcmF3ID8ganNvbl8xLnNhZmVKc29uUGFyc2UocmF3KSA6IHJhdztcbiAgICByZXR1cm4gZGF0YTtcbn1cbmV4cG9ydHMuZ2V0TG9jYWwgPSBnZXRMb2NhbDtcbmZ1bmN0aW9uIHJlbW92ZUxvY2FsKGtleSkge1xuICAgIGNvbnN0IGxvY2FsID0gd2luZG93XzEuZ2V0TG9jYWxTdG9yYWdlKCk7XG4gICAgaWYgKGxvY2FsKSB7XG4gICAgICAgIGxvY2FsLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICB9XG59XG5leHBvcnRzLnJlbW92ZUxvY2FsID0gcmVtb3ZlTG9jYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyZW1vdmVMb2NhbCIsImdldExvY2FsIiwic2V0TG9jYWwiLCJqc29uXzEiLCJyZXF1aXJlIiwid2luZG93XzEiLCJrZXkiLCJkYXRhIiwicmF3Iiwic2FmZUpzb25TdHJpbmdpZnkiLCJsb2NhbCIsImdldExvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJnZXRJdGVtIiwic2FmZUpzb25QYXJzZSIsInJlbW92ZUl0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/local.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/meta.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/meta.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getClientMeta = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst windowMetadata = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/../node_modules/@walletconnect/window-metadata/dist/cjs/index.js\"));\nfunction getClientMeta() {\n    return windowMetadata.getWindowMetadata();\n}\nexports.getClientMeta = getClientMeta; //# sourceMappingURL=meta.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9tZXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCLE1BQU1HLFVBQVVDLG1CQUFPQSxDQUFDLHdEQUFPO0FBQy9CLE1BQU1DLGlCQUFpQkYsUUFBUUcsWUFBWSxDQUFDRixtQkFBT0EsQ0FBQyw4R0FBZ0M7QUFDcEYsU0FBU0Y7SUFDTCxPQUFPRyxlQUFlRSxpQkFBaUI7QUFDM0M7QUFDQVAscUJBQXFCLEdBQUdFLGVBQ3hCLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9tZXRhLmpzPzIxYWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldENsaWVudE1ldGEgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3Qgd2luZG93TWV0YWRhdGEgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiQHdhbGxldGNvbm5lY3Qvd2luZG93LW1ldGFkYXRhXCIpKTtcbmZ1bmN0aW9uIGdldENsaWVudE1ldGEoKSB7XG4gICAgcmV0dXJuIHdpbmRvd01ldGFkYXRhLmdldFdpbmRvd01ldGFkYXRhKCk7XG59XG5leHBvcnRzLmdldENsaWVudE1ldGEgPSBnZXRDbGllbnRNZXRhO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRDbGllbnRNZXRhIiwidHNsaWJfMSIsInJlcXVpcmUiLCJ3aW5kb3dNZXRhZGF0YSIsIl9faW1wb3J0U3RhciIsImdldFdpbmRvd01ldGFkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/meta.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/misc.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/misc.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRpcUrl = exports.getInfuraRpcUrl = exports.logDeprecationWarning = exports.uuid = exports.payloadId = exports.removeHexLeadingZeros = exports.removeHexPrefix = exports.addHexPrefix = exports.sanitizeHex = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst encoding = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\"));\nconst jsonRpcUtils = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\"));\nconst legacy_types_1 = __webpack_require__(/*! @walletconnect/legacy-types */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\");\nfunction sanitizeHex(hex) {\n    return encoding.sanitizeHex(hex);\n}\nexports.sanitizeHex = sanitizeHex;\nfunction addHexPrefix(hex) {\n    return encoding.addHexPrefix(hex);\n}\nexports.addHexPrefix = addHexPrefix;\nfunction removeHexPrefix(hex) {\n    return encoding.removeHexPrefix(hex);\n}\nexports.removeHexPrefix = removeHexPrefix;\nfunction removeHexLeadingZeros(hex) {\n    return encoding.removeHexLeadingZeros(encoding.addHexPrefix(hex));\n}\nexports.removeHexLeadingZeros = removeHexLeadingZeros;\nexports.payloadId = jsonRpcUtils.payloadId;\nfunction uuid() {\n    const result = ((a, b)=>{\n        for(b = a = \"\"; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : \"-\"){}\n        return b;\n    })();\n    return result;\n}\nexports.uuid = uuid;\nfunction logDeprecationWarning() {\n    console.warn(\"DEPRECATION WARNING: This WalletConnect client library will be deprecated in favor of @walletconnect/client. Please check docs.walletconnect.org to learn more about this migration!\");\n}\nexports.logDeprecationWarning = logDeprecationWarning;\nfunction getInfuraRpcUrl(chainId, infuraId) {\n    let rpcUrl;\n    const network = legacy_types_1.INFURA_NETWORKS[chainId];\n    if (network) {\n        rpcUrl = `https://${network}.infura.io/v3/${infuraId}`;\n    }\n    return rpcUrl;\n}\nexports.getInfuraRpcUrl = getInfuraRpcUrl;\nfunction getRpcUrl(chainId, rpc) {\n    let rpcUrl;\n    const infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId);\n    if (rpc.custom && rpc.custom[chainId]) {\n        rpcUrl = rpc.custom[chainId];\n    } else if (infuraUrl) {\n        rpcUrl = infuraUrl;\n    }\n    return rpcUrl;\n}\nexports.getRpcUrl = getRpcUrl; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9taXNjLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0EsdUJBQXVCLEdBQUdBLDZCQUE2QixHQUFHQSxZQUFZLEdBQUdBLGlCQUFpQixHQUFHQSw2QkFBNkIsR0FBR0EsdUJBQXVCLEdBQUdBLG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQzdOLE1BQU1XLFVBQVVDLG1CQUFPQSxDQUFDLHdEQUFPO0FBQy9CLE1BQU1DLFdBQVdGLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsZ0dBQXlCO0FBQ3ZFLE1BQU1HLGVBQWVKLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsMEdBQThCO0FBQ2hGLE1BQU1JLGlCQUFpQkosbUJBQU9BLENBQUMsd0dBQTZCO0FBQzVELFNBQVNGLFlBQVlPLEdBQUc7SUFDcEIsT0FBT0osU0FBU0gsV0FBVyxDQUFDTztBQUNoQztBQUNBakIsbUJBQW1CLEdBQUdVO0FBQ3RCLFNBQVNELGFBQWFRLEdBQUc7SUFDckIsT0FBT0osU0FBU0osWUFBWSxDQUFDUTtBQUNqQztBQUNBakIsb0JBQW9CLEdBQUdTO0FBQ3ZCLFNBQVNELGdCQUFnQlMsR0FBRztJQUN4QixPQUFPSixTQUFTTCxlQUFlLENBQUNTO0FBQ3BDO0FBQ0FqQix1QkFBdUIsR0FBR1E7QUFDMUIsU0FBU0Qsc0JBQXNCVSxHQUFHO0lBQzlCLE9BQU9KLFNBQVNOLHFCQUFxQixDQUFDTSxTQUFTSixZQUFZLENBQUNRO0FBQ2hFO0FBQ0FqQiw2QkFBNkIsR0FBR087QUFDaENQLGlCQUFpQixHQUFHZSxhQUFhVCxTQUFTO0FBQzFDLFNBQVNEO0lBQ0wsTUFBTWEsU0FBUyxDQUFDLENBQUNDLEdBQUdDO1FBQ2hCLElBQUtBLElBQUlELElBQUksSUFBSUEsTUFBTSxJQUFJQyxLQUFLLElBQUssS0FBTSxLQUFLLENBQUNELElBQUksS0FBSyxJQUFLRSxLQUFLQyxNQUFNLEtBQU1ILENBQUFBLElBQUksS0FBSyxLQUFLLEtBQU0sR0FBR0ksUUFBUSxDQUFDLE1BQU0sSUFBSyxDQUMzSDtRQUNBLE9BQU9IO0lBQ1g7SUFDQSxPQUFPRjtBQUNYO0FBQ0FsQixZQUFZLEdBQUdLO0FBQ2YsU0FBU0Q7SUFDTG9CLFFBQVFDLElBQUksQ0FBQztBQUNqQjtBQUNBekIsNkJBQTZCLEdBQUdJO0FBQ2hDLFNBQVNELGdCQUFnQnVCLE9BQU8sRUFBRUMsUUFBUTtJQUN0QyxJQUFJQztJQUNKLE1BQU1DLFVBQVViLGVBQWVjLGVBQWUsQ0FBQ0osUUFBUTtJQUN2RCxJQUFJRyxTQUFTO1FBQ1RELFNBQVMsQ0FBQyxRQUFRLEVBQUVDLFFBQVEsY0FBYyxFQUFFRixTQUFTLENBQUM7SUFDMUQ7SUFDQSxPQUFPQztBQUNYO0FBQ0E1Qix1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0QsVUFBVXdCLE9BQU8sRUFBRUssR0FBRztJQUMzQixJQUFJSDtJQUNKLE1BQU1JLFlBQVk3QixnQkFBZ0J1QixTQUFTSyxJQUFJSixRQUFRO0lBQ3ZELElBQUlJLElBQUlFLE1BQU0sSUFBSUYsSUFBSUUsTUFBTSxDQUFDUCxRQUFRLEVBQUU7UUFDbkNFLFNBQVNHLElBQUlFLE1BQU0sQ0FBQ1AsUUFBUTtJQUNoQyxPQUNLLElBQUlNLFdBQVc7UUFDaEJKLFNBQVNJO0lBQ2I7SUFDQSxPQUFPSjtBQUNYO0FBQ0E1QixpQkFBaUIsR0FBR0UsV0FDcEIsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXV0aWxzL2Rpc3QvY2pzL21pc2MuanM/ZTczMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UnBjVXJsID0gZXhwb3J0cy5nZXRJbmZ1cmFScGNVcmwgPSBleHBvcnRzLmxvZ0RlcHJlY2F0aW9uV2FybmluZyA9IGV4cG9ydHMudXVpZCA9IGV4cG9ydHMucGF5bG9hZElkID0gZXhwb3J0cy5yZW1vdmVIZXhMZWFkaW5nWmVyb3MgPSBleHBvcnRzLnJlbW92ZUhleFByZWZpeCA9IGV4cG9ydHMuYWRkSGV4UHJlZml4ID0gZXhwb3J0cy5zYW5pdGl6ZUhleCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBlbmNvZGluZyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9lbmNvZGluZ1wiKSk7XG5jb25zdCBqc29uUnBjVXRpbHMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlsc1wiKSk7XG5jb25zdCBsZWdhY3lfdHlwZXNfMSA9IHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXNcIik7XG5mdW5jdGlvbiBzYW5pdGl6ZUhleChoZXgpIHtcbiAgICByZXR1cm4gZW5jb2Rpbmcuc2FuaXRpemVIZXgoaGV4KTtcbn1cbmV4cG9ydHMuc2FuaXRpemVIZXggPSBzYW5pdGl6ZUhleDtcbmZ1bmN0aW9uIGFkZEhleFByZWZpeChoZXgpIHtcbiAgICByZXR1cm4gZW5jb2RpbmcuYWRkSGV4UHJlZml4KGhleCk7XG59XG5leHBvcnRzLmFkZEhleFByZWZpeCA9IGFkZEhleFByZWZpeDtcbmZ1bmN0aW9uIHJlbW92ZUhleFByZWZpeChoZXgpIHtcbiAgICByZXR1cm4gZW5jb2RpbmcucmVtb3ZlSGV4UHJlZml4KGhleCk7XG59XG5leHBvcnRzLnJlbW92ZUhleFByZWZpeCA9IHJlbW92ZUhleFByZWZpeDtcbmZ1bmN0aW9uIHJlbW92ZUhleExlYWRpbmdaZXJvcyhoZXgpIHtcbiAgICByZXR1cm4gZW5jb2RpbmcucmVtb3ZlSGV4TGVhZGluZ1plcm9zKGVuY29kaW5nLmFkZEhleFByZWZpeChoZXgpKTtcbn1cbmV4cG9ydHMucmVtb3ZlSGV4TGVhZGluZ1plcm9zID0gcmVtb3ZlSGV4TGVhZGluZ1plcm9zO1xuZXhwb3J0cy5wYXlsb2FkSWQgPSBqc29uUnBjVXRpbHMucGF5bG9hZElkO1xuZnVuY3Rpb24gdXVpZCgpIHtcbiAgICBjb25zdCByZXN1bHQgPSAoKGEsIGIpID0+IHtcbiAgICAgICAgZm9yIChiID0gYSA9IFwiXCI7IGErKyA8IDM2OyBiICs9IChhICogNTEpICYgNTIgPyAoYSBeIDE1ID8gOCBeIChNYXRoLnJhbmRvbSgpICogKGEgXiAyMCA/IDE2IDogNCkpIDogNCkudG9TdHJpbmcoMTYpIDogXCItXCIpIHtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYjtcbiAgICB9KSgpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLnV1aWQgPSB1dWlkO1xuZnVuY3Rpb24gbG9nRGVwcmVjYXRpb25XYXJuaW5nKCkge1xuICAgIGNvbnNvbGUud2FybihcIkRFUFJFQ0FUSU9OIFdBUk5JTkc6IFRoaXMgV2FsbGV0Q29ubmVjdCBjbGllbnQgbGlicmFyeSB3aWxsIGJlIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgQHdhbGxldGNvbm5lY3QvY2xpZW50LiBQbGVhc2UgY2hlY2sgZG9jcy53YWxsZXRjb25uZWN0Lm9yZyB0byBsZWFybiBtb3JlIGFib3V0IHRoaXMgbWlncmF0aW9uIVwiKTtcbn1cbmV4cG9ydHMubG9nRGVwcmVjYXRpb25XYXJuaW5nID0gbG9nRGVwcmVjYXRpb25XYXJuaW5nO1xuZnVuY3Rpb24gZ2V0SW5mdXJhUnBjVXJsKGNoYWluSWQsIGluZnVyYUlkKSB7XG4gICAgbGV0IHJwY1VybDtcbiAgICBjb25zdCBuZXR3b3JrID0gbGVnYWN5X3R5cGVzXzEuSU5GVVJBX05FVFdPUktTW2NoYWluSWRdO1xuICAgIGlmIChuZXR3b3JrKSB7XG4gICAgICAgIHJwY1VybCA9IGBodHRwczovLyR7bmV0d29ya30uaW5mdXJhLmlvL3YzLyR7aW5mdXJhSWR9YDtcbiAgICB9XG4gICAgcmV0dXJuIHJwY1VybDtcbn1cbmV4cG9ydHMuZ2V0SW5mdXJhUnBjVXJsID0gZ2V0SW5mdXJhUnBjVXJsO1xuZnVuY3Rpb24gZ2V0UnBjVXJsKGNoYWluSWQsIHJwYykge1xuICAgIGxldCBycGNVcmw7XG4gICAgY29uc3QgaW5mdXJhVXJsID0gZ2V0SW5mdXJhUnBjVXJsKGNoYWluSWQsIHJwYy5pbmZ1cmFJZCk7XG4gICAgaWYgKHJwYy5jdXN0b20gJiYgcnBjLmN1c3RvbVtjaGFpbklkXSkge1xuICAgICAgICBycGNVcmwgPSBycGMuY3VzdG9tW2NoYWluSWRdO1xuICAgIH1cbiAgICBlbHNlIGlmIChpbmZ1cmFVcmwpIHtcbiAgICAgICAgcnBjVXJsID0gaW5mdXJhVXJsO1xuICAgIH1cbiAgICByZXR1cm4gcnBjVXJsO1xufVxuZXhwb3J0cy5nZXRScGNVcmwgPSBnZXRScGNVcmw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taXNjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldFJwY1VybCIsImdldEluZnVyYVJwY1VybCIsImxvZ0RlcHJlY2F0aW9uV2FybmluZyIsInV1aWQiLCJwYXlsb2FkSWQiLCJyZW1vdmVIZXhMZWFkaW5nWmVyb3MiLCJyZW1vdmVIZXhQcmVmaXgiLCJhZGRIZXhQcmVmaXgiLCJzYW5pdGl6ZUhleCIsInRzbGliXzEiLCJyZXF1aXJlIiwiZW5jb2RpbmciLCJfX2ltcG9ydFN0YXIiLCJqc29uUnBjVXRpbHMiLCJsZWdhY3lfdHlwZXNfMSIsImhleCIsInJlc3VsdCIsImEiLCJiIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwiY29uc29sZSIsIndhcm4iLCJjaGFpbklkIiwiaW5mdXJhSWQiLCJycGNVcmwiLCJuZXR3b3JrIiwiSU5GVVJBX05FVFdPUktTIiwicnBjIiwiaW5mdXJhVXJsIiwiY3VzdG9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/misc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/mobile.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/mobile.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getMobileLinkRegistry = exports.getMobileRegistryEntry = exports.saveMobileLinkInfo = exports.formatIOSMobile = void 0;\nconst legacy_types_1 = __webpack_require__(/*! @walletconnect/legacy-types */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\");\nconst local_1 = __webpack_require__(/*! ./local */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/local.js\");\nfunction formatIOSMobile(uri, entry) {\n    const encodedUri = encodeURIComponent(uri);\n    return entry.universalLink ? `${entry.universalLink}/wc?uri=${encodedUri}` : entry.deepLink ? `${entry.deepLink}${entry.deepLink.endsWith(\":\") ? \"//\" : \"/\"}wc?uri=${encodedUri}` : \"\";\n}\nexports.formatIOSMobile = formatIOSMobile;\nfunction saveMobileLinkInfo(data) {\n    const focusUri = data.href.split(\"?\")[0];\n    local_1.setLocal(legacy_types_1.MOBILE_LINK_CHOICE_KEY, Object.assign(Object.assign({}, data), {\n        href: focusUri\n    }));\n}\nexports.saveMobileLinkInfo = saveMobileLinkInfo;\nfunction getMobileRegistryEntry(registry, name) {\n    return registry.filter((entry)=>entry.name.toLowerCase().includes(name.toLowerCase()))[0];\n}\nexports.getMobileRegistryEntry = getMobileRegistryEntry;\nfunction getMobileLinkRegistry(registry, whitelist) {\n    let links = registry;\n    if (whitelist) {\n        links = whitelist.map((name)=>getMobileRegistryEntry(registry, name)).filter(Boolean);\n    }\n    return links;\n}\nexports.getMobileLinkRegistry = getMobileLinkRegistry; //# sourceMappingURL=mobile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9tb2JpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDZCQUE2QixHQUFHQSw4QkFBOEIsR0FBR0EsMEJBQTBCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDN0gsTUFBTU0saUJBQWlCQyxtQkFBT0EsQ0FBQyx3R0FBNkI7QUFDNUQsTUFBTUMsVUFBVUQsbUJBQU9BLENBQUMsb0ZBQVM7QUFDakMsU0FBU0YsZ0JBQWdCSSxHQUFHLEVBQUVDLEtBQUs7SUFDL0IsTUFBTUMsYUFBYUMsbUJBQW1CSDtJQUN0QyxPQUFPQyxNQUFNRyxhQUFhLEdBQ3BCLENBQUMsRUFBRUgsTUFBTUcsYUFBYSxDQUFDLFFBQVEsRUFBRUYsV0FBVyxDQUFDLEdBQzdDRCxNQUFNSSxRQUFRLEdBQ1YsQ0FBQyxFQUFFSixNQUFNSSxRQUFRLENBQUMsRUFBRUosTUFBTUksUUFBUSxDQUFDQyxRQUFRLENBQUMsT0FBTyxPQUFPLElBQUksT0FBTyxFQUFFSixXQUFXLENBQUMsR0FDbkY7QUFDZDtBQUNBWCx1QkFBdUIsR0FBR0s7QUFDMUIsU0FBU0QsbUJBQW1CWSxJQUFJO0lBQzVCLE1BQU1DLFdBQVdELEtBQUtFLElBQUksQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3hDWCxRQUFRWSxRQUFRLENBQUNkLGVBQWVlLHNCQUFzQixFQUFFdkIsT0FBT3dCLE1BQU0sQ0FBQ3hCLE9BQU93QixNQUFNLENBQUMsQ0FBQyxHQUFHTixPQUFPO1FBQUVFLE1BQU1EO0lBQVM7QUFDcEg7QUFDQWpCLDBCQUEwQixHQUFHSTtBQUM3QixTQUFTRCx1QkFBdUJvQixRQUFRLEVBQUVDLElBQUk7SUFDMUMsT0FBT0QsU0FBU0UsTUFBTSxDQUFDLENBQUNmLFFBQVVBLE1BQU1jLElBQUksQ0FBQ0UsV0FBVyxHQUFHQyxRQUFRLENBQUNILEtBQUtFLFdBQVcsSUFBSSxDQUFDLEVBQUU7QUFDL0Y7QUFDQTFCLDhCQUE4QixHQUFHRztBQUNqQyxTQUFTRCxzQkFBc0JxQixRQUFRLEVBQUVLLFNBQVM7SUFDOUMsSUFBSUMsUUFBUU47SUFDWixJQUFJSyxXQUFXO1FBQ1hDLFFBQVFELFVBQVVFLEdBQUcsQ0FBQyxDQUFDTixPQUFTckIsdUJBQXVCb0IsVUFBVUMsT0FBT0MsTUFBTSxDQUFDTTtJQUNuRjtJQUNBLE9BQU9GO0FBQ1g7QUFDQTdCLDZCQUE2QixHQUFHRSx1QkFDaEMsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXV0aWxzL2Rpc3QvY2pzL21vYmlsZS5qcz9jYmZhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRNb2JpbGVMaW5rUmVnaXN0cnkgPSBleHBvcnRzLmdldE1vYmlsZVJlZ2lzdHJ5RW50cnkgPSBleHBvcnRzLnNhdmVNb2JpbGVMaW5rSW5mbyA9IGV4cG9ydHMuZm9ybWF0SU9TTW9iaWxlID0gdm9pZCAwO1xuY29uc3QgbGVnYWN5X3R5cGVzXzEgPSByZXF1aXJlKFwiQHdhbGxldGNvbm5lY3QvbGVnYWN5LXR5cGVzXCIpO1xuY29uc3QgbG9jYWxfMSA9IHJlcXVpcmUoXCIuL2xvY2FsXCIpO1xuZnVuY3Rpb24gZm9ybWF0SU9TTW9iaWxlKHVyaSwgZW50cnkpIHtcbiAgICBjb25zdCBlbmNvZGVkVXJpID0gZW5jb2RlVVJJQ29tcG9uZW50KHVyaSk7XG4gICAgcmV0dXJuIGVudHJ5LnVuaXZlcnNhbExpbmtcbiAgICAgICAgPyBgJHtlbnRyeS51bml2ZXJzYWxMaW5rfS93Yz91cmk9JHtlbmNvZGVkVXJpfWBcbiAgICAgICAgOiBlbnRyeS5kZWVwTGlua1xuICAgICAgICAgICAgPyBgJHtlbnRyeS5kZWVwTGlua30ke2VudHJ5LmRlZXBMaW5rLmVuZHNXaXRoKFwiOlwiKSA/IFwiLy9cIiA6IFwiL1wifXdjP3VyaT0ke2VuY29kZWRVcml9YFxuICAgICAgICAgICAgOiBcIlwiO1xufVxuZXhwb3J0cy5mb3JtYXRJT1NNb2JpbGUgPSBmb3JtYXRJT1NNb2JpbGU7XG5mdW5jdGlvbiBzYXZlTW9iaWxlTGlua0luZm8oZGF0YSkge1xuICAgIGNvbnN0IGZvY3VzVXJpID0gZGF0YS5ocmVmLnNwbGl0KFwiP1wiKVswXTtcbiAgICBsb2NhbF8xLnNldExvY2FsKGxlZ2FjeV90eXBlc18xLk1PQklMRV9MSU5LX0NIT0lDRV9LRVksIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGF0YSksIHsgaHJlZjogZm9jdXNVcmkgfSkpO1xufVxuZXhwb3J0cy5zYXZlTW9iaWxlTGlua0luZm8gPSBzYXZlTW9iaWxlTGlua0luZm87XG5mdW5jdGlvbiBnZXRNb2JpbGVSZWdpc3RyeUVudHJ5KHJlZ2lzdHJ5LCBuYW1lKSB7XG4gICAgcmV0dXJuIHJlZ2lzdHJ5LmZpbHRlcigoZW50cnkpID0+IGVudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhuYW1lLnRvTG93ZXJDYXNlKCkpKVswXTtcbn1cbmV4cG9ydHMuZ2V0TW9iaWxlUmVnaXN0cnlFbnRyeSA9IGdldE1vYmlsZVJlZ2lzdHJ5RW50cnk7XG5mdW5jdGlvbiBnZXRNb2JpbGVMaW5rUmVnaXN0cnkocmVnaXN0cnksIHdoaXRlbGlzdCkge1xuICAgIGxldCBsaW5rcyA9IHJlZ2lzdHJ5O1xuICAgIGlmICh3aGl0ZWxpc3QpIHtcbiAgICAgICAgbGlua3MgPSB3aGl0ZWxpc3QubWFwKChuYW1lKSA9PiBnZXRNb2JpbGVSZWdpc3RyeUVudHJ5KHJlZ2lzdHJ5LCBuYW1lKSkuZmlsdGVyKEJvb2xlYW4pO1xuICAgIH1cbiAgICByZXR1cm4gbGlua3M7XG59XG5leHBvcnRzLmdldE1vYmlsZUxpbmtSZWdpc3RyeSA9IGdldE1vYmlsZUxpbmtSZWdpc3RyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vYmlsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRNb2JpbGVMaW5rUmVnaXN0cnkiLCJnZXRNb2JpbGVSZWdpc3RyeUVudHJ5Iiwic2F2ZU1vYmlsZUxpbmtJbmZvIiwiZm9ybWF0SU9TTW9iaWxlIiwibGVnYWN5X3R5cGVzXzEiLCJyZXF1aXJlIiwibG9jYWxfMSIsInVyaSIsImVudHJ5IiwiZW5jb2RlZFVyaSIsImVuY29kZVVSSUNvbXBvbmVudCIsInVuaXZlcnNhbExpbmsiLCJkZWVwTGluayIsImVuZHNXaXRoIiwiZGF0YSIsImZvY3VzVXJpIiwiaHJlZiIsInNwbGl0Iiwic2V0TG9jYWwiLCJNT0JJTEVfTElOS19DSE9JQ0VfS0VZIiwiYXNzaWduIiwicmVnaXN0cnkiLCJuYW1lIiwiZmlsdGVyIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsIndoaXRlbGlzdCIsImxpbmtzIiwibWFwIiwiQm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/mobile.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/payload.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/payload.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.formatRpcError = exports.promisify = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nfunction promisify(originalFn, thisArg) {\n    const promisifiedFunction = (...callArgs)=>tslib_1.__awaiter(this, void 0, void 0, function*() {\n            return new Promise((resolve, reject)=>{\n                const callback = (err, data)=>{\n                    if (err === null || typeof err === \"undefined\") {\n                        reject(err);\n                    }\n                    resolve(data);\n                };\n                originalFn.apply(thisArg, [\n                    ...callArgs,\n                    callback\n                ]);\n            });\n        });\n    return promisifiedFunction;\n}\nexports.promisify = promisify;\nfunction formatRpcError(error) {\n    const message = error.message || \"Failed or Rejected Request\";\n    let code = -32000;\n    if (error && !error.code) {\n        switch(message){\n            case \"Parse error\":\n                code = -32700;\n                break;\n            case \"Invalid request\":\n                code = -32600;\n                break;\n            case \"Method not found\":\n                code = -32601;\n                break;\n            case \"Invalid params\":\n                code = -32602;\n                break;\n            case \"Internal error\":\n                code = -32603;\n                break;\n            default:\n                code = -32000;\n                break;\n        }\n    }\n    const result = {\n        code,\n        message\n    };\n    if (error.data) {\n        result.data = error.data;\n    }\n    return result;\n}\nexports.formatRpcError = formatRpcError; //# sourceMappingURL=payload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9wYXlsb2FkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0EsaUJBQWlCLEdBQUcsS0FBSztBQUNsRCxNQUFNSSxVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQixTQUFTRixVQUFVRyxVQUFVLEVBQUVDLE9BQU87SUFDbEMsTUFBTUMsc0JBQXNCLENBQUMsR0FBR0MsV0FBYUwsUUFBUU0sU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ2pGLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztnQkFDekIsTUFBTUMsV0FBVyxDQUFDQyxLQUFLQztvQkFDbkIsSUFBSUQsUUFBUSxRQUFRLE9BQU9BLFFBQVEsYUFBYTt3QkFDNUNGLE9BQU9FO29CQUNYO29CQUNBSCxRQUFRSTtnQkFDWjtnQkFDQVYsV0FBV1csS0FBSyxDQUFDVixTQUFTO3VCQUFJRTtvQkFBVUs7aUJBQVM7WUFDckQ7UUFDSjtJQUNBLE9BQU9OO0FBQ1g7QUFDQVIsaUJBQWlCLEdBQUdHO0FBQ3BCLFNBQVNELGVBQWVnQixLQUFLO0lBQ3pCLE1BQU1DLFVBQVVELE1BQU1DLE9BQU8sSUFBSTtJQUNqQyxJQUFJQyxPQUFPLENBQUM7SUFDWixJQUFJRixTQUFTLENBQUNBLE1BQU1FLElBQUksRUFBRTtRQUN0QixPQUFRRDtZQUNKLEtBQUs7Z0JBQ0RDLE9BQU8sQ0FBQztnQkFDUjtZQUNKLEtBQUs7Z0JBQ0RBLE9BQU8sQ0FBQztnQkFDUjtZQUNKLEtBQUs7Z0JBQ0RBLE9BQU8sQ0FBQztnQkFDUjtZQUNKLEtBQUs7Z0JBQ0RBLE9BQU8sQ0FBQztnQkFDUjtZQUNKLEtBQUs7Z0JBQ0RBLE9BQU8sQ0FBQztnQkFDUjtZQUNKO2dCQUNJQSxPQUFPLENBQUM7Z0JBQ1I7UUFDUjtJQUNKO0lBQ0EsTUFBTUMsU0FBUztRQUNYRDtRQUNBRDtJQUNKO0lBQ0EsSUFBSUQsTUFBTUYsSUFBSSxFQUFFO1FBQ1pLLE9BQU9MLElBQUksR0FBR0UsTUFBTUYsSUFBSTtJQUM1QjtJQUNBLE9BQU9LO0FBQ1g7QUFDQXJCLHNCQUFzQixHQUFHRSxnQkFDekIsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbGVnYWN5LXV0aWxzL2Rpc3QvY2pzL3BheWxvYWQuanM/MjE3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZm9ybWF0UnBjRXJyb3IgPSBleHBvcnRzLnByb21pc2lmeSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5mdW5jdGlvbiBwcm9taXNpZnkob3JpZ2luYWxGbiwgdGhpc0FyZykge1xuICAgIGNvbnN0IHByb21pc2lmaWVkRnVuY3Rpb24gPSAoLi4uY2FsbEFyZ3MpID0+IHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVyciA9PT0gbnVsbCB8fCB0eXBlb2YgZXJyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG9yaWdpbmFsRm4uYXBwbHkodGhpc0FyZywgWy4uLmNhbGxBcmdzLCBjYWxsYmFja10pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcHJvbWlzaWZpZWRGdW5jdGlvbjtcbn1cbmV4cG9ydHMucHJvbWlzaWZ5ID0gcHJvbWlzaWZ5O1xuZnVuY3Rpb24gZm9ybWF0UnBjRXJyb3IoZXJyb3IpIHtcbiAgICBjb25zdCBtZXNzYWdlID0gZXJyb3IubWVzc2FnZSB8fCBcIkZhaWxlZCBvciBSZWplY3RlZCBSZXF1ZXN0XCI7XG4gICAgbGV0IGNvZGUgPSAtMzIwMDA7XG4gICAgaWYgKGVycm9yICYmICFlcnJvci5jb2RlKSB7XG4gICAgICAgIHN3aXRjaCAobWVzc2FnZSkge1xuICAgICAgICAgICAgY2FzZSBcIlBhcnNlIGVycm9yXCI6XG4gICAgICAgICAgICAgICAgY29kZSA9IC0zMjcwMDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJJbnZhbGlkIHJlcXVlc3RcIjpcbiAgICAgICAgICAgICAgICBjb2RlID0gLTMyNjAwO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIk1ldGhvZCBub3QgZm91bmRcIjpcbiAgICAgICAgICAgICAgICBjb2RlID0gLTMyNjAxO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIkludmFsaWQgcGFyYW1zXCI6XG4gICAgICAgICAgICAgICAgY29kZSA9IC0zMjYwMjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJJbnRlcm5hbCBlcnJvclwiOlxuICAgICAgICAgICAgICAgIGNvZGUgPSAtMzI2MDM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNvZGUgPSAtMzIwMDA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBjb2RlLFxuICAgICAgICBtZXNzYWdlLFxuICAgIH07XG4gICAgaWYgKGVycm9yLmRhdGEpIHtcbiAgICAgICAgcmVzdWx0LmRhdGEgPSBlcnJvci5kYXRhO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5mb3JtYXRScGNFcnJvciA9IGZvcm1hdFJwY0Vycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF5bG9hZC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmb3JtYXRScGNFcnJvciIsInByb21pc2lmeSIsInRzbGliXzEiLCJyZXF1aXJlIiwib3JpZ2luYWxGbiIsInRoaXNBcmciLCJwcm9taXNpZmllZEZ1bmN0aW9uIiwiY2FsbEFyZ3MiLCJfX2F3YWl0ZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNhbGxiYWNrIiwiZXJyIiwiZGF0YSIsImFwcGx5IiwiZXJyb3IiLCJtZXNzYWdlIiwiY29kZSIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/payload.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/registry.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/registry.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.formatMobileRegistry = exports.formatMobileRegistryEntry = exports.getDappRegistryUrl = exports.getWalletRegistryUrl = void 0;\nconst API_URL = \"https://registry.walletconnect.com\";\nfunction getWalletRegistryUrl() {\n    return API_URL + \"/api/v2/wallets\";\n}\nexports.getWalletRegistryUrl = getWalletRegistryUrl;\nfunction getDappRegistryUrl() {\n    return API_URL + \"/api/v2/dapps\";\n}\nexports.getDappRegistryUrl = getDappRegistryUrl;\nfunction formatMobileRegistryEntry(entry, platform = \"mobile\") {\n    var _a;\n    return {\n        name: entry.name || \"\",\n        shortName: entry.metadata.shortName || \"\",\n        color: entry.metadata.colors.primary || \"\",\n        logo: (_a = entry.image_url.sm) !== null && _a !== void 0 ? _a : \"\",\n        universalLink: entry[platform].universal || \"\",\n        deepLink: entry[platform].native || \"\"\n    };\n}\nexports.formatMobileRegistryEntry = formatMobileRegistryEntry;\nfunction formatMobileRegistry(registry, platform = \"mobile\") {\n    return Object.values(registry).filter((entry)=>!!entry[platform].universal || !!entry[platform].native).map((entry)=>formatMobileRegistryEntry(entry, platform));\n}\nexports.formatMobileRegistry = formatMobileRegistry; //# sourceMappingURL=registry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9yZWdpc3RyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUdBLGlDQUFpQyxHQUFHQSwwQkFBMEIsR0FBR0EsNEJBQTRCLEdBQUcsS0FBSztBQUNwSSxNQUFNTSxVQUFVO0FBQ2hCLFNBQVNEO0lBQ0wsT0FBT0MsVUFBVTtBQUNyQjtBQUNBTiw0QkFBNEIsR0FBR0s7QUFDL0IsU0FBU0Q7SUFDTCxPQUFPRSxVQUFVO0FBQ3JCO0FBQ0FOLDBCQUEwQixHQUFHSTtBQUM3QixTQUFTRCwwQkFBMEJJLEtBQUssRUFBRUMsV0FBVyxRQUFRO0lBQ3pELElBQUlDO0lBQ0osT0FBTztRQUNIQyxNQUFNSCxNQUFNRyxJQUFJLElBQUk7UUFDcEJDLFdBQVdKLE1BQU1LLFFBQVEsQ0FBQ0QsU0FBUyxJQUFJO1FBQ3ZDRSxPQUFPTixNQUFNSyxRQUFRLENBQUNFLE1BQU0sQ0FBQ0MsT0FBTyxJQUFJO1FBQ3hDQyxNQUFNLENBQUNQLEtBQUtGLE1BQU1VLFNBQVMsQ0FBQ0MsRUFBRSxNQUFNLFFBQVFULE9BQU8sS0FBSyxJQUFJQSxLQUFLO1FBQ2pFVSxlQUFlWixLQUFLLENBQUNDLFNBQVMsQ0FBQ1ksU0FBUyxJQUFJO1FBQzVDQyxVQUFVZCxLQUFLLENBQUNDLFNBQVMsQ0FBQ2MsTUFBTSxJQUFJO0lBQ3hDO0FBQ0o7QUFDQXRCLGlDQUFpQyxHQUFHRztBQUNwQyxTQUFTRCxxQkFBcUJxQixRQUFRLEVBQUVmLFdBQVcsUUFBUTtJQUN2RCxPQUFPVixPQUFPMEIsTUFBTSxDQUFDRCxVQUNoQkUsTUFBTSxDQUFDbEIsQ0FBQUEsUUFBUyxDQUFDLENBQUNBLEtBQUssQ0FBQ0MsU0FBUyxDQUFDWSxTQUFTLElBQUksQ0FBQyxDQUFDYixLQUFLLENBQUNDLFNBQVMsQ0FBQ2MsTUFBTSxFQUN2RUksR0FBRyxDQUFDbkIsQ0FBQUEsUUFBU0osMEJBQTBCSSxPQUFPQztBQUN2RDtBQUNBUiw0QkFBNEIsR0FBR0Usc0JBQy9CLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9yZWdpc3RyeS5qcz82MTkzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mb3JtYXRNb2JpbGVSZWdpc3RyeSA9IGV4cG9ydHMuZm9ybWF0TW9iaWxlUmVnaXN0cnlFbnRyeSA9IGV4cG9ydHMuZ2V0RGFwcFJlZ2lzdHJ5VXJsID0gZXhwb3J0cy5nZXRXYWxsZXRSZWdpc3RyeVVybCA9IHZvaWQgMDtcbmNvbnN0IEFQSV9VUkwgPSBcImh0dHBzOi8vcmVnaXN0cnkud2FsbGV0Y29ubmVjdC5jb21cIjtcbmZ1bmN0aW9uIGdldFdhbGxldFJlZ2lzdHJ5VXJsKCkge1xuICAgIHJldHVybiBBUElfVVJMICsgXCIvYXBpL3YyL3dhbGxldHNcIjtcbn1cbmV4cG9ydHMuZ2V0V2FsbGV0UmVnaXN0cnlVcmwgPSBnZXRXYWxsZXRSZWdpc3RyeVVybDtcbmZ1bmN0aW9uIGdldERhcHBSZWdpc3RyeVVybCgpIHtcbiAgICByZXR1cm4gQVBJX1VSTCArIFwiL2FwaS92Mi9kYXBwc1wiO1xufVxuZXhwb3J0cy5nZXREYXBwUmVnaXN0cnlVcmwgPSBnZXREYXBwUmVnaXN0cnlVcmw7XG5mdW5jdGlvbiBmb3JtYXRNb2JpbGVSZWdpc3RyeUVudHJ5KGVudHJ5LCBwbGF0Zm9ybSA9IFwibW9iaWxlXCIpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZW50cnkubmFtZSB8fCBcIlwiLFxuICAgICAgICBzaG9ydE5hbWU6IGVudHJ5Lm1ldGFkYXRhLnNob3J0TmFtZSB8fCBcIlwiLFxuICAgICAgICBjb2xvcjogZW50cnkubWV0YWRhdGEuY29sb3JzLnByaW1hcnkgfHwgXCJcIixcbiAgICAgICAgbG9nbzogKF9hID0gZW50cnkuaW1hZ2VfdXJsLnNtKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIlwiLFxuICAgICAgICB1bml2ZXJzYWxMaW5rOiBlbnRyeVtwbGF0Zm9ybV0udW5pdmVyc2FsIHx8IFwiXCIsXG4gICAgICAgIGRlZXBMaW5rOiBlbnRyeVtwbGF0Zm9ybV0ubmF0aXZlIHx8IFwiXCIsXG4gICAgfTtcbn1cbmV4cG9ydHMuZm9ybWF0TW9iaWxlUmVnaXN0cnlFbnRyeSA9IGZvcm1hdE1vYmlsZVJlZ2lzdHJ5RW50cnk7XG5mdW5jdGlvbiBmb3JtYXRNb2JpbGVSZWdpc3RyeShyZWdpc3RyeSwgcGxhdGZvcm0gPSBcIm1vYmlsZVwiKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXMocmVnaXN0cnkpXG4gICAgICAgIC5maWx0ZXIoZW50cnkgPT4gISFlbnRyeVtwbGF0Zm9ybV0udW5pdmVyc2FsIHx8ICEhZW50cnlbcGxhdGZvcm1dLm5hdGl2ZSlcbiAgICAgICAgLm1hcChlbnRyeSA9PiBmb3JtYXRNb2JpbGVSZWdpc3RyeUVudHJ5KGVudHJ5LCBwbGF0Zm9ybSkpO1xufVxuZXhwb3J0cy5mb3JtYXRNb2JpbGVSZWdpc3RyeSA9IGZvcm1hdE1vYmlsZVJlZ2lzdHJ5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVnaXN0cnkuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZm9ybWF0TW9iaWxlUmVnaXN0cnkiLCJmb3JtYXRNb2JpbGVSZWdpc3RyeUVudHJ5IiwiZ2V0RGFwcFJlZ2lzdHJ5VXJsIiwiZ2V0V2FsbGV0UmVnaXN0cnlVcmwiLCJBUElfVVJMIiwiZW50cnkiLCJwbGF0Zm9ybSIsIl9hIiwibmFtZSIsInNob3J0TmFtZSIsIm1ldGFkYXRhIiwiY29sb3IiLCJjb2xvcnMiLCJwcmltYXJ5IiwibG9nbyIsImltYWdlX3VybCIsInNtIiwidW5pdmVyc2FsTGluayIsInVuaXZlcnNhbCIsImRlZXBMaW5rIiwibmF0aXZlIiwicmVnaXN0cnkiLCJ2YWx1ZXMiLCJmaWx0ZXIiLCJtYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/registry.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/session.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/session.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.parseWalletConnectUri = exports.isWalletConnectSession = void 0;\nconst url_1 = __webpack_require__(/*! ./url */ \"(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/url.js\");\nfunction isWalletConnectSession(object) {\n    return typeof object.bridge !== \"undefined\";\n}\nexports.isWalletConnectSession = isWalletConnectSession;\nfunction parseWalletConnectUri(str) {\n    const pathStart = str.indexOf(\":\");\n    const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n    const protocol = str.substring(0, pathStart);\n    const path = str.substring(pathStart + 1, pathEnd);\n    function parseRequiredParams(path) {\n        const separator = \"@\";\n        const values = path.split(separator);\n        const requiredParams = {\n            handshakeTopic: values[0],\n            version: parseInt(values[1], 10)\n        };\n        return requiredParams;\n    }\n    const requiredParams = parseRequiredParams(path);\n    const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n    function parseQueryParams(queryString) {\n        const result = url_1.parseQueryString(queryString);\n        const parameters = {\n            key: result.key || \"\",\n            bridge: result.bridge || \"\"\n        };\n        return parameters;\n    }\n    const queryParams = parseQueryParams(queryString);\n    const result = Object.assign(Object.assign({\n        protocol\n    }, requiredParams), queryParams);\n    return result;\n}\nexports.parseWalletConnectUri = parseWalletConnectUri; //# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw2QkFBNkIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUN0RSxNQUFNSSxRQUFRQyxtQkFBT0EsQ0FBQyxnRkFBTztBQUM3QixTQUFTRix1QkFBdUJHLE1BQU07SUFDbEMsT0FBTyxPQUFPQSxPQUFPQyxNQUFNLEtBQUs7QUFDcEM7QUFDQVAsOEJBQThCLEdBQUdHO0FBQ2pDLFNBQVNELHNCQUFzQk0sR0FBRztJQUM5QixNQUFNQyxZQUFZRCxJQUFJRSxPQUFPLENBQUM7SUFDOUIsTUFBTUMsVUFBVUgsSUFBSUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJRixJQUFJRSxPQUFPLENBQUMsT0FBT0U7SUFDN0QsTUFBTUMsV0FBV0wsSUFBSU0sU0FBUyxDQUFDLEdBQUdMO0lBQ2xDLE1BQU1NLE9BQU9QLElBQUlNLFNBQVMsQ0FBQ0wsWUFBWSxHQUFHRTtJQUMxQyxTQUFTSyxvQkFBb0JELElBQUk7UUFDN0IsTUFBTUUsWUFBWTtRQUNsQixNQUFNQyxTQUFTSCxLQUFLSSxLQUFLLENBQUNGO1FBQzFCLE1BQU1HLGlCQUFpQjtZQUNuQkMsZ0JBQWdCSCxNQUFNLENBQUMsRUFBRTtZQUN6QkksU0FBU0MsU0FBU0wsTUFBTSxDQUFDLEVBQUUsRUFBRTtRQUNqQztRQUNBLE9BQU9FO0lBQ1g7SUFDQSxNQUFNQSxpQkFBaUJKLG9CQUFvQkQ7SUFDM0MsTUFBTVMsY0FBYyxPQUFPYixZQUFZLGNBQWNILElBQUlpQixNQUFNLENBQUNkLFdBQVc7SUFDM0UsU0FBU2UsaUJBQWlCRixXQUFXO1FBQ2pDLE1BQU1HLFNBQVN2QixNQUFNd0IsZ0JBQWdCLENBQUNKO1FBQ3RDLE1BQU1LLGFBQWE7WUFDZkMsS0FBS0gsT0FBT0csR0FBRyxJQUFJO1lBQ25CdkIsUUFBUW9CLE9BQU9wQixNQUFNLElBQUk7UUFDN0I7UUFDQSxPQUFPc0I7SUFDWDtJQUNBLE1BQU1FLGNBQWNMLGlCQUFpQkY7SUFDckMsTUFBTUcsU0FBUzdCLE9BQU9rQyxNQUFNLENBQUNsQyxPQUFPa0MsTUFBTSxDQUFDO1FBQUVuQjtJQUFTLEdBQUdPLGlCQUFpQlc7SUFDMUUsT0FBT0o7QUFDWDtBQUNBM0IsNkJBQTZCLEdBQUdFLHVCQUNoQyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sZWdhY3ktdXRpbHMvZGlzdC9janMvc2Vzc2lvbi5qcz81NjMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZVdhbGxldENvbm5lY3RVcmkgPSBleHBvcnRzLmlzV2FsbGV0Q29ubmVjdFNlc3Npb24gPSB2b2lkIDA7XG5jb25zdCB1cmxfMSA9IHJlcXVpcmUoXCIuL3VybFwiKTtcbmZ1bmN0aW9uIGlzV2FsbGV0Q29ubmVjdFNlc3Npb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QuYnJpZGdlICE9PSBcInVuZGVmaW5lZFwiO1xufVxuZXhwb3J0cy5pc1dhbGxldENvbm5lY3RTZXNzaW9uID0gaXNXYWxsZXRDb25uZWN0U2Vzc2lvbjtcbmZ1bmN0aW9uIHBhcnNlV2FsbGV0Q29ubmVjdFVyaShzdHIpIHtcbiAgICBjb25zdCBwYXRoU3RhcnQgPSBzdHIuaW5kZXhPZihcIjpcIik7XG4gICAgY29uc3QgcGF0aEVuZCA9IHN0ci5pbmRleE9mKFwiP1wiKSAhPT0gLTEgPyBzdHIuaW5kZXhPZihcIj9cIikgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgcHJvdG9jb2wgPSBzdHIuc3Vic3RyaW5nKDAsIHBhdGhTdGFydCk7XG4gICAgY29uc3QgcGF0aCA9IHN0ci5zdWJzdHJpbmcocGF0aFN0YXJ0ICsgMSwgcGF0aEVuZCk7XG4gICAgZnVuY3Rpb24gcGFyc2VSZXF1aXJlZFBhcmFtcyhwYXRoKSB7XG4gICAgICAgIGNvbnN0IHNlcGFyYXRvciA9IFwiQFwiO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBwYXRoLnNwbGl0KHNlcGFyYXRvcik7XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkUGFyYW1zID0ge1xuICAgICAgICAgICAgaGFuZHNoYWtlVG9waWM6IHZhbHVlc1swXSxcbiAgICAgICAgICAgIHZlcnNpb246IHBhcnNlSW50KHZhbHVlc1sxXSwgMTApLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcmVxdWlyZWRQYXJhbXM7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVpcmVkUGFyYW1zID0gcGFyc2VSZXF1aXJlZFBhcmFtcyhwYXRoKTtcbiAgICBjb25zdCBxdWVyeVN0cmluZyA9IHR5cGVvZiBwYXRoRW5kICE9PSBcInVuZGVmaW5lZFwiID8gc3RyLnN1YnN0cihwYXRoRW5kKSA6IFwiXCI7XG4gICAgZnVuY3Rpb24gcGFyc2VRdWVyeVBhcmFtcyhxdWVyeVN0cmluZykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB1cmxfMS5wYXJzZVF1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nKTtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVycyA9IHtcbiAgICAgICAgICAgIGtleTogcmVzdWx0LmtleSB8fCBcIlwiLFxuICAgICAgICAgICAgYnJpZGdlOiByZXN1bHQuYnJpZGdlIHx8IFwiXCIsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBwYXJhbWV0ZXJzO1xuICAgIH1cbiAgICBjb25zdCBxdWVyeVBhcmFtcyA9IHBhcnNlUXVlcnlQYXJhbXMocXVlcnlTdHJpbmcpO1xuICAgIGNvbnN0IHJlc3VsdCA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IHByb3RvY29sIH0sIHJlcXVpcmVkUGFyYW1zKSwgcXVlcnlQYXJhbXMpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLnBhcnNlV2FsbGV0Q29ubmVjdFVyaSA9IHBhcnNlV2FsbGV0Q29ubmVjdFVyaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicGFyc2VXYWxsZXRDb25uZWN0VXJpIiwiaXNXYWxsZXRDb25uZWN0U2Vzc2lvbiIsInVybF8xIiwicmVxdWlyZSIsIm9iamVjdCIsImJyaWRnZSIsInN0ciIsInBhdGhTdGFydCIsImluZGV4T2YiLCJwYXRoRW5kIiwidW5kZWZpbmVkIiwicHJvdG9jb2wiLCJzdWJzdHJpbmciLCJwYXRoIiwicGFyc2VSZXF1aXJlZFBhcmFtcyIsInNlcGFyYXRvciIsInZhbHVlcyIsInNwbGl0IiwicmVxdWlyZWRQYXJhbXMiLCJoYW5kc2hha2VUb3BpYyIsInZlcnNpb24iLCJwYXJzZUludCIsInF1ZXJ5U3RyaW5nIiwic3Vic3RyIiwicGFyc2VRdWVyeVBhcmFtcyIsInJlc3VsdCIsInBhcnNlUXVlcnlTdHJpbmciLCJwYXJhbWV0ZXJzIiwia2V5IiwicXVlcnlQYXJhbXMiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/session.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/url.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.formatQueryString = exports.parseQueryString = exports.appendToQueryString = exports.getQueryString = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst queryStringUtils = tslib_1.__importStar(__webpack_require__(/*! query-string */ \"(ssr)/../node_modules/query-string/index.js\"));\nfunction getQueryString(url) {\n    const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n    const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n    return queryString;\n}\nexports.getQueryString = getQueryString;\nfunction appendToQueryString(queryString, newQueryParams) {\n    let queryParams = parseQueryString(queryString);\n    queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n    queryString = formatQueryString(queryParams);\n    return queryString;\n}\nexports.appendToQueryString = appendToQueryString;\nfunction parseQueryString(queryString) {\n    return queryStringUtils.parse(queryString);\n}\nexports.parseQueryString = parseQueryString;\nfunction formatQueryString(queryParams) {\n    return queryStringUtils.stringify(queryParams);\n}\nexports.formatQueryString = formatQueryString; //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy91cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHlCQUF5QixHQUFHQSx3QkFBd0IsR0FBR0EsMkJBQTJCLEdBQUdBLHNCQUFzQixHQUFHLEtBQUs7QUFDbkgsTUFBTU0sVUFBVUMsbUJBQU9BLENBQUMsd0RBQU87QUFDL0IsTUFBTUMsbUJBQW1CRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLGlFQUFjO0FBQ3BFLFNBQVNGLGVBQWVLLEdBQUc7SUFDdkIsTUFBTUMsVUFBVUQsSUFBSUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJRixJQUFJRSxPQUFPLENBQUMsT0FBT0M7SUFDN0QsTUFBTUMsY0FBYyxPQUFPSCxZQUFZLGNBQWNELElBQUlLLE1BQU0sQ0FBQ0osV0FBVztJQUMzRSxPQUFPRztBQUNYO0FBQ0FkLHNCQUFzQixHQUFHSztBQUN6QixTQUFTRCxvQkFBb0JVLFdBQVcsRUFBRUUsY0FBYztJQUNwRCxJQUFJQyxjQUFjZCxpQkFBaUJXO0lBQ25DRyxjQUFjbkIsT0FBT29CLE1BQU0sQ0FBQ3BCLE9BQU9vQixNQUFNLENBQUMsQ0FBQyxHQUFHRCxjQUFjRDtJQUM1REYsY0FBY1osa0JBQWtCZTtJQUNoQyxPQUFPSDtBQUNYO0FBQ0FkLDJCQUEyQixHQUFHSTtBQUM5QixTQUFTRCxpQkFBaUJXLFdBQVc7SUFDakMsT0FBT04saUJBQWlCVyxLQUFLLENBQUNMO0FBQ2xDO0FBQ0FkLHdCQUF3QixHQUFHRztBQUMzQixTQUFTRCxrQkFBa0JlLFdBQVc7SUFDbEMsT0FBT1QsaUJBQWlCWSxTQUFTLENBQUNIO0FBQ3RDO0FBQ0FqQix5QkFBeUIsR0FBR0UsbUJBQzVCLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy91cmwuanM/NzUwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZm9ybWF0UXVlcnlTdHJpbmcgPSBleHBvcnRzLnBhcnNlUXVlcnlTdHJpbmcgPSBleHBvcnRzLmFwcGVuZFRvUXVlcnlTdHJpbmcgPSBleHBvcnRzLmdldFF1ZXJ5U3RyaW5nID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHF1ZXJ5U3RyaW5nVXRpbHMgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwicXVlcnktc3RyaW5nXCIpKTtcbmZ1bmN0aW9uIGdldFF1ZXJ5U3RyaW5nKHVybCkge1xuICAgIGNvbnN0IHBhdGhFbmQgPSB1cmwuaW5kZXhPZihcIj9cIikgIT09IC0xID8gdXJsLmluZGV4T2YoXCI/XCIpIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gdHlwZW9mIHBhdGhFbmQgIT09IFwidW5kZWZpbmVkXCIgPyB1cmwuc3Vic3RyKHBhdGhFbmQpIDogXCJcIjtcbiAgICByZXR1cm4gcXVlcnlTdHJpbmc7XG59XG5leHBvcnRzLmdldFF1ZXJ5U3RyaW5nID0gZ2V0UXVlcnlTdHJpbmc7XG5mdW5jdGlvbiBhcHBlbmRUb1F1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nLCBuZXdRdWVyeVBhcmFtcykge1xuICAgIGxldCBxdWVyeVBhcmFtcyA9IHBhcnNlUXVlcnlTdHJpbmcocXVlcnlTdHJpbmcpO1xuICAgIHF1ZXJ5UGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBxdWVyeVBhcmFtcyksIG5ld1F1ZXJ5UGFyYW1zKTtcbiAgICBxdWVyeVN0cmluZyA9IGZvcm1hdFF1ZXJ5U3RyaW5nKHF1ZXJ5UGFyYW1zKTtcbiAgICByZXR1cm4gcXVlcnlTdHJpbmc7XG59XG5leHBvcnRzLmFwcGVuZFRvUXVlcnlTdHJpbmcgPSBhcHBlbmRUb1F1ZXJ5U3RyaW5nO1xuZnVuY3Rpb24gcGFyc2VRdWVyeVN0cmluZyhxdWVyeVN0cmluZykge1xuICAgIHJldHVybiBxdWVyeVN0cmluZ1V0aWxzLnBhcnNlKHF1ZXJ5U3RyaW5nKTtcbn1cbmV4cG9ydHMucGFyc2VRdWVyeVN0cmluZyA9IHBhcnNlUXVlcnlTdHJpbmc7XG5mdW5jdGlvbiBmb3JtYXRRdWVyeVN0cmluZyhxdWVyeVBhcmFtcykge1xuICAgIHJldHVybiBxdWVyeVN0cmluZ1V0aWxzLnN0cmluZ2lmeShxdWVyeVBhcmFtcyk7XG59XG5leHBvcnRzLmZvcm1hdFF1ZXJ5U3RyaW5nID0gZm9ybWF0UXVlcnlTdHJpbmc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZm9ybWF0UXVlcnlTdHJpbmciLCJwYXJzZVF1ZXJ5U3RyaW5nIiwiYXBwZW5kVG9RdWVyeVN0cmluZyIsImdldFF1ZXJ5U3RyaW5nIiwidHNsaWJfMSIsInJlcXVpcmUiLCJxdWVyeVN0cmluZ1V0aWxzIiwiX19pbXBvcnRTdGFyIiwidXJsIiwicGF0aEVuZCIsImluZGV4T2YiLCJ1bmRlZmluZWQiLCJxdWVyeVN0cmluZyIsInN1YnN0ciIsIm5ld1F1ZXJ5UGFyYW1zIiwicXVlcnlQYXJhbXMiLCJhc3NpZ24iLCJwYXJzZSIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/url.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/validators.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isSilentPayload = exports.isReservedEvent = exports.isInternalEvent = exports.isJsonRpcResponseError = exports.isJsonRpcResponseSuccess = exports.isJsonRpcRequest = exports.isJsonRpcSubscription = exports.isHexString = exports.getEncoding = exports.getType = exports.isArrayBuffer = exports.isTypedArray = exports.isBuffer = exports.isEmptyArray = exports.isEmptyString = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst encoding = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\"));\nconst legacy_types_1 = __webpack_require__(/*! @walletconnect/legacy-types */ \"(ssr)/../node_modules/@walletconnect/legacy-types/dist/cjs/index.js\");\nfunction isEmptyString(value) {\n    return value === \"\" || typeof value === \"string\" && value.trim() === \"\";\n}\nexports.isEmptyString = isEmptyString;\nfunction isEmptyArray(array) {\n    return !(array && array.length);\n}\nexports.isEmptyArray = isEmptyArray;\nfunction isBuffer(val) {\n    return encoding.isBuffer(val);\n}\nexports.isBuffer = isBuffer;\nfunction isTypedArray(val) {\n    return encoding.isTypedArray(val);\n}\nexports.isTypedArray = isTypedArray;\nfunction isArrayBuffer(val) {\n    return encoding.isArrayBuffer(val);\n}\nexports.isArrayBuffer = isArrayBuffer;\nfunction getType(val) {\n    return encoding.getType(val);\n}\nexports.getType = getType;\nfunction getEncoding(val) {\n    return encoding.getEncoding(val);\n}\nexports.getEncoding = getEncoding;\nfunction isHexString(value, length) {\n    return encoding.isHexString(value, length);\n}\nexports.isHexString = isHexString;\nfunction isJsonRpcSubscription(object) {\n    return typeof object.params === \"object\";\n}\nexports.isJsonRpcSubscription = isJsonRpcSubscription;\nfunction isJsonRpcRequest(object) {\n    return typeof object.method !== \"undefined\";\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\nfunction isJsonRpcResponseSuccess(object) {\n    return typeof object.result !== \"undefined\";\n}\nexports.isJsonRpcResponseSuccess = isJsonRpcResponseSuccess;\nfunction isJsonRpcResponseError(object) {\n    return typeof object.error !== \"undefined\";\n}\nexports.isJsonRpcResponseError = isJsonRpcResponseError;\nfunction isInternalEvent(object) {\n    return typeof object.event !== \"undefined\";\n}\nexports.isInternalEvent = isInternalEvent;\nfunction isReservedEvent(event) {\n    return legacy_types_1.RESERVED_EVENTS.includes(event) || event.startsWith(\"wc_\");\n}\nexports.isReservedEvent = isReservedEvent;\nfunction isSilentPayload(request) {\n    if (request.method.startsWith(\"wc_\")) {\n        return true;\n    }\n    if (legacy_types_1.SIGNING_METHODS.includes(request.method)) {\n        return false;\n    }\n    return true;\n}\nexports.isSilentPayload = isSilentPayload; //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsdUJBQXVCLEdBQUdBLHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsZ0NBQWdDLEdBQUdBLHdCQUF3QixHQUFHQSw2QkFBNkIsR0FBR0EsbUJBQW1CLEdBQUdBLG1CQUFtQixHQUFHQSxlQUFlLEdBQUdBLHFCQUFxQixHQUFHQSxvQkFBb0IsR0FBR0EsZ0JBQWdCLEdBQUdBLG9CQUFvQixHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2pZLE1BQU1pQixVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQixNQUFNQyxXQUFXRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLGdHQUF5QjtBQUN2RSxNQUFNRyxpQkFBaUJILG1CQUFPQSxDQUFDLHdHQUE2QjtBQUM1RCxTQUFTRixjQUFjZixLQUFLO0lBQ3hCLE9BQU9BLFVBQVUsTUFBTyxPQUFPQSxVQUFVLFlBQVlBLE1BQU1xQixJQUFJLE9BQU87QUFDMUU7QUFDQXRCLHFCQUFxQixHQUFHZ0I7QUFDeEIsU0FBU0QsYUFBYVEsS0FBSztJQUN2QixPQUFPLENBQUVBLENBQUFBLFNBQVNBLE1BQU1DLE1BQU07QUFDbEM7QUFDQXhCLG9CQUFvQixHQUFHZTtBQUN2QixTQUFTRCxTQUFTVyxHQUFHO0lBQ2pCLE9BQU9OLFNBQVNMLFFBQVEsQ0FBQ1c7QUFDN0I7QUFDQXpCLGdCQUFnQixHQUFHYztBQUNuQixTQUFTRCxhQUFhWSxHQUFHO0lBQ3JCLE9BQU9OLFNBQVNOLFlBQVksQ0FBQ1k7QUFDakM7QUFDQXpCLG9CQUFvQixHQUFHYTtBQUN2QixTQUFTRCxjQUFjYSxHQUFHO0lBQ3RCLE9BQU9OLFNBQVNQLGFBQWEsQ0FBQ2E7QUFDbEM7QUFDQXpCLHFCQUFxQixHQUFHWTtBQUN4QixTQUFTRCxRQUFRYyxHQUFHO0lBQ2hCLE9BQU9OLFNBQVNSLE9BQU8sQ0FBQ2M7QUFDNUI7QUFDQXpCLGVBQWUsR0FBR1c7QUFDbEIsU0FBU0QsWUFBWWUsR0FBRztJQUNwQixPQUFPTixTQUFTVCxXQUFXLENBQUNlO0FBQ2hDO0FBQ0F6QixtQkFBbUIsR0FBR1U7QUFDdEIsU0FBU0QsWUFBWVIsS0FBSyxFQUFFdUIsTUFBTTtJQUM5QixPQUFPTCxTQUFTVixXQUFXLENBQUNSLE9BQU91QjtBQUN2QztBQUNBeEIsbUJBQW1CLEdBQUdTO0FBQ3RCLFNBQVNELHNCQUFzQmtCLE1BQU07SUFDakMsT0FBTyxPQUFPQSxPQUFPQyxNQUFNLEtBQUs7QUFDcEM7QUFDQTNCLDZCQUE2QixHQUFHUTtBQUNoQyxTQUFTRCxpQkFBaUJtQixNQUFNO0lBQzVCLE9BQU8sT0FBT0EsT0FBT0UsTUFBTSxLQUFLO0FBQ3BDO0FBQ0E1Qix3QkFBd0IsR0FBR087QUFDM0IsU0FBU0QseUJBQXlCb0IsTUFBTTtJQUNwQyxPQUFPLE9BQU9BLE9BQU9HLE1BQU0sS0FBSztBQUNwQztBQUNBN0IsZ0NBQWdDLEdBQUdNO0FBQ25DLFNBQVNELHVCQUF1QnFCLE1BQU07SUFDbEMsT0FBTyxPQUFPQSxPQUFPSSxLQUFLLEtBQUs7QUFDbkM7QUFDQTlCLDhCQUE4QixHQUFHSztBQUNqQyxTQUFTRCxnQkFBZ0JzQixNQUFNO0lBQzNCLE9BQU8sT0FBT0EsT0FBT0ssS0FBSyxLQUFLO0FBQ25DO0FBQ0EvQix1QkFBdUIsR0FBR0k7QUFDMUIsU0FBU0QsZ0JBQWdCNEIsS0FBSztJQUMxQixPQUFPVixlQUFlVyxlQUFlLENBQUNDLFFBQVEsQ0FBQ0YsVUFBVUEsTUFBTUcsVUFBVSxDQUFDO0FBQzlFO0FBQ0FsQyx1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0QsZ0JBQWdCaUMsT0FBTztJQUM1QixJQUFJQSxRQUFRUCxNQUFNLENBQUNNLFVBQVUsQ0FBQyxRQUFRO1FBQ2xDLE9BQU87SUFDWDtJQUNBLElBQUliLGVBQWVlLGVBQWUsQ0FBQ0gsUUFBUSxDQUFDRSxRQUFRUCxNQUFNLEdBQUc7UUFDekQsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ0E1Qix1QkFBdUIsR0FBR0UsaUJBQzFCLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy92YWxpZGF0b3JzLmpzPzhhZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzU2lsZW50UGF5bG9hZCA9IGV4cG9ydHMuaXNSZXNlcnZlZEV2ZW50ID0gZXhwb3J0cy5pc0ludGVybmFsRXZlbnQgPSBleHBvcnRzLmlzSnNvblJwY1Jlc3BvbnNlRXJyb3IgPSBleHBvcnRzLmlzSnNvblJwY1Jlc3BvbnNlU3VjY2VzcyA9IGV4cG9ydHMuaXNKc29uUnBjUmVxdWVzdCA9IGV4cG9ydHMuaXNKc29uUnBjU3Vic2NyaXB0aW9uID0gZXhwb3J0cy5pc0hleFN0cmluZyA9IGV4cG9ydHMuZ2V0RW5jb2RpbmcgPSBleHBvcnRzLmdldFR5cGUgPSBleHBvcnRzLmlzQXJyYXlCdWZmZXIgPSBleHBvcnRzLmlzVHlwZWRBcnJheSA9IGV4cG9ydHMuaXNCdWZmZXIgPSBleHBvcnRzLmlzRW1wdHlBcnJheSA9IGV4cG9ydHMuaXNFbXB0eVN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBlbmNvZGluZyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9lbmNvZGluZ1wiKSk7XG5jb25zdCBsZWdhY3lfdHlwZXNfMSA9IHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9sZWdhY3ktdHlwZXNcIik7XG5mdW5jdGlvbiBpc0VtcHR5U3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSBcIlwiIHx8ICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUudHJpbSgpID09PSBcIlwiKTtcbn1cbmV4cG9ydHMuaXNFbXB0eVN0cmluZyA9IGlzRW1wdHlTdHJpbmc7XG5mdW5jdGlvbiBpc0VtcHR5QXJyYXkoYXJyYXkpIHtcbiAgICByZXR1cm4gIShhcnJheSAmJiBhcnJheS5sZW5ndGgpO1xufVxuZXhwb3J0cy5pc0VtcHR5QXJyYXkgPSBpc0VtcHR5QXJyYXk7XG5mdW5jdGlvbiBpc0J1ZmZlcih2YWwpIHtcbiAgICByZXR1cm4gZW5jb2RpbmcuaXNCdWZmZXIodmFsKTtcbn1cbmV4cG9ydHMuaXNCdWZmZXIgPSBpc0J1ZmZlcjtcbmZ1bmN0aW9uIGlzVHlwZWRBcnJheSh2YWwpIHtcbiAgICByZXR1cm4gZW5jb2RpbmcuaXNUeXBlZEFycmF5KHZhbCk7XG59XG5leHBvcnRzLmlzVHlwZWRBcnJheSA9IGlzVHlwZWRBcnJheTtcbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gICAgcmV0dXJuIGVuY29kaW5nLmlzQXJyYXlCdWZmZXIodmFsKTtcbn1cbmV4cG9ydHMuaXNBcnJheUJ1ZmZlciA9IGlzQXJyYXlCdWZmZXI7XG5mdW5jdGlvbiBnZXRUeXBlKHZhbCkge1xuICAgIHJldHVybiBlbmNvZGluZy5nZXRUeXBlKHZhbCk7XG59XG5leHBvcnRzLmdldFR5cGUgPSBnZXRUeXBlO1xuZnVuY3Rpb24gZ2V0RW5jb2RpbmcodmFsKSB7XG4gICAgcmV0dXJuIGVuY29kaW5nLmdldEVuY29kaW5nKHZhbCk7XG59XG5leHBvcnRzLmdldEVuY29kaW5nID0gZ2V0RW5jb2Rpbmc7XG5mdW5jdGlvbiBpc0hleFN0cmluZyh2YWx1ZSwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGVuY29kaW5nLmlzSGV4U3RyaW5nKHZhbHVlLCBsZW5ndGgpO1xufVxuZXhwb3J0cy5pc0hleFN0cmluZyA9IGlzSGV4U3RyaW5nO1xuZnVuY3Rpb24gaXNKc29uUnBjU3Vic2NyaXB0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0LnBhcmFtcyA9PT0gXCJvYmplY3RcIjtcbn1cbmV4cG9ydHMuaXNKc29uUnBjU3Vic2NyaXB0aW9uID0gaXNKc29uUnBjU3Vic2NyaXB0aW9uO1xuZnVuY3Rpb24gaXNKc29uUnBjUmVxdWVzdChvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdC5tZXRob2QgIT09IFwidW5kZWZpbmVkXCI7XG59XG5leHBvcnRzLmlzSnNvblJwY1JlcXVlc3QgPSBpc0pzb25ScGNSZXF1ZXN0O1xuZnVuY3Rpb24gaXNKc29uUnBjUmVzcG9uc2VTdWNjZXNzKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0LnJlc3VsdCAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbmV4cG9ydHMuaXNKc29uUnBjUmVzcG9uc2VTdWNjZXNzID0gaXNKc29uUnBjUmVzcG9uc2VTdWNjZXNzO1xuZnVuY3Rpb24gaXNKc29uUnBjUmVzcG9uc2VFcnJvcihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdC5lcnJvciAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbmV4cG9ydHMuaXNKc29uUnBjUmVzcG9uc2VFcnJvciA9IGlzSnNvblJwY1Jlc3BvbnNlRXJyb3I7XG5mdW5jdGlvbiBpc0ludGVybmFsRXZlbnQob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QuZXZlbnQgIT09IFwidW5kZWZpbmVkXCI7XG59XG5leHBvcnRzLmlzSW50ZXJuYWxFdmVudCA9IGlzSW50ZXJuYWxFdmVudDtcbmZ1bmN0aW9uIGlzUmVzZXJ2ZWRFdmVudChldmVudCkge1xuICAgIHJldHVybiBsZWdhY3lfdHlwZXNfMS5SRVNFUlZFRF9FVkVOVFMuaW5jbHVkZXMoZXZlbnQpIHx8IGV2ZW50LnN0YXJ0c1dpdGgoXCJ3Y19cIik7XG59XG5leHBvcnRzLmlzUmVzZXJ2ZWRFdmVudCA9IGlzUmVzZXJ2ZWRFdmVudDtcbmZ1bmN0aW9uIGlzU2lsZW50UGF5bG9hZChyZXF1ZXN0KSB7XG4gICAgaWYgKHJlcXVlc3QubWV0aG9kLnN0YXJ0c1dpdGgoXCJ3Y19cIikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChsZWdhY3lfdHlwZXNfMS5TSUdOSU5HX01FVEhPRFMuaW5jbHVkZXMocmVxdWVzdC5tZXRob2QpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmlzU2lsZW50UGF5bG9hZCA9IGlzU2lsZW50UGF5bG9hZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNTaWxlbnRQYXlsb2FkIiwiaXNSZXNlcnZlZEV2ZW50IiwiaXNJbnRlcm5hbEV2ZW50IiwiaXNKc29uUnBjUmVzcG9uc2VFcnJvciIsImlzSnNvblJwY1Jlc3BvbnNlU3VjY2VzcyIsImlzSnNvblJwY1JlcXVlc3QiLCJpc0pzb25ScGNTdWJzY3JpcHRpb24iLCJpc0hleFN0cmluZyIsImdldEVuY29kaW5nIiwiZ2V0VHlwZSIsImlzQXJyYXlCdWZmZXIiLCJpc1R5cGVkQXJyYXkiLCJpc0J1ZmZlciIsImlzRW1wdHlBcnJheSIsImlzRW1wdHlTdHJpbmciLCJ0c2xpYl8xIiwicmVxdWlyZSIsImVuY29kaW5nIiwiX19pbXBvcnRTdGFyIiwibGVnYWN5X3R5cGVzXzEiLCJ0cmltIiwiYXJyYXkiLCJsZW5ndGgiLCJ2YWwiLCJvYmplY3QiLCJwYXJhbXMiLCJtZXRob2QiLCJyZXN1bHQiLCJlcnJvciIsImV2ZW50IiwiUkVTRVJWRURfRVZFTlRTIiwiaW5jbHVkZXMiLCJzdGFydHNXaXRoIiwicmVxdWVzdCIsIlNJR05JTkdfTUVUSE9EUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/validators.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst windowGetters = tslib_1.__importStar(__webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/../node_modules/@walletconnect/window-getters/dist/cjs/index.js\"));\nexports.getFromWindow = windowGetters.getFromWindow;\nexports.getFromWindowOrThrow = windowGetters.getFromWindowOrThrow;\nexports.getDocumentOrThrow = windowGetters.getDocumentOrThrow;\nexports.getDocument = windowGetters.getDocument;\nexports.getNavigatorOrThrow = windowGetters.getNavigatorOrThrow;\nexports.getNavigator = windowGetters.getNavigator;\nexports.getLocationOrThrow = windowGetters.getLocationOrThrow;\nexports.getLocation = windowGetters.getLocation;\nexports.getCryptoOrThrow = windowGetters.getCryptoOrThrow;\nexports.getCrypto = windowGetters.getCrypto;\nexports.getLocalStorageOrThrow = windowGetters.getLocalStorageOrThrow;\nexports.getLocalStorage = windowGetters.getLocalStorage; //# sourceMappingURL=window.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy93aW5kb3cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsaUJBQWlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0EsMEJBQTBCLEdBQUdBLG9CQUFvQixHQUFHQSwyQkFBMkIsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNqVSxNQUFNYyxVQUFVQyxtQkFBT0EsQ0FBQyx3REFBTztBQUMvQixNQUFNQyxnQkFBZ0JGLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsNEdBQStCO0FBQ2xGZixxQkFBcUIsR0FBR2dCLGNBQWNILGFBQWE7QUFDbkRiLDRCQUE0QixHQUFHZ0IsY0FBY0osb0JBQW9CO0FBQ2pFWiwwQkFBMEIsR0FBR2dCLGNBQWNMLGtCQUFrQjtBQUM3RFgsbUJBQW1CLEdBQUdnQixjQUFjTixXQUFXO0FBQy9DViwyQkFBMkIsR0FBR2dCLGNBQWNQLG1CQUFtQjtBQUMvRFQsb0JBQW9CLEdBQUdnQixjQUFjUixZQUFZO0FBQ2pEUiwwQkFBMEIsR0FBR2dCLGNBQWNULGtCQUFrQjtBQUM3RFAsbUJBQW1CLEdBQUdnQixjQUFjVixXQUFXO0FBQy9DTix3QkFBd0IsR0FBR2dCLGNBQWNYLGdCQUFnQjtBQUN6REwsaUJBQWlCLEdBQUdnQixjQUFjWixTQUFTO0FBQzNDSiw4QkFBOEIsR0FBR2dCLGNBQWNiLHNCQUFzQjtBQUNyRUgsdUJBQXVCLEdBQUdnQixjQUFjZCxlQUFlLEVBQ3ZELGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xlZ2FjeS11dGlscy9kaXN0L2Nqcy93aW5kb3cuanM/YmQwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlID0gZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2VPclRocm93ID0gZXhwb3J0cy5nZXRDcnlwdG8gPSBleHBvcnRzLmdldENyeXB0b09yVGhyb3cgPSBleHBvcnRzLmdldExvY2F0aW9uID0gZXhwb3J0cy5nZXRMb2NhdGlvbk9yVGhyb3cgPSBleHBvcnRzLmdldE5hdmlnYXRvciA9IGV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IGV4cG9ydHMuZ2V0RG9jdW1lbnQgPSBleHBvcnRzLmdldERvY3VtZW50T3JUaHJvdyA9IGV4cG9ydHMuZ2V0RnJvbVdpbmRvd09yVGhyb3cgPSBleHBvcnRzLmdldEZyb21XaW5kb3cgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3Qgd2luZG93R2V0dGVycyA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC93aW5kb3ctZ2V0dGVyc1wiKSk7XG5leHBvcnRzLmdldEZyb21XaW5kb3cgPSB3aW5kb3dHZXR0ZXJzLmdldEZyb21XaW5kb3c7XG5leHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gd2luZG93R2V0dGVycy5nZXRGcm9tV2luZG93T3JUaHJvdztcbmV4cG9ydHMuZ2V0RG9jdW1lbnRPclRocm93ID0gd2luZG93R2V0dGVycy5nZXREb2N1bWVudE9yVGhyb3c7XG5leHBvcnRzLmdldERvY3VtZW50ID0gd2luZG93R2V0dGVycy5nZXREb2N1bWVudDtcbmV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IHdpbmRvd0dldHRlcnMuZ2V0TmF2aWdhdG9yT3JUaHJvdztcbmV4cG9ydHMuZ2V0TmF2aWdhdG9yID0gd2luZG93R2V0dGVycy5nZXROYXZpZ2F0b3I7XG5leHBvcnRzLmdldExvY2F0aW9uT3JUaHJvdyA9IHdpbmRvd0dldHRlcnMuZ2V0TG9jYXRpb25PclRocm93O1xuZXhwb3J0cy5nZXRMb2NhdGlvbiA9IHdpbmRvd0dldHRlcnMuZ2V0TG9jYXRpb247XG5leHBvcnRzLmdldENyeXB0b09yVGhyb3cgPSB3aW5kb3dHZXR0ZXJzLmdldENyeXB0b09yVGhyb3c7XG5leHBvcnRzLmdldENyeXB0byA9IHdpbmRvd0dldHRlcnMuZ2V0Q3J5cHRvO1xuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2VPclRocm93ID0gd2luZG93R2V0dGVycy5nZXRMb2NhbFN0b3JhZ2VPclRocm93O1xuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSB3aW5kb3dHZXR0ZXJzLmdldExvY2FsU3RvcmFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpbmRvdy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2NhbFN0b3JhZ2UiLCJnZXRMb2NhbFN0b3JhZ2VPclRocm93IiwiZ2V0Q3J5cHRvIiwiZ2V0Q3J5cHRvT3JUaHJvdyIsImdldExvY2F0aW9uIiwiZ2V0TG9jYXRpb25PclRocm93IiwiZ2V0TmF2aWdhdG9yIiwiZ2V0TmF2aWdhdG9yT3JUaHJvdyIsImdldERvY3VtZW50IiwiZ2V0RG9jdW1lbnRPclRocm93IiwiZ2V0RnJvbVdpbmRvd09yVGhyb3ciLCJnZXRGcm9tV2luZG93IiwidHNsaWJfMSIsInJlcXVpcmUiLCJ3aW5kb3dHZXR0ZXJzIiwiX19pbXBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/legacy-utils/dist/cjs/window.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/logger/dist/cjs/constants.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/logger/dist/cjs/constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PINO_CUSTOM_CONTEXT_KEY = exports.PINO_LOGGER_DEFAULTS = void 0;\nexports.PINO_LOGGER_DEFAULTS = {\n    level: \"info\"\n};\nexports.PINO_CUSTOM_CONTEXT_KEY = \"custom_context\"; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHQSw0QkFBNEIsR0FBRyxLQUFLO0FBQ3RFQSw0QkFBNEIsR0FBRztJQUMzQkksT0FBTztBQUNYO0FBQ0FKLCtCQUErQixHQUFHLGtCQUNsQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sb2dnZXIvZGlzdC9janMvY29uc3RhbnRzLmpzPzU3M2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZID0gZXhwb3J0cy5QSU5PX0xPR0dFUl9ERUZBVUxUUyA9IHZvaWQgMDtcbmV4cG9ydHMuUElOT19MT0dHRVJfREVGQVVMVFMgPSB7XG4gICAgbGV2ZWw6IFwiaW5mb1wiLFxufTtcbmV4cG9ydHMuUElOT19DVVNUT01fQ09OVEVYVF9LRVkgPSBcImN1c3RvbV9jb250ZXh0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUElOT19DVVNUT01fQ09OVEVYVF9LRVkiLCJQSU5PX0xPR0dFUl9ERUZBVUxUUyIsImxldmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/logger/dist/cjs/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/logger/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ../node_modules/@walletconnect/logger/dist/cjs/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pino = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/logger/node_modules/tslib/tslib.es6.js\");\nconst pino_1 = tslib_1.__importDefault(__webpack_require__(/*! pino */ \"(ssr)/../node_modules/pino/pino.js\"));\nObject.defineProperty(exports, \"pino\", ({\n    enumerable: true,\n    get: function() {\n        return pino_1.default;\n    }\n}));\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/constants.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/utils.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsWUFBWSxHQUFHLEtBQUs7QUFDcEIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsMEZBQU87QUFDL0IsTUFBTUMsU0FBU0YsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyxnREFBTTtBQUNyRE4sd0NBQXVDO0lBQUVTLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILE9BQU9JLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUN6R04sUUFBUU8sWUFBWSxDQUFDTixtQkFBT0EsQ0FBQyxzRkFBYSxHQUFHSjtBQUM3Q0csUUFBUU8sWUFBWSxDQUFDTixtQkFBT0EsQ0FBQyw4RUFBUyxHQUFHSixVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sb2dnZXIvZGlzdC9janMvaW5kZXguanM/MGJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGlubyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBwaW5vXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicGlub1wiKSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwaW5vXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwaW5vXzEuZGVmYXVsdDsgfSB9KTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJwaW5vIiwidHNsaWJfMSIsInJlcXVpcmUiLCJwaW5vXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmYXVsdCIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/logger/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/logger/dist/cjs/utils.js":
/*!***************************************************************!*\
  !*** ../node_modules/@walletconnect/logger/dist/cjs/utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/constants.js\");\nfunction getDefaultLoggerOptions(opts) {\n    return Object.assign(Object.assign({}, opts), {\n        level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level\n    });\n}\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\nfunction getBrowserLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    return logger[customContextKey] || \"\";\n}\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\nfunction setBrowserLoggerContext(logger, context, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    logger[customContextKey] = context;\n    return logger;\n}\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\nfunction getLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    let context = \"\";\n    if (typeof logger.bindings === \"undefined\") {\n        context = getBrowserLoggerContext(logger, customContextKey);\n    } else {\n        context = logger.bindings().context || \"\";\n    }\n    return context;\n}\nexports.getLoggerContext = getLoggerContext;\nfunction formatChildLoggerContext(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const parentContext = getLoggerContext(logger, customContextKey);\n    const context = parentContext.trim() ? `${parentContext}/${childContext}` : childContext;\n    return context;\n}\nexports.formatChildLoggerContext = formatChildLoggerContext;\nfunction generateChildLogger(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const context = formatChildLoggerContext(logger, childContext, customContextKey);\n    const child = logger.child({\n        context\n    });\n    return setBrowserLoggerContext(child, context, customContextKey);\n}\nexports.generateChildLogger = generateChildLogger; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGdDQUFnQyxHQUFHQSx3QkFBd0IsR0FBR0EsK0JBQStCLEdBQUdBLCtCQUErQixHQUFHQSwrQkFBK0IsR0FBRyxLQUFLO0FBQ3ZNLE1BQU1RLGNBQWNDLG1CQUFPQSxDQUFDLHNGQUFhO0FBQ3pDLFNBQVNGLHdCQUF3QkcsSUFBSTtJQUNqQyxPQUFPWixPQUFPYSxNQUFNLENBQUNiLE9BQU9hLE1BQU0sQ0FBQyxDQUFDLEdBQUdELE9BQU87UUFBRUUsT0FBTyxDQUFDRixTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0UsS0FBSyxLQUFLSixZQUFZSyxvQkFBb0IsQ0FBQ0QsS0FBSztJQUFDO0FBQzlKO0FBQ0FaLCtCQUErQixHQUFHTztBQUNsQyxTQUFTRCx3QkFBd0JRLE1BQU0sRUFBRUMsbUJBQW1CUCxZQUFZUSx1QkFBdUI7SUFDM0YsT0FBT0YsTUFBTSxDQUFDQyxpQkFBaUIsSUFBSTtBQUN2QztBQUNBZiwrQkFBK0IsR0FBR007QUFDbEMsU0FBU0Qsd0JBQXdCUyxNQUFNLEVBQUVHLE9BQU8sRUFBRUYsbUJBQW1CUCxZQUFZUSx1QkFBdUI7SUFDcEdGLE1BQU0sQ0FBQ0MsaUJBQWlCLEdBQUdFO0lBQzNCLE9BQU9IO0FBQ1g7QUFDQWQsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELGlCQUFpQlUsTUFBTSxFQUFFQyxtQkFBbUJQLFlBQVlRLHVCQUF1QjtJQUNwRixJQUFJQyxVQUFVO0lBQ2QsSUFBSSxPQUFPSCxPQUFPSSxRQUFRLEtBQUssYUFBYTtRQUN4Q0QsVUFBVVgsd0JBQXdCUSxRQUFRQztJQUM5QyxPQUNLO1FBQ0RFLFVBQVVILE9BQU9JLFFBQVEsR0FBR0QsT0FBTyxJQUFJO0lBQzNDO0lBQ0EsT0FBT0E7QUFDWDtBQUNBakIsd0JBQXdCLEdBQUdJO0FBQzNCLFNBQVNELHlCQUF5QlcsTUFBTSxFQUFFSyxZQUFZLEVBQUVKLG1CQUFtQlAsWUFBWVEsdUJBQXVCO0lBQzFHLE1BQU1JLGdCQUFnQmhCLGlCQUFpQlUsUUFBUUM7SUFDL0MsTUFBTUUsVUFBVUcsY0FBY0MsSUFBSSxLQUM1QixDQUFDLEVBQUVELGNBQWMsQ0FBQyxFQUFFRCxhQUFhLENBQUMsR0FDbENBO0lBQ04sT0FBT0Y7QUFDWDtBQUNBakIsZ0NBQWdDLEdBQUdHO0FBQ25DLFNBQVNELG9CQUFvQlksTUFBTSxFQUFFSyxZQUFZLEVBQUVKLG1CQUFtQlAsWUFBWVEsdUJBQXVCO0lBQ3JHLE1BQU1DLFVBQVVkLHlCQUF5QlcsUUFBUUssY0FBY0o7SUFDL0QsTUFBTU8sUUFBUVIsT0FBT1EsS0FBSyxDQUFDO1FBQUVMO0lBQVE7SUFDckMsT0FBT1osd0JBQXdCaUIsT0FBT0wsU0FBU0Y7QUFDbkQ7QUFDQWYsMkJBQTJCLEdBQUdFLHFCQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9sb2dnZXIvZGlzdC9janMvdXRpbHMuanM/MzIzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhdGVDaGlsZExvZ2dlciA9IGV4cG9ydHMuZm9ybWF0Q2hpbGRMb2dnZXJDb250ZXh0ID0gZXhwb3J0cy5nZXRMb2dnZXJDb250ZXh0ID0gZXhwb3J0cy5zZXRCcm93c2VyTG9nZ2VyQ29udGV4dCA9IGV4cG9ydHMuZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQgPSBleHBvcnRzLmdldERlZmF1bHRMb2dnZXJPcHRpb25zID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG5mdW5jdGlvbiBnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyhvcHRzKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0cyksIHsgbGV2ZWw6IChvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMubGV2ZWwpIHx8IGNvbnN0YW50c18xLlBJTk9fTE9HR0VSX0RFRkFVTFRTLmxldmVsIH0pO1xufVxuZXhwb3J0cy5nZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyA9IGdldERlZmF1bHRMb2dnZXJPcHRpb25zO1xuZnVuY3Rpb24gZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQobG9nZ2VyLCBjdXN0b21Db250ZXh0S2V5ID0gY29uc3RhbnRzXzEuUElOT19DVVNUT01fQ09OVEVYVF9LRVkpIHtcbiAgICByZXR1cm4gbG9nZ2VyW2N1c3RvbUNvbnRleHRLZXldIHx8IFwiXCI7XG59XG5leHBvcnRzLmdldEJyb3dzZXJMb2dnZXJDb250ZXh0ID0gZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQ7XG5mdW5jdGlvbiBzZXRCcm93c2VyTG9nZ2VyQ29udGV4dChsb2dnZXIsIGNvbnRleHQsIGN1c3RvbUNvbnRleHRLZXkgPSBjb25zdGFudHNfMS5QSU5PX0NVU1RPTV9DT05URVhUX0tFWSkge1xuICAgIGxvZ2dlcltjdXN0b21Db250ZXh0S2V5XSA9IGNvbnRleHQ7XG4gICAgcmV0dXJuIGxvZ2dlcjtcbn1cbmV4cG9ydHMuc2V0QnJvd3NlckxvZ2dlckNvbnRleHQgPSBzZXRCcm93c2VyTG9nZ2VyQ29udGV4dDtcbmZ1bmN0aW9uIGdldExvZ2dlckNvbnRleHQobG9nZ2VyLCBjdXN0b21Db250ZXh0S2V5ID0gY29uc3RhbnRzXzEuUElOT19DVVNUT01fQ09OVEVYVF9LRVkpIHtcbiAgICBsZXQgY29udGV4dCA9IFwiXCI7XG4gICAgaWYgKHR5cGVvZiBsb2dnZXIuYmluZGluZ3MgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgY29udGV4dCA9IGdldEJyb3dzZXJMb2dnZXJDb250ZXh0KGxvZ2dlciwgY3VzdG9tQ29udGV4dEtleSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb250ZXh0ID0gbG9nZ2VyLmJpbmRpbmdzKCkuY29udGV4dCB8fCBcIlwiO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cbmV4cG9ydHMuZ2V0TG9nZ2VyQ29udGV4dCA9IGdldExvZ2dlckNvbnRleHQ7XG5mdW5jdGlvbiBmb3JtYXRDaGlsZExvZ2dlckNvbnRleHQobG9nZ2VyLCBjaGlsZENvbnRleHQsIGN1c3RvbUNvbnRleHRLZXkgPSBjb25zdGFudHNfMS5QSU5PX0NVU1RPTV9DT05URVhUX0tFWSkge1xuICAgIGNvbnN0IHBhcmVudENvbnRleHQgPSBnZXRMb2dnZXJDb250ZXh0KGxvZ2dlciwgY3VzdG9tQ29udGV4dEtleSk7XG4gICAgY29uc3QgY29udGV4dCA9IHBhcmVudENvbnRleHQudHJpbSgpXG4gICAgICAgID8gYCR7cGFyZW50Q29udGV4dH0vJHtjaGlsZENvbnRleHR9YFxuICAgICAgICA6IGNoaWxkQ29udGV4dDtcbiAgICByZXR1cm4gY29udGV4dDtcbn1cbmV4cG9ydHMuZm9ybWF0Q2hpbGRMb2dnZXJDb250ZXh0ID0gZm9ybWF0Q2hpbGRMb2dnZXJDb250ZXh0O1xuZnVuY3Rpb24gZ2VuZXJhdGVDaGlsZExvZ2dlcihsb2dnZXIsIGNoaWxkQ29udGV4dCwgY3VzdG9tQ29udGV4dEtleSA9IGNvbnN0YW50c18xLlBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZKSB7XG4gICAgY29uc3QgY29udGV4dCA9IGZvcm1hdENoaWxkTG9nZ2VyQ29udGV4dChsb2dnZXIsIGNoaWxkQ29udGV4dCwgY3VzdG9tQ29udGV4dEtleSk7XG4gICAgY29uc3QgY2hpbGQgPSBsb2dnZXIuY2hpbGQoeyBjb250ZXh0IH0pO1xuICAgIHJldHVybiBzZXRCcm93c2VyTG9nZ2VyQ29udGV4dChjaGlsZCwgY29udGV4dCwgY3VzdG9tQ29udGV4dEtleSk7XG59XG5leHBvcnRzLmdlbmVyYXRlQ2hpbGRMb2dnZXIgPSBnZW5lcmF0ZUNoaWxkTG9nZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhdGVDaGlsZExvZ2dlciIsImZvcm1hdENoaWxkTG9nZ2VyQ29udGV4dCIsImdldExvZ2dlckNvbnRleHQiLCJzZXRCcm93c2VyTG9nZ2VyQ29udGV4dCIsImdldEJyb3dzZXJMb2dnZXJDb250ZXh0IiwiZ2V0RGVmYXVsdExvZ2dlck9wdGlvbnMiLCJjb25zdGFudHNfMSIsInJlcXVpcmUiLCJvcHRzIiwiYXNzaWduIiwibGV2ZWwiLCJQSU5PX0xPR0dFUl9ERUZBVUxUUyIsImxvZ2dlciIsImN1c3RvbUNvbnRleHRLZXkiLCJQSU5PX0NVU1RPTV9DT05URVhUX0tFWSIsImNvbnRleHQiLCJiaW5kaW5ncyIsImNoaWxkQ29udGV4dCIsInBhcmVudENvbnRleHQiLCJ0cmltIiwiY2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/logger/dist/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/logger/node_modules/tslib/tslib.es6.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@walletconnect/logger/node_modules/tslib/tslib.es6.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/logger/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/randombytes/dist/cjs/node/index.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@walletconnect/randombytes/dist/cjs/node/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.randomBytes = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/randombytes/node_modules/tslib/tslib.es6.js\");\nconst crypto_1 = tslib_1.__importDefault(__webpack_require__(/*! crypto */ \"crypto\"));\nconst encoding_1 = __webpack_require__(/*! @walletconnect/encoding */ \"(ssr)/../node_modules/@walletconnect/encoding/dist/esm/index.js\");\nfunction randomBytes(length) {\n    const buf = crypto_1.default.randomBytes(length);\n    return encoding_1.bufferToArray(buf);\n}\nexports.randomBytes = randomBytes; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JhbmRvbWJ5dGVzL2Rpc3QvY2pzL25vZGUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsK0ZBQU87QUFDL0IsTUFBTUMsV0FBV0YsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyxzQkFBUTtBQUN6RCxNQUFNRyxhQUFhSCxtQkFBT0EsQ0FBQyxnR0FBeUI7QUFDcEQsU0FBU0YsWUFBWU0sTUFBTTtJQUN2QixNQUFNQyxNQUFNSixTQUFTSyxPQUFPLENBQUNSLFdBQVcsQ0FBQ007SUFDekMsT0FBT0QsV0FBV0ksYUFBYSxDQUFDRjtBQUNwQztBQUNBVCxtQkFBbUIsR0FBR0UsYUFDdEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmFuZG9tYnl0ZXMvZGlzdC9janMvbm9kZS9pbmRleC5qcz82ZTgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yYW5kb21CeXRlcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjcnlwdG9fMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJjcnlwdG9cIikpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAd2FsbGV0Y29ubmVjdC9lbmNvZGluZ1wiKTtcbmZ1bmN0aW9uIHJhbmRvbUJ5dGVzKGxlbmd0aCkge1xuICAgIGNvbnN0IGJ1ZiA9IGNyeXB0b18xLmRlZmF1bHQucmFuZG9tQnl0ZXMobGVuZ3RoKTtcbiAgICByZXR1cm4gZW5jb2RpbmdfMS5idWZmZXJUb0FycmF5KGJ1Zik7XG59XG5leHBvcnRzLnJhbmRvbUJ5dGVzID0gcmFuZG9tQnl0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyYW5kb21CeXRlcyIsInRzbGliXzEiLCJyZXF1aXJlIiwiY3J5cHRvXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJlbmNvZGluZ18xIiwibGVuZ3RoIiwiYnVmIiwiZGVmYXVsdCIsImJ1ZmZlclRvQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/randombytes/dist/cjs/node/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/randombytes/node_modules/tslib/tslib.es6.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@walletconnect/randombytes/node_modules/tslib/tslib.es6.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/randombytes/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* reexport safe */ _jsonrpc__WEBPACK_IMPORTED_MODULE_2__.RELAY_JSONRPC),\n/* harmony export */   isPublishMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishMethod),\n/* harmony export */   isPublishParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishParams),\n/* harmony export */   isPublishRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishRequest),\n/* harmony export */   isSubscribeMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeMethod),\n/* harmony export */   isSubscribeParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeParams),\n/* harmony export */   isSubscribeRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeRequest),\n/* harmony export */   isSubscriptionMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionMethod),\n/* harmony export */   isSubscriptionParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionParams),\n/* harmony export */   isSubscriptionRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionRequest),\n/* harmony export */   isUnsubscribeMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeMethod),\n/* harmony export */   isUnsubscribeParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeParams),\n/* harmony export */   isUnsubscribeRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeRequest),\n/* harmony export */   parsePublishRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parsePublishRequest),\n/* harmony export */   parseSubscribeRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseSubscribeRequest),\n/* harmony export */   parseSubscriptionRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseSubscriptionRequest),\n/* harmony export */   parseUnsubscribeRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsers */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/parsers.js\");\n/* harmony import */ var _jsonrpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsonrpc */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validators */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/validators.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQ0U7QUFDQTtBQUNHLENBQzdCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9pbmRleC5qcz9hNmViIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZXJzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9qc29ucnBjXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0b3JzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ RELAY_JSONRPC)\n/* harmony export */ });\nconst RELAY_JSONRPC = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\"\n    }\n}; //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9qc29ucnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxnQkFBZ0I7SUFDekJDLE1BQU07UUFDRkMsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0lBQ0FDLEtBQUs7UUFDRFAsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0lBQ0FFLFNBQVM7UUFDTFIsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0FBQ0osRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9qc29ucnBjLmpzP2JhYjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJFTEFZX0pTT05SUEMgPSB7XG4gICAgd2FrdToge1xuICAgICAgICBwdWJsaXNoOiBcIndha3VfcHVibGlzaFwiLFxuICAgICAgICBiYXRjaFB1Ymxpc2g6IFwid2FrdV9iYXRjaFB1Ymxpc2hcIixcbiAgICAgICAgc3Vic2NyaWJlOiBcIndha3Vfc3Vic2NyaWJlXCIsXG4gICAgICAgIGJhdGNoU3Vic2NyaWJlOiBcIndha3VfYmF0Y2hTdWJzY3JpYmVcIixcbiAgICAgICAgc3Vic2NyaXB0aW9uOiBcIndha3Vfc3Vic2NyaXB0aW9uXCIsXG4gICAgICAgIHVuc3Vic2NyaWJlOiBcIndha3VfdW5zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hVbnN1YnNjcmliZTogXCJ3YWt1X2JhdGNoVW5zdWJzY3JpYmVcIixcbiAgICB9LFxuICAgIGlybjoge1xuICAgICAgICBwdWJsaXNoOiBcImlybl9wdWJsaXNoXCIsXG4gICAgICAgIGJhdGNoUHVibGlzaDogXCJpcm5fYmF0Y2hQdWJsaXNoXCIsXG4gICAgICAgIHN1YnNjcmliZTogXCJpcm5fc3Vic2NyaWJlXCIsXG4gICAgICAgIGJhdGNoU3Vic2NyaWJlOiBcImlybl9iYXRjaFN1YnNjcmliZVwiLFxuICAgICAgICBzdWJzY3JpcHRpb246IFwiaXJuX3N1YnNjcmlwdGlvblwiLFxuICAgICAgICB1bnN1YnNjcmliZTogXCJpcm5fdW5zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hVbnN1YnNjcmliZTogXCJpcm5fYmF0Y2hVbnN1YnNjcmliZVwiLFxuICAgIH0sXG4gICAgaXJpZGl1bToge1xuICAgICAgICBwdWJsaXNoOiBcImlyaWRpdW1fcHVibGlzaFwiLFxuICAgICAgICBiYXRjaFB1Ymxpc2g6IFwiaXJpZGl1bV9iYXRjaFB1Ymxpc2hcIixcbiAgICAgICAgc3Vic2NyaWJlOiBcImlyaWRpdW1fc3Vic2NyaWJlXCIsXG4gICAgICAgIGJhdGNoU3Vic2NyaWJlOiBcImlyaWRpdW1fYmF0Y2hTdWJzY3JpYmVcIixcbiAgICAgICAgc3Vic2NyaXB0aW9uOiBcImlyaWRpdW1fc3Vic2NyaXB0aW9uXCIsXG4gICAgICAgIHVuc3Vic2NyaWJlOiBcImlyaWRpdW1fdW5zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hVbnN1YnNjcmliZTogXCJpcmlkaXVtX2JhdGNoVW5zdWJzY3JpYmVcIixcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzb25ycGMuanMubWFwIl0sIm5hbWVzIjpbIlJFTEFZX0pTT05SUEMiLCJ3YWt1IiwicHVibGlzaCIsImJhdGNoUHVibGlzaCIsInN1YnNjcmliZSIsImJhdGNoU3Vic2NyaWJlIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJiYXRjaFVuc3Vic2NyaWJlIiwiaXJuIiwiaXJpZGl1bSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/misc.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/misc.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertType: () => (/* binding */ assertType),\n/* harmony export */   checkParams: () => (/* binding */ checkParams),\n/* harmony export */   hasExactParamsLength: () => (/* binding */ hasExactParamsLength),\n/* harmony export */   hasRequiredParams: () => (/* binding */ hasRequiredParams),\n/* harmony export */   hasRequiredParamsLength: () => (/* binding */ hasRequiredParamsLength),\n/* harmony export */   methodEndsWith: () => (/* binding */ methodEndsWith)\n/* harmony export */ });\nfunction assertType(obj, key, type = \"string\") {\n    if (!obj[key] || typeof obj[key] !== type) {\n        throw new Error(`Missing or invalid \"${key}\" param`);\n    }\n}\nfunction hasRequiredParams(params, required) {\n    let matches = true;\n    required.forEach((key)=>{\n        const exists = key in params;\n        if (!exists) {\n            matches = false;\n        }\n    });\n    return matches;\n}\nfunction hasExactParamsLength(params, length) {\n    return Array.isArray(params) ? params.length === length : Object.keys(params).length === length;\n}\nfunction hasRequiredParamsLength(params, minLength) {\n    return Array.isArray(params) ? params.length >= minLength : Object.keys(params).length >= minLength;\n}\nfunction checkParams(params, required, optional) {\n    const exact = !optional.length;\n    const matchesLength = exact ? hasExactParamsLength(params, required.length) : hasRequiredParamsLength(params, required.length);\n    if (!matchesLength) return false;\n    return hasRequiredParams(params, required);\n}\nfunction methodEndsWith(method, expected, separator = \"_\") {\n    const split = method.split(separator);\n    return split[split.length - 1].trim().toLowerCase() === expected.trim().toLowerCase();\n} //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9taXNjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLFdBQVdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLFFBQVE7SUFDaEQsSUFBSSxDQUFDRixHQUFHLENBQUNDLElBQUksSUFBSSxPQUFPRCxHQUFHLENBQUNDLElBQUksS0FBS0MsTUFBTTtRQUN2QyxNQUFNLElBQUlDLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRUYsSUFBSSxPQUFPLENBQUM7SUFDdkQ7QUFDSjtBQUNPLFNBQVNHLGtCQUFrQkMsTUFBTSxFQUFFQyxRQUFRO0lBQzlDLElBQUlDLFVBQVU7SUFDZEQsU0FBU0UsT0FBTyxDQUFDUCxDQUFBQTtRQUNiLE1BQU1RLFNBQVNSLE9BQU9JO1FBQ3RCLElBQUksQ0FBQ0ksUUFBUTtZQUNURixVQUFVO1FBQ2Q7SUFDSjtJQUNBLE9BQU9BO0FBQ1g7QUFDTyxTQUFTRyxxQkFBcUJMLE1BQU0sRUFBRU0sTUFBTTtJQUMvQyxPQUFPQyxNQUFNQyxPQUFPLENBQUNSLFVBQ2ZBLE9BQU9NLE1BQU0sS0FBS0EsU0FDbEJHLE9BQU9DLElBQUksQ0FBQ1YsUUFBUU0sTUFBTSxLQUFLQTtBQUN6QztBQUNPLFNBQVNLLHdCQUF3QlgsTUFBTSxFQUFFWSxTQUFTO0lBQ3JELE9BQU9MLE1BQU1DLE9BQU8sQ0FBQ1IsVUFDZkEsT0FBT00sTUFBTSxJQUFJTSxZQUNqQkgsT0FBT0MsSUFBSSxDQUFDVixRQUFRTSxNQUFNLElBQUlNO0FBQ3hDO0FBQ08sU0FBU0MsWUFBWWIsTUFBTSxFQUFFQyxRQUFRLEVBQUVhLFFBQVE7SUFDbEQsTUFBTUMsUUFBUSxDQUFDRCxTQUFTUixNQUFNO0lBQzlCLE1BQU1VLGdCQUFnQkQsUUFDaEJWLHFCQUFxQkwsUUFBUUMsU0FBU0ssTUFBTSxJQUM1Q0ssd0JBQXdCWCxRQUFRQyxTQUFTSyxNQUFNO0lBQ3JELElBQUksQ0FBQ1UsZUFDRCxPQUFPO0lBQ1gsT0FBT2pCLGtCQUFrQkMsUUFBUUM7QUFDckM7QUFDTyxTQUFTZ0IsZUFBZUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFlBQVksR0FBRztJQUM1RCxNQUFNQyxRQUFRSCxPQUFPRyxLQUFLLENBQUNEO0lBQzNCLE9BQVFDLEtBQUssQ0FBQ0EsTUFBTWYsTUFBTSxHQUFHLEVBQUUsQ0FBQ2dCLElBQUksR0FBR0MsV0FBVyxPQUM5Q0osU0FBU0csSUFBSSxHQUFHQyxXQUFXO0FBQ25DLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXBpL2Rpc3QvZXNtL21pc2MuanM/NjZjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYXNzZXJ0VHlwZShvYmosIGtleSwgdHlwZSA9IFwic3RyaW5nXCIpIHtcbiAgICBpZiAoIW9ialtrZXldIHx8IHR5cGVvZiBvYmpba2V5XSAhPT0gdHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc3Npbmcgb3IgaW52YWxpZCBcIiR7a2V5fVwiIHBhcmFtYCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc1JlcXVpcmVkUGFyYW1zKHBhcmFtcywgcmVxdWlyZWQpIHtcbiAgICBsZXQgbWF0Y2hlcyA9IHRydWU7XG4gICAgcmVxdWlyZWQuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBjb25zdCBleGlzdHMgPSBrZXkgaW4gcGFyYW1zO1xuICAgICAgICBpZiAoIWV4aXN0cykge1xuICAgICAgICAgICAgbWF0Y2hlcyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG1hdGNoZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzRXhhY3RQYXJhbXNMZW5ndGgocGFyYW1zLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShwYXJhbXMpXG4gICAgICAgID8gcGFyYW1zLmxlbmd0aCA9PT0gbGVuZ3RoXG4gICAgICAgIDogT2JqZWN0LmtleXMocGFyYW1zKS5sZW5ndGggPT09IGxlbmd0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNSZXF1aXJlZFBhcmFtc0xlbmd0aChwYXJhbXMsIG1pbkxlbmd0aCkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHBhcmFtcylcbiAgICAgICAgPyBwYXJhbXMubGVuZ3RoID49IG1pbkxlbmd0aFxuICAgICAgICA6IE9iamVjdC5rZXlzKHBhcmFtcykubGVuZ3RoID49IG1pbkxlbmd0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1BhcmFtcyhwYXJhbXMsIHJlcXVpcmVkLCBvcHRpb25hbCkge1xuICAgIGNvbnN0IGV4YWN0ID0gIW9wdGlvbmFsLmxlbmd0aDtcbiAgICBjb25zdCBtYXRjaGVzTGVuZ3RoID0gZXhhY3RcbiAgICAgICAgPyBoYXNFeGFjdFBhcmFtc0xlbmd0aChwYXJhbXMsIHJlcXVpcmVkLmxlbmd0aClcbiAgICAgICAgOiBoYXNSZXF1aXJlZFBhcmFtc0xlbmd0aChwYXJhbXMsIHJlcXVpcmVkLmxlbmd0aCk7XG4gICAgaWYgKCFtYXRjaGVzTGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIGhhc1JlcXVpcmVkUGFyYW1zKHBhcmFtcywgcmVxdWlyZWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEVuZHNXaXRoKG1ldGhvZCwgZXhwZWN0ZWQsIHNlcGFyYXRvciA9IFwiX1wiKSB7XG4gICAgY29uc3Qgc3BsaXQgPSBtZXRob2Quc3BsaXQoc2VwYXJhdG9yKTtcbiAgICByZXR1cm4gKHNwbGl0W3NwbGl0Lmxlbmd0aCAtIDFdLnRyaW0oKS50b0xvd2VyQ2FzZSgpID09PVxuICAgICAgICBleHBlY3RlZC50cmltKCkudG9Mb3dlckNhc2UoKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taXNjLmpzLm1hcCJdLCJuYW1lcyI6WyJhc3NlcnRUeXBlIiwib2JqIiwia2V5IiwidHlwZSIsIkVycm9yIiwiaGFzUmVxdWlyZWRQYXJhbXMiLCJwYXJhbXMiLCJyZXF1aXJlZCIsIm1hdGNoZXMiLCJmb3JFYWNoIiwiZXhpc3RzIiwiaGFzRXhhY3RQYXJhbXNMZW5ndGgiLCJsZW5ndGgiLCJBcnJheSIsImlzQXJyYXkiLCJPYmplY3QiLCJrZXlzIiwiaGFzUmVxdWlyZWRQYXJhbXNMZW5ndGgiLCJtaW5MZW5ndGgiLCJjaGVja1BhcmFtcyIsIm9wdGlvbmFsIiwiZXhhY3QiLCJtYXRjaGVzTGVuZ3RoIiwibWV0aG9kRW5kc1dpdGgiLCJtZXRob2QiLCJleHBlY3RlZCIsInNlcGFyYXRvciIsInNwbGl0IiwidHJpbSIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/misc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/parsers.js":
/*!********************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/parsers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePublishRequest: () => (/* binding */ parsePublishRequest),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ parseSubscribeRequest),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ parseSubscriptionRequest),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ parseUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/misc.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validators */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/validators.js\");\n\n\nfunction parseSubscribeRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscribeMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscribeParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"topic\");\n    return params;\n}\nfunction parsePublishRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isPublishMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid publish method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isPublishParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid publish params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"topic\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"message\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"ttl\", \"number\");\n    return params;\n}\nfunction parseUnsubscribeRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isUnsubscribeMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isUnsubscribeParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"id\");\n    return params;\n}\nfunction parseSubscriptionRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscriptionMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscriptionParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"id\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"data\");\n    return params;\n} //# sourceMappingURL=parsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9wYXJzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUN5SjtBQUN0TCxTQUFTUyxzQkFBc0JDLE9BQU87SUFDekMsSUFBSSxDQUFDUCw4REFBaUJBLENBQUNPLFFBQVFDLE1BQU0sR0FBRztRQUNwQyxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxJQUFJLENBQUNSLDhEQUFpQkEsQ0FBQ00sUUFBUUcsTUFBTSxHQUFHO1FBQ3BDLE1BQU0sSUFBSUQsTUFBTTtJQUNwQjtJQUNBLE1BQU1DLFNBQVNILFFBQVFHLE1BQU07SUFDN0JiLGlEQUFVQSxDQUFDYSxRQUFRO0lBQ25CLE9BQU9BO0FBQ1g7QUFDTyxTQUFTQyxvQkFBb0JKLE9BQU87SUFDdkMsSUFBSSxDQUFDVCw0REFBZUEsQ0FBQ1MsUUFBUUMsTUFBTSxHQUFHO1FBQ2xDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ1YsNERBQWVBLENBQUNRLFFBQVFHLE1BQU0sR0FBRztRQUNsQyxNQUFNLElBQUlELE1BQU07SUFDcEI7SUFDQSxNQUFNQyxTQUFTSCxRQUFRRyxNQUFNO0lBQzdCYixpREFBVUEsQ0FBQ2EsUUFBUTtJQUNuQmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkJiLGlEQUFVQSxDQUFDYSxRQUFRLE9BQU87SUFDMUIsT0FBT0E7QUFDWDtBQUNPLFNBQVNFLHdCQUF3QkwsT0FBTztJQUMzQyxJQUFJLENBQUNILGdFQUFtQkEsQ0FBQ0csUUFBUUMsTUFBTSxHQUFHO1FBQ3RDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ0osZ0VBQW1CQSxDQUFDRSxRQUFRRyxNQUFNLEdBQUc7UUFDdEMsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsU0FBU0gsUUFBUUcsTUFBTTtJQUM3QmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkIsT0FBT0E7QUFDWDtBQUNPLFNBQVNHLHlCQUF5Qk4sT0FBTztJQUM1QyxJQUFJLENBQUNMLGlFQUFvQkEsQ0FBQ0ssUUFBUUMsTUFBTSxHQUFHO1FBQ3ZDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ04saUVBQW9CQSxDQUFDSSxRQUFRRyxNQUFNLEdBQUc7UUFDdkMsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsU0FBU0gsUUFBUUcsTUFBTTtJQUM3QmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkJiLGlEQUFVQSxDQUFDYSxRQUFRO0lBQ25CLE9BQU9BO0FBQ1gsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hcGkvZGlzdC9lc20vcGFyc2Vycy5qcz9lZTRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFR5cGUgfSBmcm9tIFwiLi9taXNjXCI7XG5pbXBvcnQgeyBpc1B1Ymxpc2hNZXRob2QsIGlzUHVibGlzaFBhcmFtcywgaXNTdWJzY3JpYmVNZXRob2QsIGlzU3Vic2NyaWJlUGFyYW1zLCBpc1N1YnNjcmlwdGlvbk1ldGhvZCwgaXNTdWJzY3JpcHRpb25QYXJhbXMsIGlzVW5zdWJzY3JpYmVNZXRob2QsIGlzVW5zdWJzY3JpYmVQYXJhbXMsIH0gZnJvbSBcIi4vdmFsaWRhdG9yc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU3Vic2NyaWJlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgaWYgKCFpc1N1YnNjcmliZU1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSlNPTi1SUEMgUmVxdWVzdCBoYXMgaW52YWxpZCBzdWJzY3JpYmUgbWV0aG9kXCIpO1xuICAgIH1cbiAgICBpZiAoIWlzU3Vic2NyaWJlUGFyYW1zKHJlcXVlc3QucGFyYW1zKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKU09OLVJQQyBSZXF1ZXN0IGhhcyBpbnZhbGlkIHN1YnNjcmliZSBwYXJhbXNcIik7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHJlcXVlc3QucGFyYW1zO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcInRvcGljXCIpO1xuICAgIHJldHVybiBwYXJhbXM7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQdWJsaXNoUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgaWYgKCFpc1B1Ymxpc2hNZXRob2QocmVxdWVzdC5tZXRob2QpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgcHVibGlzaCBtZXRob2RcIik7XG4gICAgfVxuICAgIGlmICghaXNQdWJsaXNoUGFyYW1zKHJlcXVlc3QucGFyYW1zKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKU09OLVJQQyBSZXF1ZXN0IGhhcyBpbnZhbGlkIHB1Ymxpc2ggcGFyYW1zXCIpO1xuICAgIH1cbiAgICBjb25zdCBwYXJhbXMgPSByZXF1ZXN0LnBhcmFtcztcbiAgICBhc3NlcnRUeXBlKHBhcmFtcywgXCJ0b3BpY1wiKTtcbiAgICBhc3NlcnRUeXBlKHBhcmFtcywgXCJtZXNzYWdlXCIpO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcInR0bFwiLCBcIm51bWJlclwiKTtcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVW5zdWJzY3JpYmVSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBpZiAoIWlzVW5zdWJzY3JpYmVNZXRob2QocmVxdWVzdC5tZXRob2QpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgdW5zdWJzY3JpYmUgbWV0aG9kXCIpO1xuICAgIH1cbiAgICBpZiAoIWlzVW5zdWJzY3JpYmVQYXJhbXMocmVxdWVzdC5wYXJhbXMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgdW5zdWJzY3JpYmUgcGFyYW1zXCIpO1xuICAgIH1cbiAgICBjb25zdCBwYXJhbXMgPSByZXF1ZXN0LnBhcmFtcztcbiAgICBhc3NlcnRUeXBlKHBhcmFtcywgXCJpZFwiKTtcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU3Vic2NyaXB0aW9uUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgaWYgKCFpc1N1YnNjcmlwdGlvbk1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSlNPTi1SUEMgUmVxdWVzdCBoYXMgaW52YWxpZCBzdWJzY3JpcHRpb24gbWV0aG9kXCIpO1xuICAgIH1cbiAgICBpZiAoIWlzU3Vic2NyaXB0aW9uUGFyYW1zKHJlcXVlc3QucGFyYW1zKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKU09OLVJQQyBSZXF1ZXN0IGhhcyBpbnZhbGlkIHN1YnNjcmlwdGlvbiBwYXJhbXNcIik7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHJlcXVlc3QucGFyYW1zO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcImlkXCIpO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcImRhdGFcIik7XG4gICAgcmV0dXJuIHBhcmFtcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlcnMuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydFR5cGUiLCJpc1B1Ymxpc2hNZXRob2QiLCJpc1B1Ymxpc2hQYXJhbXMiLCJpc1N1YnNjcmliZU1ldGhvZCIsImlzU3Vic2NyaWJlUGFyYW1zIiwiaXNTdWJzY3JpcHRpb25NZXRob2QiLCJpc1N1YnNjcmlwdGlvblBhcmFtcyIsImlzVW5zdWJzY3JpYmVNZXRob2QiLCJpc1Vuc3Vic2NyaWJlUGFyYW1zIiwicGFyc2VTdWJzY3JpYmVSZXF1ZXN0IiwicmVxdWVzdCIsIm1ldGhvZCIsIkVycm9yIiwicGFyYW1zIiwicGFyc2VQdWJsaXNoUmVxdWVzdCIsInBhcnNlVW5zdWJzY3JpYmVSZXF1ZXN0IiwicGFyc2VTdWJzY3JpcHRpb25SZXF1ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/parsers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/types.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/types.js ***!
  \******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hcGkvZGlzdC9lc20vdHlwZXMuanM/NzcyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDIiwiZmlsZSI6Iihzc3IpLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hcGkvZGlzdC9lc20vdHlwZXMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/validators.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-api/dist/esm/validators.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPublishMethod: () => (/* binding */ isPublishMethod),\n/* harmony export */   isPublishParams: () => (/* binding */ isPublishParams),\n/* harmony export */   isPublishRequest: () => (/* binding */ isPublishRequest),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ isSubscribeMethod),\n/* harmony export */   isSubscribeParams: () => (/* binding */ isSubscribeParams),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ isSubscribeRequest),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ isSubscriptionMethod),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ isSubscriptionParams),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ isSubscriptionRequest),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ isUnsubscribeMethod),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ isUnsubscribeParams),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ isUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/misc.js\");\n\nfunction isSubscribeRequest(request) {\n    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nfunction isSubscribeMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"subscribe\");\n}\nfunction isSubscribeParams(params) {\n    const required = [\n        \"topic\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isPublishRequest(request) {\n    return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nfunction isPublishMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"publish\");\n}\nfunction isPublishParams(params) {\n    const required = [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ];\n    const optional = [\n        \"prompt\",\n        \"tag\"\n    ];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isUnsubscribeRequest(request) {\n    return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\nfunction isUnsubscribeMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"unsubscribe\");\n}\nfunction isUnsubscribeParams(params) {\n    const required = [\n        \"id\",\n        \"topic\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isSubscriptionRequest(request) {\n    return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\nfunction isSubscriptionMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"subscription\");\n}\nfunction isSubscriptionParams(params) {\n    const required = [\n        \"id\",\n        \"data\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDOUMsU0FBU0UsbUJBQW1CQyxPQUFPO0lBQ3RDLE9BQU9DLGtCQUFrQkQsUUFBUUUsTUFBTSxLQUFLQyxrQkFBa0JILFFBQVFJLE1BQU07QUFDaEY7QUFDTyxTQUFTSCxrQkFBa0JDLE1BQU07SUFDcEMsT0FBT0oscURBQWNBLENBQUNJLFFBQVE7QUFDbEM7QUFDTyxTQUFTQyxrQkFBa0JDLE1BQU07SUFDcEMsTUFBTUMsV0FBVztRQUFDO0tBQVE7SUFDMUIsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNDLGlCQUFpQlAsT0FBTztJQUNwQyxPQUFPUSxnQkFBZ0JSLFFBQVFFLE1BQU0sS0FBS08sZ0JBQWdCVCxRQUFRSSxNQUFNO0FBQzVFO0FBQ08sU0FBU0ksZ0JBQWdCTixNQUFNO0lBQ2xDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU08sZ0JBQWdCTCxNQUFNO0lBQ2xDLE1BQU1DLFdBQVc7UUFBQztRQUFXO1FBQVM7S0FBTTtJQUM1QyxNQUFNQyxXQUFXO1FBQUM7UUFBVTtLQUFNO0lBQ2xDLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNJLHFCQUFxQlYsT0FBTztJQUN4QyxPQUFRVyxvQkFBb0JYLFFBQVFFLE1BQU0sS0FBS1Usb0JBQW9CWixRQUFRSSxNQUFNO0FBQ3JGO0FBQ08sU0FBU08sb0JBQW9CVCxNQUFNO0lBQ3RDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU1Usb0JBQW9CUixNQUFNO0lBQ3RDLE1BQU1DLFdBQVc7UUFBQztRQUFNO0tBQVE7SUFDaEMsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNPLHNCQUFzQmIsT0FBTztJQUN6QyxPQUFRYyxxQkFBcUJkLFFBQVFFLE1BQU0sS0FBS2EscUJBQXFCZixRQUFRSSxNQUFNO0FBQ3ZGO0FBQ08sU0FBU1UscUJBQXFCWixNQUFNO0lBQ3ZDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU2EscUJBQXFCWCxNQUFNO0lBQ3ZDLE1BQU1DLFdBQVc7UUFBQztRQUFNO0tBQU87SUFDL0IsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QyxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS92YWxpZGF0b3JzLmpzPzBjZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hlY2tQYXJhbXMsIG1ldGhvZEVuZHNXaXRoIH0gZnJvbSBcIi4vbWlzY1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NyaWJlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGlzU3Vic2NyaWJlTWV0aG9kKHJlcXVlc3QubWV0aG9kKSAmJiBpc1N1YnNjcmliZVBhcmFtcyhyZXF1ZXN0LnBhcmFtcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY3JpYmVNZXRob2QobWV0aG9kKSB7XG4gICAgcmV0dXJuIG1ldGhvZEVuZHNXaXRoKG1ldGhvZCwgXCJzdWJzY3JpYmVcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY3JpYmVQYXJhbXMocGFyYW1zKSB7XG4gICAgY29uc3QgcmVxdWlyZWQgPSBbXCJ0b3BpY1wiXTtcbiAgICBjb25zdCBvcHRpb25hbCA9IFtdO1xuICAgIHJldHVybiBjaGVja1BhcmFtcyhwYXJhbXMsIHJlcXVpcmVkLCBvcHRpb25hbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQdWJsaXNoUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGlzUHVibGlzaE1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkgJiYgaXNQdWJsaXNoUGFyYW1zKHJlcXVlc3QucGFyYW1zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1B1Ymxpc2hNZXRob2QobWV0aG9kKSB7XG4gICAgcmV0dXJuIG1ldGhvZEVuZHNXaXRoKG1ldGhvZCwgXCJwdWJsaXNoXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHVibGlzaFBhcmFtcyhwYXJhbXMpIHtcbiAgICBjb25zdCByZXF1aXJlZCA9IFtcIm1lc3NhZ2VcIiwgXCJ0b3BpY1wiLCBcInR0bFwiXTtcbiAgICBjb25zdCBvcHRpb25hbCA9IFtcInByb21wdFwiLCBcInRhZ1wiXTtcbiAgICByZXR1cm4gY2hlY2tQYXJhbXMocGFyYW1zLCByZXF1aXJlZCwgb3B0aW9uYWwpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVW5zdWJzY3JpYmVSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gKGlzVW5zdWJzY3JpYmVNZXRob2QocmVxdWVzdC5tZXRob2QpICYmIGlzVW5zdWJzY3JpYmVQYXJhbXMocmVxdWVzdC5wYXJhbXMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Vuc3Vic2NyaWJlTWV0aG9kKG1ldGhvZCkge1xuICAgIHJldHVybiBtZXRob2RFbmRzV2l0aChtZXRob2QsIFwidW5zdWJzY3JpYmVcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNVbnN1YnNjcmliZVBhcmFtcyhwYXJhbXMpIHtcbiAgICBjb25zdCByZXF1aXJlZCA9IFtcImlkXCIsIFwidG9waWNcIl07XG4gICAgY29uc3Qgb3B0aW9uYWwgPSBbXTtcbiAgICByZXR1cm4gY2hlY2tQYXJhbXMocGFyYW1zLCByZXF1aXJlZCwgb3B0aW9uYWwpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NyaXB0aW9uUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIChpc1N1YnNjcmlwdGlvbk1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkgJiYgaXNTdWJzY3JpcHRpb25QYXJhbXMocmVxdWVzdC5wYXJhbXMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N1YnNjcmlwdGlvbk1ldGhvZChtZXRob2QpIHtcbiAgICByZXR1cm4gbWV0aG9kRW5kc1dpdGgobWV0aG9kLCBcInN1YnNjcmlwdGlvblwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N1YnNjcmlwdGlvblBhcmFtcyhwYXJhbXMpIHtcbiAgICBjb25zdCByZXF1aXJlZCA9IFtcImlkXCIsIFwiZGF0YVwiXTtcbiAgICBjb25zdCBvcHRpb25hbCA9IFtdO1xuICAgIHJldHVybiBjaGVja1BhcmFtcyhwYXJhbXMsIHJlcXVpcmVkLCBvcHRpb25hbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJjaGVja1BhcmFtcyIsIm1ldGhvZEVuZHNXaXRoIiwiaXNTdWJzY3JpYmVSZXF1ZXN0IiwicmVxdWVzdCIsImlzU3Vic2NyaWJlTWV0aG9kIiwibWV0aG9kIiwiaXNTdWJzY3JpYmVQYXJhbXMiLCJwYXJhbXMiLCJyZXF1aXJlZCIsIm9wdGlvbmFsIiwiaXNQdWJsaXNoUmVxdWVzdCIsImlzUHVibGlzaE1ldGhvZCIsImlzUHVibGlzaFBhcmFtcyIsImlzVW5zdWJzY3JpYmVSZXF1ZXN0IiwiaXNVbnN1YnNjcmliZU1ldGhvZCIsImlzVW5zdWJzY3JpYmVQYXJhbXMiLCJpc1N1YnNjcmlwdGlvblJlcXVlc3QiLCJpc1N1YnNjcmlwdGlvbk1ldGhvZCIsImlzU3Vic2NyaXB0aW9uUGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/../node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4QztBQUNFO0FBQ007QUFDZ0M7QUFDSjtBQUMzRSxTQUFTVyxnQkFBZ0JDLE9BQU9YLDhEQUFXQSxDQUFDSSw0REFBb0JBLENBQUM7SUFDcEUsT0FBT0wsdUVBQStCLENBQUNZO0FBQzNDO0FBQ08sZUFBZUUsUUFBUUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxNQUFNakIsb0VBQWVBLENBQUNrQixLQUFLQyxHQUFHLEdBQUc7SUFDbkYsTUFBTUMsU0FBUztRQUFFQyxLQUFLcEIsdURBQWVBO1FBQUVxQixLQUFLcEIsdURBQWVBO0lBQUM7SUFDNUQsTUFBTXFCLE1BQU1oQixpREFBU0EsQ0FBQ1MsUUFBUVEsU0FBUztJQUN2QyxNQUFNQyxNQUFNUixNQUFNRjtJQUNsQixNQUFNVyxVQUFVO1FBQUVIO1FBQUtWO1FBQUtDO1FBQUtHO1FBQUtRO0lBQUk7SUFDMUMsTUFBTUUsT0FBT3JCLGtEQUFVQSxDQUFDO1FBQUVjO1FBQVFNO0lBQVE7SUFDMUMsTUFBTUUsWUFBWTlCLG9EQUFZLENBQUNrQixRQUFRYyxTQUFTLEVBQUVIO0lBQ2xELE9BQU9uQixpREFBU0EsQ0FBQztRQUFFWTtRQUFRTTtRQUFTRTtJQUFVO0FBQ2xEO0FBQ08sZUFBZUcsVUFBVUMsR0FBRztJQUMvQixNQUFNLEVBQUVaLE1BQU0sRUFBRU0sT0FBTyxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRSxHQUFHdkIsaURBQVNBLENBQUMyQjtJQUN2RCxJQUFJWixPQUFPQyxHQUFHLEtBQUtwQix1REFBZUEsSUFBSW1CLE9BQU9FLEdBQUcsS0FBS3BCLHVEQUFlQSxFQUFFO1FBQ2xFLE1BQU0sSUFBSStCLE1BQU07SUFDcEI7SUFDQSxNQUFNVCxZQUFZcEIsaURBQVNBLENBQUNzQixRQUFRSCxHQUFHO0lBQ3ZDLE9BQU96QixzREFBYyxDQUFDMEIsV0FBV0csTUFBTUM7QUFDM0MsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL2FwaS5qcz9iM2UwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVkMjU1MTkgZnJvbSBcIkBzdGFibGVsaWIvZWQyNTUxOVwiO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tIFwiQHN0YWJsZWxpYi9yYW5kb21cIjtcbmltcG9ydCB7IGZyb21NaWxpc2Vjb25kcyB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7XG5pbXBvcnQgeyBKV1RfSVJJRElVTV9BTEcsIEpXVF9JUklESVVNX1RZUCwgS0VZX1BBSVJfU0VFRF9MRU5HVEgsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBkZWNvZGVJc3MsIGRlY29kZUpXVCwgZW5jb2RlRGF0YSwgZW5jb2RlSXNzLCBlbmNvZGVKV1QsIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUtleVBhaXIoc2VlZCA9IHJhbmRvbUJ5dGVzKEtFWV9QQUlSX1NFRURfTEVOR1RIKSkge1xuICAgIHJldHVybiBlZDI1NTE5LmdlbmVyYXRlS2V5UGFpckZyb21TZWVkKHNlZWQpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25KV1Qoc3ViLCBhdWQsIHR0bCwga2V5UGFpciwgaWF0ID0gZnJvbU1pbGlzZWNvbmRzKERhdGUubm93KCkpKSB7XG4gICAgY29uc3QgaGVhZGVyID0geyBhbGc6IEpXVF9JUklESVVNX0FMRywgdHlwOiBKV1RfSVJJRElVTV9UWVAgfTtcbiAgICBjb25zdCBpc3MgPSBlbmNvZGVJc3Moa2V5UGFpci5wdWJsaWNLZXkpO1xuICAgIGNvbnN0IGV4cCA9IGlhdCArIHR0bDtcbiAgICBjb25zdCBwYXlsb2FkID0geyBpc3MsIHN1YiwgYXVkLCBpYXQsIGV4cCB9O1xuICAgIGNvbnN0IGRhdGEgPSBlbmNvZGVEYXRhKHsgaGVhZGVyLCBwYXlsb2FkIH0pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IGVkMjU1MTkuc2lnbihrZXlQYWlyLnNlY3JldEtleSwgZGF0YSk7XG4gICAgcmV0dXJuIGVuY29kZUpXVCh7IGhlYWRlciwgcGF5bG9hZCwgc2lnbmF0dXJlIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUpXVChqd3QpIHtcbiAgICBjb25zdCB7IGhlYWRlciwgcGF5bG9hZCwgZGF0YSwgc2lnbmF0dXJlIH0gPSBkZWNvZGVKV1Qoand0KTtcbiAgICBpZiAoaGVhZGVyLmFsZyAhPT0gSldUX0lSSURJVU1fQUxHIHx8IGhlYWRlci50eXAgIT09IEpXVF9JUklESVVNX1RZUCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKV1QgbXVzdCB1c2UgRWREU0EgYWxnb3JpdGhtXCIpO1xuICAgIH1cbiAgICBjb25zdCBwdWJsaWNLZXkgPSBkZWNvZGVJc3MocGF5bG9hZC5pc3MpO1xuICAgIHJldHVybiBlZDI1NTE5LnZlcmlmeShwdWJsaWNLZXksIGRhdGEsIHNpZ25hdHVyZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbImVkMjU1MTkiLCJyYW5kb21CeXRlcyIsImZyb21NaWxpc2Vjb25kcyIsIkpXVF9JUklESVVNX0FMRyIsIkpXVF9JUklESVVNX1RZUCIsIktFWV9QQUlSX1NFRURfTEVOR1RIIiwiZGVjb2RlSXNzIiwiZGVjb2RlSldUIiwiZW5jb2RlRGF0YSIsImVuY29kZUlzcyIsImVuY29kZUpXVCIsImdlbmVyYXRlS2V5UGFpciIsInNlZWQiLCJnZW5lcmF0ZUtleVBhaXJGcm9tU2VlZCIsInNpZ25KV1QiLCJzdWIiLCJhdWQiLCJ0dGwiLCJrZXlQYWlyIiwiaWF0IiwiRGF0ZSIsIm5vdyIsImhlYWRlciIsImFsZyIsInR5cCIsImlzcyIsInB1YmxpY0tleSIsImV4cCIsInBheWxvYWQiLCJkYXRhIiwic2lnbmF0dXJlIiwic2lnbiIsInNlY3JldEtleSIsInZlcmlmeUpXVCIsImp3dCIsIkVycm9yIiwidmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sTUFBTUEsa0JBQWtCLFFBQVE7QUFDaEMsTUFBTUMsa0JBQWtCLE1BQU07QUFDOUIsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsZUFBZSxZQUFZO0FBQ2pDLE1BQU1DLGdCQUFnQixPQUFPO0FBQzdCLE1BQU1DLGdCQUFnQixPQUFPO0FBQzdCLE1BQU1DLGdCQUFnQixJQUFJO0FBQzFCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyxhQUFhLE1BQU07QUFDekIsTUFBTUMsOEJBQThCLFlBQVk7QUFDaEQsTUFBTUMsMEJBQTBCLElBQUk7QUFDcEMsTUFBTUMsNEJBQTRCLE1BQU07QUFDeEMsTUFBTUMsNEJBQTRCLEdBQUc7QUFDckMsTUFBTUMsdUJBQXVCLEdBQUcsQ0FDdkMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanM/YmQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSldUX0lSSURJVU1fQUxHID0gXCJFZERTQVwiO1xuZXhwb3J0IGNvbnN0IEpXVF9JUklESVVNX1RZUCA9IFwiSldUXCI7XG5leHBvcnQgY29uc3QgSldUX0RFTElNSVRFUiA9IFwiLlwiO1xuZXhwb3J0IGNvbnN0IEpXVF9FTkNPRElORyA9IFwiYmFzZTY0dXJsXCI7XG5leHBvcnQgY29uc3QgSlNPTl9FTkNPRElORyA9IFwidXRmOFwiO1xuZXhwb3J0IGNvbnN0IERBVEFfRU5DT0RJTkcgPSBcInV0ZjhcIjtcbmV4cG9ydCBjb25zdCBESURfREVMSU1JVEVSID0gXCI6XCI7XG5leHBvcnQgY29uc3QgRElEX1BSRUZJWCA9IFwiZGlkXCI7XG5leHBvcnQgY29uc3QgRElEX01FVEhPRCA9IFwia2V5XCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HID0gXCJiYXNlNThidGNcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSA9IFwielwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIgPSBcIkszNlwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9MRU5HVEggPSAzMjtcbmV4cG9ydCBjb25zdCBLRVlfUEFJUl9TRUVEX0xFTkdUSCA9IDMyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJKV1RfSVJJRElVTV9BTEciLCJKV1RfSVJJRElVTV9UWVAiLCJKV1RfREVMSU1JVEVSIiwiSldUX0VOQ09ESU5HIiwiSlNPTl9FTkNPRElORyIsIkRBVEFfRU5DT0RJTkciLCJESURfREVMSU1JVEVSIiwiRElEX1BSRUZJWCIsIkRJRF9NRVRIT0QiLCJNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkciLCJNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSIsIk1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIiLCJNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIIiwiS0VZX1BBSVJfU0VFRF9MRU5HVEgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0I7QUFDTTtBQUNKO0FBQ0EsQ0FDeEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcz9mOWNkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2FwaVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \*******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL3R5cGVzLmpzP2NiOTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlDQUFpQyIsImZpbGUiOiIoc3NyKS8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS90eXBlcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/../node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/../node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/../node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ0s7QUFDSTtBQUN1QjtBQUNnSztBQUNyTyxTQUFTZ0IsV0FBV0MsR0FBRztJQUMxQixPQUFPZCx1RUFBYUEsQ0FBQ0YsK0RBQVFBLENBQUNDLG1FQUFVQSxDQUFDZSxLQUFLTixvREFBWUEsR0FBR0YscURBQWFBO0FBQzlFO0FBQ08sU0FBU1MsV0FBV0MsR0FBRztJQUMxQixPQUFPbEIsK0RBQVFBLENBQUNDLG1FQUFVQSxDQUFDRSwyRUFBaUJBLENBQUNlLE1BQU1WLHFEQUFhQSxHQUFHRSxvREFBWUE7QUFDbkY7QUFDTyxTQUFTUyxVQUFVQyxTQUFTO0lBQy9CLE1BQU1DLFNBQVNwQixtRUFBVUEsQ0FBQ1ksaUVBQXlCQSxFQUFFRCxtRUFBMkJBO0lBQ2hGLE1BQU1VLGFBQWFYLCtEQUF1QkEsR0FDdENYLCtEQUFRQSxDQUFDRCwwREFBTUEsQ0FBQztRQUFDc0I7UUFBUUQ7S0FBVSxHQUFHUixtRUFBMkJBO0lBQ3JFLE9BQU87UUFBQ0wsa0RBQVVBO1FBQUVELGtEQUFVQTtRQUFFZ0I7S0FBVyxDQUFDQyxJQUFJLENBQUNsQixxREFBYUE7QUFDbEU7QUFDTyxTQUFTbUIsVUFBVUMsTUFBTTtJQUM1QixNQUFNLENBQUNDLFFBQVFDLFFBQVFMLFdBQVcsR0FBR0csT0FBT0csS0FBSyxDQUFDdkIscURBQWFBO0lBQy9ELElBQUlxQixXQUFXbkIsa0RBQVVBLElBQUlvQixXQUFXckIsa0RBQVVBLEVBQUU7UUFDaEQsTUFBTSxJQUFJdUIsTUFBTSxDQUFDLHNDQUFzQyxDQUFDO0lBQzVEO0lBQ0EsTUFBTUMsT0FBT1IsV0FBV1MsS0FBSyxDQUFDLEdBQUc7SUFDakMsSUFBSUQsU0FBU25CLCtEQUF1QkEsRUFBRTtRQUNsQyxNQUFNLElBQUlrQixNQUFNLENBQUMsd0NBQXdDLENBQUM7SUFDOUQ7SUFDQSxNQUFNRyxRQUFRL0IsbUVBQVVBLENBQUNxQixXQUFXUyxLQUFLLENBQUMsSUFBSW5CLG1FQUEyQkE7SUFDekUsTUFBTXFCLE9BQU9qQywrREFBUUEsQ0FBQ2dDLE1BQU1ELEtBQUssQ0FBQyxHQUFHLElBQUluQixtRUFBMkJBO0lBQ3BFLElBQUlxQixTQUFTcEIsaUVBQXlCQSxFQUFFO1FBQ3BDLE1BQU0sSUFBSWdCLE1BQU0sQ0FBQywrQ0FBK0MsQ0FBQztJQUNyRTtJQUNBLE1BQU1ULFlBQVlZLE1BQU1ELEtBQUssQ0FBQztJQUM5QixJQUFJWCxVQUFVYyxNQUFNLEtBQUtwQixpRUFBeUJBLEVBQUU7UUFDaEQsTUFBTSxJQUFJZSxNQUFNLENBQUMsZ0RBQWdELENBQUM7SUFDdEU7SUFDQSxPQUFPVDtBQUNYO0FBQ08sU0FBU2UsVUFBVUgsS0FBSztJQUMzQixPQUFPaEMsK0RBQVFBLENBQUNnQyxPQUFPdEIsb0RBQVlBO0FBQ3ZDO0FBQ08sU0FBUzBCLFVBQVVDLE9BQU87SUFDN0IsT0FBT3BDLG1FQUFVQSxDQUFDb0MsU0FBUzNCLG9EQUFZQTtBQUMzQztBQUNPLFNBQVM0QixXQUFXQyxNQUFNO0lBQzdCLE9BQU90QyxtRUFBVUEsQ0FBQztRQUFDZ0IsV0FBV3NCLE9BQU9sQixNQUFNO1FBQUdKLFdBQVdzQixPQUFPQyxPQUFPO0tBQUUsQ0FBQ2pCLElBQUksQ0FBQ2QscURBQWFBLEdBQUdMLHFEQUFhQTtBQUNoSDtBQUNPLFNBQVNxQyxXQUFXQyxJQUFJO0lBQzNCLE1BQU1ILFNBQVN2QywrREFBUUEsQ0FBQzBDLE1BQU10QyxxREFBYUEsRUFBRXdCLEtBQUssQ0FBQ25CLHFEQUFhQTtJQUNoRSxNQUFNWSxTQUFTTixXQUFXd0IsTUFBTSxDQUFDLEVBQUU7SUFDbkMsTUFBTUMsVUFBVXpCLFdBQVd3QixNQUFNLENBQUMsRUFBRTtJQUNwQyxPQUFPO1FBQUVsQjtRQUFRbUI7SUFBUTtBQUM3QjtBQUNPLFNBQVNHLFVBQVVKLE1BQU07SUFDNUIsT0FBTztRQUNIdEIsV0FBV3NCLE9BQU9sQixNQUFNO1FBQ3hCSixXQUFXc0IsT0FBT0MsT0FBTztRQUN6QkwsVUFBVUksT0FBT0ssU0FBUztLQUM3QixDQUFDckIsSUFBSSxDQUFDZCxxREFBYUE7QUFDeEI7QUFDTyxTQUFTb0MsVUFBVUMsR0FBRztJQUN6QixNQUFNUCxTQUFTTyxJQUFJbEIsS0FBSyxDQUFDbkIscURBQWFBO0lBQ3RDLE1BQU1ZLFNBQVNOLFdBQVd3QixNQUFNLENBQUMsRUFBRTtJQUNuQyxNQUFNQyxVQUFVekIsV0FBV3dCLE1BQU0sQ0FBQyxFQUFFO0lBQ3BDLE1BQU1LLFlBQVlSLFVBQVVHLE1BQU0sQ0FBQyxFQUFFO0lBQ3JDLE1BQU1HLE9BQU96QyxtRUFBVUEsQ0FBQ3NDLE9BQU9SLEtBQUssQ0FBQyxHQUFHLEdBQUdSLElBQUksQ0FBQ2QscURBQWFBLEdBQUdMLHFEQUFhQTtJQUM3RSxPQUFPO1FBQUVpQjtRQUFRbUI7UUFBU0k7UUFBV0Y7SUFBSztBQUM5QyxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdXRpbHMuanM/NGU1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25jYXQgfSBmcm9tIFwidWludDhhcnJheXMvY29uY2F0XCI7XG5pbXBvcnQgeyB0b1N0cmluZyB9IGZyb20gXCJ1aW50OGFycmF5cy90by1zdHJpbmdcIjtcbmltcG9ydCB7IGZyb21TdHJpbmcgfSBmcm9tIFwidWludDhhcnJheXMvZnJvbS1zdHJpbmdcIjtcbmltcG9ydCB7IHNhZmVKc29uUGFyc2UsIHNhZmVKc29uU3RyaW5naWZ5IH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L3NhZmUtanNvblwiO1xuaW1wb3J0IHsgREFUQV9FTkNPRElORywgRElEX0RFTElNSVRFUiwgRElEX01FVEhPRCwgRElEX1BSRUZJWCwgSlNPTl9FTkNPRElORywgSldUX0RFTElNSVRFUiwgSldUX0VOQ09ESU5HLCBNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSwgTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HLCBNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSLCBNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RILCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUpTT04oc3RyKSB7XG4gICAgcmV0dXJuIHNhZmVKc29uUGFyc2UodG9TdHJpbmcoZnJvbVN0cmluZyhzdHIsIEpXVF9FTkNPRElORyksIEpTT05fRU5DT0RJTkcpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVKU09OKHZhbCkge1xuICAgIHJldHVybiB0b1N0cmluZyhmcm9tU3RyaW5nKHNhZmVKc29uU3RyaW5naWZ5KHZhbCksIEpTT05fRU5DT0RJTkcpLCBKV1RfRU5DT0RJTkcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUlzcyhwdWJsaWNLZXkpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBmcm9tU3RyaW5nKE1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIsIE1VTFRJQ09ERUNfRUQyNTUxOV9FTkNPRElORyk7XG4gICAgY29uc3QgbXVsdGljb2RlYyA9IE1VTFRJQ09ERUNfRUQyNTUxOV9CQVNFICtcbiAgICAgICAgdG9TdHJpbmcoY29uY2F0KFtoZWFkZXIsIHB1YmxpY0tleV0pLCBNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkcpO1xuICAgIHJldHVybiBbRElEX1BSRUZJWCwgRElEX01FVEhPRCwgbXVsdGljb2RlY10uam9pbihESURfREVMSU1JVEVSKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVJc3MoaXNzdWVyKSB7XG4gICAgY29uc3QgW3ByZWZpeCwgbWV0aG9kLCBtdWx0aWNvZGVjXSA9IGlzc3Vlci5zcGxpdChESURfREVMSU1JVEVSKTtcbiAgICBpZiAocHJlZml4ICE9PSBESURfUFJFRklYIHx8IG1ldGhvZCAhPT0gRElEX01FVEhPRCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYElzc3VlciBtdXN0IGJlIGEgRElEIHdpdGggbWV0aG9kIFwia2V5XCJgKTtcbiAgICB9XG4gICAgY29uc3QgYmFzZSA9IG11bHRpY29kZWMuc2xpY2UoMCwgMSk7XG4gICAgaWYgKGJhc2UgIT09IE1VTFRJQ09ERUNfRUQyNTUxOV9CQVNFKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSXNzdWVyIG11c3QgYmUgYSBrZXkgaW4gbXVsaWNvZGVjIGZvcm1hdGApO1xuICAgIH1cbiAgICBjb25zdCBieXRlcyA9IGZyb21TdHJpbmcobXVsdGljb2RlYy5zbGljZSgxKSwgTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HKTtcbiAgICBjb25zdCB0eXBlID0gdG9TdHJpbmcoYnl0ZXMuc2xpY2UoMCwgMiksIE1VTFRJQ09ERUNfRUQyNTUxOV9FTkNPRElORyk7XG4gICAgaWYgKHR5cGUgIT09IE1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJc3N1ZXIgbXVzdCBiZSBhIHB1YmxpYyBrZXkgd2l0aCB0eXBlIFwiRWQyNTUxOVwiYCk7XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IGJ5dGVzLnNsaWNlKDIpO1xuICAgIGlmIChwdWJsaWNLZXkubGVuZ3RoICE9PSBNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSXNzdWVyIG11c3QgYmUgYSBwdWJsaWMga2V5IHdpdGggbGVuZ3RoIDMyIGJ5dGVzYCk7XG4gICAgfVxuICAgIHJldHVybiBwdWJsaWNLZXk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlU2lnKGJ5dGVzKSB7XG4gICAgcmV0dXJuIHRvU3RyaW5nKGJ5dGVzLCBKV1RfRU5DT0RJTkcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVNpZyhlbmNvZGVkKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcoZW5jb2RlZCwgSldUX0VOQ09ESU5HKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVEYXRhKHBhcmFtcykge1xuICAgIHJldHVybiBmcm9tU3RyaW5nKFtlbmNvZGVKU09OKHBhcmFtcy5oZWFkZXIpLCBlbmNvZGVKU09OKHBhcmFtcy5wYXlsb2FkKV0uam9pbihKV1RfREVMSU1JVEVSKSwgREFUQV9FTkNPRElORyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlRGF0YShkYXRhKSB7XG4gICAgY29uc3QgcGFyYW1zID0gdG9TdHJpbmcoZGF0YSwgREFUQV9FTkNPRElORykuc3BsaXQoSldUX0RFTElNSVRFUik7XG4gICAgY29uc3QgaGVhZGVyID0gZGVjb2RlSlNPTihwYXJhbXNbMF0pO1xuICAgIGNvbnN0IHBheWxvYWQgPSBkZWNvZGVKU09OKHBhcmFtc1sxXSk7XG4gICAgcmV0dXJuIHsgaGVhZGVyLCBwYXlsb2FkIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlSldUKHBhcmFtcykge1xuICAgIHJldHVybiBbXG4gICAgICAgIGVuY29kZUpTT04ocGFyYW1zLmhlYWRlciksXG4gICAgICAgIGVuY29kZUpTT04ocGFyYW1zLnBheWxvYWQpLFxuICAgICAgICBlbmNvZGVTaWcocGFyYW1zLnNpZ25hdHVyZSksXG4gICAgXS5qb2luKEpXVF9ERUxJTUlURVIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUpXVChqd3QpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBqd3Quc3BsaXQoSldUX0RFTElNSVRFUik7XG4gICAgY29uc3QgaGVhZGVyID0gZGVjb2RlSlNPTihwYXJhbXNbMF0pO1xuICAgIGNvbnN0IHBheWxvYWQgPSBkZWNvZGVKU09OKHBhcmFtc1sxXSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gZGVjb2RlU2lnKHBhcmFtc1syXSk7XG4gICAgY29uc3QgZGF0YSA9IGZyb21TdHJpbmcocGFyYW1zLnNsaWNlKDAsIDIpLmpvaW4oSldUX0RFTElNSVRFUiksIERBVEFfRU5DT0RJTkcpO1xuICAgIHJldHVybiB7IGhlYWRlciwgcGF5bG9hZCwgc2lnbmF0dXJlLCBkYXRhIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiY29uY2F0IiwidG9TdHJpbmciLCJmcm9tU3RyaW5nIiwic2FmZUpzb25QYXJzZSIsInNhZmVKc29uU3RyaW5naWZ5IiwiREFUQV9FTkNPRElORyIsIkRJRF9ERUxJTUlURVIiLCJESURfTUVUSE9EIiwiRElEX1BSRUZJWCIsIkpTT05fRU5DT0RJTkciLCJKV1RfREVMSU1JVEVSIiwiSldUX0VOQ09ESU5HIiwiTVVMVElDT0RFQ19FRDI1NTE5X0JBU0UiLCJNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkciLCJNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSIiwiTVVMVElDT0RFQ19FRDI1NTE5X0xFTkdUSCIsImRlY29kZUpTT04iLCJzdHIiLCJlbmNvZGVKU09OIiwidmFsIiwiZW5jb2RlSXNzIiwicHVibGljS2V5IiwiaGVhZGVyIiwibXVsdGljb2RlYyIsImpvaW4iLCJkZWNvZGVJc3MiLCJpc3N1ZXIiLCJwcmVmaXgiLCJtZXRob2QiLCJzcGxpdCIsIkVycm9yIiwiYmFzZSIsInNsaWNlIiwiYnl0ZXMiLCJ0eXBlIiwibGVuZ3RoIiwiZW5jb2RlU2lnIiwiZGVjb2RlU2lnIiwiZW5jb2RlZCIsImVuY29kZURhdGEiLCJwYXJhbXMiLCJwYXlsb2FkIiwiZGVjb2RlRGF0YSIsImRhdGEiLCJlbmNvZGVKV1QiLCJzaWduYXR1cmUiLCJkZWNvZGVKV1QiLCJqd3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3NhZmUtanNvbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLGdCQUFnQkMsQ0FBQUEsT0FBUUMsS0FBS0MsU0FBUyxDQUFDRixNQUFNLENBQUNHLEdBQUdDLFFBQVUsT0FBT0EsVUFBVSxXQUFXQSxNQUFNQyxRQUFRLEtBQUssTUFBTUQ7QUFDdEgsTUFBTUUsWUFBWUMsQ0FBQUE7SUFDZCxNQUFNQywwQkFBMEI7SUFDaEMsTUFBTUMsaUJBQWlCRixLQUFLRyxPQUFPLENBQUNGLHlCQUF5QjtJQUM3RCxPQUFPUCxLQUFLVSxLQUFLLENBQUNGLGdCQUFnQixDQUFDTixHQUFHQztRQUNsQyxNQUFNUSx1QkFBdUIsT0FBT1IsVUFBVSxZQUFZQSxNQUFNUyxLQUFLLENBQUM7UUFDdEUsSUFBSUQsc0JBQ0EsT0FBT0UsT0FBT1YsTUFBTVcsU0FBUyxDQUFDLEdBQUdYLE1BQU1ZLE1BQU0sR0FBRztRQUNwRCxPQUFPWjtJQUNYO0FBQ0o7QUFDTyxTQUFTYSxjQUFjYixLQUFLO0lBQy9CLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQzNCLE1BQU0sSUFBSWMsTUFBTSxDQUFDLHFDQUFxQyxFQUFFLE9BQU9kLE1BQU0sQ0FBQztJQUMxRTtJQUNBLElBQUk7UUFDQSxPQUFPRSxVQUFVRjtJQUNyQixFQUNBLE9BQU9lLElBQUk7UUFDUCxPQUFPZjtJQUNYO0FBQ0o7QUFDTyxTQUFTZ0Isa0JBQWtCaEIsS0FBSztJQUNuQyxPQUFPLE9BQU9BLFVBQVUsV0FBV0EsUUFBUUwsY0FBY0ssVUFBVTtBQUN2RSxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3NhZmUtanNvbi9kaXN0L2VzbS9pbmRleC5qcz9mNmE0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpTT05TdHJpbmdpZnkgPSBkYXRhID0+IEpTT04uc3RyaW5naWZ5KGRhdGEsIChfLCB2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiID8gdmFsdWUudG9TdHJpbmcoKSArIFwiblwiIDogdmFsdWUpO1xuY29uc3QgSlNPTlBhcnNlID0ganNvbiA9PiB7XG4gICAgY29uc3QgbnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQgPSAvKFtcXFs6XSk/KFxcZHsxNyx9fCg/Ols5XSg/OlsxLTldMDcxOTkyNTQ3NDA5OTF8MFsxLTldNzE5OTI1NDc0MDk5MXwwMFs4LTldMTk5MjU0NzQwOTkxfDAwN1syLTldOTkyNTQ3NDA5OTF8MDA3MTk5WzMtOV01NDc0MDk5MXwwMDcxOTkyWzYtOV00NzQwOTkxfDAwNzE5OTI1WzUtOV03NDA5OTF8MDA3MTk5MjU0WzgtOV00MDk5MXwwMDcxOTkyNTQ3WzUtOV0wOTkxfDAwNzE5OTI1NDc0WzEtOV05OTF8MDA3MTk5MjU0NzQwOTlbMi05XSkpKShbLFxcfVxcXV0pL2c7XG4gICAgY29uc3Qgc2VyaWFsaXplZERhdGEgPSBqc29uLnJlcGxhY2UobnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQsIFwiJDFcXFwiJDJuXFxcIiQzXCIpO1xuICAgIHJldHVybiBKU09OLnBhcnNlKHNlcmlhbGl6ZWREYXRhLCAoXywgdmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgaXNDdXN0b21Gb3JtYXRCaWdJbnQgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUubWF0Y2goL15cXGQrbiQvKTtcbiAgICAgICAgaWYgKGlzQ3VzdG9tRm9ybWF0QmlnSW50KVxuICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCh2YWx1ZS5zdWJzdHJpbmcoMCwgdmFsdWUubGVuZ3RoIC0gMSkpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVKc29uUGFyc2UodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHNhZmUganNvbiBwYXJzZSB2YWx1ZSBvZiB0eXBlICR7dHlwZW9mIHZhbHVlfWApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTlBhcnNlKHZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2FmZUpzb25TdHJpbmdpZnkodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUgOiBKU09OU3RyaW5naWZ5KHZhbHVlKSB8fCBcIlwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkpTT05TdHJpbmdpZnkiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsIl8iLCJ2YWx1ZSIsInRvU3RyaW5nIiwiSlNPTlBhcnNlIiwianNvbiIsIm51bWJlcnNCaWdnZXJUaGFuTWF4SW50Iiwic2VyaWFsaXplZERhdGEiLCJyZXBsYWNlIiwicGFyc2UiLCJpc0N1c3RvbUZvcm1hdEJpZ0ludCIsIm1hdGNoIiwiQmlnSW50Iiwic3Vic3RyaW5nIiwibGVuZ3RoIiwic2FmZUpzb25QYXJzZSIsIkVycm9yIiwiX2EiLCJzYWZlSnNvblN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ ce),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ I),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ V),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ ts),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ ss),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ is),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ pe),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ ne),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ rs),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ oe),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ le),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ ae),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ A),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ U),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ H),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ M),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ Ze),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ X),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ es),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ G),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ F),\n/* harmony export */   SignClient: () => (/* binding */ gs),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ W),\n/* harmony export */   \"default\": () => (/* binding */ Q)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/../node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/../node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst X = \"wc\", F = 2, H = \"client\", G = `${X}@${F}:${H}:`, M = {\n    name: H,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.com\"\n}, Ze = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\"\n}, es = {\n    database: \":memory:\"\n}, W = \"WALLETCONNECT_DEEPLINK_CHOICE\", ss = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, ts = \"history\", is = \"0.3\", ne = \"proposal\", rs = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, oe = \"Proposal expired\", ae = \"session\", A = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, ce = \"engine\", V = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1115\n        }\n    }\n}, U = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, I = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, le = \"request\", pe = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\"\n];\nvar ns = Object.defineProperty, os = Object.defineProperties, as = Object.getOwnPropertyDescriptors, he = Object.getOwnPropertySymbols, cs = Object.prototype.hasOwnProperty, ls = Object.prototype.propertyIsEnumerable, de = (m, r, e)=>r in m ? ns(m, r, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : m[r] = e, g = (m, r)=>{\n    for(var e in r || (r = {}))cs.call(r, e) && de(m, e, r[e]);\n    if (he) for (var e of he(r))ls.call(r, e) && de(m, e, r[e]);\n    return m;\n}, b = (m, r)=>os(m, as(r));\nclass ps extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(r){\n        super(r), this.name = ce, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1\n        ], this.requestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({\n                methods: Object.keys(V)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            await this.isInitialized();\n            const s = b(g({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(s);\n            const { pairingTopic: t, requiredNamespaces: i, optionalNamespaces: n, sessionProperties: o, relays: a } = s;\n            let c = t, p, d = !1;\n            if (c && (d = this.client.core.pairing.pairings.get(c).active), !c || !d) {\n                const { topic: v, uri: S } = await this.client.core.pairing.create();\n                c = v, p = S;\n            }\n            const h = await this.client.core.crypto.generateKeyPair(), R = g({\n                requiredNamespaces: i,\n                optionalNamespaces: n,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                }\n            }, o && {\n                sessionProperties: o\n            }), { reject: w, resolve: T, done: K } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, oe);\n            if (this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: v, session: S })=>{\n                if (v) w(v);\n                else if (S) {\n                    S.self.publicKey = h;\n                    const B = b(g({}, S), {\n                        requiredNamespaces: S.requiredNamespaces,\n                        optionalNamespaces: S.optionalNamespaces\n                    });\n                    await this.client.session.set(S.topic, B), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), T(B);\n                }\n            }), !c) {\n                const { message: v } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(v);\n            }\n            const L = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: R\n            }), ue = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES);\n            return await this.setProposal(L, g({\n                id: L,\n                expiry: ue\n            }, R)), {\n                uri: p,\n                approval: K\n            };\n        }, this.pair = async (e)=>(await this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e)=>{\n            await this.isInitialized(), await this.isValidApprove(e);\n            const { id: s, relayProtocol: t, namespaces: i, sessionProperties: n } = e, o = this.client.proposal.get(s);\n            let { pairingTopic: a, proposer: c, requiredNamespaces: p, optionalNamespaces: d } = o;\n            a = a || \"\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(p) || (p = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRequiredNamespacesFromNamespaces)(i, \"approve()\"));\n            const h = await this.client.core.crypto.generateKeyPair(), R = c.publicKey, w = await this.client.core.crypto.generateSharedKey(h, R);\n            a && s && (await this.client.core.pairing.updateMetadata({\n                topic: a,\n                metadata: c.metadata\n            }), await this.sendResult({\n                id: s,\n                topic: a,\n                result: {\n                    relay: {\n                        protocol: t ?? \"irn\"\n                    },\n                    responderPublicKey: h\n                }\n            }), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: a\n            }));\n            const T = g({\n                relay: {\n                    protocol: t ?? \"irn\"\n                },\n                namespaces: i,\n                requiredNamespaces: p,\n                optionalNamespaces: d,\n                pairingTopic: a,\n                controller: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)\n            }, n && {\n                sessionProperties: n\n            });\n            await this.client.core.relayer.subscribe(w), await this.sendRequest({\n                topic: w,\n                method: \"wc_sessionSettle\",\n                params: T,\n                throwOnFailedPublish: !0\n            });\n            const K = b(g({}, T), {\n                topic: w,\n                pairingTopic: a,\n                acknowledged: !1,\n                self: T.controller,\n                peer: {\n                    publicKey: c.publicKey,\n                    metadata: c.metadata\n                },\n                controller: h\n            });\n            return await this.client.session.set(w, K), await this.setExpiry(w, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                topic: w,\n                acknowledged: ()=>new Promise((L)=>setTimeout(()=>L(this.client.session.get(w)), 500))\n            };\n        }, this.reject = async (e)=>{\n            await this.isInitialized(), await this.isValidReject(e);\n            const { id: s, reason: t } = e, { pairingTopic: i } = this.client.proposal.get(s);\n            i && (await this.sendError(s, i, t), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            await this.isInitialized(), await this.isValidUpdate(e);\n            const { topic: s, namespaces: t } = e, i = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: t\n                }\n            }), { done: n, resolve: o, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", i), ({ error: c })=>{\n                c ? a(c) : o();\n            }), await this.client.session.update(s, {\n                namespaces: t\n            }), {\n                acknowledged: n\n            };\n        }, this.extend = async (e)=>{\n            await this.isInitialized(), await this.isValidExtend(e);\n            const { topic: s } = e, t = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionExtend\",\n                params: {}\n            }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), ({ error: a })=>{\n                a ? o(a) : n();\n            }), await this.setExpiry(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            await this.isInitialized(), await this.isValidRequest(e);\n            const { chainId: s, request: t, topic: i, expiry: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: a, resolve: c, reject: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(n, \"Request expired. Please try again.\");\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", o), ({ error: d, result: h })=>{\n                d ? p(d) : c(h);\n            }), await Promise.all([\n                new Promise(async (d)=>{\n                    await this.sendRequest({\n                        clientRpcId: o,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: t,\n                            chainId: s\n                        },\n                        expiry: n,\n                        throwOnFailedPublish: !0\n                    }).catch((h)=>p(h)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: t,\n                        chainId: s,\n                        id: o\n                    }), d();\n                }),\n                new Promise(async (d)=>{\n                    const h = await this.client.core.storage.getItem(W);\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                        id: o,\n                        topic: i,\n                        wcDeepLink: h\n                    }), d();\n                }),\n                a()\n            ]).then((d)=>d[2]);\n        }, this.respond = async (e)=>{\n            await this.isInitialized(), await this.isValidRespond(e);\n            const { topic: s, response: t } = e, { id: i } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? await this.sendResult({\n                id: i,\n                topic: s,\n                result: t.result,\n                throwOnFailedPublish: !0\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && await this.sendError(i, s, t.error), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            await this.isInitialized(), await this.isValidPing(e);\n            const { topic: s } = e;\n            if (this.client.session.keys.includes(s)) {\n                const t = await this.sendRequest({\n                    topic: s,\n                    method: \"wc_sessionPing\",\n                    params: {}\n                }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), ({ error: a })=>{\n                    a ? o(a) : n();\n                }), await i();\n            } else this.client.core.pairing.pairings.keys.includes(s) && await this.client.core.pairing.ping({\n                topic: s\n            });\n        }, this.emit = async (e)=>{\n            await this.isInitialized(), await this.isValidEmit(e);\n            const { topic: s, event: t, chainId: i } = e;\n            await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: t,\n                    chainId: i\n                }\n            });\n        }, this.disconnect = async (e)=>{\n            await this.isInitialized(), await this.isValidDisconnect(e);\n            const { topic: s } = e;\n            this.client.session.keys.includes(s) ? (await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession(s)) : await this.client.core.pairing.disconnect({\n                topic: s\n            });\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(s, e))), this.getPendingSessionRequests = ()=>(this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const s = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var n, o;\n                    return ((n = i.peerMetadata) == null ? void 0 : n.url) && ((o = i.peerMetadata) == null ? void 0 : o.url) === e.peer.metadata.url && i.topic && i.topic !== s.topic;\n                });\n                if (t.length === 0) return;\n                this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.deleteSession = async (e, s)=>{\n            const { self: t } = this.client.session.get(e);\n            await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s || this.client.core.expirer.del(e), this.client.core.storage.removeItem(W).catch((i)=>this.client.logger.warn(i));\n        }, this.deleteProposal = async (e, s)=>{\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.deletePendingSessionRequest = async (e, s, t = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, s),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), t && (this.sessionRequestQueue.state = I.idle);\n        }, this.setExpiry = async (e, s)=>{\n            this.client.session.keys.includes(e) && await this.client.session.update(e, {\n                expiry: s\n            }), this.client.core.expirer.set(e, s);\n        }, this.setProposal = async (e, s)=>{\n            await this.client.proposal.set(e, s), this.client.core.expirer.set(e, s.expiry);\n        }, this.setPendingSessionRequest = async (e)=>{\n            const s = V.wc_sessionRequest.req.ttl, { id: t, topic: i, params: n, verifyContext: o } = e;\n            await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: i,\n                params: n,\n                verifyContext: o\n            }), s && this.client.core.expirer.set(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(s));\n        }, this.sendRequest = async (e)=>{\n            const { topic: s, method: t, params: i, expiry: n, relayRpcId: o, clientRpcId: a, throwOnFailedPublish: c } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(t, i, a);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isBrowser)() && pe.includes(t)) {\n                const R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p));\n                this.client.core.verify.register({\n                    attestationId: R\n                });\n            }\n            const d = await this.client.core.crypto.encode(s, p), h = V[t].req;\n            return n && (h.ttl = n), o && (h.id = o), this.client.core.history.set(s, p), c ? (h.internal = b(g({}, h.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(s, d, h)) : this.client.core.relayer.publish(s, d, h).catch((R)=>this.client.logger.error(R)), p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: s, topic: t, result: i, throwOnFailedPublish: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(s, i), a = await this.client.core.crypto.encode(t, o), c = await this.client.core.history.get(t, s), p = V[c.request.method].res;\n            n ? (p.internal = b(g({}, p.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(t, a, p)) : this.client.core.relayer.publish(t, a, p).catch((d)=>this.client.logger.error(d)), await this.client.core.history.resolve(o);\n        }, this.sendError = async (e, s, t)=>{\n            const i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(e, t), n = await this.client.core.crypto.encode(s, i), o = await this.client.core.history.get(s, e), a = V[o.request.method].res;\n            this.client.core.relayer.publish(s, n, a), await this.client.core.history.resolve(i);\n        }, this.cleanup = async ()=>{\n            const e = [], s = [];\n            this.client.session.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && e.push(t.topic);\n            }), this.client.proposal.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && s.push(t.id);\n            }), await Promise.all([\n                ...e.map((t)=>this.deleteSession(t)),\n                ...s.map((t)=>this.deleteProposal(t))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === I.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = I.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    this.processRequest(e), await new Promise((s)=>setTimeout(s, 300));\n                } catch (s) {\n                    this.client.logger.warn(s);\n                }\n            }\n            this.requestQueue.state = I.idle;\n        }, this.processRequest = (e)=>{\n            const { topic: s, payload: t } = e, i = t.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeRequest(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleRequest(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateRequest(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendRequest(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingRequest(s, t);\n                case \"wc_sessionDelete\":\n                    return this.onSessionDeleteRequest(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequest(s, t);\n                case \"wc_sessionEvent\":\n                    return this.onSessionEventRequest(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported request method ${i}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: s, payload: t } = e, i = (await this.client.core.history.get(s, t.id)).request.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${i}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: s } = e, { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${s} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(t);\n        }, this.onSessionProposeRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                this.isValidConnect(g({}, s.params));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES), o = g({\n                    id: i,\n                    pairingTopic: e,\n                    expiry: n\n                }, t);\n                await this.setProposal(i, o);\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)), c = await this.getVerifyContext(a, o.proposer.metadata);\n                this.client.events.emit(\"session_proposal\", {\n                    id: i,\n                    params: o,\n                    verifyContext: c\n                });\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionProposeResponse = async (e, s)=>{\n            const { id: t } = s;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s)) {\n                const { result: i } = s;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: i\n                });\n                const n = this.client.proposal.get(t);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const o = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: o\n                });\n                const a = i.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: a\n                });\n                const c = await this.client.core.crypto.generateSharedKey(o, a);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: c\n                });\n                const p = await this.client.core.relayer.subscribe(c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                error: s.error\n            }));\n        }, this.onSessionSettleRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: n, controller: o, expiry: a, namespaces: c, requiredNamespaces: p, optionalNamespaces: d, sessionProperties: h, pairingTopic: R } = s.params, w = g({\n                    topic: e,\n                    relay: n,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: R,\n                    requiredNamespaces: p,\n                    optionalNamespaces: d,\n                    controller: o.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: o.publicKey,\n                        metadata: o.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                });\n                await this.sendResult({\n                    id: s.id,\n                    topic: e,\n                    result: !0\n                }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: w\n                }), this.cleanupDuplicatePairings(w);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionSettleResponse = async (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {\n                error: s.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                const n = `${e}_session_update`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`);\n                    return;\n                }\n                this.isValidUpdate(g({\n                    topic: e\n                }, t)), await this.client.session.update(e, {\n                    namespaces: t.namespaces\n                }), await this.sendResult({\n                    id: i,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: t\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, i);\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.isRequestOutOfSync = (e, s)=>parseInt(s.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {\n                error: s.error\n            });\n        }, this.onSessionExtendRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {\n                error: s.error\n            });\n        }, this.onSessionPingRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, s)=>{\n            const { id: t } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: s.params\n                }), await Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession(e));\n                        });\n                    }),\n                    this.sendResult({\n                        id: t,\n                        topic: e,\n                        result: !0\n                    })\n                ]), this.client.events.emit(\"session_delete\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidRequest(g({\n                    topic: e\n                }, i));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", i, t))), o = this.client.session.get(e), a = await this.getVerifyContext(n, o.peer.metadata), c = {\n                    id: t,\n                    topic: e,\n                    params: i,\n                    verifyContext: a\n                };\n                await this.setPendingSessionRequest(c), this.addSessionRequestToSessionRequestQueue(c), this.processSessionRequestQueue();\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionRequestResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                result: s.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                error: s.error\n            });\n        }, this.onSessionEventRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                const n = `${e}_session_event_${i.event.name}`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, t)) {\n                    this.client.logger.info(`Discarding out of sync request - ${t}`);\n                    return;\n                }\n                this.isValidEmit(g({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: t,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, t);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = I.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === I.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = I.active, this.client.events.emit(\"session_request\", e);\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.onPairingCreated = (e)=>{\n            if (e.active) return;\n            const s = this.client.proposal.getAll().find((t)=>t.pairingTopic === e.topic);\n            s && this.onSessionProposeRequest(e.topic, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                requiredNamespaces: s.requiredNamespaces,\n                optionalNamespaces: s.optionalNamespaces,\n                relays: s.relays,\n                proposer: s.proposer\n            }, s.id));\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: s, requiredNamespaces: t, optionalNamespaces: i, sessionProperties: n, relays: o } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) || await this.isValidPairingTopic(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(o, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${o}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(t) !== 0 && this.validateNamespaces(t, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.validateNamespaces = (e, s)=>{\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", s);\n            if (t) throw new Error(t.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: s, namespaces: t, relayProtocol: i, sessionProperties: n } = e;\n            await this.isValidProposalId(s);\n            const o = this.client.proposal.get(s), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(o.requiredNamespaces, t, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(p);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: s, reason: t } = e;\n            if (await this.isValidProposalId(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(t)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(t)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: s, controller: t, namespaces: i, expiry: n } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(s)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(t, \"onSessionSettleRequest()\");\n            if (o) throw new Error(o.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(n)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, namespaces: t } = e;\n            await this.isValidSessionTopic(s);\n            const i = this.client.session.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"update()\");\n            if (n) throw new Error(n.message);\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, t, \"update()\");\n            if (o) throw new Error(o.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionTopic(s);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, request: t, chainId: i, expiry: n } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: o } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(o, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(t)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(o, i, t.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${t.method}`);\n                throw new Error(a);\n            }\n            if (n && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(n, U)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${n}. Expiry must be a number (in seconds) between ${U.min} and ${U.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(i);\n            }\n            const { topic: s, response: t } = e;\n            if (await this.isValidSessionTopic(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(t)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(t)}`);\n                throw new Error(i);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(o);\n            }\n            const { topic: s, event: t, chainId: i } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: n } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(t)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(n, i, t.name)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.getVerifyContext = async (e, s)=>{\n            const t = {\n                verified: {\n                    verifyUrl: s.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: s.url || \"\"\n                }\n            };\n            try {\n                const i = await this.client.core.verify.resolve({\n                    attestationId: e,\n                    verifyUrl: s.verifyUrl\n                });\n                i && (t.verified.origin = i.origin, t.verified.isScam = i.isScam, t.verified.validation = i.origin === new URL(s.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (i) {\n                this.client.logger.info(i);\n            }\n            return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;\n        }, this.validateSessionProps = (e, s)=>{\n            Object.values(e).forEach((t)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(t, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);\n                    throw new Error(i);\n                }\n            });\n        };\n    }\n    async isInitialized() {\n        if (!this.initialized) {\n            const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(r);\n        }\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, async (r)=>{\n            const { topic: e, message: s } = r;\n            if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s))) return;\n            const t = await this.client.core.crypto.decode(e, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({\n                    topic: e,\n                    payload: t\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({\n                    topic: e,\n                    payload: t\n                }), this.client.core.history.delete(e, t.id)) : this.onRelayEventUnknownPayload({\n                    topic: e,\n                    payload: t\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (r)=>{\n            const { topic: e, id: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(r.target);\n            if (s && this.client.pendingRequest.keys.includes(s)) return await this.deletePendingSessionRequest(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, !0), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : s && (await this.deleteProposal(s, !0), this.client.events.emit(\"proposal_expire\", {\n                id: s\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (r)=>this.onPairingCreated(r));\n    }\n    isValidPairingTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(r).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.session.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(r).expiry)) {\n            await this.deleteSession(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(r) {\n        if (this.client.session.keys.includes(r)) await this.isValidSessionTopic(r);\n        else if (this.client.core.pairing.pairings.keys.includes(r)) this.isValidPairingTopic(r);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(r).expiry)) {\n            await this.deleteProposal(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${r}`);\n            throw new Error(e);\n        }\n    }\n}\nclass hs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ne, G), this.core = r, this.logger = e;\n    }\n}\nclass ds extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ae, G), this.core = r, this.logger = e;\n    }\n}\nclass us extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, le, G, (s)=>s.id), this.core = r, this.logger = e;\n    }\n}\nclass Q extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(r){\n        super(r), this.protocol = X, this.version = F, this.name = M.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (s, t)=>this.events.on(s, t), this.once = (s, t)=>this.events.once(s, t), this.off = (s, t)=>this.events.off(s, t), this.removeListener = (s, t)=>this.events.removeListener(s, t), this.removeAllListeners = (s)=>this.events.removeAllListeners(s), this.connect = async (s)=>{\n            try {\n                return await this.engine.connect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.pair = async (s)=>{\n            try {\n                return await this.engine.pair(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.approve = async (s)=>{\n            try {\n                return await this.engine.approve(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.reject = async (s)=>{\n            try {\n                return await this.engine.reject(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.update = async (s)=>{\n            try {\n                return await this.engine.update(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.extend = async (s)=>{\n            try {\n                return await this.engine.extend(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.request = async (s)=>{\n            try {\n                return await this.engine.request(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.respond = async (s)=>{\n            try {\n                return await this.engine.respond(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.ping = async (s)=>{\n            try {\n                return await this.engine.ping(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.emit = async (s)=>{\n            try {\n                return await this.engine.emit(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.disconnect = async (s)=>{\n            try {\n                return await this.engine.disconnect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.find = (s)=>{\n            try {\n                return this.engine.find(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = r?.name || M.name, this.metadata = r?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)();\n        const e = typeof r?.logger < \"u\" && typeof r?.logger != \"string\" ? r.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: r?.logger || M.logger\n        }));\n        this.core = r?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(r), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new ds(this.core, this.logger), this.proposal = new hs(this.core, this.logger), this.pendingRequest = new us(this.core, this.logger), this.engine = new ps(this);\n    }\n    static async init(r) {\n        const e = new Q(r);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({\n                verifyUrl: this.metadata.verifyUrl\n            }), this.logger.info(\"SignClient Initialization Success\");\n        } catch (r) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(r.message), r;\n        }\n    }\n}\nconst gs = Q;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLHdGQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLG9GQUFRLEdBQUdIO0FBQ3hDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLG9GQUFRLEdBQUdILFVBQ3hDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzPzQzM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWlzY1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90aW1lXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL21pc2MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQ2xEQSxtQkFBbUIsR0FBRztBQUN0QkEsb0JBQW9CLEdBQUcsTUFDdkIsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcz82Njc4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PTkVfVEhPVVNBTkQgPSBleHBvcnRzLk9ORV9IVU5EUkVEID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfSFVORFJFRCA9IDEwMDtcbmV4cG9ydHMuT05FX1RIT1VTQU5EID0gMTAwMDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT05FX1RIT1VTQU5EIiwiT05FX0hVTkRSRUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL3RpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdCQUFnQixHQUFHQSxrQkFBa0IsR0FBR0EsbUJBQW1CLEdBQUdBLGlCQUFpQixHQUFHQSxnQkFBZ0IsR0FBR0EsbUJBQW1CLEdBQUdBLGtCQUFrQixHQUFHQSxpQkFBaUIsR0FBR0Esa0JBQWtCLEdBQUdBLGVBQWUsR0FBR0EseUJBQXlCLEdBQUdBLG9CQUFvQixHQUFHQSxpQkFBaUIsR0FBR0EsbUJBQW1CLEdBQUdBLGdCQUFnQixHQUFHQSxxQkFBcUIsR0FBR0Esc0JBQXNCLEdBQUdBLG1CQUFtQixHQUFHQSxvQkFBb0IsR0FBR0Esa0JBQWtCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBRyxLQUFLO0FBQ3RpQkEsa0JBQWtCLEdBQUc7QUFDckJBLG9CQUFvQixHQUFHO0FBQ3ZCQSxtQkFBbUIsR0FBRztBQUN0QkEsc0JBQXNCLEdBQUc7QUFDekJBLHFCQUFxQixHQUFHO0FBQ3hCQSxrQkFBa0IsR0FBR0EsUUFBUXNCLGFBQWE7QUFDMUN0QixvQkFBb0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM1Q3JCLG1CQUFtQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzNDckIsc0JBQXNCLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDOUNyQixxQkFBcUIsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM3Q3JCLGdCQUFnQixHQUFHQSxRQUFRaUIsYUFBYTtBQUN4Q2pCLG1CQUFtQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQ3pDaEIsaUJBQWlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDdkNoQixvQkFBb0IsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUMxQ2hCLHlCQUF5QixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQy9DaEIsZUFBZSxHQUFHQSxRQUFRWSxpQkFBaUI7QUFDM0NaLGtCQUFrQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdkNYLGlCQUFpQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdENYLGtCQUFrQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdkNYLG1CQUFtQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDeENYLGdCQUFnQixHQUFHQSxRQUFRUSxVQUFVO0FBQ3JDUixpQkFBaUIsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3ZDTixtQkFBbUIsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3pDTixrQkFBa0IsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3hDTixnQkFBZ0IsR0FBR0EsUUFBUVcsT0FBTyxHQUFHLEtBQ3JDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL3RpbWUuanM/ZTc2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT05FX1lFQVIgPSBleHBvcnRzLkZPVVJfV0VFS1MgPSBleHBvcnRzLlRIUkVFX1dFRUtTID0gZXhwb3J0cy5UV09fV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLID0gZXhwb3J0cy5USElSVFlfREFZUyA9IGV4cG9ydHMuU0VWRU5fREFZUyA9IGV4cG9ydHMuRklWRV9EQVlTID0gZXhwb3J0cy5USFJFRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZID0gZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLlRIUkVFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiA9IGV4cG9ydHMuU0lYVFlfTUlOVVRFUyA9IGV4cG9ydHMuVEhJUlRZX01JTlVURVMgPSBleHBvcnRzLlRFTl9NSU5VVEVTID0gZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgPSBleHBvcnRzLlNJWFRZX1NFQ09ORFMgPSBleHBvcnRzLlRISVJUWV9TRUNPTkRTID0gZXhwb3J0cy5URU5fU0VDT05EUyA9IGV4cG9ydHMuRklWRV9TRUNPTkRTID0gZXhwb3J0cy5PTkVfU0VDT05EID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfU0VDT05EID0gMTtcbmV4cG9ydHMuRklWRV9TRUNPTkRTID0gNTtcbmV4cG9ydHMuVEVOX1NFQ09ORFMgPSAxMDtcbmV4cG9ydHMuVEhJUlRZX1NFQ09ORFMgPSAzMDtcbmV4cG9ydHMuU0lYVFlfU0VDT05EUyA9IDYwO1xuZXhwb3J0cy5PTkVfTUlOVVRFID0gZXhwb3J0cy5TSVhUWV9TRUNPTkRTO1xuZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiA1O1xuZXhwb3J0cy5URU5fTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDEwO1xuZXhwb3J0cy5USElSVFlfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDMwO1xuZXhwb3J0cy5TSVhUWV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogNjA7XG5leHBvcnRzLk9ORV9IT1VSID0gZXhwb3J0cy5TSVhUWV9NSU5VVEVTO1xuZXhwb3J0cy5USFJFRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAzO1xuZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogNjtcbmV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDEyO1xuZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAyNDtcbmV4cG9ydHMuT05FX0RBWSA9IGV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlM7XG5leHBvcnRzLlRIUkVFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzO1xuZXhwb3J0cy5GSVZFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiA1O1xuZXhwb3J0cy5TRVZFTl9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogNztcbmV4cG9ydHMuVEhJUlRZX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzMDtcbmV4cG9ydHMuT05FX1dFRUsgPSBleHBvcnRzLlNFVkVOX0RBWVM7XG5leHBvcnRzLlRXT19XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAyO1xuZXhwb3J0cy5USFJFRV9XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAzO1xuZXhwb3J0cy5GT1VSX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyAqIDQ7XG5leHBvcnRzLk9ORV9ZRUFSID0gZXhwb3J0cy5PTkVfREFZICogMzY1O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPTkVfWUVBUiIsIkZPVVJfV0VFS1MiLCJUSFJFRV9XRUVLUyIsIlRXT19XRUVLUyIsIk9ORV9XRUVLIiwiVEhJUlRZX0RBWVMiLCJTRVZFTl9EQVlTIiwiRklWRV9EQVlTIiwiVEhSRUVfREFZUyIsIk9ORV9EQVkiLCJUV0VOVFlfRk9VUl9IT1VSUyIsIlRXRUxWRV9IT1VSUyIsIlNJWF9IT1VSUyIsIlRIUkVFX0hPVVJTIiwiT05FX0hPVVIiLCJTSVhUWV9NSU5VVEVTIiwiVEhJUlRZX01JTlVURVMiLCJURU5fTUlOVVRFUyIsIkZJVkVfTUlOVVRFUyIsIk9ORV9NSU5VVEUiLCJTSVhUWV9TRUNPTkRTIiwiVEhJUlRZX1NFQ09ORFMiLCJURU5fU0VDT05EUyIsIkZJVkVfU0VDT05EUyIsIk9ORV9TRUNPTkQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js":
/*!*************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0ZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0ZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsNEVBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0ZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsMEZBQWEsR0FBR0gsVUFDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcz83YjY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0ZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0ZBQVMsR0FBR0gsVUFDekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcz8zNTM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvd2F0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWMsR0FBRyxLQUFLO0FBQ3RCLE1BQU1FO0FBQ047QUFDQUYsY0FBYyxHQUFHRSxRQUNqQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3R5cGVzL3dhdGNoLmpzPzIwNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklXYXRjaCA9IHZvaWQgMDtcbmNsYXNzIElXYXRjaCB7XG59XG5leHBvcnRzLklXYXRjaCA9IElXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIklXYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvY29udmVydC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUJBQXVCLEdBQUdBLHFCQUFxQixHQUFHLEtBQUs7QUFDdkQsTUFBTUksY0FBY0MsbUJBQU9BLENBQUMsMkZBQWM7QUFDMUMsU0FBU0YsY0FBY0csT0FBTztJQUMxQixPQUFPQSxVQUFVRixZQUFZRyxZQUFZO0FBQzdDO0FBQ0FQLHFCQUFxQixHQUFHRztBQUN4QixTQUFTRCxnQkFBZ0JNLFdBQVc7SUFDaEMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRixjQUFjSixZQUFZRyxZQUFZO0FBQzVEO0FBQ0FQLHVCQUF1QixHQUFHRSxpQkFDMUIsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzP2UwNDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21NaWxpc2Vjb25kcyA9IGV4cG9ydHMudG9NaWxpc2Vjb25kcyA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIHRvTWlsaXNlY29uZHMoc2Vjb25kcykge1xuICAgIHJldHVybiBzZWNvbmRzICogY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EO1xufVxuZXhwb3J0cy50b01pbGlzZWNvbmRzID0gdG9NaWxpc2Vjb25kcztcbmZ1bmN0aW9uIGZyb21NaWxpc2Vjb25kcyhtaWxpc2Vjb25kcykge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1pbGlzZWNvbmRzIC8gY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EKTtcbn1cbmV4cG9ydHMuZnJvbU1pbGlzZWNvbmRzID0gZnJvbU1pbGlzZWNvbmRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmcm9tTWlsaXNlY29uZHMiLCJ0b01pbGlzZWNvbmRzIiwiY29uc3RhbnRzXzEiLCJyZXF1aXJlIiwic2Vjb25kcyIsIk9ORV9USE9VU0FORCIsIm1pbGlzZWNvbmRzIiwiTWF0aCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvZGVsYXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWEsR0FBRyxLQUFLO0FBQ3JCLFNBQVNFLE1BQU1DLE9BQU87SUFDbEIsT0FBTyxJQUFJQyxRQUFRQyxDQUFBQTtRQUNmQyxXQUFXO1lBQ1BELFFBQVE7UUFDWixHQUFHRjtJQUNQO0FBQ0o7QUFDQUgsYUFBYSxHQUFHRSxPQUNoQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYWluYm93a2l0Ly4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3V0aWxzL2RlbGF5LmpzPzI2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlbGF5ID0gdm9pZCAwO1xuZnVuY3Rpb24gZGVsYXkodGltZW91dCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVsYXkgPSBkZWxheTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlbGF5IiwidGltZW91dCIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsd0ZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsa0ZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsc0ZBQVcsR0FBR0gsVUFDM0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcz83NzdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlbGF5XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnZlcnRcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!*************************************************************!*\
  !*** ../node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvd2F0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWEsR0FBRyxLQUFLO0FBQ3JCLE1BQU1FO0lBQ0ZDLGFBQWM7UUFDVixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJQztJQUMxQjtJQUNBQyxNQUFNQyxLQUFLLEVBQUU7UUFDVCxJQUFJLElBQUksQ0FBQ0gsVUFBVSxDQUFDSSxHQUFHLENBQUNELFFBQVE7WUFDNUIsTUFBTSxJQUFJRSxNQUFNLENBQUMsaUNBQWlDLEVBQUVGLE1BQU0sQ0FBQztRQUMvRDtRQUNBLElBQUksQ0FBQ0gsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0MsS0FBS0MsR0FBRztRQUFHO0lBQ3JEO0lBQ0FDLEtBQUtQLEtBQUssRUFBRTtRQUNSLE1BQU1RLFlBQVksSUFBSSxDQUFDQyxHQUFHLENBQUNUO1FBQzNCLElBQUksT0FBT1EsVUFBVUUsT0FBTyxLQUFLLGFBQWE7WUFDMUMsTUFBTSxJQUFJUixNQUFNLENBQUMsaUNBQWlDLEVBQUVGLE1BQU0sQ0FBQztRQUMvRDtRQUNBLE1BQU1VLFVBQVVMLEtBQUtDLEdBQUcsS0FBS0UsVUFBVUosT0FBTztRQUM5QyxJQUFJLENBQUNQLFVBQVUsQ0FBQ00sR0FBRyxDQUFDSCxPQUFPO1lBQUVJLFNBQVNJLFVBQVVKLE9BQU87WUFBRU07UUFBUTtJQUNyRTtJQUNBRCxJQUFJVCxLQUFLLEVBQUU7UUFDUCxNQUFNUSxZQUFZLElBQUksQ0FBQ1gsVUFBVSxDQUFDWSxHQUFHLENBQUNUO1FBQ3RDLElBQUksT0FBT1EsY0FBYyxhQUFhO1lBQ2xDLE1BQU0sSUFBSU4sTUFBTSxDQUFDLDhCQUE4QixFQUFFRixNQUFNLENBQUM7UUFDNUQ7UUFDQSxPQUFPUTtJQUNYO0lBQ0FFLFFBQVFWLEtBQUssRUFBRTtRQUNYLE1BQU1RLFlBQVksSUFBSSxDQUFDQyxHQUFHLENBQUNUO1FBQzNCLE1BQU1VLFVBQVVGLFVBQVVFLE9BQU8sSUFBSUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQ25FLE9BQU9NO0lBQ1g7QUFDSjtBQUNBakIsYUFBYSxHQUFHRTtBQUNoQkYsa0JBQWUsR0FBR0UsT0FDbEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcz9lY2Y2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XYXRjaCA9IHZvaWQgMDtcbmNsYXNzIFdhdGNoIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBzdGFydChsYWJlbCkge1xuICAgICAgICBpZiAodGhpcy50aW1lc3RhbXBzLmhhcyhsYWJlbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV2F0Y2ggYWxyZWFkeSBzdGFydGVkIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRpbWVzdGFtcHMuc2V0KGxhYmVsLCB7IHN0YXJ0ZWQ6IERhdGUubm93KCkgfSk7XG4gICAgfVxuICAgIHN0b3AobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcC5lbGFwc2VkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdhdGNoIGFscmVhZHkgc3RvcHBlZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXAuc3RhcnRlZDtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzLnNldChsYWJlbCwgeyBzdGFydGVkOiB0aW1lc3RhbXAuc3RhcnRlZCwgZWxhcHNlZCB9KTtcbiAgICB9XG4gICAgZ2V0KGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMudGltZXN0YW1wcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB0aW1lc3RhbXAgZm91bmQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aW1lc3RhbXA7XG4gICAgfVxuICAgIGVsYXBzZWQobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wLmVsYXBzZWQgfHwgRGF0ZS5ub3coKSAtIHRpbWVzdGFtcC5zdGFydGVkO1xuICAgICAgICByZXR1cm4gZWxhcHNlZDtcbiAgICB9XG59XG5leHBvcnRzLldhdGNoID0gV2F0Y2g7XG5leHBvcnRzLmRlZmF1bHQgPSBXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIldhdGNoIiwiY29uc3RydWN0b3IiLCJ0aW1lc3RhbXBzIiwiTWFwIiwic3RhcnQiLCJsYWJlbCIsImhhcyIsIkVycm9yIiwic2V0Iiwic3RhcnRlZCIsIkRhdGUiLCJub3ciLCJzdG9wIiwidGltZXN0YW1wIiwiZ2V0IiwiZWxhcHNlZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/types/dist/index.es.js":
/*!*************************************************************!*\
  !*** ../node_modules/@walletconnect/types/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEngine: () => (/* binding */ S),\n/* harmony export */   IEngineEvents: () => (/* binding */ C),\n/* harmony export */   IExpirer: () => (/* binding */ E),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ x),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ u),\n/* harmony export */   IRelayer: () => (/* binding */ g),\n/* harmony export */   ISignClient: () => (/* binding */ b),\n/* harmony export */   ISignClientEvents: () => (/* binding */ v),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/../node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, o){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, o, w){\n        this.core = s, this.logger = t, this.name = o;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass x {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass E extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass v extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass b {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass C extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass S {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3R5cGVzL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFBeUM7QUFBQSxNQUFNSyxVQUFVSiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0MsSUFBSSxHQUFDRCxHQUFFLElBQUksQ0FBQ0UsUUFBUSxHQUFDLE1BQUssSUFBSSxDQUFDQyxPQUFPLEdBQUM7SUFBQztBQUFDO0FBQUMsTUFBTUM7SUFBRUwsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNSSxVQUFVZiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNILEdBQUUsSUFBSSxDQUFDSyxPQUFPLEdBQUMsSUFBSUM7SUFBRztBQUFDO0FBQUMsTUFBTUM7SUFBRWIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNHLE1BQU0sR0FBQ1IsR0FBRSxJQUFJLENBQUNPLElBQUksR0FBQ0Y7SUFBQztBQUFDO0FBQUMsTUFBTVEsVUFBVW5CLDBEQUFDQTtJQUFDSyxZQUFZQyxDQUFDLEVBQUNLLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNTLE9BQU8sR0FBQ2QsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTVUsVUFBVXJCLDBEQUFDQTtJQUFDSyxZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1nQjtJQUFFakIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsRUFBQ1csQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDVixJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNILEdBQUUsSUFBSSxDQUFDYSxJQUFJLEdBQUNaO0lBQUM7QUFBQztBQUFDLE1BQU1hO0lBQUVwQixhQUFhO1FBQUMsSUFBSSxDQUFDcUIsR0FBRyxHQUFDLElBQUlUO0lBQUc7QUFBQztBQUFDLE1BQU1VLFVBQVUzQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1pQjtJQUFFdkIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNFLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTWtCLFVBQVU3QiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1tQjtJQUFFekIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNHLE1BQU0sR0FBQ1IsR0FBRSxJQUFJLENBQUNPLElBQUksR0FBQ0Y7SUFBQztBQUFDO0FBQUMsTUFBTW9CO0lBQUUxQixZQUFZQyxDQUFDLEVBQUNLLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ3FCLFNBQVMsR0FBQzFCLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1zQixVQUFVaEMsK0NBQUNBO0lBQUNJLGFBQWE7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU02QjtJQUFFN0IsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDQyxJQUFJLEdBQUNELEdBQUUsSUFBSSxDQUFDRSxRQUFRLEdBQUMsTUFBSyxJQUFJLENBQUNDLE9BQU8sR0FBQztJQUFDO0FBQUM7QUFBQyxNQUFNMEIsVUFBVWhDLGdEQUFDQTtJQUFDRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNK0I7SUFBRS9CLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQytCLE1BQU0sR0FBQy9CO0lBQUM7QUFBQztBQUErUixDQUNqMkMsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmFpbmJvd2tpdC8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcz9jNGU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtJRXZlbnRzIGFzIGV9ZnJvbVwiQHdhbGxldGNvbm5lY3QvZXZlbnRzXCI7aW1wb3J0IGMse0V2ZW50RW1pdHRlciBhcyBpfWZyb21cImV2ZW50c1wiO2NsYXNzIG4gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMpe3N1cGVyKCksdGhpcy5vcHRzPXMsdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTJ9fWNsYXNzIGx7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIGggZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10LHRoaXMucmVjb3Jkcz1uZXcgTWFwfX1jbGFzcyBhe2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5sb2dnZXI9cyx0aGlzLmNvcmU9dH19Y2xhc3MgdSBleHRlbmRzIGV7Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMucmVsYXllcj1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIGcgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMpe3N1cGVyKCl9fWNsYXNzIHB7Y29uc3RydWN0b3Iocyx0LG8sdyl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLm5hbWU9b319Y2xhc3MgSXtjb25zdHJ1Y3Rvcigpe3RoaXMubWFwPW5ldyBNYXB9fWNsYXNzIGQgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLnJlbGF5ZXI9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB4e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgRSBleHRlbmRzIGV7Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIG17Y29uc3RydWN0b3Iocyx0KXt0aGlzLmxvZ2dlcj1zLHRoaXMuY29yZT10fX1jbGFzcyB5e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5wcm9qZWN0SWQ9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB2IGV4dGVuZHMgY3tjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9fWNsYXNzIGJ7Y29uc3RydWN0b3Iocyl7dGhpcy5vcHRzPXMsdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTJ9fWNsYXNzIEMgZXh0ZW5kcyBpe2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgU3tjb25zdHJ1Y3RvcihzKXt0aGlzLmNsaWVudD1zfX1leHBvcnR7biBhcyBJQ29yZSxsIGFzIElDcnlwdG8sUyBhcyBJRW5naW5lLEMgYXMgSUVuZ2luZUV2ZW50cyxFIGFzIElFeHBpcmVyLGggYXMgSUpzb25ScGNIaXN0b3J5LHggYXMgSUtleUNoYWluLGEgYXMgSU1lc3NhZ2VUcmFja2VyLG0gYXMgSVBhaXJpbmcsdSBhcyBJUHVibGlzaGVyLGcgYXMgSVJlbGF5ZXIsYiBhcyBJU2lnbkNsaWVudCx2IGFzIElTaWduQ2xpZW50RXZlbnRzLHAgYXMgSVN0b3JlLGQgYXMgSVN1YnNjcmliZXIsSSBhcyBJU3Vic2NyaWJlclRvcGljTWFwLHkgYXMgSVZlcmlmeX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJJRXZlbnRzIiwiZSIsImMiLCJFdmVudEVtaXR0ZXIiLCJpIiwibiIsImNvbnN0cnVjdG9yIiwicyIsIm9wdHMiLCJwcm90b2NvbCIsInZlcnNpb24iLCJsIiwidCIsIm8iLCJjb3JlIiwibG9nZ2VyIiwiaCIsInJlY29yZHMiLCJNYXAiLCJhIiwidSIsInJlbGF5ZXIiLCJnIiwicCIsInciLCJuYW1lIiwiSSIsIm1hcCIsImQiLCJ4IiwiRSIsIm0iLCJ5IiwicHJvamVjdElkIiwidiIsImIiLCJDIiwiUyIsImNsaWVudCIsIklDb3JlIiwiSUNyeXB0byIsIklFbmdpbmUiLCJJRW5naW5lRXZlbnRzIiwiSUV4cGlyZXIiLCJJSnNvblJwY0hpc3RvcnkiLCJJS2V5Q2hhaW4iLCJJTWVzc2FnZVRyYWNrZXIiLCJJUGFpcmluZyIsIklQdWJsaXNoZXIiLCJJUmVsYXllciIsIklTaWduQ2xpZW50IiwiSVNpZ25DbGllbnRFdmVudHMiLCJJU3RvcmUiLCJJU3Vic2NyaWJlciIsIklTdWJzY3JpYmVyVG9waWNNYXAiLCJJVmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ cv),\n/* harmony export */   \"default\": () => (/* binding */ lr)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/../node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\nconst Ia = \"error\", Ug = \"wss://relay.walletconnect.com\", Wg = \"wc\", Fg = \"universal_provider\", xa = `${Wg}@2:${Fg}:`, Mg = \"https://rpc.walletconnect.com/v1/\", Vn = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar ge = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, Ui = {\n    exports: {}\n}; /**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ \n(function(C, u) {\n    (function() {\n        var i, d = \"4.17.21\", w = 200, T = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", $ = \"Expected a function\", En = \"Invalid `variable` option passed into `_.template`\", zt = \"__lodash_hash_undefined__\", pr = 500, It = \"__lodash_placeholder__\", Ln = 1, Fn = 2, xt = 4, Et = 1, ve = 2, vn = 1, ct = 2, qi = 4, Dn = 8, yt = 16, Hn = 32, St = 64, Mn = 128, Kt = 256, dr = 512, La = 30, Da = \"...\", Ha = 800, Na = 16, Bi = 1, $a = 2, Ua = 3, ht = 1 / 0, kn = 9007199254740991, Wa = 17976931348623157e292, _e = 0 / 0, Nn = 4294967295, Fa = Nn - 1, Ma = Nn >>> 1, qa = [\n            [\n                \"ary\",\n                Mn\n            ],\n            [\n                \"bind\",\n                vn\n            ],\n            [\n                \"bindKey\",\n                ct\n            ],\n            [\n                \"curry\",\n                Dn\n            ],\n            [\n                \"curryRight\",\n                yt\n            ],\n            [\n                \"flip\",\n                dr\n            ],\n            [\n                \"partial\",\n                Hn\n            ],\n            [\n                \"partialRight\",\n                St\n            ],\n            [\n                \"rearg\",\n                Kt\n            ]\n        ], Ot = \"[object Arguments]\", me = \"[object Array]\", Ba = \"[object AsyncFunction]\", Yt = \"[object Boolean]\", Zt = \"[object Date]\", Ga = \"[object DOMException]\", we = \"[object Error]\", Pe = \"[object Function]\", Gi = \"[object GeneratorFunction]\", yn = \"[object Map]\", Jt = \"[object Number]\", za = \"[object Null]\", qn = \"[object Object]\", zi = \"[object Promise]\", Ka = \"[object Proxy]\", Xt = \"[object RegExp]\", Sn = \"[object Set]\", Qt = \"[object String]\", Ae = \"[object Symbol]\", Ya = \"[object Undefined]\", Vt = \"[object WeakMap]\", Za = \"[object WeakSet]\", kt = \"[object ArrayBuffer]\", Rt = \"[object DataView]\", gr = \"[object Float32Array]\", vr = \"[object Float64Array]\", _r = \"[object Int8Array]\", mr = \"[object Int16Array]\", wr = \"[object Int32Array]\", Pr = \"[object Uint8Array]\", Ar = \"[object Uint8ClampedArray]\", Cr = \"[object Uint16Array]\", Ir = \"[object Uint32Array]\", Ja = /\\b__p \\+= '';/g, Xa = /\\b(__p \\+=) '' \\+/g, Qa = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, Ki = /&(?:amp|lt|gt|quot|#39);/g, Yi = /[&<>\"']/g, Va = RegExp(Ki.source), ka = RegExp(Yi.source), ja = /<%-([\\s\\S]+?)%>/g, no = /<%([\\s\\S]+?)%>/g, Zi = /<%=([\\s\\S]+?)%>/g, to = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, eo = /^\\w*$/, ro = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, xr = /[\\\\^$.*+?()[\\]{}|]/g, io = RegExp(xr.source), Er = /^\\s+/, so = /\\s/, uo = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, ao = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, oo = /,? & /, fo = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, co = /[()=,{}\\[\\]\\/\\s]/, ho = /\\\\(\\\\)?/g, lo = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, Ji = /\\w*$/, po = /^[-+]0x[0-9a-f]+$/i, go = /^0b[01]+$/i, vo = /^\\[object .+?Constructor\\]$/, _o = /^0o[0-7]+$/i, mo = /^(?:0|[1-9]\\d*)$/, wo = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, Ce = /($^)/, Po = /['\\n\\r\\u2028\\u2029\\\\]/g, Ie = \"\\ud800-\\udfff\", Ao = \"\\\\u0300-\\\\u036f\", Co = \"\\\\ufe20-\\\\ufe2f\", Io = \"\\\\u20d0-\\\\u20ff\", Xi = Ao + Co + Io, Qi = \"\\\\u2700-\\\\u27bf\", Vi = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", xo = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", Eo = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", yo = \"\\\\u2000-\\\\u206f\", So = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", ki = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", ji = \"\\\\ufe0e\\\\ufe0f\", ns = xo + Eo + yo + So, yr = \"['’]\", Oo = \"[\" + Ie + \"]\", ts = \"[\" + ns + \"]\", xe = \"[\" + Xi + \"]\", es = \"\\\\d+\", Ro = \"[\" + Qi + \"]\", rs = \"[\" + Vi + \"]\", is = \"[^\" + Ie + ns + es + Qi + Vi + ki + \"]\", Sr = \"\\ud83c[\\udffb-\\udfff]\", bo = \"(?:\" + xe + \"|\" + Sr + \")\", ss = \"[^\" + Ie + \"]\", Or = \"(?:\\ud83c[\\udde6-\\uddff]){2}\", Rr = \"[\\ud800-\\udbff][\\udc00-\\udfff]\", bt = \"[\" + ki + \"]\", us = \"\\\\u200d\", as = \"(?:\" + rs + \"|\" + is + \")\", To = \"(?:\" + bt + \"|\" + is + \")\", os = \"(?:\" + yr + \"(?:d|ll|m|re|s|t|ve))?\", fs = \"(?:\" + yr + \"(?:D|LL|M|RE|S|T|VE))?\", cs = bo + \"?\", hs = \"[\" + ji + \"]?\", Lo = \"(?:\" + us + \"(?:\" + [\n            ss,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + hs + cs + \")*\", Do = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", Ho = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", ls = hs + cs + Lo, No = \"(?:\" + [\n            Ro,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + ls, $o = \"(?:\" + [\n            ss + xe + \"?\",\n            xe,\n            Or,\n            Rr,\n            Oo\n        ].join(\"|\") + \")\", Uo = RegExp(yr, \"g\"), Wo = RegExp(xe, \"g\"), br = RegExp(Sr + \"(?=\" + Sr + \")|\" + $o + ls, \"g\"), Fo = RegExp([\n            bt + \"?\" + rs + \"+\" + os + \"(?=\" + [\n                ts,\n                bt,\n                \"$\"\n            ].join(\"|\") + \")\",\n            To + \"+\" + fs + \"(?=\" + [\n                ts,\n                bt + as,\n                \"$\"\n            ].join(\"|\") + \")\",\n            bt + \"?\" + as + \"+\" + os,\n            bt + \"+\" + fs,\n            Ho,\n            Do,\n            es,\n            No\n        ].join(\"|\"), \"g\"), Mo = RegExp(\"[\" + us + Ie + Xi + ji + \"]\"), qo = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Bo = [\n            \"Array\",\n            \"Buffer\",\n            \"DataView\",\n            \"Date\",\n            \"Error\",\n            \"Float32Array\",\n            \"Float64Array\",\n            \"Function\",\n            \"Int8Array\",\n            \"Int16Array\",\n            \"Int32Array\",\n            \"Map\",\n            \"Math\",\n            \"Object\",\n            \"Promise\",\n            \"RegExp\",\n            \"Set\",\n            \"String\",\n            \"Symbol\",\n            \"TypeError\",\n            \"Uint8Array\",\n            \"Uint8ClampedArray\",\n            \"Uint16Array\",\n            \"Uint32Array\",\n            \"WeakMap\",\n            \"_\",\n            \"clearTimeout\",\n            \"isFinite\",\n            \"parseInt\",\n            \"setTimeout\"\n        ], Go = -1, B = {};\n        B[gr] = B[vr] = B[_r] = B[mr] = B[wr] = B[Pr] = B[Ar] = B[Cr] = B[Ir] = !0, B[Ot] = B[me] = B[kt] = B[Yt] = B[Rt] = B[Zt] = B[we] = B[Pe] = B[yn] = B[Jt] = B[qn] = B[Xt] = B[Sn] = B[Qt] = B[Vt] = !1;\n        var q = {};\n        q[Ot] = q[me] = q[kt] = q[Rt] = q[Yt] = q[Zt] = q[gr] = q[vr] = q[_r] = q[mr] = q[wr] = q[yn] = q[Jt] = q[qn] = q[Xt] = q[Sn] = q[Qt] = q[Ae] = q[Pr] = q[Ar] = q[Cr] = q[Ir] = !0, q[we] = q[Pe] = q[Vt] = !1;\n        var zo = {\n            À: \"A\",\n            Á: \"A\",\n            Â: \"A\",\n            Ã: \"A\",\n            Ä: \"A\",\n            Å: \"A\",\n            à: \"a\",\n            á: \"a\",\n            â: \"a\",\n            ã: \"a\",\n            ä: \"a\",\n            å: \"a\",\n            Ç: \"C\",\n            ç: \"c\",\n            Ð: \"D\",\n            ð: \"d\",\n            È: \"E\",\n            É: \"E\",\n            Ê: \"E\",\n            Ë: \"E\",\n            è: \"e\",\n            é: \"e\",\n            ê: \"e\",\n            ë: \"e\",\n            Ì: \"I\",\n            Í: \"I\",\n            Î: \"I\",\n            Ï: \"I\",\n            ì: \"i\",\n            í: \"i\",\n            î: \"i\",\n            ï: \"i\",\n            Ñ: \"N\",\n            ñ: \"n\",\n            Ò: \"O\",\n            Ó: \"O\",\n            Ô: \"O\",\n            Õ: \"O\",\n            Ö: \"O\",\n            Ø: \"O\",\n            ò: \"o\",\n            ó: \"o\",\n            ô: \"o\",\n            õ: \"o\",\n            ö: \"o\",\n            ø: \"o\",\n            Ù: \"U\",\n            Ú: \"U\",\n            Û: \"U\",\n            Ü: \"U\",\n            ù: \"u\",\n            ú: \"u\",\n            û: \"u\",\n            ü: \"u\",\n            Ý: \"Y\",\n            ý: \"y\",\n            ÿ: \"y\",\n            Æ: \"Ae\",\n            æ: \"ae\",\n            Þ: \"Th\",\n            þ: \"th\",\n            ß: \"ss\",\n            Ā: \"A\",\n            Ă: \"A\",\n            Ą: \"A\",\n            ā: \"a\",\n            ă: \"a\",\n            ą: \"a\",\n            Ć: \"C\",\n            Ĉ: \"C\",\n            Ċ: \"C\",\n            Č: \"C\",\n            ć: \"c\",\n            ĉ: \"c\",\n            ċ: \"c\",\n            č: \"c\",\n            Ď: \"D\",\n            Đ: \"D\",\n            ď: \"d\",\n            đ: \"d\",\n            Ē: \"E\",\n            Ĕ: \"E\",\n            Ė: \"E\",\n            Ę: \"E\",\n            Ě: \"E\",\n            ē: \"e\",\n            ĕ: \"e\",\n            ė: \"e\",\n            ę: \"e\",\n            ě: \"e\",\n            Ĝ: \"G\",\n            Ğ: \"G\",\n            Ġ: \"G\",\n            Ģ: \"G\",\n            ĝ: \"g\",\n            ğ: \"g\",\n            ġ: \"g\",\n            ģ: \"g\",\n            Ĥ: \"H\",\n            Ħ: \"H\",\n            ĥ: \"h\",\n            ħ: \"h\",\n            Ĩ: \"I\",\n            Ī: \"I\",\n            Ĭ: \"I\",\n            Į: \"I\",\n            İ: \"I\",\n            ĩ: \"i\",\n            ī: \"i\",\n            ĭ: \"i\",\n            į: \"i\",\n            ı: \"i\",\n            Ĵ: \"J\",\n            ĵ: \"j\",\n            Ķ: \"K\",\n            ķ: \"k\",\n            ĸ: \"k\",\n            Ĺ: \"L\",\n            Ļ: \"L\",\n            Ľ: \"L\",\n            Ŀ: \"L\",\n            Ł: \"L\",\n            ĺ: \"l\",\n            ļ: \"l\",\n            ľ: \"l\",\n            ŀ: \"l\",\n            ł: \"l\",\n            Ń: \"N\",\n            Ņ: \"N\",\n            Ň: \"N\",\n            Ŋ: \"N\",\n            ń: \"n\",\n            ņ: \"n\",\n            ň: \"n\",\n            ŋ: \"n\",\n            Ō: \"O\",\n            Ŏ: \"O\",\n            Ő: \"O\",\n            ō: \"o\",\n            ŏ: \"o\",\n            ő: \"o\",\n            Ŕ: \"R\",\n            Ŗ: \"R\",\n            Ř: \"R\",\n            ŕ: \"r\",\n            ŗ: \"r\",\n            ř: \"r\",\n            Ś: \"S\",\n            Ŝ: \"S\",\n            Ş: \"S\",\n            Š: \"S\",\n            ś: \"s\",\n            ŝ: \"s\",\n            ş: \"s\",\n            š: \"s\",\n            Ţ: \"T\",\n            Ť: \"T\",\n            Ŧ: \"T\",\n            ţ: \"t\",\n            ť: \"t\",\n            ŧ: \"t\",\n            Ũ: \"U\",\n            Ū: \"U\",\n            Ŭ: \"U\",\n            Ů: \"U\",\n            Ű: \"U\",\n            Ų: \"U\",\n            ũ: \"u\",\n            ū: \"u\",\n            ŭ: \"u\",\n            ů: \"u\",\n            ű: \"u\",\n            ų: \"u\",\n            Ŵ: \"W\",\n            ŵ: \"w\",\n            Ŷ: \"Y\",\n            ŷ: \"y\",\n            Ÿ: \"Y\",\n            Ź: \"Z\",\n            Ż: \"Z\",\n            Ž: \"Z\",\n            ź: \"z\",\n            ż: \"z\",\n            ž: \"z\",\n            Ĳ: \"IJ\",\n            ĳ: \"ij\",\n            Œ: \"Oe\",\n            œ: \"oe\",\n            ŉ: \"'n\",\n            ſ: \"s\"\n        }, Ko = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        }, Yo = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        }, Zo = {\n            \"\\\\\": \"\\\\\",\n            \"'\": \"'\",\n            \"\\n\": \"n\",\n            \"\\r\": \"r\",\n            \"\\u2028\": \"u2028\",\n            \"\\u2029\": \"u2029\"\n        }, Jo = parseFloat, Xo = parseInt, ps = typeof ge == \"object\" && ge && ge.Object === Object && ge, Qo = typeof self == \"object\" && self && self.Object === Object && self, k = ps || Qo || Function(\"return this\")(), Tr = u && !u.nodeType && u, lt = Tr && !0 && C && !C.nodeType && C, ds = lt && lt.exports === Tr, Lr = ds && ps.process, _n = function() {\n            try {\n                var h = lt && lt.require && lt.require(\"util\").types;\n                return h || Lr && Lr.binding && Lr.binding(\"util\");\n            } catch  {}\n        }(), gs = _n && _n.isArrayBuffer, vs = _n && _n.isDate, _s = _n && _n.isMap, ms = _n && _n.isRegExp, ws = _n && _n.isSet, Ps = _n && _n.isTypedArray;\n        function cn(h, g, p) {\n            switch(p.length){\n                case 0:\n                    return h.call(g);\n                case 1:\n                    return h.call(g, p[0]);\n                case 2:\n                    return h.call(g, p[0], p[1]);\n                case 3:\n                    return h.call(g, p[0], p[1], p[2]);\n            }\n            return h.apply(g, p);\n        }\n        function Vo(h, g, p, A) {\n            for(var S = -1, U = h == null ? 0 : h.length; ++S < U;){\n                var X = h[S];\n                g(A, X, p(X), h);\n            }\n            return A;\n        }\n        function mn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function ko(h, g) {\n            for(var p = h == null ? 0 : h.length; p-- && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function As(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (!g(h[p], p, h)) return !1;\n            return !0;\n        }\n        function jn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                g(X, p, h) && (U[S++] = X);\n            }\n            return U;\n        }\n        function Ee(h, g) {\n            var p = h == null ? 0 : h.length;\n            return !!p && Tt(h, g, 0) > -1;\n        }\n        function Dr(h, g, p) {\n            for(var A = -1, S = h == null ? 0 : h.length; ++A < S;)if (p(g, h[A])) return !0;\n            return !1;\n        }\n        function G(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = Array(A); ++p < A;)S[p] = g(h[p], p, h);\n            return S;\n        }\n        function nt(h, g) {\n            for(var p = -1, A = g.length, S = h.length; ++p < A;)h[S + p] = g[p];\n            return h;\n        }\n        function Hr(h, g, p, A) {\n            var S = -1, U = h == null ? 0 : h.length;\n            for(A && U && (p = h[++S]); ++S < U;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function jo(h, g, p, A) {\n            var S = h == null ? 0 : h.length;\n            for(A && S && (p = h[--S]); S--;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function Nr(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (g(h[p], p, h)) return !0;\n            return !1;\n        }\n        var nf = $r(\"length\");\n        function tf(h) {\n            return h.split(\"\");\n        }\n        function ef(h) {\n            return h.match(fo) || [];\n        }\n        function Cs(h, g, p) {\n            var A;\n            return p(h, function(S, U, X) {\n                if (g(S, U, X)) return A = U, !1;\n            }), A;\n        }\n        function ye(h, g, p, A) {\n            for(var S = h.length, U = p + (A ? 1 : -1); A ? U-- : ++U < S;)if (g(h[U], U, h)) return U;\n            return -1;\n        }\n        function Tt(h, g, p) {\n            return g === g ? gf(h, g, p) : ye(h, Is, p);\n        }\n        function rf(h, g, p, A) {\n            for(var S = p - 1, U = h.length; ++S < U;)if (A(h[S], g)) return S;\n            return -1;\n        }\n        function Is(h) {\n            return h !== h;\n        }\n        function xs(h, g) {\n            var p = h == null ? 0 : h.length;\n            return p ? Wr(h, g) / p : _e;\n        }\n        function $r(h) {\n            return function(g) {\n                return g == null ? i : g[h];\n            };\n        }\n        function Ur(h) {\n            return function(g) {\n                return h == null ? i : h[g];\n            };\n        }\n        function Es(h, g, p, A, S) {\n            return S(h, function(U, X, M) {\n                p = A ? (A = !1, U) : g(p, U, X, M);\n            }), p;\n        }\n        function sf(h, g) {\n            var p = h.length;\n            for(h.sort(g); p--;)h[p] = h[p].value;\n            return h;\n        }\n        function Wr(h, g) {\n            for(var p, A = -1, S = h.length; ++A < S;){\n                var U = g(h[A]);\n                U !== i && (p = p === i ? U : p + U);\n            }\n            return p;\n        }\n        function Fr(h, g) {\n            for(var p = -1, A = Array(h); ++p < h;)A[p] = g(p);\n            return A;\n        }\n        function uf(h, g) {\n            return G(g, function(p) {\n                return [\n                    p,\n                    h[p]\n                ];\n            });\n        }\n        function ys(h) {\n            return h && h.slice(0, bs(h) + 1).replace(Er, \"\");\n        }\n        function hn(h) {\n            return function(g) {\n                return h(g);\n            };\n        }\n        function Mr(h, g) {\n            return G(g, function(p) {\n                return h[p];\n            });\n        }\n        function jt(h, g) {\n            return h.has(g);\n        }\n        function Ss(h, g) {\n            for(var p = -1, A = h.length; ++p < A && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function Os(h, g) {\n            for(var p = h.length; p-- && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function af(h, g) {\n            for(var p = h.length, A = 0; p--;)h[p] === g && ++A;\n            return A;\n        }\n        var of = Ur(zo), ff = Ur(Ko);\n        function cf(h) {\n            return \"\\\\\" + Zo[h];\n        }\n        function hf(h, g) {\n            return h == null ? i : h[g];\n        }\n        function Lt(h) {\n            return Mo.test(h);\n        }\n        function lf(h) {\n            return qo.test(h);\n        }\n        function pf(h) {\n            for(var g, p = []; !(g = h.next()).done;)p.push(g.value);\n            return p;\n        }\n        function qr(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A, S) {\n                p[++g] = [\n                    S,\n                    A\n                ];\n            }), p;\n        }\n        function Rs(h, g) {\n            return function(p) {\n                return h(g(p));\n            };\n        }\n        function tt(h, g) {\n            for(var p = -1, A = h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                (X === g || X === It) && (h[p] = It, U[S++] = p);\n            }\n            return U;\n        }\n        function Se(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = A;\n            }), p;\n        }\n        function df(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = [\n                    A,\n                    A\n                ];\n            }), p;\n        }\n        function gf(h, g, p) {\n            for(var A = p - 1, S = h.length; ++A < S;)if (h[A] === g) return A;\n            return -1;\n        }\n        function vf(h, g, p) {\n            for(var A = p + 1; A--;)if (h[A] === g) return A;\n            return A;\n        }\n        function Dt(h) {\n            return Lt(h) ? mf(h) : nf(h);\n        }\n        function On(h) {\n            return Lt(h) ? wf(h) : tf(h);\n        }\n        function bs(h) {\n            for(var g = h.length; g-- && so.test(h.charAt(g)););\n            return g;\n        }\n        var _f = Ur(Yo);\n        function mf(h) {\n            for(var g = br.lastIndex = 0; br.test(h);)++g;\n            return g;\n        }\n        function wf(h) {\n            return h.match(br) || [];\n        }\n        function Pf(h) {\n            return h.match(Fo) || [];\n        }\n        var Af = function h(g) {\n            g = g == null ? k : Ht.defaults(k.Object(), g, Ht.pick(k, Bo));\n            var p = g.Array, A = g.Date, S = g.Error, U = g.Function, X = g.Math, M = g.Object, Br = g.RegExp, Cf = g.String, wn = g.TypeError, Oe = p.prototype, If = U.prototype, Nt = M.prototype, Re = g[\"__core-js_shared__\"], be = If.toString, F = Nt.hasOwnProperty, xf = 0, Ts = function() {\n                var n = /[^.]+$/.exec(Re && Re.keys && Re.keys.IE_PROTO || \"\");\n                return n ? \"Symbol(src)_1.\" + n : \"\";\n            }(), Te = Nt.toString, Ef = be.call(M), yf = k._, Sf = Br(\"^\" + be.call(F).replace(xr, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), Le = ds ? g.Buffer : i, et = g.Symbol, De = g.Uint8Array, Ls = Le ? Le.allocUnsafe : i, He = Rs(M.getPrototypeOf, M), Ds = M.create, Hs = Nt.propertyIsEnumerable, Ne = Oe.splice, Ns = et ? et.isConcatSpreadable : i, ne = et ? et.iterator : i, pt = et ? et.toStringTag : i, $e = function() {\n                try {\n                    var n = mt(M, \"defineProperty\");\n                    return n({}, \"\", {}), n;\n                } catch  {}\n            }(), Of = g.clearTimeout !== k.clearTimeout && g.clearTimeout, Rf = A && A.now !== k.Date.now && A.now, bf = g.setTimeout !== k.setTimeout && g.setTimeout, Ue = X.ceil, We = X.floor, Gr = M.getOwnPropertySymbols, Tf = Le ? Le.isBuffer : i, $s = g.isFinite, Lf = Oe.join, Df = Rs(M.keys, M), Q = X.max, nn = X.min, Hf = A.now, Nf = g.parseInt, Us = X.random, $f = Oe.reverse, zr = mt(g, \"DataView\"), te = mt(g, \"Map\"), Kr = mt(g, \"Promise\"), $t = mt(g, \"Set\"), ee = mt(g, \"WeakMap\"), re = mt(M, \"create\"), Fe = ee && new ee, Ut = {}, Uf = wt(zr), Wf = wt(te), Ff = wt(Kr), Mf = wt($t), qf = wt(ee), Me = et ? et.prototype : i, ie = Me ? Me.valueOf : i, Ws = Me ? Me.toString : i;\n            function a(n) {\n                if (Y(n) && !O(n) && !(n instanceof H)) {\n                    if (n instanceof Pn) return n;\n                    if (F.call(n, \"__wrapped__\")) return Fu(n);\n                }\n                return new Pn(n);\n            }\n            var Wt = function() {\n                function n() {}\n                return function(t) {\n                    if (!K(t)) return {};\n                    if (Ds) return Ds(t);\n                    n.prototype = t;\n                    var e = new n;\n                    return n.prototype = i, e;\n                };\n            }();\n            function qe() {}\n            function Pn(n, t) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i;\n            }\n            a.templateSettings = {\n                escape: ja,\n                evaluate: no,\n                interpolate: Zi,\n                variable: \"\",\n                imports: {\n                    _: a\n                }\n            }, a.prototype = qe.prototype, a.prototype.constructor = a, Pn.prototype = Wt(qe.prototype), Pn.prototype.constructor = Pn;\n            function H(n) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Nn, this.__views__ = [];\n            }\n            function Bf() {\n                var n = new H(this.__wrapped__);\n                return n.__actions__ = un(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = un(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = un(this.__views__), n;\n            }\n            function Gf() {\n                if (this.__filtered__) {\n                    var n = new H(this);\n                    n.__dir__ = -1, n.__filtered__ = !0;\n                } else n = this.clone(), n.__dir__ *= -1;\n                return n;\n            }\n            function zf() {\n                var n = this.__wrapped__.value(), t = this.__dir__, e = O(n), r = t < 0, s = e ? n.length : 0, o = eh(0, s, this.__views__), f = o.start, c = o.end, l = c - f, v = r ? c : f - 1, _ = this.__iteratees__, m = _.length, P = 0, I = nn(l, this.__takeCount__);\n                if (!e || !r && s == l && I == l) return ou(n, this.__actions__);\n                var E = [];\n                n: for(; l-- && P < I;){\n                    v += t;\n                    for(var b = -1, y = n[v]; ++b < m;){\n                        var D = _[b], N = D.iteratee, dn = D.type, sn = N(y);\n                        if (dn == $a) y = sn;\n                        else if (!sn) {\n                            if (dn == Bi) continue n;\n                            break n;\n                        }\n                    }\n                    E[P++] = y;\n                }\n                return E;\n            }\n            H.prototype = Wt(qe.prototype), H.prototype.constructor = H;\n            function dt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Kf() {\n                this.__data__ = re ? re(null) : {}, this.size = 0;\n            }\n            function Yf(n) {\n                var t = this.has(n) && delete this.__data__[n];\n                return this.size -= t ? 1 : 0, t;\n            }\n            function Zf(n) {\n                var t = this.__data__;\n                if (re) {\n                    var e = t[n];\n                    return e === zt ? i : e;\n                }\n                return F.call(t, n) ? t[n] : i;\n            }\n            function Jf(n) {\n                var t = this.__data__;\n                return re ? t[n] !== i : F.call(t, n);\n            }\n            function Xf(n, t) {\n                var e = this.__data__;\n                return this.size += this.has(n) ? 0 : 1, e[n] = re && t === i ? zt : t, this;\n            }\n            dt.prototype.clear = Kf, dt.prototype.delete = Yf, dt.prototype.get = Zf, dt.prototype.has = Jf, dt.prototype.set = Xf;\n            function Bn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Qf() {\n                this.__data__ = [], this.size = 0;\n            }\n            function Vf(n) {\n                var t = this.__data__, e = Be(t, n);\n                if (e < 0) return !1;\n                var r = t.length - 1;\n                return e == r ? t.pop() : Ne.call(t, e, 1), --this.size, !0;\n            }\n            function kf(n) {\n                var t = this.__data__, e = Be(t, n);\n                return e < 0 ? i : t[e][1];\n            }\n            function jf(n) {\n                return Be(this.__data__, n) > -1;\n            }\n            function nc(n, t) {\n                var e = this.__data__, r = Be(e, n);\n                return r < 0 ? (++this.size, e.push([\n                    n,\n                    t\n                ])) : e[r][1] = t, this;\n            }\n            Bn.prototype.clear = Qf, Bn.prototype.delete = Vf, Bn.prototype.get = kf, Bn.prototype.has = jf, Bn.prototype.set = nc;\n            function Gn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function tc() {\n                this.size = 0, this.__data__ = {\n                    hash: new dt,\n                    map: new (te || Bn),\n                    string: new dt\n                };\n            }\n            function ec(n) {\n                var t = nr(this, n).delete(n);\n                return this.size -= t ? 1 : 0, t;\n            }\n            function rc(n) {\n                return nr(this, n).get(n);\n            }\n            function ic(n) {\n                return nr(this, n).has(n);\n            }\n            function sc(n, t) {\n                var e = nr(this, n), r = e.size;\n                return e.set(n, t), this.size += e.size == r ? 0 : 1, this;\n            }\n            Gn.prototype.clear = tc, Gn.prototype.delete = ec, Gn.prototype.get = rc, Gn.prototype.has = ic, Gn.prototype.set = sc;\n            function gt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.__data__ = new Gn; ++t < e;)this.add(n[t]);\n            }\n            function uc(n) {\n                return this.__data__.set(n, zt), this;\n            }\n            function ac(n) {\n                return this.__data__.has(n);\n            }\n            gt.prototype.add = gt.prototype.push = uc, gt.prototype.has = ac;\n            function Rn(n) {\n                var t = this.__data__ = new Bn(n);\n                this.size = t.size;\n            }\n            function oc() {\n                this.__data__ = new Bn, this.size = 0;\n            }\n            function fc(n) {\n                var t = this.__data__, e = t.delete(n);\n                return this.size = t.size, e;\n            }\n            function cc(n) {\n                return this.__data__.get(n);\n            }\n            function hc(n) {\n                return this.__data__.has(n);\n            }\n            function lc(n, t) {\n                var e = this.__data__;\n                if (e instanceof Bn) {\n                    var r = e.__data__;\n                    if (!te || r.length < w - 1) return r.push([\n                        n,\n                        t\n                    ]), this.size = ++e.size, this;\n                    e = this.__data__ = new Gn(r);\n                }\n                return e.set(n, t), this.size = e.size, this;\n            }\n            Rn.prototype.clear = oc, Rn.prototype.delete = fc, Rn.prototype.get = cc, Rn.prototype.has = hc, Rn.prototype.set = lc;\n            function Fs(n, t) {\n                var e = O(n), r = !e && Pt(n), s = !e && !r && at(n), o = !e && !r && !s && Bt(n), f = e || r || s || o, c = f ? Fr(n.length, Cf) : [], l = c.length;\n                for(var v in n)(t || F.call(n, v)) && !(f && (v == \"length\" || s && (v == \"offset\" || v == \"parent\") || o && (v == \"buffer\" || v == \"byteLength\" || v == \"byteOffset\") || Zn(v, l))) && c.push(v);\n                return c;\n            }\n            function Ms(n) {\n                var t = n.length;\n                return t ? n[ei(0, t - 1)] : i;\n            }\n            function pc(n, t) {\n                return tr(un(n), vt(t, 0, n.length));\n            }\n            function dc(n) {\n                return tr(un(n));\n            }\n            function Yr(n, t, e) {\n                (e !== i && !bn(n[t], e) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function se(n, t, e) {\n                var r = n[t];\n                (!(F.call(n, t) && bn(r, e)) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function Be(n, t) {\n                for(var e = n.length; e--;)if (bn(n[e][0], t)) return e;\n                return -1;\n            }\n            function gc(n, t, e, r) {\n                return rt(n, function(s, o, f) {\n                    t(r, s, e(s), f);\n                }), r;\n            }\n            function qs(n, t) {\n                return n && Un(t, V(t), n);\n            }\n            function vc(n, t) {\n                return n && Un(t, on(t), n);\n            }\n            function zn(n, t, e) {\n                t == \"__proto__\" && $e ? $e(n, t, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: e,\n                    writable: !0\n                }) : n[t] = e;\n            }\n            function Zr(n, t) {\n                for(var e = -1, r = t.length, s = p(r), o = n == null; ++e < r;)s[e] = o ? i : Si(n, t[e]);\n                return s;\n            }\n            function vt(n, t, e) {\n                return n === n && (e !== i && (n = n <= e ? n : e), t !== i && (n = n >= t ? n : t)), n;\n            }\n            function An(n, t, e, r, s, o) {\n                var f, c = t & Ln, l = t & Fn, v = t & xt;\n                if (e && (f = s ? e(n, r, s, o) : e(n)), f !== i) return f;\n                if (!K(n)) return n;\n                var _ = O(n);\n                if (_) {\n                    if (f = ih(n), !c) return un(n, f);\n                } else {\n                    var m = tn(n), P = m == Pe || m == Gi;\n                    if (at(n)) return hu(n, c);\n                    if (m == qn || m == Ot || P && !s) {\n                        if (f = l || P ? {} : bu(n), !c) return l ? Zc(n, vc(f, n)) : Yc(n, qs(f, n));\n                    } else {\n                        if (!q[m]) return s ? n : {};\n                        f = sh(n, m, c);\n                    }\n                }\n                o || (o = new Rn);\n                var I = o.get(n);\n                if (I) return I;\n                o.set(n, f), sa(n) ? n.forEach(function(y) {\n                    f.add(An(y, t, e, y, n, o));\n                }) : ra(n) && n.forEach(function(y, D) {\n                    f.set(D, An(y, t, e, D, n, o));\n                });\n                var E = v ? l ? pi : li : l ? on : V, b = _ ? i : E(n);\n                return mn(b || n, function(y, D) {\n                    b && (D = y, y = n[D]), se(f, D, An(y, t, e, D, n, o));\n                }), f;\n            }\n            function _c(n) {\n                var t = V(n);\n                return function(e) {\n                    return Bs(e, n, t);\n                };\n            }\n            function Bs(n, t, e) {\n                var r = e.length;\n                if (n == null) return !r;\n                for(n = M(n); r--;){\n                    var s = e[r], o = t[s], f = n[s];\n                    if (f === i && !(s in n) || !o(f)) return !1;\n                }\n                return !0;\n            }\n            function Gs(n, t, e) {\n                if (typeof n != \"function\") throw new wn($);\n                return le(function() {\n                    n.apply(i, e);\n                }, t);\n            }\n            function ue(n, t, e, r) {\n                var s = -1, o = Ee, f = !0, c = n.length, l = [], v = t.length;\n                if (!c) return l;\n                e && (t = G(t, hn(e))), r ? (o = Dr, f = !1) : t.length >= w && (o = jt, f = !1, t = new gt(t));\n                n: for(; ++s < c;){\n                    var _ = n[s], m = e == null ? _ : e(_);\n                    if (_ = r || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var P = v; P--;)if (t[P] === m) continue n;\n                        l.push(_);\n                    } else o(t, m, r) || l.push(_);\n                }\n                return l;\n            }\n            var rt = vu($n), zs = vu(Xr, !0);\n            function mc(n, t) {\n                var e = !0;\n                return rt(n, function(r, s, o) {\n                    return e = !!t(r, s, o), e;\n                }), e;\n            }\n            function Ge(n, t, e) {\n                for(var r = -1, s = n.length; ++r < s;){\n                    var o = n[r], f = t(o);\n                    if (f != null && (c === i ? f === f && !pn(f) : e(f, c))) var c = f, l = o;\n                }\n                return l;\n            }\n            function wc(n, t, e, r) {\n                var s = n.length;\n                for(e = R(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i || r > s ? s : R(r), r < 0 && (r += s), r = e > r ? 0 : aa(r); e < r;)n[e++] = t;\n                return n;\n            }\n            function Ks(n, t) {\n                var e = [];\n                return rt(n, function(r, s, o) {\n                    t(r, s, o) && e.push(r);\n                }), e;\n            }\n            function j(n, t, e, r, s) {\n                var o = -1, f = n.length;\n                for(e || (e = ah), s || (s = []); ++o < f;){\n                    var c = n[o];\n                    t > 0 && e(c) ? t > 1 ? j(c, t - 1, e, r, s) : nt(s, c) : r || (s[s.length] = c);\n                }\n                return s;\n            }\n            var Jr = _u(), Ys = _u(!0);\n            function $n(n, t) {\n                return n && Jr(n, t, V);\n            }\n            function Xr(n, t) {\n                return n && Ys(n, t, V);\n            }\n            function ze(n, t) {\n                return jn(t, function(e) {\n                    return Jn(n[e]);\n                });\n            }\n            function _t(n, t) {\n                t = st(t, n);\n                for(var e = 0, r = t.length; n != null && e < r;)n = n[Wn(t[e++])];\n                return e && e == r ? n : i;\n            }\n            function Zs(n, t, e) {\n                var r = t(n);\n                return O(n) ? r : nt(r, e(n));\n            }\n            function en(n) {\n                return n == null ? n === i ? Ya : za : pt && pt in M(n) ? th(n) : dh(n);\n            }\n            function Qr(n, t) {\n                return n > t;\n            }\n            function Pc(n, t) {\n                return n != null && F.call(n, t);\n            }\n            function Ac(n, t) {\n                return n != null && t in M(n);\n            }\n            function Cc(n, t, e) {\n                return n >= nn(t, e) && n < Q(t, e);\n            }\n            function Vr(n, t, e) {\n                for(var r = e ? Dr : Ee, s = n[0].length, o = n.length, f = o, c = p(o), l = 1 / 0, v = []; f--;){\n                    var _ = n[f];\n                    f && t && (_ = G(_, hn(t))), l = nn(_.length, l), c[f] = !e && (t || s >= 120 && _.length >= 120) ? new gt(f && _) : i;\n                }\n                _ = n[0];\n                var m = -1, P = c[0];\n                n: for(; ++m < s && v.length < l;){\n                    var I = _[m], E = t ? t(I) : I;\n                    if (I = e || I !== 0 ? I : 0, !(P ? jt(P, E) : r(v, E, e))) {\n                        for(f = o; --f;){\n                            var b = c[f];\n                            if (!(b ? jt(b, E) : r(n[f], E, e))) continue n;\n                        }\n                        P && P.push(E), v.push(I);\n                    }\n                }\n                return v;\n            }\n            function Ic(n, t, e, r) {\n                return $n(n, function(s, o, f) {\n                    t(r, e(s), o, f);\n                }), r;\n            }\n            function ae(n, t, e) {\n                t = st(t, n), n = Hu(n, t);\n                var r = n == null ? n : n[Wn(In(t))];\n                return r == null ? i : cn(r, n, e);\n            }\n            function Js(n) {\n                return Y(n) && en(n) == Ot;\n            }\n            function xc(n) {\n                return Y(n) && en(n) == kt;\n            }\n            function Ec(n) {\n                return Y(n) && en(n) == Zt;\n            }\n            function oe(n, t, e, r, s) {\n                return n === t ? !0 : n == null || t == null || !Y(n) && !Y(t) ? n !== n && t !== t : yc(n, t, e, r, oe, s);\n            }\n            function yc(n, t, e, r, s, o) {\n                var f = O(n), c = O(t), l = f ? me : tn(n), v = c ? me : tn(t);\n                l = l == Ot ? qn : l, v = v == Ot ? qn : v;\n                var _ = l == qn, m = v == qn, P = l == v;\n                if (P && at(n)) {\n                    if (!at(t)) return !1;\n                    f = !0, _ = !1;\n                }\n                if (P && !_) return o || (o = new Rn), f || Bt(n) ? Su(n, t, e, r, s, o) : jc(n, t, l, e, r, s, o);\n                if (!(e & Et)) {\n                    var I = _ && F.call(n, \"__wrapped__\"), E = m && F.call(t, \"__wrapped__\");\n                    if (I || E) {\n                        var b = I ? n.value() : n, y = E ? t.value() : t;\n                        return o || (o = new Rn), s(b, y, e, r, o);\n                    }\n                }\n                return P ? (o || (o = new Rn), nh(n, t, e, r, s, o)) : !1;\n            }\n            function Sc(n) {\n                return Y(n) && tn(n) == yn;\n            }\n            function kr(n, t, e, r) {\n                var s = e.length, o = s, f = !r;\n                if (n == null) return !o;\n                for(n = M(n); s--;){\n                    var c = e[s];\n                    if (f && c[2] ? c[1] !== n[c[0]] : !(c[0] in n)) return !1;\n                }\n                for(; ++s < o;){\n                    c = e[s];\n                    var l = c[0], v = n[l], _ = c[1];\n                    if (f && c[2]) {\n                        if (v === i && !(l in n)) return !1;\n                    } else {\n                        var m = new Rn;\n                        if (r) var P = r(v, _, l, n, t, m);\n                        if (!(P === i ? oe(_, v, Et | ve, r, m) : P)) return !1;\n                    }\n                }\n                return !0;\n            }\n            function Xs(n) {\n                if (!K(n) || fh(n)) return !1;\n                var t = Jn(n) ? Sf : vo;\n                return t.test(wt(n));\n            }\n            function Oc(n) {\n                return Y(n) && en(n) == Xt;\n            }\n            function Rc(n) {\n                return Y(n) && tn(n) == Sn;\n            }\n            function bc(n) {\n                return Y(n) && ar(n.length) && !!B[en(n)];\n            }\n            function Qs(n) {\n                return typeof n == \"function\" ? n : n == null ? fn : typeof n == \"object\" ? O(n) ? js(n[0], n[1]) : ks(n) : ma(n);\n            }\n            function jr(n) {\n                if (!he(n)) return Df(n);\n                var t = [];\n                for(var e in M(n))F.call(n, e) && e != \"constructor\" && t.push(e);\n                return t;\n            }\n            function Tc(n) {\n                if (!K(n)) return ph(n);\n                var t = he(n), e = [];\n                for(var r in n)r == \"constructor\" && (t || !F.call(n, r)) || e.push(r);\n                return e;\n            }\n            function ni(n, t) {\n                return n < t;\n            }\n            function Vs(n, t) {\n                var e = -1, r = an(n) ? p(n.length) : [];\n                return rt(n, function(s, o, f) {\n                    r[++e] = t(s, o, f);\n                }), r;\n            }\n            function ks(n) {\n                var t = gi(n);\n                return t.length == 1 && t[0][2] ? Lu(t[0][0], t[0][1]) : function(e) {\n                    return e === n || kr(e, n, t);\n                };\n            }\n            function js(n, t) {\n                return _i(n) && Tu(t) ? Lu(Wn(n), t) : function(e) {\n                    var r = Si(e, n);\n                    return r === i && r === t ? Oi(e, n) : oe(t, r, Et | ve);\n                };\n            }\n            function Ke(n, t, e, r, s) {\n                n !== t && Jr(t, function(o, f) {\n                    if (s || (s = new Rn), K(o)) Lc(n, t, f, e, Ke, r, s);\n                    else {\n                        var c = r ? r(wi(n, f), o, f + \"\", n, t, s) : i;\n                        c === i && (c = o), Yr(n, f, c);\n                    }\n                }, on);\n            }\n            function Lc(n, t, e, r, s, o, f) {\n                var c = wi(n, e), l = wi(t, e), v = f.get(l);\n                if (v) {\n                    Yr(n, e, v);\n                    return;\n                }\n                var _ = o ? o(c, l, e + \"\", n, t, f) : i, m = _ === i;\n                if (m) {\n                    var P = O(l), I = !P && at(l), E = !P && !I && Bt(l);\n                    _ = l, P || I || E ? O(c) ? _ = c : Z(c) ? _ = un(c) : I ? (m = !1, _ = hu(l, !0)) : E ? (m = !1, _ = lu(l, !0)) : _ = [] : pe(l) || Pt(l) ? (_ = c, Pt(c) ? _ = oa(c) : (!K(c) || Jn(c)) && (_ = bu(l))) : m = !1;\n                }\n                m && (f.set(l, _), s(_, l, r, o, f), f.delete(l)), Yr(n, e, _);\n            }\n            function nu(n, t) {\n                var e = n.length;\n                if (e) return t += t < 0 ? e : 0, Zn(t, e) ? n[t] : i;\n            }\n            function tu(n, t, e) {\n                t.length ? t = G(t, function(o) {\n                    return O(o) ? function(f) {\n                        return _t(f, o.length === 1 ? o[0] : o);\n                    } : o;\n                }) : t = [\n                    fn\n                ];\n                var r = -1;\n                t = G(t, hn(x()));\n                var s = Vs(n, function(o, f, c) {\n                    var l = G(t, function(v) {\n                        return v(o);\n                    });\n                    return {\n                        criteria: l,\n                        index: ++r,\n                        value: o\n                    };\n                });\n                return sf(s, function(o, f) {\n                    return Kc(o, f, e);\n                });\n            }\n            function Dc(n, t) {\n                return eu(n, t, function(e, r) {\n                    return Oi(n, r);\n                });\n            }\n            function eu(n, t, e) {\n                for(var r = -1, s = t.length, o = {}; ++r < s;){\n                    var f = t[r], c = _t(n, f);\n                    e(c, f) && fe(o, st(f, n), c);\n                }\n                return o;\n            }\n            function Hc(n) {\n                return function(t) {\n                    return _t(t, n);\n                };\n            }\n            function ti(n, t, e, r) {\n                var s = r ? rf : Tt, o = -1, f = t.length, c = n;\n                for(n === t && (t = un(t)), e && (c = G(n, hn(e))); ++o < f;)for(var l = 0, v = t[o], _ = e ? e(v) : v; (l = s(c, _, l, r)) > -1;)c !== n && Ne.call(c, l, 1), Ne.call(n, l, 1);\n                return n;\n            }\n            function ru(n, t) {\n                for(var e = n ? t.length : 0, r = e - 1; e--;){\n                    var s = t[e];\n                    if (e == r || s !== o) {\n                        var o = s;\n                        Zn(s) ? Ne.call(n, s, 1) : si(n, s);\n                    }\n                }\n                return n;\n            }\n            function ei(n, t) {\n                return n + We(Us() * (t - n + 1));\n            }\n            function Nc(n, t, e, r) {\n                for(var s = -1, o = Q(Ue((t - n) / (e || 1)), 0), f = p(o); o--;)f[r ? o : ++s] = n, n += e;\n                return f;\n            }\n            function ri(n, t) {\n                var e = \"\";\n                if (!n || t < 1 || t > kn) return e;\n                do t % 2 && (e += n), t = We(t / 2), t && (n += n);\n                while (t);\n                return e;\n            }\n            function L(n, t) {\n                return Pi(Du(n, t, fn), n + \"\");\n            }\n            function $c(n) {\n                return Ms(Gt(n));\n            }\n            function Uc(n, t) {\n                var e = Gt(n);\n                return tr(e, vt(t, 0, e.length));\n            }\n            function fe(n, t, e, r) {\n                if (!K(n)) return n;\n                t = st(t, n);\n                for(var s = -1, o = t.length, f = o - 1, c = n; c != null && ++s < o;){\n                    var l = Wn(t[s]), v = e;\n                    if (l === \"__proto__\" || l === \"constructor\" || l === \"prototype\") return n;\n                    if (s != f) {\n                        var _ = c[l];\n                        v = r ? r(_, l, c) : i, v === i && (v = K(_) ? _ : Zn(t[s + 1]) ? [] : {});\n                    }\n                    se(c, l, v), c = c[l];\n                }\n                return n;\n            }\n            var iu = Fe ? function(n, t) {\n                return Fe.set(n, t), n;\n            } : fn, Wc = $e ? function(n, t) {\n                return $e(n, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: bi(t),\n                    writable: !0\n                });\n            } : fn;\n            function Fc(n) {\n                return tr(Gt(n));\n            }\n            function Cn(n, t, e) {\n                var r = -1, s = n.length;\n                t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;\n                for(var o = p(s); ++r < s;)o[r] = n[r + t];\n                return o;\n            }\n            function Mc(n, t) {\n                var e;\n                return rt(n, function(r, s, o) {\n                    return e = t(r, s, o), !e;\n                }), !!e;\n            }\n            function Ye(n, t, e) {\n                var r = 0, s = n == null ? r : n.length;\n                if (typeof t == \"number\" && t === t && s <= Ma) {\n                    for(; r < s;){\n                        var o = r + s >>> 1, f = n[o];\n                        f !== null && !pn(f) && (e ? f <= t : f < t) ? r = o + 1 : s = o;\n                    }\n                    return s;\n                }\n                return ii(n, t, fn, e);\n            }\n            function ii(n, t, e, r) {\n                var s = 0, o = n == null ? 0 : n.length;\n                if (o === 0) return 0;\n                t = e(t);\n                for(var f = t !== t, c = t === null, l = pn(t), v = t === i; s < o;){\n                    var _ = We((s + o) / 2), m = e(n[_]), P = m !== i, I = m === null, E = m === m, b = pn(m);\n                    if (f) var y = r || E;\n                    else v ? y = E && (r || P) : c ? y = E && P && (r || !I) : l ? y = E && P && !I && (r || !b) : I || b ? y = !1 : y = r ? m <= t : m < t;\n                    y ? s = _ + 1 : o = _;\n                }\n                return nn(o, Fa);\n            }\n            function su(n, t) {\n                for(var e = -1, r = n.length, s = 0, o = []; ++e < r;){\n                    var f = n[e], c = t ? t(f) : f;\n                    if (!e || !bn(c, l)) {\n                        var l = c;\n                        o[s++] = f === 0 ? 0 : f;\n                    }\n                }\n                return o;\n            }\n            function uu(n) {\n                return typeof n == \"number\" ? n : pn(n) ? _e : +n;\n            }\n            function ln(n) {\n                if (typeof n == \"string\") return n;\n                if (O(n)) return G(n, ln) + \"\";\n                if (pn(n)) return Ws ? Ws.call(n) : \"\";\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function it(n, t, e) {\n                var r = -1, s = Ee, o = n.length, f = !0, c = [], l = c;\n                if (e) f = !1, s = Dr;\n                else if (o >= w) {\n                    var v = t ? null : Vc(n);\n                    if (v) return Se(v);\n                    f = !1, s = jt, l = new gt;\n                } else l = t ? [] : c;\n                n: for(; ++r < o;){\n                    var _ = n[r], m = t ? t(_) : _;\n                    if (_ = e || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var P = l.length; P--;)if (l[P] === m) continue n;\n                        t && l.push(m), c.push(_);\n                    } else s(l, m, e) || (l !== c && l.push(m), c.push(_));\n                }\n                return c;\n            }\n            function si(n, t) {\n                return t = st(t, n), n = Hu(n, t), n == null || delete n[Wn(In(t))];\n            }\n            function au(n, t, e, r) {\n                return fe(n, t, e(_t(n, t)), r);\n            }\n            function Ze(n, t, e, r) {\n                for(var s = n.length, o = r ? s : -1; (r ? o-- : ++o < s) && t(n[o], o, n););\n                return e ? Cn(n, r ? 0 : o, r ? o + 1 : s) : Cn(n, r ? o + 1 : 0, r ? s : o);\n            }\n            function ou(n, t) {\n                var e = n;\n                return e instanceof H && (e = e.value()), Hr(t, function(r, s) {\n                    return s.func.apply(s.thisArg, nt([\n                        r\n                    ], s.args));\n                }, e);\n            }\n            function ui(n, t, e) {\n                var r = n.length;\n                if (r < 2) return r ? it(n[0]) : [];\n                for(var s = -1, o = p(r); ++s < r;)for(var f = n[s], c = -1; ++c < r;)c != s && (o[s] = ue(o[s] || f, n[c], t, e));\n                return it(j(o, 1), t, e);\n            }\n            function fu(n, t, e) {\n                for(var r = -1, s = n.length, o = t.length, f = {}; ++r < s;){\n                    var c = r < o ? t[r] : i;\n                    e(f, n[r], c);\n                }\n                return f;\n            }\n            function ai(n) {\n                return Z(n) ? n : [];\n            }\n            function oi(n) {\n                return typeof n == \"function\" ? n : fn;\n            }\n            function st(n, t) {\n                return O(n) ? n : _i(n, t) ? [\n                    n\n                ] : Wu(W(n));\n            }\n            var qc = L;\n            function ut(n, t, e) {\n                var r = n.length;\n                return e = e === i ? r : e, !t && e >= r ? n : Cn(n, t, e);\n            }\n            var cu = Of || function(n) {\n                return k.clearTimeout(n);\n            };\n            function hu(n, t) {\n                if (t) return n.slice();\n                var e = n.length, r = Ls ? Ls(e) : new n.constructor(e);\n                return n.copy(r), r;\n            }\n            function fi(n) {\n                var t = new n.constructor(n.byteLength);\n                return new De(t).set(new De(n)), t;\n            }\n            function Bc(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.byteLength);\n            }\n            function Gc(n) {\n                var t = new n.constructor(n.source, Ji.exec(n));\n                return t.lastIndex = n.lastIndex, t;\n            }\n            function zc(n) {\n                return ie ? M(ie.call(n)) : {};\n            }\n            function lu(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.length);\n            }\n            function pu(n, t) {\n                if (n !== t) {\n                    var e = n !== i, r = n === null, s = n === n, o = pn(n), f = t !== i, c = t === null, l = t === t, v = pn(t);\n                    if (!c && !v && !o && n > t || o && f && l && !c && !v || r && f && l || !e && l || !s) return 1;\n                    if (!r && !o && !v && n < t || v && e && s && !r && !o || c && e && s || !f && s || !l) return -1;\n                }\n                return 0;\n            }\n            function Kc(n, t, e) {\n                for(var r = -1, s = n.criteria, o = t.criteria, f = s.length, c = e.length; ++r < f;){\n                    var l = pu(s[r], o[r]);\n                    if (l) {\n                        if (r >= c) return l;\n                        var v = e[r];\n                        return l * (v == \"desc\" ? -1 : 1);\n                    }\n                }\n                return n.index - t.index;\n            }\n            function du(n, t, e, r) {\n                for(var s = -1, o = n.length, f = e.length, c = -1, l = t.length, v = Q(o - f, 0), _ = p(l + v), m = !r; ++c < l;)_[c] = t[c];\n                for(; ++s < f;)(m || s < o) && (_[e[s]] = n[s]);\n                for(; v--;)_[c++] = n[s++];\n                return _;\n            }\n            function gu(n, t, e, r) {\n                for(var s = -1, o = n.length, f = -1, c = e.length, l = -1, v = t.length, _ = Q(o - c, 0), m = p(_ + v), P = !r; ++s < _;)m[s] = n[s];\n                for(var I = s; ++l < v;)m[I + l] = t[l];\n                for(; ++f < c;)(P || s < o) && (m[I + e[f]] = n[s++]);\n                return m;\n            }\n            function un(n, t) {\n                var e = -1, r = n.length;\n                for(t || (t = p(r)); ++e < r;)t[e] = n[e];\n                return t;\n            }\n            function Un(n, t, e, r) {\n                var s = !e;\n                e || (e = {});\n                for(var o = -1, f = t.length; ++o < f;){\n                    var c = t[o], l = r ? r(e[c], n[c], c, e, n) : i;\n                    l === i && (l = n[c]), s ? zn(e, c, l) : se(e, c, l);\n                }\n                return e;\n            }\n            function Yc(n, t) {\n                return Un(n, vi(n), t);\n            }\n            function Zc(n, t) {\n                return Un(n, Ou(n), t);\n            }\n            function Je(n, t) {\n                return function(e, r) {\n                    var s = O(e) ? Vo : gc, o = t ? t() : {};\n                    return s(e, n, x(r, 2), o);\n                };\n            }\n            function Ft(n) {\n                return L(function(t, e) {\n                    var r = -1, s = e.length, o = s > 1 ? e[s - 1] : i, f = s > 2 ? e[2] : i;\n                    for(o = n.length > 3 && typeof o == \"function\" ? (s--, o) : i, f && rn(e[0], e[1], f) && (o = s < 3 ? i : o, s = 1), t = M(t); ++r < s;){\n                        var c = e[r];\n                        c && n(t, c, r, o);\n                    }\n                    return t;\n                });\n            }\n            function vu(n, t) {\n                return function(e, r) {\n                    if (e == null) return e;\n                    if (!an(e)) return n(e, r);\n                    for(var s = e.length, o = t ? s : -1, f = M(e); (t ? o-- : ++o < s) && r(f[o], o, f) !== !1;);\n                    return e;\n                };\n            }\n            function _u(n) {\n                return function(t, e, r) {\n                    for(var s = -1, o = M(t), f = r(t), c = f.length; c--;){\n                        var l = f[n ? c : ++s];\n                        if (e(o[l], l, o) === !1) break;\n                    }\n                    return t;\n                };\n            }\n            function Jc(n, t, e) {\n                var r = t & vn, s = ce(n);\n                function o() {\n                    var f = this && this !== k && this instanceof o ? s : n;\n                    return f.apply(r ? e : this, arguments);\n                }\n                return o;\n            }\n            function mu(n) {\n                return function(t) {\n                    t = W(t);\n                    var e = Lt(t) ? On(t) : i, r = e ? e[0] : t.charAt(0), s = e ? ut(e, 1).join(\"\") : t.slice(1);\n                    return r[n]() + s;\n                };\n            }\n            function Mt(n) {\n                return function(t) {\n                    return Hr(va(ga(t).replace(Uo, \"\")), n, \"\");\n                };\n            }\n            function ce(n) {\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return new n;\n                        case 1:\n                            return new n(t[0]);\n                        case 2:\n                            return new n(t[0], t[1]);\n                        case 3:\n                            return new n(t[0], t[1], t[2]);\n                        case 4:\n                            return new n(t[0], t[1], t[2], t[3]);\n                        case 5:\n                            return new n(t[0], t[1], t[2], t[3], t[4]);\n                        case 6:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5]);\n                        case 7:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    var e = Wt(n.prototype), r = n.apply(e, t);\n                    return K(r) ? r : e;\n                };\n            }\n            function Xc(n, t, e) {\n                var r = ce(n);\n                function s() {\n                    for(var o = arguments.length, f = p(o), c = o, l = qt(s); c--;)f[c] = arguments[c];\n                    var v = o < 3 && f[0] !== l && f[o - 1] !== l ? [] : tt(f, l);\n                    if (o -= v.length, o < e) return Iu(n, t, Xe, s.placeholder, i, f, v, i, i, e - o);\n                    var _ = this && this !== k && this instanceof s ? r : n;\n                    return cn(_, this, f);\n                }\n                return s;\n            }\n            function wu(n) {\n                return function(t, e, r) {\n                    var s = M(t);\n                    if (!an(t)) {\n                        var o = x(e, 3);\n                        t = V(t), e = function(c) {\n                            return o(s[c], c, s);\n                        };\n                    }\n                    var f = n(t, e, r);\n                    return f > -1 ? s[o ? t[f] : f] : i;\n                };\n            }\n            function Pu(n) {\n                return Yn(function(t) {\n                    var e = t.length, r = e, s = Pn.prototype.thru;\n                    for(n && t.reverse(); r--;){\n                        var o = t[r];\n                        if (typeof o != \"function\") throw new wn($);\n                        if (s && !f && je(o) == \"wrapper\") var f = new Pn([], !0);\n                    }\n                    for(r = f ? r : e; ++r < e;){\n                        o = t[r];\n                        var c = je(o), l = c == \"wrapper\" ? di(o) : i;\n                        l && mi(l[0]) && l[1] == (Mn | Dn | Hn | Kt) && !l[4].length && l[9] == 1 ? f = f[je(l[0])].apply(f, l[3]) : f = o.length == 1 && mi(o) ? f[c]() : f.thru(o);\n                    }\n                    return function() {\n                        var v = arguments, _ = v[0];\n                        if (f && v.length == 1 && O(_)) return f.plant(_).value();\n                        for(var m = 0, P = e ? t[m].apply(this, v) : _; ++m < e;)P = t[m].call(this, P);\n                        return P;\n                    };\n                });\n            }\n            function Xe(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Mn, m = t & vn, P = t & ct, I = t & (Dn | yt), E = t & dr, b = P ? i : ce(n);\n                function y() {\n                    for(var D = arguments.length, N = p(D), dn = D; dn--;)N[dn] = arguments[dn];\n                    if (I) var sn = qt(y), gn = af(N, sn);\n                    if (r && (N = du(N, r, s, I)), o && (N = gu(N, o, f, I)), D -= gn, I && D < v) {\n                        var J = tt(N, sn);\n                        return Iu(n, t, Xe, y.placeholder, e, N, J, c, l, v - D);\n                    }\n                    var Tn = m ? e : this, Qn = P ? Tn[n] : n;\n                    return D = N.length, c ? N = gh(N, c) : E && D > 1 && N.reverse(), _ && l < D && (N.length = l), this && this !== k && this instanceof y && (Qn = b || ce(Qn)), Qn.apply(Tn, N);\n                }\n                return y;\n            }\n            function Au(n, t) {\n                return function(e, r) {\n                    return Ic(e, n, t(r), {});\n                };\n            }\n            function Qe(n, t) {\n                return function(e, r) {\n                    var s;\n                    if (e === i && r === i) return t;\n                    if (e !== i && (s = e), r !== i) {\n                        if (s === i) return r;\n                        typeof e == \"string\" || typeof r == \"string\" ? (e = ln(e), r = ln(r)) : (e = uu(e), r = uu(r)), s = n(e, r);\n                    }\n                    return s;\n                };\n            }\n            function ci(n) {\n                return Yn(function(t) {\n                    return t = G(t, hn(x())), L(function(e) {\n                        var r = this;\n                        return n(t, function(s) {\n                            return cn(s, r, e);\n                        });\n                    });\n                });\n            }\n            function Ve(n, t) {\n                t = t === i ? \" \" : ln(t);\n                var e = t.length;\n                if (e < 2) return e ? ri(t, n) : t;\n                var r = ri(t, Ue(n / Dt(t)));\n                return Lt(t) ? ut(On(r), 0, n).join(\"\") : r.slice(0, n);\n            }\n            function Qc(n, t, e, r) {\n                var s = t & vn, o = ce(n);\n                function f() {\n                    for(var c = -1, l = arguments.length, v = -1, _ = r.length, m = p(_ + l), P = this && this !== k && this instanceof f ? o : n; ++v < _;)m[v] = r[v];\n                    for(; l--;)m[v++] = arguments[++c];\n                    return cn(P, s ? e : this, m);\n                }\n                return f;\n            }\n            function Cu(n) {\n                return function(t, e, r) {\n                    return r && typeof r != \"number\" && rn(t, e, r) && (e = r = i), t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), r = r === i ? t < e ? 1 : -1 : Xn(r), Nc(t, e, r, n);\n                };\n            }\n            function ke(n) {\n                return function(t, e) {\n                    return typeof t == \"string\" && typeof e == \"string\" || (t = xn(t), e = xn(e)), n(t, e);\n                };\n            }\n            function Iu(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Dn, m = _ ? f : i, P = _ ? i : f, I = _ ? o : i, E = _ ? i : o;\n                t |= _ ? Hn : St, t &= ~(_ ? St : Hn), t & qi || (t &= ~(vn | ct));\n                var b = [\n                    n,\n                    t,\n                    s,\n                    I,\n                    m,\n                    E,\n                    P,\n                    c,\n                    l,\n                    v\n                ], y = e.apply(i, b);\n                return mi(n) && Nu(y, b), y.placeholder = r, $u(y, n, t);\n            }\n            function hi(n) {\n                var t = X[n];\n                return function(e, r) {\n                    if (e = xn(e), r = r == null ? 0 : nn(R(r), 292), r && $s(e)) {\n                        var s = (W(e) + \"e\").split(\"e\"), o = t(s[0] + \"e\" + (+s[1] + r));\n                        return s = (W(o) + \"e\").split(\"e\"), +(s[0] + \"e\" + (+s[1] - r));\n                    }\n                    return t(e);\n                };\n            }\n            var Vc = $t && 1 / Se(new $t([\n                ,\n                -0\n            ]))[1] == ht ? function(n) {\n                return new $t(n);\n            } : Di;\n            function xu(n) {\n                return function(t) {\n                    var e = tn(t);\n                    return e == yn ? qr(t) : e == Sn ? df(t) : uf(t, n(t));\n                };\n            }\n            function Kn(n, t, e, r, s, o, f, c) {\n                var l = t & ct;\n                if (!l && typeof n != \"function\") throw new wn($);\n                var v = r ? r.length : 0;\n                if (v || (t &= ~(Hn | St), r = s = i), f = f === i ? f : Q(R(f), 0), c = c === i ? c : R(c), v -= s ? s.length : 0, t & St) {\n                    var _ = r, m = s;\n                    r = s = i;\n                }\n                var P = l ? i : di(n), I = [\n                    n,\n                    t,\n                    e,\n                    r,\n                    s,\n                    _,\n                    m,\n                    o,\n                    f,\n                    c\n                ];\n                if (P && lh(I, P), n = I[0], t = I[1], e = I[2], r = I[3], s = I[4], c = I[9] = I[9] === i ? l ? 0 : n.length : Q(I[9] - v, 0), !c && t & (Dn | yt) && (t &= ~(Dn | yt)), !t || t == vn) var E = Jc(n, t, e);\n                else t == Dn || t == yt ? E = Xc(n, t, c) : (t == Hn || t == (vn | Hn)) && !s.length ? E = Qc(n, t, e, r) : E = Xe.apply(i, I);\n                var b = P ? iu : Nu;\n                return $u(b(E, I), n, t);\n            }\n            function Eu(n, t, e, r) {\n                return n === i || bn(n, Nt[e]) && !F.call(r, e) ? t : n;\n            }\n            function yu(n, t, e, r, s, o) {\n                return K(n) && K(t) && (o.set(t, n), Ke(n, t, i, yu, o), o.delete(t)), n;\n            }\n            function kc(n) {\n                return pe(n) ? i : n;\n            }\n            function Su(n, t, e, r, s, o) {\n                var f = e & Et, c = n.length, l = t.length;\n                if (c != l && !(f && l > c)) return !1;\n                var v = o.get(n), _ = o.get(t);\n                if (v && _) return v == t && _ == n;\n                var m = -1, P = !0, I = e & ve ? new gt : i;\n                for(o.set(n, t), o.set(t, n); ++m < c;){\n                    var E = n[m], b = t[m];\n                    if (r) var y = f ? r(b, E, m, t, n, o) : r(E, b, m, n, t, o);\n                    if (y !== i) {\n                        if (y) continue;\n                        P = !1;\n                        break;\n                    }\n                    if (I) {\n                        if (!Nr(t, function(D, N) {\n                            if (!jt(I, N) && (E === D || s(E, D, e, r, o))) return I.push(N);\n                        })) {\n                            P = !1;\n                            break;\n                        }\n                    } else if (!(E === b || s(E, b, e, r, o))) {\n                        P = !1;\n                        break;\n                    }\n                }\n                return o.delete(n), o.delete(t), P;\n            }\n            function jc(n, t, e, r, s, o, f) {\n                switch(e){\n                    case Rt:\n                        if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) return !1;\n                        n = n.buffer, t = t.buffer;\n                    case kt:\n                        return !(n.byteLength != t.byteLength || !o(new De(n), new De(t)));\n                    case Yt:\n                    case Zt:\n                    case Jt:\n                        return bn(+n, +t);\n                    case we:\n                        return n.name == t.name && n.message == t.message;\n                    case Xt:\n                    case Qt:\n                        return n == t + \"\";\n                    case yn:\n                        var c = qr;\n                    case Sn:\n                        var l = r & Et;\n                        if (c || (c = Se), n.size != t.size && !l) return !1;\n                        var v = f.get(n);\n                        if (v) return v == t;\n                        r |= ve, f.set(n, t);\n                        var _ = Su(c(n), c(t), r, s, o, f);\n                        return f.delete(n), _;\n                    case Ae:\n                        if (ie) return ie.call(n) == ie.call(t);\n                }\n                return !1;\n            }\n            function nh(n, t, e, r, s, o) {\n                var f = e & Et, c = li(n), l = c.length, v = li(t), _ = v.length;\n                if (l != _ && !f) return !1;\n                for(var m = l; m--;){\n                    var P = c[m];\n                    if (!(f ? P in t : F.call(t, P))) return !1;\n                }\n                var I = o.get(n), E = o.get(t);\n                if (I && E) return I == t && E == n;\n                var b = !0;\n                o.set(n, t), o.set(t, n);\n                for(var y = f; ++m < l;){\n                    P = c[m];\n                    var D = n[P], N = t[P];\n                    if (r) var dn = f ? r(N, D, P, t, n, o) : r(D, N, P, n, t, o);\n                    if (!(dn === i ? D === N || s(D, N, e, r, o) : dn)) {\n                        b = !1;\n                        break;\n                    }\n                    y || (y = P == \"constructor\");\n                }\n                if (b && !y) {\n                    var sn = n.constructor, gn = t.constructor;\n                    sn != gn && \"constructor\" in n && \"constructor\" in t && !(typeof sn == \"function\" && sn instanceof sn && typeof gn == \"function\" && gn instanceof gn) && (b = !1);\n                }\n                return o.delete(n), o.delete(t), b;\n            }\n            function Yn(n) {\n                return Pi(Du(n, i, Bu), n + \"\");\n            }\n            function li(n) {\n                return Zs(n, V, vi);\n            }\n            function pi(n) {\n                return Zs(n, on, Ou);\n            }\n            var di = Fe ? function(n) {\n                return Fe.get(n);\n            } : Di;\n            function je(n) {\n                for(var t = n.name + \"\", e = Ut[t], r = F.call(Ut, t) ? e.length : 0; r--;){\n                    var s = e[r], o = s.func;\n                    if (o == null || o == n) return s.name;\n                }\n                return t;\n            }\n            function qt(n) {\n                var t = F.call(a, \"placeholder\") ? a : n;\n                return t.placeholder;\n            }\n            function x() {\n                var n = a.iteratee || Ti;\n                return n = n === Ti ? Qs : n, arguments.length ? n(arguments[0], arguments[1]) : n;\n            }\n            function nr(n, t) {\n                var e = n.__data__;\n                return oh(t) ? e[typeof t == \"string\" ? \"string\" : \"hash\"] : e.map;\n            }\n            function gi(n) {\n                for(var t = V(n), e = t.length; e--;){\n                    var r = t[e], s = n[r];\n                    t[e] = [\n                        r,\n                        s,\n                        Tu(s)\n                    ];\n                }\n                return t;\n            }\n            function mt(n, t) {\n                var e = hf(n, t);\n                return Xs(e) ? e : i;\n            }\n            function th(n) {\n                var t = F.call(n, pt), e = n[pt];\n                try {\n                    n[pt] = i;\n                    var r = !0;\n                } catch  {}\n                var s = Te.call(n);\n                return r && (t ? n[pt] = e : delete n[pt]), s;\n            }\n            var vi = Gr ? function(n) {\n                return n == null ? [] : (n = M(n), jn(Gr(n), function(t) {\n                    return Hs.call(n, t);\n                }));\n            } : Hi, Ou = Gr ? function(n) {\n                for(var t = []; n;)nt(t, vi(n)), n = He(n);\n                return t;\n            } : Hi, tn = en;\n            (zr && tn(new zr(new ArrayBuffer(1))) != Rt || te && tn(new te) != yn || Kr && tn(Kr.resolve()) != zi || $t && tn(new $t) != Sn || ee && tn(new ee) != Vt) && (tn = function(n) {\n                var t = en(n), e = t == qn ? n.constructor : i, r = e ? wt(e) : \"\";\n                if (r) switch(r){\n                    case Uf:\n                        return Rt;\n                    case Wf:\n                        return yn;\n                    case Ff:\n                        return zi;\n                    case Mf:\n                        return Sn;\n                    case qf:\n                        return Vt;\n                }\n                return t;\n            });\n            function eh(n, t, e) {\n                for(var r = -1, s = e.length; ++r < s;){\n                    var o = e[r], f = o.size;\n                    switch(o.type){\n                        case \"drop\":\n                            n += f;\n                            break;\n                        case \"dropRight\":\n                            t -= f;\n                            break;\n                        case \"take\":\n                            t = nn(t, n + f);\n                            break;\n                        case \"takeRight\":\n                            n = Q(n, t - f);\n                            break;\n                    }\n                }\n                return {\n                    start: n,\n                    end: t\n                };\n            }\n            function rh(n) {\n                var t = n.match(ao);\n                return t ? t[1].split(oo) : [];\n            }\n            function Ru(n, t, e) {\n                t = st(t, n);\n                for(var r = -1, s = t.length, o = !1; ++r < s;){\n                    var f = Wn(t[r]);\n                    if (!(o = n != null && e(n, f))) break;\n                    n = n[f];\n                }\n                return o || ++r != s ? o : (s = n == null ? 0 : n.length, !!s && ar(s) && Zn(f, s) && (O(n) || Pt(n)));\n            }\n            function ih(n) {\n                var t = n.length, e = new n.constructor(t);\n                return t && typeof n[0] == \"string\" && F.call(n, \"index\") && (e.index = n.index, e.input = n.input), e;\n            }\n            function bu(n) {\n                return typeof n.constructor == \"function\" && !he(n) ? Wt(He(n)) : {};\n            }\n            function sh(n, t, e) {\n                var r = n.constructor;\n                switch(t){\n                    case kt:\n                        return fi(n);\n                    case Yt:\n                    case Zt:\n                        return new r(+n);\n                    case Rt:\n                        return Bc(n, e);\n                    case gr:\n                    case vr:\n                    case _r:\n                    case mr:\n                    case wr:\n                    case Pr:\n                    case Ar:\n                    case Cr:\n                    case Ir:\n                        return lu(n, e);\n                    case yn:\n                        return new r;\n                    case Jt:\n                    case Qt:\n                        return new r(n);\n                    case Xt:\n                        return Gc(n);\n                    case Sn:\n                        return new r;\n                    case Ae:\n                        return zc(n);\n                }\n            }\n            function uh(n, t) {\n                var e = t.length;\n                if (!e) return n;\n                var r = e - 1;\n                return t[r] = (e > 1 ? \"& \" : \"\") + t[r], t = t.join(e > 2 ? \", \" : \" \"), n.replace(uo, `{\n/* [wrapped with ` + t + `] */\n`);\n            }\n            function ah(n) {\n                return O(n) || Pt(n) || !!(Ns && n && n[Ns]);\n            }\n            function Zn(n, t) {\n                var e = typeof n;\n                return t = t ?? kn, !!t && (e == \"number\" || e != \"symbol\" && mo.test(n)) && n > -1 && n % 1 == 0 && n < t;\n            }\n            function rn(n, t, e) {\n                if (!K(e)) return !1;\n                var r = typeof t;\n                return (r == \"number\" ? an(e) && Zn(t, e.length) : r == \"string\" && t in e) ? bn(e[t], n) : !1;\n            }\n            function _i(n, t) {\n                if (O(n)) return !1;\n                var e = typeof n;\n                return e == \"number\" || e == \"symbol\" || e == \"boolean\" || n == null || pn(n) ? !0 : eo.test(n) || !to.test(n) || t != null && n in M(t);\n            }\n            function oh(n) {\n                var t = typeof n;\n                return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? n !== \"__proto__\" : n === null;\n            }\n            function mi(n) {\n                var t = je(n), e = a[t];\n                if (typeof e != \"function\" || !(t in H.prototype)) return !1;\n                if (n === e) return !0;\n                var r = di(e);\n                return !!r && n === r[0];\n            }\n            function fh(n) {\n                return !!Ts && Ts in n;\n            }\n            var ch = Re ? Jn : Ni;\n            function he(n) {\n                var t = n && n.constructor, e = typeof t == \"function\" && t.prototype || Nt;\n                return n === e;\n            }\n            function Tu(n) {\n                return n === n && !K(n);\n            }\n            function Lu(n, t) {\n                return function(e) {\n                    return e == null ? !1 : e[n] === t && (t !== i || n in M(e));\n                };\n            }\n            function hh(n) {\n                var t = sr(n, function(r) {\n                    return e.size === pr && e.clear(), r;\n                }), e = t.cache;\n                return t;\n            }\n            function lh(n, t) {\n                var e = n[1], r = t[1], s = e | r, o = s < (vn | ct | Mn), f = r == Mn && e == Dn || r == Mn && e == Kt && n[7].length <= t[8] || r == (Mn | Kt) && t[7].length <= t[8] && e == Dn;\n                if (!(o || f)) return n;\n                r & vn && (n[2] = t[2], s |= e & vn ? 0 : qi);\n                var c = t[3];\n                if (c) {\n                    var l = n[3];\n                    n[3] = l ? du(l, c, t[4]) : c, n[4] = l ? tt(n[3], It) : t[4];\n                }\n                return c = t[5], c && (l = n[5], n[5] = l ? gu(l, c, t[6]) : c, n[6] = l ? tt(n[5], It) : t[6]), c = t[7], c && (n[7] = c), r & Mn && (n[8] = n[8] == null ? t[8] : nn(n[8], t[8])), n[9] == null && (n[9] = t[9]), n[0] = t[0], n[1] = s, n;\n            }\n            function ph(n) {\n                var t = [];\n                if (n != null) for(var e in M(n))t.push(e);\n                return t;\n            }\n            function dh(n) {\n                return Te.call(n);\n            }\n            function Du(n, t, e) {\n                return t = Q(t === i ? n.length - 1 : t, 0), function() {\n                    for(var r = arguments, s = -1, o = Q(r.length - t, 0), f = p(o); ++s < o;)f[s] = r[t + s];\n                    s = -1;\n                    for(var c = p(t + 1); ++s < t;)c[s] = r[s];\n                    return c[t] = e(f), cn(n, this, c);\n                };\n            }\n            function Hu(n, t) {\n                return t.length < 2 ? n : _t(n, Cn(t, 0, -1));\n            }\n            function gh(n, t) {\n                for(var e = n.length, r = nn(t.length, e), s = un(n); r--;){\n                    var o = t[r];\n                    n[r] = Zn(o, e) ? s[o] : i;\n                }\n                return n;\n            }\n            function wi(n, t) {\n                if (!(t === \"constructor\" && typeof n[t] == \"function\") && t != \"__proto__\") return n[t];\n            }\n            var Nu = Uu(iu), le = bf || function(n, t) {\n                return k.setTimeout(n, t);\n            }, Pi = Uu(Wc);\n            function $u(n, t, e) {\n                var r = t + \"\";\n                return Pi(n, uh(r, vh(rh(r), e)));\n            }\n            function Uu(n) {\n                var t = 0, e = 0;\n                return function() {\n                    var r = Hf(), s = Na - (r - e);\n                    if (e = r, s > 0) {\n                        if (++t >= Ha) return arguments[0];\n                    } else t = 0;\n                    return n.apply(i, arguments);\n                };\n            }\n            function tr(n, t) {\n                var e = -1, r = n.length, s = r - 1;\n                for(t = t === i ? r : t; ++e < t;){\n                    var o = ei(e, s), f = n[o];\n                    n[o] = n[e], n[e] = f;\n                }\n                return n.length = t, n;\n            }\n            var Wu = hh(function(n) {\n                var t = [];\n                return n.charCodeAt(0) === 46 && t.push(\"\"), n.replace(ro, function(e, r, s, o) {\n                    t.push(s ? o.replace(ho, \"$1\") : r || e);\n                }), t;\n            });\n            function Wn(n) {\n                if (typeof n == \"string\" || pn(n)) return n;\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function wt(n) {\n                if (n != null) {\n                    try {\n                        return be.call(n);\n                    } catch  {}\n                    try {\n                        return n + \"\";\n                    } catch  {}\n                }\n                return \"\";\n            }\n            function vh(n, t) {\n                return mn(qa, function(e) {\n                    var r = \"_.\" + e[0];\n                    t & e[1] && !Ee(n, r) && n.push(r);\n                }), n.sort();\n            }\n            function Fu(n) {\n                if (n instanceof H) return n.clone();\n                var t = new Pn(n.__wrapped__, n.__chain__);\n                return t.__actions__ = un(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;\n            }\n            function _h(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = Q(R(t), 0);\n                var r = n == null ? 0 : n.length;\n                if (!r || t < 1) return [];\n                for(var s = 0, o = 0, f = p(Ue(r / t)); s < r;)f[o++] = Cn(n, s, s += t);\n                return f;\n            }\n            function mh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = 0, s = []; ++t < e;){\n                    var o = n[t];\n                    o && (s[r++] = o);\n                }\n                return s;\n            }\n            function wh() {\n                var n = arguments.length;\n                if (!n) return [];\n                for(var t = p(n - 1), e = arguments[0], r = n; r--;)t[r - 1] = arguments[r];\n                return nt(O(e) ? un(e) : [\n                    e\n                ], j(t, 1));\n            }\n            var Ph = L(function(n, t) {\n                return Z(n) ? ue(n, j(t, 1, Z, !0)) : [];\n            }), Ah = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), x(e, 2)) : [];\n            }), Ch = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), i, e) : [];\n            });\n            function Ih(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function xh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), t = r - t, Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function Eh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0, !0) : [];\n            }\n            function yh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0) : [];\n            }\n            function Sh(n, t, e, r) {\n                var s = n == null ? 0 : n.length;\n                return s ? (e && typeof e != \"number\" && rn(n, t, e) && (e = 0, r = s), wc(n, t, e, r)) : [];\n            }\n            function Mu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : R(e);\n                return s < 0 && (s = Q(r + s, 0)), ye(n, x(t, 3), s);\n            }\n            function qu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r - 1;\n                return e !== i && (s = R(e), s = e < 0 ? Q(r + s, 0) : nn(s, r - 1)), ye(n, x(t, 3), s, !0);\n            }\n            function Bu(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, 1) : [];\n            }\n            function Oh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, ht) : [];\n            }\n            function Rh(n, t) {\n                var e = n == null ? 0 : n.length;\n                return e ? (t = t === i ? 1 : R(t), j(n, t)) : [];\n            }\n            function bh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = {}; ++t < e;){\n                    var s = n[t];\n                    r[s[0]] = s[1];\n                }\n                return r;\n            }\n            function Gu(n) {\n                return n && n.length ? n[0] : i;\n            }\n            function Th(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : R(e);\n                return s < 0 && (s = Q(r + s, 0)), Tt(n, t, s);\n            }\n            function Lh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 0, -1) : [];\n            }\n            var Dh = L(function(n) {\n                var t = G(n, ai);\n                return t.length && t[0] === n[0] ? Vr(t) : [];\n            }), Hh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t === In(e) ? t = i : e.pop(), e.length && e[0] === n[0] ? Vr(e, x(t, 2)) : [];\n            }), Nh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t = typeof t == \"function\" ? t : i, t && e.pop(), e.length && e[0] === n[0] ? Vr(e, i, t) : [];\n            });\n            function $h(n, t) {\n                return n == null ? \"\" : Lf.call(n, t);\n            }\n            function In(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? n[t - 1] : i;\n            }\n            function Uh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r;\n                return e !== i && (s = R(e), s = s < 0 ? Q(r + s, 0) : nn(s, r - 1)), t === t ? vf(n, t, s) : ye(n, Is, s, !0);\n            }\n            function Wh(n, t) {\n                return n && n.length ? nu(n, R(t)) : i;\n            }\n            var Fh = L(zu);\n            function zu(n, t) {\n                return n && n.length && t && t.length ? ti(n, t) : n;\n            }\n            function Mh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, x(e, 2)) : n;\n            }\n            function qh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, i, e) : n;\n            }\n            var Bh = Yn(function(n, t) {\n                var e = n == null ? 0 : n.length, r = Zr(n, t);\n                return ru(n, G(t, function(s) {\n                    return Zn(s, e) ? +s : s;\n                }).sort(pu)), r;\n            });\n            function Gh(n, t) {\n                var e = [];\n                if (!(n && n.length)) return e;\n                var r = -1, s = [], o = n.length;\n                for(t = x(t, 3); ++r < o;){\n                    var f = n[r];\n                    t(f, r, n) && (e.push(f), s.push(r));\n                }\n                return ru(n, s), e;\n            }\n            function Ai(n) {\n                return n == null ? n : $f.call(n);\n            }\n            function zh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (e && typeof e != \"number\" && rn(n, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : R(t), e = e === i ? r : R(e)), Cn(n, t, e)) : [];\n            }\n            function Kh(n, t) {\n                return Ye(n, t);\n            }\n            function Yh(n, t, e) {\n                return ii(n, t, x(e, 2));\n            }\n            function Zh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t);\n                    if (r < e && bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Jh(n, t) {\n                return Ye(n, t, !0);\n            }\n            function Xh(n, t, e) {\n                return ii(n, t, x(e, 2), !0);\n            }\n            function Qh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t, !0) - 1;\n                    if (bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Vh(n) {\n                return n && n.length ? su(n) : [];\n            }\n            function kh(n, t) {\n                return n && n.length ? su(n, x(t, 2)) : [];\n            }\n            function jh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 1, t) : [];\n            }\n            function nl(n, t, e) {\n                return n && n.length ? (t = e || t === i ? 1 : R(t), Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function tl(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : R(t), t = r - t, Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function el(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !1, !0) : [];\n            }\n            function rl(n, t) {\n                return n && n.length ? Ze(n, x(t, 3)) : [];\n            }\n            var il = L(function(n) {\n                return it(j(n, 1, Z, !0));\n            }), sl = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), it(j(n, 1, Z, !0), x(t, 2));\n            }), ul = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, it(j(n, 1, Z, !0), i, t);\n            });\n            function al(n) {\n                return n && n.length ? it(n) : [];\n            }\n            function ol(n, t) {\n                return n && n.length ? it(n, x(t, 2)) : [];\n            }\n            function fl(n, t) {\n                return t = typeof t == \"function\" ? t : i, n && n.length ? it(n, i, t) : [];\n            }\n            function Ci(n) {\n                if (!(n && n.length)) return [];\n                var t = 0;\n                return n = jn(n, function(e) {\n                    if (Z(e)) return t = Q(e.length, t), !0;\n                }), Fr(t, function(e) {\n                    return G(n, $r(e));\n                });\n            }\n            function Ku(n, t) {\n                if (!(n && n.length)) return [];\n                var e = Ci(n);\n                return t == null ? e : G(e, function(r) {\n                    return cn(t, i, r);\n                });\n            }\n            var cl = L(function(n, t) {\n                return Z(n) ? ue(n, t) : [];\n            }), hl = L(function(n) {\n                return ui(jn(n, Z));\n            }), ll = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), ui(jn(n, Z), x(t, 2));\n            }), pl = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, ui(jn(n, Z), i, t);\n            }), dl = L(Ci);\n            function gl(n, t) {\n                return fu(n || [], t || [], se);\n            }\n            function vl(n, t) {\n                return fu(n || [], t || [], fe);\n            }\n            var _l = L(function(n) {\n                var t = n.length, e = t > 1 ? n[t - 1] : i;\n                return e = typeof e == \"function\" ? (n.pop(), e) : i, Ku(n, e);\n            });\n            function Yu(n) {\n                var t = a(n);\n                return t.__chain__ = !0, t;\n            }\n            function ml(n, t) {\n                return t(n), n;\n            }\n            function er(n, t) {\n                return t(n);\n            }\n            var wl = Yn(function(n) {\n                var t = n.length, e = t ? n[0] : 0, r = this.__wrapped__, s = function(o) {\n                    return Zr(o, n);\n                };\n                return t > 1 || this.__actions__.length || !(r instanceof H) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({\n                    func: er,\n                    args: [\n                        s\n                    ],\n                    thisArg: i\n                }), new Pn(r, this.__chain__).thru(function(o) {\n                    return t && !o.length && o.push(i), o;\n                }));\n            });\n            function Pl() {\n                return Yu(this);\n            }\n            function Al() {\n                return new Pn(this.value(), this.__chain__);\n            }\n            function Cl() {\n                this.__values__ === i && (this.__values__ = ua(this.value()));\n                var n = this.__index__ >= this.__values__.length, t = n ? i : this.__values__[this.__index__++];\n                return {\n                    done: n,\n                    value: t\n                };\n            }\n            function Il() {\n                return this;\n            }\n            function xl(n) {\n                for(var t, e = this; e instanceof qe;){\n                    var r = Fu(e);\n                    r.__index__ = 0, r.__values__ = i, t ? s.__wrapped__ = r : t = r;\n                    var s = r;\n                    e = e.__wrapped__;\n                }\n                return s.__wrapped__ = n, t;\n            }\n            function El() {\n                var n = this.__wrapped__;\n                if (n instanceof H) {\n                    var t = n;\n                    return this.__actions__.length && (t = new H(this)), t = t.reverse(), t.__actions__.push({\n                        func: er,\n                        args: [\n                            Ai\n                        ],\n                        thisArg: i\n                    }), new Pn(t, this.__chain__);\n                }\n                return this.thru(Ai);\n            }\n            function yl() {\n                return ou(this.__wrapped__, this.__actions__);\n            }\n            var Sl = Je(function(n, t, e) {\n                F.call(n, e) ? ++n[e] : zn(n, e, 1);\n            });\n            function Ol(n, t, e) {\n                var r = O(n) ? As : mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            function Rl(n, t) {\n                var e = O(n) ? jn : Ks;\n                return e(n, x(t, 3));\n            }\n            var bl = wu(Mu), Tl = wu(qu);\n            function Ll(n, t) {\n                return j(rr(n, t), 1);\n            }\n            function Dl(n, t) {\n                return j(rr(n, t), ht);\n            }\n            function Hl(n, t, e) {\n                return e = e === i ? 1 : R(e), j(rr(n, t), e);\n            }\n            function Zu(n, t) {\n                var e = O(n) ? mn : rt;\n                return e(n, x(t, 3));\n            }\n            function Ju(n, t) {\n                var e = O(n) ? ko : zs;\n                return e(n, x(t, 3));\n            }\n            var Nl = Je(function(n, t, e) {\n                F.call(n, e) ? n[e].push(t) : zn(n, e, [\n                    t\n                ]);\n            });\n            function $l(n, t, e, r) {\n                n = an(n) ? n : Gt(n), e = e && !r ? R(e) : 0;\n                var s = n.length;\n                return e < 0 && (e = Q(s + e, 0)), or(n) ? e <= s && n.indexOf(t, e) > -1 : !!s && Tt(n, t, e) > -1;\n            }\n            var Ul = L(function(n, t, e) {\n                var r = -1, s = typeof t == \"function\", o = an(n) ? p(n.length) : [];\n                return rt(n, function(f) {\n                    o[++r] = s ? cn(t, f, e) : ae(f, t, e);\n                }), o;\n            }), Wl = Je(function(n, t, e) {\n                zn(n, e, t);\n            });\n            function rr(n, t) {\n                var e = O(n) ? G : Vs;\n                return e(n, x(t, 3));\n            }\n            function Fl(n, t, e, r) {\n                return n == null ? [] : (O(t) || (t = t == null ? [] : [\n                    t\n                ]), e = r ? i : e, O(e) || (e = e == null ? [] : [\n                    e\n                ]), tu(n, t, e));\n            }\n            var Ml = Je(function(n, t, e) {\n                n[e ? 0 : 1].push(t);\n            }, function() {\n                return [\n                    [],\n                    []\n                ];\n            });\n            function ql(n, t, e) {\n                var r = O(n) ? Hr : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, rt);\n            }\n            function Bl(n, t, e) {\n                var r = O(n) ? jo : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, zs);\n            }\n            function Gl(n, t) {\n                var e = O(n) ? jn : Ks;\n                return e(n, ur(x(t, 3)));\n            }\n            function zl(n) {\n                var t = O(n) ? Ms : $c;\n                return t(n);\n            }\n            function Kl(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = R(t);\n                var r = O(n) ? pc : Uc;\n                return r(n, t);\n            }\n            function Yl(n) {\n                var t = O(n) ? dc : Fc;\n                return t(n);\n            }\n            function Zl(n) {\n                if (n == null) return 0;\n                if (an(n)) return or(n) ? Dt(n) : n.length;\n                var t = tn(n);\n                return t == yn || t == Sn ? n.size : jr(n).length;\n            }\n            function Jl(n, t, e) {\n                var r = O(n) ? Nr : Mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            var Xl = L(function(n, t) {\n                if (n == null) return [];\n                var e = t.length;\n                return e > 1 && rn(n, t[0], t[1]) ? t = [] : e > 2 && rn(t[0], t[1], t[2]) && (t = [\n                    t[0]\n                ]), tu(n, j(t, 1), []);\n            }), ir = Rf || function() {\n                return k.Date.now();\n            };\n            function Ql(n, t) {\n                if (typeof t != \"function\") throw new wn($);\n                return n = R(n), function() {\n                    if (--n < 1) return t.apply(this, arguments);\n                };\n            }\n            function Xu(n, t, e) {\n                return t = e ? i : t, t = n && t == null ? n.length : t, Kn(n, Mn, i, i, i, i, t);\n            }\n            function Qu(n, t) {\n                var e;\n                if (typeof t != \"function\") throw new wn($);\n                return n = R(n), function() {\n                    return --n > 0 && (e = t.apply(this, arguments)), n <= 1 && (t = i), e;\n                };\n            }\n            var Ii = L(function(n, t, e) {\n                var r = vn;\n                if (e.length) {\n                    var s = tt(e, qt(Ii));\n                    r |= Hn;\n                }\n                return Kn(n, r, t, e, s);\n            }), Vu = L(function(n, t, e) {\n                var r = vn | ct;\n                if (e.length) {\n                    var s = tt(e, qt(Vu));\n                    r |= Hn;\n                }\n                return Kn(t, r, n, e, s);\n            });\n            function ku(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, Dn, i, i, i, i, i, t);\n                return r.placeholder = ku.placeholder, r;\n            }\n            function ju(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, yt, i, i, i, i, i, t);\n                return r.placeholder = ju.placeholder, r;\n            }\n            function na(n, t, e) {\n                var r, s, o, f, c, l, v = 0, _ = !1, m = !1, P = !0;\n                if (typeof n != \"function\") throw new wn($);\n                t = xn(t) || 0, K(e) && (_ = !!e.leading, m = \"maxWait\" in e, o = m ? Q(xn(e.maxWait) || 0, t) : o, P = \"trailing\" in e ? !!e.trailing : P);\n                function I(J) {\n                    var Tn = r, Qn = s;\n                    return r = s = i, v = J, f = n.apply(Qn, Tn), f;\n                }\n                function E(J) {\n                    return v = J, c = le(D, t), _ ? I(J) : f;\n                }\n                function b(J) {\n                    var Tn = J - l, Qn = J - v, wa = t - Tn;\n                    return m ? nn(wa, o - Qn) : wa;\n                }\n                function y(J) {\n                    var Tn = J - l, Qn = J - v;\n                    return l === i || Tn >= t || Tn < 0 || m && Qn >= o;\n                }\n                function D() {\n                    var J = ir();\n                    if (y(J)) return N(J);\n                    c = le(D, b(J));\n                }\n                function N(J) {\n                    return c = i, P && r ? I(J) : (r = s = i, f);\n                }\n                function dn() {\n                    c !== i && cu(c), v = 0, r = l = s = c = i;\n                }\n                function sn() {\n                    return c === i ? f : N(ir());\n                }\n                function gn() {\n                    var J = ir(), Tn = y(J);\n                    if (r = arguments, s = this, l = J, Tn) {\n                        if (c === i) return E(l);\n                        if (m) return cu(c), c = le(D, t), I(l);\n                    }\n                    return c === i && (c = le(D, t)), f;\n                }\n                return gn.cancel = dn, gn.flush = sn, gn;\n            }\n            var Vl = L(function(n, t) {\n                return Gs(n, 1, t);\n            }), kl = L(function(n, t, e) {\n                return Gs(n, xn(t) || 0, e);\n            });\n            function jl(n) {\n                return Kn(n, dr);\n            }\n            function sr(n, t) {\n                if (typeof n != \"function\" || t != null && typeof t != \"function\") throw new wn($);\n                var e = function() {\n                    var r = arguments, s = t ? t.apply(this, r) : r[0], o = e.cache;\n                    if (o.has(s)) return o.get(s);\n                    var f = n.apply(this, r);\n                    return e.cache = o.set(s, f) || o, f;\n                };\n                return e.cache = new (sr.Cache || Gn), e;\n            }\n            sr.Cache = Gn;\n            function ur(n) {\n                if (typeof n != \"function\") throw new wn($);\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return !n.call(this);\n                        case 1:\n                            return !n.call(this, t[0]);\n                        case 2:\n                            return !n.call(this, t[0], t[1]);\n                        case 3:\n                            return !n.call(this, t[0], t[1], t[2]);\n                    }\n                    return !n.apply(this, t);\n                };\n            }\n            function np(n) {\n                return Qu(2, n);\n            }\n            var tp = qc(function(n, t) {\n                t = t.length == 1 && O(t[0]) ? G(t[0], hn(x())) : G(j(t, 1), hn(x()));\n                var e = t.length;\n                return L(function(r) {\n                    for(var s = -1, o = nn(r.length, e); ++s < o;)r[s] = t[s].call(this, r[s]);\n                    return cn(n, this, r);\n                });\n            }), xi = L(function(n, t) {\n                var e = tt(t, qt(xi));\n                return Kn(n, Hn, i, t, e);\n            }), ta = L(function(n, t) {\n                var e = tt(t, qt(ta));\n                return Kn(n, St, i, t, e);\n            }), ep = Yn(function(n, t) {\n                return Kn(n, Kt, i, i, i, t);\n            });\n            function rp(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t === i ? t : R(t), L(n, t);\n            }\n            function ip(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t == null ? 0 : Q(R(t), 0), L(function(e) {\n                    var r = e[t], s = ut(e, 0, t);\n                    return r && nt(s, r), cn(n, this, s);\n                });\n            }\n            function sp(n, t, e) {\n                var r = !0, s = !0;\n                if (typeof n != \"function\") throw new wn($);\n                return K(e) && (r = \"leading\" in e ? !!e.leading : r, s = \"trailing\" in e ? !!e.trailing : s), na(n, t, {\n                    leading: r,\n                    maxWait: t,\n                    trailing: s\n                });\n            }\n            function up(n) {\n                return Xu(n, 1);\n            }\n            function ap(n, t) {\n                return xi(oi(t), n);\n            }\n            function op() {\n                if (!arguments.length) return [];\n                var n = arguments[0];\n                return O(n) ? n : [\n                    n\n                ];\n            }\n            function fp(n) {\n                return An(n, xt);\n            }\n            function cp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, xt, t);\n            }\n            function hp(n) {\n                return An(n, Ln | xt);\n            }\n            function lp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, Ln | xt, t);\n            }\n            function pp(n, t) {\n                return t == null || Bs(n, t, V(t));\n            }\n            function bn(n, t) {\n                return n === t || n !== n && t !== t;\n            }\n            var dp = ke(Qr), gp = ke(function(n, t) {\n                return n >= t;\n            }), Pt = Js(function() {\n                return arguments;\n            }()) ? Js : function(n) {\n                return Y(n) && F.call(n, \"callee\") && !Hs.call(n, \"callee\");\n            }, O = p.isArray, vp = gs ? hn(gs) : xc;\n            function an(n) {\n                return n != null && ar(n.length) && !Jn(n);\n            }\n            function Z(n) {\n                return Y(n) && an(n);\n            }\n            function _p(n) {\n                return n === !0 || n === !1 || Y(n) && en(n) == Yt;\n            }\n            var at = Tf || Ni, mp = vs ? hn(vs) : Ec;\n            function wp(n) {\n                return Y(n) && n.nodeType === 1 && !pe(n);\n            }\n            function Pp(n) {\n                if (n == null) return !0;\n                if (an(n) && (O(n) || typeof n == \"string\" || typeof n.splice == \"function\" || at(n) || Bt(n) || Pt(n))) return !n.length;\n                var t = tn(n);\n                if (t == yn || t == Sn) return !n.size;\n                if (he(n)) return !jr(n).length;\n                for(var e in n)if (F.call(n, e)) return !1;\n                return !0;\n            }\n            function Ap(n, t) {\n                return oe(n, t);\n            }\n            function Cp(n, t, e) {\n                e = typeof e == \"function\" ? e : i;\n                var r = e ? e(n, t) : i;\n                return r === i ? oe(n, t, i, e) : !!r;\n            }\n            function Ei(n) {\n                if (!Y(n)) return !1;\n                var t = en(n);\n                return t == we || t == Ga || typeof n.message == \"string\" && typeof n.name == \"string\" && !pe(n);\n            }\n            function Ip(n) {\n                return typeof n == \"number\" && $s(n);\n            }\n            function Jn(n) {\n                if (!K(n)) return !1;\n                var t = en(n);\n                return t == Pe || t == Gi || t == Ba || t == Ka;\n            }\n            function ea(n) {\n                return typeof n == \"number\" && n == R(n);\n            }\n            function ar(n) {\n                return typeof n == \"number\" && n > -1 && n % 1 == 0 && n <= kn;\n            }\n            function K(n) {\n                var t = typeof n;\n                return n != null && (t == \"object\" || t == \"function\");\n            }\n            function Y(n) {\n                return n != null && typeof n == \"object\";\n            }\n            var ra = _s ? hn(_s) : Sc;\n            function xp(n, t) {\n                return n === t || kr(n, t, gi(t));\n            }\n            function Ep(n, t, e) {\n                return e = typeof e == \"function\" ? e : i, kr(n, t, gi(t), e);\n            }\n            function yp(n) {\n                return ia(n) && n != +n;\n            }\n            function Sp(n) {\n                if (ch(n)) throw new S(T);\n                return Xs(n);\n            }\n            function Op(n) {\n                return n === null;\n            }\n            function Rp(n) {\n                return n == null;\n            }\n            function ia(n) {\n                return typeof n == \"number\" || Y(n) && en(n) == Jt;\n            }\n            function pe(n) {\n                if (!Y(n) || en(n) != qn) return !1;\n                var t = He(n);\n                if (t === null) return !0;\n                var e = F.call(t, \"constructor\") && t.constructor;\n                return typeof e == \"function\" && e instanceof e && be.call(e) == Ef;\n            }\n            var yi = ms ? hn(ms) : Oc;\n            function bp(n) {\n                return ea(n) && n >= -kn && n <= kn;\n            }\n            var sa = ws ? hn(ws) : Rc;\n            function or(n) {\n                return typeof n == \"string\" || !O(n) && Y(n) && en(n) == Qt;\n            }\n            function pn(n) {\n                return typeof n == \"symbol\" || Y(n) && en(n) == Ae;\n            }\n            var Bt = Ps ? hn(Ps) : bc;\n            function Tp(n) {\n                return n === i;\n            }\n            function Lp(n) {\n                return Y(n) && tn(n) == Vt;\n            }\n            function Dp(n) {\n                return Y(n) && en(n) == Za;\n            }\n            var Hp = ke(ni), Np = ke(function(n, t) {\n                return n <= t;\n            });\n            function ua(n) {\n                if (!n) return [];\n                if (an(n)) return or(n) ? On(n) : un(n);\n                if (ne && n[ne]) return pf(n[ne]());\n                var t = tn(n), e = t == yn ? qr : t == Sn ? Se : Gt;\n                return e(n);\n            }\n            function Xn(n) {\n                if (!n) return n === 0 ? n : 0;\n                if (n = xn(n), n === ht || n === -ht) {\n                    var t = n < 0 ? -1 : 1;\n                    return t * Wa;\n                }\n                return n === n ? n : 0;\n            }\n            function R(n) {\n                var t = Xn(n), e = t % 1;\n                return t === t ? e ? t - e : t : 0;\n            }\n            function aa(n) {\n                return n ? vt(R(n), 0, Nn) : 0;\n            }\n            function xn(n) {\n                if (typeof n == \"number\") return n;\n                if (pn(n)) return _e;\n                if (K(n)) {\n                    var t = typeof n.valueOf == \"function\" ? n.valueOf() : n;\n                    n = K(t) ? t + \"\" : t;\n                }\n                if (typeof n != \"string\") return n === 0 ? n : +n;\n                n = ys(n);\n                var e = go.test(n);\n                return e || _o.test(n) ? Xo(n.slice(2), e ? 2 : 8) : po.test(n) ? _e : +n;\n            }\n            function oa(n) {\n                return Un(n, on(n));\n            }\n            function $p(n) {\n                return n ? vt(R(n), -kn, kn) : n === 0 ? n : 0;\n            }\n            function W(n) {\n                return n == null ? \"\" : ln(n);\n            }\n            var Up = Ft(function(n, t) {\n                if (he(t) || an(t)) {\n                    Un(t, V(t), n);\n                    return;\n                }\n                for(var e in t)F.call(t, e) && se(n, e, t[e]);\n            }), fa = Ft(function(n, t) {\n                Un(t, on(t), n);\n            }), fr = Ft(function(n, t, e, r) {\n                Un(t, on(t), n, r);\n            }), Wp = Ft(function(n, t, e, r) {\n                Un(t, V(t), n, r);\n            }), Fp = Yn(Zr);\n            function Mp(n, t) {\n                var e = Wt(n);\n                return t == null ? e : qs(e, t);\n            }\n            var qp = L(function(n, t) {\n                n = M(n);\n                var e = -1, r = t.length, s = r > 2 ? t[2] : i;\n                for(s && rn(t[0], t[1], s) && (r = 1); ++e < r;)for(var o = t[e], f = on(o), c = -1, l = f.length; ++c < l;){\n                    var v = f[c], _ = n[v];\n                    (_ === i || bn(_, Nt[v]) && !F.call(n, v)) && (n[v] = o[v]);\n                }\n                return n;\n            }), Bp = L(function(n) {\n                return n.push(i, yu), cn(ca, i, n);\n            });\n            function Gp(n, t) {\n                return Cs(n, x(t, 3), $n);\n            }\n            function zp(n, t) {\n                return Cs(n, x(t, 3), Xr);\n            }\n            function Kp(n, t) {\n                return n == null ? n : Jr(n, x(t, 3), on);\n            }\n            function Yp(n, t) {\n                return n == null ? n : Ys(n, x(t, 3), on);\n            }\n            function Zp(n, t) {\n                return n && $n(n, x(t, 3));\n            }\n            function Jp(n, t) {\n                return n && Xr(n, x(t, 3));\n            }\n            function Xp(n) {\n                return n == null ? [] : ze(n, V(n));\n            }\n            function Qp(n) {\n                return n == null ? [] : ze(n, on(n));\n            }\n            function Si(n, t, e) {\n                var r = n == null ? i : _t(n, t);\n                return r === i ? e : r;\n            }\n            function Vp(n, t) {\n                return n != null && Ru(n, t, Pc);\n            }\n            function Oi(n, t) {\n                return n != null && Ru(n, t, Ac);\n            }\n            var kp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), n[t] = e;\n            }, bi(fn)), jp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), F.call(n, t) ? n[t].push(e) : n[t] = [\n                    e\n                ];\n            }, x), nd = L(ae);\n            function V(n) {\n                return an(n) ? Fs(n) : jr(n);\n            }\n            function on(n) {\n                return an(n) ? Fs(n, !0) : Tc(n);\n            }\n            function td(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, t(r, s, o), r);\n                }), e;\n            }\n            function ed(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, s, t(r, s, o));\n                }), e;\n            }\n            var rd = Ft(function(n, t, e) {\n                Ke(n, t, e);\n            }), ca = Ft(function(n, t, e, r) {\n                Ke(n, t, e, r);\n            }), id = Yn(function(n, t) {\n                var e = {};\n                if (n == null) return e;\n                var r = !1;\n                t = G(t, function(o) {\n                    return o = st(o, n), r || (r = o.length > 1), o;\n                }), Un(n, pi(n), e), r && (e = An(e, Ln | Fn | xt, kc));\n                for(var s = t.length; s--;)si(e, t[s]);\n                return e;\n            });\n            function sd(n, t) {\n                return ha(n, ur(x(t)));\n            }\n            var ud = Yn(function(n, t) {\n                return n == null ? {} : Dc(n, t);\n            });\n            function ha(n, t) {\n                if (n == null) return {};\n                var e = G(pi(n), function(r) {\n                    return [\n                        r\n                    ];\n                });\n                return t = x(t), eu(n, e, function(r, s) {\n                    return t(r, s[0]);\n                });\n            }\n            function ad(n, t, e) {\n                t = st(t, n);\n                var r = -1, s = t.length;\n                for(s || (s = 1, n = i); ++r < s;){\n                    var o = n == null ? i : n[Wn(t[r])];\n                    o === i && (r = s, o = e), n = Jn(o) ? o.call(n) : o;\n                }\n                return n;\n            }\n            function od(n, t, e) {\n                return n == null ? n : fe(n, t, e);\n            }\n            function fd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : fe(n, t, e, r);\n            }\n            var la = xu(V), pa = xu(on);\n            function cd(n, t, e) {\n                var r = O(n), s = r || at(n) || Bt(n);\n                if (t = x(t, 4), e == null) {\n                    var o = n && n.constructor;\n                    s ? e = r ? new o : [] : K(n) ? e = Jn(o) ? Wt(He(n)) : {} : e = {};\n                }\n                return (s ? mn : $n)(n, function(f, c, l) {\n                    return t(e, f, c, l);\n                }), e;\n            }\n            function hd(n, t) {\n                return n == null ? !0 : si(n, t);\n            }\n            function ld(n, t, e) {\n                return n == null ? n : au(n, t, oi(e));\n            }\n            function pd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : au(n, t, oi(e), r);\n            }\n            function Gt(n) {\n                return n == null ? [] : Mr(n, V(n));\n            }\n            function dd(n) {\n                return n == null ? [] : Mr(n, on(n));\n            }\n            function gd(n, t, e) {\n                return e === i && (e = t, t = i), e !== i && (e = xn(e), e = e === e ? e : 0), t !== i && (t = xn(t), t = t === t ? t : 0), vt(xn(n), t, e);\n            }\n            function vd(n, t, e) {\n                return t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), n = xn(n), Cc(n, t, e);\n            }\n            function _d(n, t, e) {\n                if (e && typeof e != \"boolean\" && rn(n, t, e) && (t = e = i), e === i && (typeof t == \"boolean\" ? (e = t, t = i) : typeof n == \"boolean\" && (e = n, n = i)), n === i && t === i ? (n = 0, t = 1) : (n = Xn(n), t === i ? (t = n, n = 0) : t = Xn(t)), n > t) {\n                    var r = n;\n                    n = t, t = r;\n                }\n                if (e || n % 1 || t % 1) {\n                    var s = Us();\n                    return nn(n + s * (t - n + Jo(\"1e-\" + ((s + \"\").length - 1))), t);\n                }\n                return ei(n, t);\n            }\n            var md = Mt(function(n, t, e) {\n                return t = t.toLowerCase(), n + (e ? da(t) : t);\n            });\n            function da(n) {\n                return Ri(W(n).toLowerCase());\n            }\n            function ga(n) {\n                return n = W(n), n && n.replace(wo, of).replace(Wo, \"\");\n            }\n            function wd(n, t, e) {\n                n = W(n), t = ln(t);\n                var r = n.length;\n                e = e === i ? r : vt(R(e), 0, r);\n                var s = e;\n                return e -= t.length, e >= 0 && n.slice(e, s) == t;\n            }\n            function Pd(n) {\n                return n = W(n), n && ka.test(n) ? n.replace(Yi, ff) : n;\n            }\n            function Ad(n) {\n                return n = W(n), n && io.test(n) ? n.replace(xr, \"\\\\$&\") : n;\n            }\n            var Cd = Mt(function(n, t, e) {\n                return n + (e ? \"-\" : \"\") + t.toLowerCase();\n            }), Id = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toLowerCase();\n            }), xd = mu(\"toLowerCase\");\n            function Ed(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                if (!t || r >= t) return n;\n                var s = (t - r) / 2;\n                return Ve(We(s), e) + n + Ve(Ue(s), e);\n            }\n            function yd(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? n + Ve(t - r, e) : n;\n            }\n            function Sd(n, t, e) {\n                n = W(n), t = R(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? Ve(t - r, e) + n : n;\n            }\n            function Od(n, t, e) {\n                return e || t == null ? t = 0 : t && (t = +t), Nf(W(n).replace(Er, \"\"), t || 0);\n            }\n            function Rd(n, t, e) {\n                return (e ? rn(n, t, e) : t === i) ? t = 1 : t = R(t), ri(W(n), t);\n            }\n            function bd() {\n                var n = arguments, t = W(n[0]);\n                return n.length < 3 ? t : t.replace(n[1], n[2]);\n            }\n            var Td = Mt(function(n, t, e) {\n                return n + (e ? \"_\" : \"\") + t.toLowerCase();\n            });\n            function Ld(n, t, e) {\n                return e && typeof e != \"number\" && rn(n, t, e) && (t = e = i), e = e === i ? Nn : e >>> 0, e ? (n = W(n), n && (typeof t == \"string\" || t != null && !yi(t)) && (t = ln(t), !t && Lt(n)) ? ut(On(n), 0, e) : n.split(t, e)) : [];\n            }\n            var Dd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + Ri(t);\n            });\n            function Hd(n, t, e) {\n                return n = W(n), e = e == null ? 0 : vt(R(e), 0, n.length), t = ln(t), n.slice(e, e + t.length) == t;\n            }\n            function Nd(n, t, e) {\n                var r = a.templateSettings;\n                e && rn(n, t, e) && (t = i), n = W(n), t = fr({}, t, r, Eu);\n                var s = fr({}, t.imports, r.imports, Eu), o = V(s), f = Mr(s, o), c, l, v = 0, _ = t.interpolate || Ce, m = \"__p += '\", P = Br((t.escape || Ce).source + \"|\" + _.source + \"|\" + (_ === Zi ? lo : Ce).source + \"|\" + (t.evaluate || Ce).source + \"|$\", \"g\"), I = \"//# sourceURL=\" + (F.call(t, \"sourceURL\") ? (t.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++Go + \"]\") + `\n`;\n                n.replace(P, function(y, D, N, dn, sn, gn) {\n                    return N || (N = dn), m += n.slice(v, gn).replace(Po, cf), D && (c = !0, m += `' +\n__e(` + D + `) +\n'`), sn && (l = !0, m += `';\n` + sn + `;\n__p += '`), N && (m += `' +\n((__t = (` + N + `)) == null ? '' : __t) +\n'`), v = gn + y.length, y;\n                }), m += `';\n`;\n                var E = F.call(t, \"variable\") && t.variable;\n                if (!E) m = `with (obj) {\n` + m + `\n}\n`;\n                else if (co.test(E)) throw new S(En);\n                m = (l ? m.replace(Ja, \"\") : m).replace(Xa, \"$1\").replace(Qa, \"$1;\"), m = \"function(\" + (E || \"obj\") + `) {\n` + (E ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (c ? \", __e = _.escape\" : \"\") + (l ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + m + `return __p\n}`;\n                var b = _a(function() {\n                    return U(o, I + \"return \" + m).apply(i, f);\n                });\n                if (b.source = m, Ei(b)) throw b;\n                return b;\n            }\n            function $d(n) {\n                return W(n).toLowerCase();\n            }\n            function Ud(n) {\n                return W(n).toUpperCase();\n            }\n            function Wd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return ys(n);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = On(t), o = Ss(r, s), f = Os(r, s) + 1;\n                return ut(r, o, f).join(\"\");\n            }\n            function Fd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.slice(0, bs(n) + 1);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Os(r, On(t)) + 1;\n                return ut(r, 0, s).join(\"\");\n            }\n            function Md(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.replace(Er, \"\");\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Ss(r, On(t));\n                return ut(r, s).join(\"\");\n            }\n            function qd(n, t) {\n                var e = La, r = Da;\n                if (K(t)) {\n                    var s = \"separator\" in t ? t.separator : s;\n                    e = \"length\" in t ? R(t.length) : e, r = \"omission\" in t ? ln(t.omission) : r;\n                }\n                n = W(n);\n                var o = n.length;\n                if (Lt(n)) {\n                    var f = On(n);\n                    o = f.length;\n                }\n                if (e >= o) return n;\n                var c = e - Dt(r);\n                if (c < 1) return r;\n                var l = f ? ut(f, 0, c).join(\"\") : n.slice(0, c);\n                if (s === i) return l + r;\n                if (f && (c += l.length - c), yi(s)) {\n                    if (n.slice(c).search(s)) {\n                        var v, _ = l;\n                        for(s.global || (s = Br(s.source, W(Ji.exec(s)) + \"g\")), s.lastIndex = 0; v = s.exec(_);)var m = v.index;\n                        l = l.slice(0, m === i ? c : m);\n                    }\n                } else if (n.indexOf(ln(s), c) != c) {\n                    var P = l.lastIndexOf(s);\n                    P > -1 && (l = l.slice(0, P));\n                }\n                return l + r;\n            }\n            function Bd(n) {\n                return n = W(n), n && Va.test(n) ? n.replace(Ki, _f) : n;\n            }\n            var Gd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toUpperCase();\n            }), Ri = mu(\"toUpperCase\");\n            function va(n, t, e) {\n                return n = W(n), t = e ? i : t, t === i ? lf(n) ? Pf(n) : ef(n) : n.match(t) || [];\n            }\n            var _a = L(function(n, t) {\n                try {\n                    return cn(n, i, t);\n                } catch (e) {\n                    return Ei(e) ? e : new S(e);\n                }\n            }), zd = Yn(function(n, t) {\n                return mn(t, function(e) {\n                    e = Wn(e), zn(n, e, Ii(n[e], n));\n                }), n;\n            });\n            function Kd(n) {\n                var t = n == null ? 0 : n.length, e = x();\n                return n = t ? G(n, function(r) {\n                    if (typeof r[1] != \"function\") throw new wn($);\n                    return [\n                        e(r[0]),\n                        r[1]\n                    ];\n                }) : [], L(function(r) {\n                    for(var s = -1; ++s < t;){\n                        var o = n[s];\n                        if (cn(o[0], this, r)) return cn(o[1], this, r);\n                    }\n                });\n            }\n            function Yd(n) {\n                return _c(An(n, Ln));\n            }\n            function bi(n) {\n                return function() {\n                    return n;\n                };\n            }\n            function Zd(n, t) {\n                return n == null || n !== n ? t : n;\n            }\n            var Jd = Pu(), Xd = Pu(!0);\n            function fn(n) {\n                return n;\n            }\n            function Ti(n) {\n                return Qs(typeof n == \"function\" ? n : An(n, Ln));\n            }\n            function Qd(n) {\n                return ks(An(n, Ln));\n            }\n            function Vd(n, t) {\n                return js(n, An(t, Ln));\n            }\n            var kd = L(function(n, t) {\n                return function(e) {\n                    return ae(e, n, t);\n                };\n            }), jd = L(function(n, t) {\n                return function(e) {\n                    return ae(n, e, t);\n                };\n            });\n            function Li(n, t, e) {\n                var r = V(t), s = ze(t, r);\n                e == null && !(K(t) && (s.length || !r.length)) && (e = t, t = n, n = this, s = ze(t, V(t)));\n                var o = !(K(e) && \"chain\" in e) || !!e.chain, f = Jn(n);\n                return mn(s, function(c) {\n                    var l = t[c];\n                    n[c] = l, f && (n.prototype[c] = function() {\n                        var v = this.__chain__;\n                        if (o || v) {\n                            var _ = n(this.__wrapped__), m = _.__actions__ = un(this.__actions__);\n                            return m.push({\n                                func: l,\n                                args: arguments,\n                                thisArg: n\n                            }), _.__chain__ = v, _;\n                        }\n                        return l.apply(n, nt([\n                            this.value()\n                        ], arguments));\n                    });\n                }), n;\n            }\n            function ng() {\n                return k._ === this && (k._ = yf), this;\n            }\n            function Di() {}\n            function tg(n) {\n                return n = R(n), L(function(t) {\n                    return nu(t, n);\n                });\n            }\n            var eg = ci(G), rg = ci(As), ig = ci(Nr);\n            function ma(n) {\n                return _i(n) ? $r(Wn(n)) : Hc(n);\n            }\n            function sg(n) {\n                return function(t) {\n                    return n == null ? i : _t(n, t);\n                };\n            }\n            var ug = Cu(), ag = Cu(!0);\n            function Hi() {\n                return [];\n            }\n            function Ni() {\n                return !1;\n            }\n            function og() {\n                return {};\n            }\n            function fg() {\n                return \"\";\n            }\n            function cg() {\n                return !0;\n            }\n            function hg(n, t) {\n                if (n = R(n), n < 1 || n > kn) return [];\n                var e = Nn, r = nn(n, Nn);\n                t = x(t), n -= Nn;\n                for(var s = Fr(r, t); ++e < n;)t(e);\n                return s;\n            }\n            function lg(n) {\n                return O(n) ? G(n, Wn) : pn(n) ? [\n                    n\n                ] : un(Wu(W(n)));\n            }\n            function pg(n) {\n                var t = ++xf;\n                return W(n) + t;\n            }\n            var dg = Qe(function(n, t) {\n                return n + t;\n            }, 0), gg = hi(\"ceil\"), vg = Qe(function(n, t) {\n                return n / t;\n            }, 1), _g = hi(\"floor\");\n            function mg(n) {\n                return n && n.length ? Ge(n, fn, Qr) : i;\n            }\n            function wg(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), Qr) : i;\n            }\n            function Pg(n) {\n                return xs(n, fn);\n            }\n            function Ag(n, t) {\n                return xs(n, x(t, 2));\n            }\n            function Cg(n) {\n                return n && n.length ? Ge(n, fn, ni) : i;\n            }\n            function Ig(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), ni) : i;\n            }\n            var xg = Qe(function(n, t) {\n                return n * t;\n            }, 1), Eg = hi(\"round\"), yg = Qe(function(n, t) {\n                return n - t;\n            }, 0);\n            function Sg(n) {\n                return n && n.length ? Wr(n, fn) : 0;\n            }\n            function Og(n, t) {\n                return n && n.length ? Wr(n, x(t, 2)) : 0;\n            }\n            return a.after = Ql, a.ary = Xu, a.assign = Up, a.assignIn = fa, a.assignInWith = fr, a.assignWith = Wp, a.at = Fp, a.before = Qu, a.bind = Ii, a.bindAll = zd, a.bindKey = Vu, a.castArray = op, a.chain = Yu, a.chunk = _h, a.compact = mh, a.concat = wh, a.cond = Kd, a.conforms = Yd, a.constant = bi, a.countBy = Sl, a.create = Mp, a.curry = ku, a.curryRight = ju, a.debounce = na, a.defaults = qp, a.defaultsDeep = Bp, a.defer = Vl, a.delay = kl, a.difference = Ph, a.differenceBy = Ah, a.differenceWith = Ch, a.drop = Ih, a.dropRight = xh, a.dropRightWhile = Eh, a.dropWhile = yh, a.fill = Sh, a.filter = Rl, a.flatMap = Ll, a.flatMapDeep = Dl, a.flatMapDepth = Hl, a.flatten = Bu, a.flattenDeep = Oh, a.flattenDepth = Rh, a.flip = jl, a.flow = Jd, a.flowRight = Xd, a.fromPairs = bh, a.functions = Xp, a.functionsIn = Qp, a.groupBy = Nl, a.initial = Lh, a.intersection = Dh, a.intersectionBy = Hh, a.intersectionWith = Nh, a.invert = kp, a.invertBy = jp, a.invokeMap = Ul, a.iteratee = Ti, a.keyBy = Wl, a.keys = V, a.keysIn = on, a.map = rr, a.mapKeys = td, a.mapValues = ed, a.matches = Qd, a.matchesProperty = Vd, a.memoize = sr, a.merge = rd, a.mergeWith = ca, a.method = kd, a.methodOf = jd, a.mixin = Li, a.negate = ur, a.nthArg = tg, a.omit = id, a.omitBy = sd, a.once = np, a.orderBy = Fl, a.over = eg, a.overArgs = tp, a.overEvery = rg, a.overSome = ig, a.partial = xi, a.partialRight = ta, a.partition = Ml, a.pick = ud, a.pickBy = ha, a.property = ma, a.propertyOf = sg, a.pull = Fh, a.pullAll = zu, a.pullAllBy = Mh, a.pullAllWith = qh, a.pullAt = Bh, a.range = ug, a.rangeRight = ag, a.rearg = ep, a.reject = Gl, a.remove = Gh, a.rest = rp, a.reverse = Ai, a.sampleSize = Kl, a.set = od, a.setWith = fd, a.shuffle = Yl, a.slice = zh, a.sortBy = Xl, a.sortedUniq = Vh, a.sortedUniqBy = kh, a.split = Ld, a.spread = ip, a.tail = jh, a.take = nl, a.takeRight = tl, a.takeRightWhile = el, a.takeWhile = rl, a.tap = ml, a.throttle = sp, a.thru = er, a.toArray = ua, a.toPairs = la, a.toPairsIn = pa, a.toPath = lg, a.toPlainObject = oa, a.transform = cd, a.unary = up, a.union = il, a.unionBy = sl, a.unionWith = ul, a.uniq = al, a.uniqBy = ol, a.uniqWith = fl, a.unset = hd, a.unzip = Ci, a.unzipWith = Ku, a.update = ld, a.updateWith = pd, a.values = Gt, a.valuesIn = dd, a.without = cl, a.words = va, a.wrap = ap, a.xor = hl, a.xorBy = ll, a.xorWith = pl, a.zip = dl, a.zipObject = gl, a.zipObjectDeep = vl, a.zipWith = _l, a.entries = la, a.entriesIn = pa, a.extend = fa, a.extendWith = fr, Li(a, a), a.add = dg, a.attempt = _a, a.camelCase = md, a.capitalize = da, a.ceil = gg, a.clamp = gd, a.clone = fp, a.cloneDeep = hp, a.cloneDeepWith = lp, a.cloneWith = cp, a.conformsTo = pp, a.deburr = ga, a.defaultTo = Zd, a.divide = vg, a.endsWith = wd, a.eq = bn, a.escape = Pd, a.escapeRegExp = Ad, a.every = Ol, a.find = bl, a.findIndex = Mu, a.findKey = Gp, a.findLast = Tl, a.findLastIndex = qu, a.findLastKey = zp, a.floor = _g, a.forEach = Zu, a.forEachRight = Ju, a.forIn = Kp, a.forInRight = Yp, a.forOwn = Zp, a.forOwnRight = Jp, a.get = Si, a.gt = dp, a.gte = gp, a.has = Vp, a.hasIn = Oi, a.head = Gu, a.identity = fn, a.includes = $l, a.indexOf = Th, a.inRange = vd, a.invoke = nd, a.isArguments = Pt, a.isArray = O, a.isArrayBuffer = vp, a.isArrayLike = an, a.isArrayLikeObject = Z, a.isBoolean = _p, a.isBuffer = at, a.isDate = mp, a.isElement = wp, a.isEmpty = Pp, a.isEqual = Ap, a.isEqualWith = Cp, a.isError = Ei, a.isFinite = Ip, a.isFunction = Jn, a.isInteger = ea, a.isLength = ar, a.isMap = ra, a.isMatch = xp, a.isMatchWith = Ep, a.isNaN = yp, a.isNative = Sp, a.isNil = Rp, a.isNull = Op, a.isNumber = ia, a.isObject = K, a.isObjectLike = Y, a.isPlainObject = pe, a.isRegExp = yi, a.isSafeInteger = bp, a.isSet = sa, a.isString = or, a.isSymbol = pn, a.isTypedArray = Bt, a.isUndefined = Tp, a.isWeakMap = Lp, a.isWeakSet = Dp, a.join = $h, a.kebabCase = Cd, a.last = In, a.lastIndexOf = Uh, a.lowerCase = Id, a.lowerFirst = xd, a.lt = Hp, a.lte = Np, a.max = mg, a.maxBy = wg, a.mean = Pg, a.meanBy = Ag, a.min = Cg, a.minBy = Ig, a.stubArray = Hi, a.stubFalse = Ni, a.stubObject = og, a.stubString = fg, a.stubTrue = cg, a.multiply = xg, a.nth = Wh, a.noConflict = ng, a.noop = Di, a.now = ir, a.pad = Ed, a.padEnd = yd, a.padStart = Sd, a.parseInt = Od, a.random = _d, a.reduce = ql, a.reduceRight = Bl, a.repeat = Rd, a.replace = bd, a.result = ad, a.round = Eg, a.runInContext = h, a.sample = zl, a.size = Zl, a.snakeCase = Td, a.some = Jl, a.sortedIndex = Kh, a.sortedIndexBy = Yh, a.sortedIndexOf = Zh, a.sortedLastIndex = Jh, a.sortedLastIndexBy = Xh, a.sortedLastIndexOf = Qh, a.startCase = Dd, a.startsWith = Hd, a.subtract = yg, a.sum = Sg, a.sumBy = Og, a.template = Nd, a.times = hg, a.toFinite = Xn, a.toInteger = R, a.toLength = aa, a.toLower = $d, a.toNumber = xn, a.toSafeInteger = $p, a.toString = W, a.toUpper = Ud, a.trim = Wd, a.trimEnd = Fd, a.trimStart = Md, a.truncate = qd, a.unescape = Bd, a.uniqueId = pg, a.upperCase = Gd, a.upperFirst = Ri, a.each = Zu, a.eachRight = Ju, a.first = Gu, Li(a, function() {\n                var n = {};\n                return $n(a, function(t, e) {\n                    F.call(a.prototype, e) || (n[e] = t);\n                }), n;\n            }(), {\n                chain: !1\n            }), a.VERSION = d, mn([\n                \"bind\",\n                \"bindKey\",\n                \"curry\",\n                \"curryRight\",\n                \"partial\",\n                \"partialRight\"\n            ], function(n) {\n                a[n].placeholder = a;\n            }), mn([\n                \"drop\",\n                \"take\"\n            ], function(n, t) {\n                H.prototype[n] = function(e) {\n                    e = e === i ? 1 : Q(R(e), 0);\n                    var r = this.__filtered__ && !t ? new H(this) : this.clone();\n                    return r.__filtered__ ? r.__takeCount__ = nn(e, r.__takeCount__) : r.__views__.push({\n                        size: nn(e, Nn),\n                        type: n + (r.__dir__ < 0 ? \"Right\" : \"\")\n                    }), r;\n                }, H.prototype[n + \"Right\"] = function(e) {\n                    return this.reverse()[n](e).reverse();\n                };\n            }), mn([\n                \"filter\",\n                \"map\",\n                \"takeWhile\"\n            ], function(n, t) {\n                var e = t + 1, r = e == Bi || e == Ua;\n                H.prototype[n] = function(s) {\n                    var o = this.clone();\n                    return o.__iteratees__.push({\n                        iteratee: x(s, 3),\n                        type: e\n                    }), o.__filtered__ = o.__filtered__ || r, o;\n                };\n            }), mn([\n                \"head\",\n                \"last\"\n            ], function(n, t) {\n                var e = \"take\" + (t ? \"Right\" : \"\");\n                H.prototype[n] = function() {\n                    return this[e](1).value()[0];\n                };\n            }), mn([\n                \"initial\",\n                \"tail\"\n            ], function(n, t) {\n                var e = \"drop\" + (t ? \"\" : \"Right\");\n                H.prototype[n] = function() {\n                    return this.__filtered__ ? new H(this) : this[e](1);\n                };\n            }), H.prototype.compact = function() {\n                return this.filter(fn);\n            }, H.prototype.find = function(n) {\n                return this.filter(n).head();\n            }, H.prototype.findLast = function(n) {\n                return this.reverse().find(n);\n            }, H.prototype.invokeMap = L(function(n, t) {\n                return typeof n == \"function\" ? new H(this) : this.map(function(e) {\n                    return ae(e, n, t);\n                });\n            }), H.prototype.reject = function(n) {\n                return this.filter(ur(x(n)));\n            }, H.prototype.slice = function(n, t) {\n                n = R(n);\n                var e = this;\n                return e.__filtered__ && (n > 0 || t < 0) ? new H(e) : (n < 0 ? e = e.takeRight(-n) : n && (e = e.drop(n)), t !== i && (t = R(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n)), e);\n            }, H.prototype.takeRightWhile = function(n) {\n                return this.reverse().takeWhile(n).reverse();\n            }, H.prototype.toArray = function() {\n                return this.take(Nn);\n            }, $n(H.prototype, function(n, t) {\n                var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a[r ? \"take\" + (t == \"last\" ? \"Right\" : \"\") : t], o = r || /^find/.test(t);\n                s && (a.prototype[t] = function() {\n                    var f = this.__wrapped__, c = r ? [\n                        1\n                    ] : arguments, l = f instanceof H, v = c[0], _ = l || O(f), m = function(D) {\n                        var N = s.apply(a, nt([\n                            D\n                        ], c));\n                        return r && P ? N[0] : N;\n                    };\n                    _ && e && typeof v == \"function\" && v.length != 1 && (l = _ = !1);\n                    var P = this.__chain__, I = !!this.__actions__.length, E = o && !P, b = l && !I;\n                    if (!o && _) {\n                        f = b ? f : new H(this);\n                        var y = n.apply(f, c);\n                        return y.__actions__.push({\n                            func: er,\n                            args: [\n                                m\n                            ],\n                            thisArg: i\n                        }), new Pn(y, P);\n                    }\n                    return E && b ? n.apply(this, c) : (y = this.thru(m), E ? r ? y.value()[0] : y.value() : y);\n                });\n            }), mn([\n                \"pop\",\n                \"push\",\n                \"shift\",\n                \"sort\",\n                \"splice\",\n                \"unshift\"\n            ], function(n) {\n                var t = Oe[n], e = /^(?:push|sort|unshift)$/.test(n) ? \"tap\" : \"thru\", r = /^(?:pop|shift)$/.test(n);\n                a.prototype[n] = function() {\n                    var s = arguments;\n                    if (r && !this.__chain__) {\n                        var o = this.value();\n                        return t.apply(O(o) ? o : [], s);\n                    }\n                    return this[e](function(f) {\n                        return t.apply(O(f) ? f : [], s);\n                    });\n                };\n            }), $n(H.prototype, function(n, t) {\n                var e = a[t];\n                if (e) {\n                    var r = e.name + \"\";\n                    F.call(Ut, r) || (Ut[r] = []), Ut[r].push({\n                        name: t,\n                        func: e\n                    });\n                }\n            }), Ut[Xe(i, ct).name] = [\n                {\n                    name: \"wrapper\",\n                    func: i\n                }\n            ], H.prototype.clone = Bf, H.prototype.reverse = Gf, H.prototype.value = zf, a.prototype.at = wl, a.prototype.chain = Pl, a.prototype.commit = Al, a.prototype.next = Cl, a.prototype.plant = xl, a.prototype.reverse = El, a.prototype.toJSON = a.prototype.valueOf = a.prototype.value = yl, a.prototype.first = a.prototype.head, ne && (a.prototype[ne] = Il), a;\n        }, Ht = Af();\n        lt ? ((lt.exports = Ht)._ = Ht, Tr._ = Ht) : k._ = Ht;\n    }).call(ge);\n})(Ui, Ui.exports);\nvar qg = Object.defineProperty, Bg = Object.defineProperties, Gg = Object.getOwnPropertyDescriptors, Ea = Object.getOwnPropertySymbols, zg = Object.prototype.hasOwnProperty, Kg = Object.prototype.propertyIsEnumerable, ya = (C, u, i)=>u in C ? qg(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, cr = (C, u)=>{\n    for(var i in u || (u = {}))zg.call(u, i) && ya(C, i, u[i]);\n    if (Ea) for (var i of Ea(u))Kg.call(u, i) && ya(C, i, u[i]);\n    return C;\n}, Yg = (C, u)=>Bg(C, Gg(u));\nfunction ft(C, u, i) {\n    var d;\n    const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseChainId)(C);\n    return ((d = u.rpcMap) == null ? void 0 : d[w.reference]) || `${Mg}?chainId=${w.namespace}:${w.reference}&projectId=${i}`;\n}\nfunction Ct(C) {\n    return C.includes(\":\") ? C.split(\":\")[1] : C;\n}\nfunction Sa(C) {\n    return C.map((u)=>`${u.split(\":\")[0]}:${u.split(\":\")[1]}`);\n}\nfunction Zg(C, u) {\n    const i = Object.keys(u.namespaces).filter((w)=>w.includes(C));\n    if (!i.length) return [];\n    const d = [];\n    return i.forEach((w)=>{\n        const T = u.namespaces[w].accounts;\n        d.push(...T);\n    }), d;\n}\nfunction Jg(C = {}, u = {}) {\n    const i = Oa(C), d = Oa(u);\n    return Ui.exports.merge(i, d);\n}\nfunction Oa(C) {\n    var u, i, d, w;\n    const T = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidObject)(C)) return T;\n    for (const [$, En] of Object.entries(C)){\n        const zt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isCaipNamespace)($) ? [\n            $\n        ] : En.chains, pr = En.methods || [], It = En.events || [], Ln = En.rpcMap || {}, Fn = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseNamespaceKey)($);\n        T[Fn] = Yg(cr(cr({}, T[Fn]), En), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.mergeArrays)(zt, (u = T[Fn]) == null ? void 0 : u.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.mergeArrays)(pr, (i = T[Fn]) == null ? void 0 : i.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.mergeArrays)(It, (d = T[Fn]) == null ? void 0 : d.events),\n            rpcMap: cr(cr({}, Ln), (w = T[Fn]) == null ? void 0 : w.rpcMap)\n        });\n    }\n    return T;\n}\nfunction Xg(C) {\n    return C.includes(\":\") ? C.split(\":\")[2] : C;\n}\nfunction Qg(C) {\n    const u = {};\n    for (const [i, d] of Object.entries(C)){\n        const w = d.methods || [], T = d.events || [], $ = d.accounts || [], En = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isCaipNamespace)(i) ? [\n            i\n        ] : d.chains ? d.chains : Sa(d.accounts);\n        u[i] = {\n            chains: En,\n            methods: w,\n            events: T,\n            accounts: $\n        };\n    }\n    return u;\n}\nfunction Wi(C) {\n    return typeof C == \"number\" ? C : C.includes(\"0x\") ? parseInt(C, 16) : C.includes(\":\") ? Number(C.split(\":\")[1]) : Number(C);\n}\nconst Ra = {}, z = (C)=>Ra[C], Fi = (C, u)=>{\n    Ra[C] = u;\n};\nclass Vg {\n    constructor(u){\n        this.name = \"polkadot\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass kg {\n    constructor(u){\n        this.name = \"eip155\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(u) {\n        switch(u.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(u);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n        }\n        return this.namespace.methods.includes(u.request.method) ? await this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(parseInt(u), i), this.chainId = parseInt(u), this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(`${this.name}:${u}`, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__.HttpConnection(d, z(\"disableProviderPing\")));\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = parseInt(Ct(i));\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const u = this.chainId, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    async handleSwitchChain(u) {\n        var i, d;\n        let w = u.request.params ? (i = u.request.params[0]) == null ? void 0 : i.chainId : \"0x0\";\n        w = w.startsWith(\"0x\") ? w : `0x${w}`;\n        const T = parseInt(w, 16);\n        if (this.isChainApproved(T)) this.setDefaultChain(`${T}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: u.topic,\n            request: {\n                method: u.request.method,\n                params: [\n                    {\n                        chainId: w\n                    }\n                ]\n            },\n            chainId: (d = this.namespace.chains) == null ? void 0 : d[0]\n        }), this.setDefaultChain(`${T}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${T}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(u) {\n        return this.namespace.chains.includes(`${this.name}:${u}`);\n    }\n}\nclass jg {\n    constructor(u){\n        this.name = \"solana\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass nv {\n    constructor(u){\n        this.name = \"cosmos\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass tv {\n    constructor(u){\n        this.name = \"cip34\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            const d = this.getCardanoRPCUrl(i), w = Ct(i);\n            u[w] = this.createHttpProvider(w, d);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    getCardanoRPCUrl(u) {\n        const i = this.namespace.rpcMap;\n        if (i) return i[u];\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || this.getCardanoRPCUrl(u);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass ev {\n    constructor(u){\n        this.name = \"elrond\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass rv {\n    constructor(u){\n        this.name = \"multiversx\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const w = Ct(i);\n            u[w] = this.createHttpProvider(w, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass iv {\n    constructor(u){\n        this.name = \"near\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        if (this.chainId = u, !this.httpProviders[u]) {\n            const d = i || ft(`${this.name}:${u}`, this.namespace);\n            if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n            this.setHttpProvider(u, d);\n        }\n        this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            u[i] = this.createHttpProvider(i, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace);\n        return typeof d > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nvar sv = Object.defineProperty, uv = Object.defineProperties, av = Object.getOwnPropertyDescriptors, ba = Object.getOwnPropertySymbols, ov = Object.prototype.hasOwnProperty, fv = Object.prototype.propertyIsEnumerable, Ta = (C, u, i)=>u in C ? sv(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, hr = (C, u)=>{\n    for(var i in u || (u = {}))ov.call(u, i) && Ta(C, i, u[i]);\n    if (ba) for (var i of ba(u))fv.call(u, i) && Ta(C, i, u[i]);\n    return C;\n}, Mi = (C, u)=>uv(C, av(u));\nclass lr {\n    constructor(u){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_3___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = u, this.logger = typeof u?.logger < \"u\" && typeof u?.logger != \"string\" ? u.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: u?.logger || Ia\n        })), this.disableProviderPing = u?.disableProviderPing || !1;\n    }\n    static async init(u) {\n        const i = new lr(u);\n        return await i.initialize(), i;\n    }\n    async request(u, i) {\n        const [d, w] = this.validateChain(i);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(d).request({\n            request: hr({}, u),\n            chainId: `${d}:${w}`,\n            topic: this.session.topic\n        });\n    }\n    sendAsync(u, i, d) {\n        this.request(u, d).then((w)=>i(null, w)).catch((w)=>i(w, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var u;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (u = this.session) == null ? void 0 : u.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(u) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(u), await this.cleanupPendingPairings(), !u.skipPairing) return await this.pair(u.pairingTopic);\n    }\n    on(u, i) {\n        this.events.on(u, i);\n    }\n    once(u, i) {\n        this.events.once(u, i);\n    }\n    removeListener(u, i) {\n        this.events.removeListener(u, i);\n    }\n    off(u, i) {\n        this.events.off(u, i);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(u) {\n        this.shouldAbortPairingAttempt = !1;\n        let i = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (i >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: d, approval: w } = await this.client.connect({\n                pairingTopic: u,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            d && (this.uri = d, this.events.emit(\"display_uri\", d)), await w().then((T)=>{\n                this.session = T, this.namespaces || (this.namespaces = Qg(T.namespaces), this.persist(\"namespaces\", this.namespaces));\n            }).catch((T)=>{\n                if (T.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_5__.PROPOSAL_EXPIRY_MESSAGE) throw T;\n                i++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(u, i) {\n        try {\n            if (!this.session) return;\n            const [d, w] = this.validateChain(u);\n            this.getProvider(d).setDefaultChain(w, i);\n        } catch (d) {\n            if (!/Please call connect/.test(d.message)) throw d;\n        }\n    }\n    async cleanupPendingPairings(u = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const i = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidArray)(i)) {\n            for (const d of i)u.deletePairings ? this.client.core.expirer.set(d.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(d.topic);\n            this.logger.info(`Inactive pairings cleared: ${i.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const u = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[u]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_5__[\"default\"].init({\n            logger: this.providerOpts.logger || Ia,\n            relayUrl: this.providerOpts.relayUrl || Ug,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const u = [\n            ...new Set(Object.keys(this.session.namespaces).map((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseNamespaceKey)(i)))\n        ];\n        Fi(\"client\", this.client), Fi(\"events\", this.events), Fi(\"disableProviderPing\", this.disableProviderPing), u.forEach((i)=>{\n            if (!this.session) return;\n            const d = Zg(i, this.session), w = Sa(d), T = Jg(this.namespaces, this.optionalNamespaces), $ = Mi(hr({}, T[i]), {\n                accounts: d,\n                chains: w\n            });\n            switch(i){\n                case \"eip155\":\n                    this.rpcProviders[i] = new kg({\n                        namespace: $\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[i] = new jg({\n                        namespace: $\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[i] = new nv({\n                        namespace: $\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[i] = new Vg({\n                        namespace: $\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[i] = new tv({\n                        namespace: $\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[i] = new ev({\n                        namespace: $\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[i] = new rv({\n                        namespace: $\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[i] = new iv({\n                        namespace: $\n                    });\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (u)=>{\n            this.events.emit(\"session_ping\", u);\n        }), this.client.on(\"session_event\", (u)=>{\n            const { params: i } = u, { event: d } = i;\n            if (d.name === \"accountsChanged\") {\n                const w = d.data;\n                w && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.isValidArray)(w) && this.events.emit(\"accountsChanged\", w.map(Xg));\n            } else if (d.name === \"chainChanged\") {\n                const w = i.chainId, T = i.event.data, $ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseNamespaceKey)(w), En = Wi(w) !== Wi(T) ? `${$}:${Wi(T)}` : w;\n                this.onChainChanged(En);\n            } else this.events.emit(d.name, d.data);\n            this.events.emit(\"session_event\", u);\n        }), this.client.on(\"session_update\", ({ topic: u, params: i })=>{\n            var d;\n            const { namespaces: w } = i, T = (d = this.client) == null ? void 0 : d.session.get(u);\n            this.session = Mi(hr({}, T), {\n                namespaces: w\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: u,\n                params: i\n            });\n        }), this.client.on(\"session_delete\", async (u)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", u), this.events.emit(\"disconnect\", Mi(hr({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: u.topic\n            }));\n        }), this.on(Vn.DEFAULT_CHAIN_CHANGED, (u)=>{\n            this.onChainChanged(u, !0);\n        });\n    }\n    getProvider(u) {\n        if (!this.rpcProviders[u]) throw new Error(`Provider not found: ${u}`);\n        return this.rpcProviders[u];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((u)=>{\n            var i;\n            this.getProvider(u).updateNamespace((i = this.session) == null ? void 0 : i.namespaces[u]);\n        });\n    }\n    setNamespaces(u) {\n        const { namespaces: i, optionalNamespaces: d, sessionProperties: w } = u;\n        i && Object.keys(i).length && (this.namespaces = i), d && Object.keys(d).length && (this.optionalNamespaces = d), this.sessionProperties = w, this.persist(\"namespaces\", i), this.persist(\"optionalNamespaces\", d);\n    }\n    validateChain(u) {\n        const [i, d] = u?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            i,\n            d\n        ];\n        if (i && !Object.keys(this.namespaces || {}).map(($)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseNamespaceKey)($)).includes(i)) throw new Error(`Namespace '${i}' is not configured. Please call connect() first with namespace config.`);\n        if (i && d) return [\n            i,\n            d\n        ];\n        const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_4__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), T = this.rpcProviders[w].getDefaultChain();\n        return [\n            w,\n            T\n        ];\n    }\n    async requestAccounts() {\n        const [u] = this.validateChain();\n        return await this.getProvider(u).requestAccounts();\n    }\n    onChainChanged(u, i = !1) {\n        var d;\n        if (!this.namespaces) return;\n        const [w, T] = this.validateChain(u);\n        i || this.getProvider(w).setDefaultChain(T), ((d = this.namespaces[w]) != null ? d : this.namespaces[`${w}:${T}`]).defaultChain = T, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", T);\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(u, i) {\n        this.client.core.storage.setItem(`${xa}/${u}`, i);\n    }\n    async getFromStore(u) {\n        return await this.client.core.storage.getItem(`${xa}/${u}`);\n    }\n}\nconst cv = lr;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js":
/*!*************************************************************!*\
  !*** ../node_modules/@walletconnect/utils/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ J),\n/* harmony export */   BASE16: () => (/* binding */ p),\n/* harmony export */   BASE64: () => (/* binding */ x),\n/* harmony export */   COLON: () => (/* binding */ Gn),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ ne),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ H),\n/* harmony export */   ENV_MAP: () => (/* binding */ m),\n/* harmony export */   MemoryStore: () => (/* binding */ er),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ Wn),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Ce),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Fe),\n/* harmony export */   SDK_TYPE: () => (/* binding */ je),\n/* harmony export */   SLASH: () => (/* binding */ $e),\n/* harmony export */   TYPE_0: () => (/* binding */ Q),\n/* harmony export */   TYPE_1: () => (/* binding */ _),\n/* harmony export */   UTF8: () => (/* binding */ F),\n/* harmony export */   appendToQueryString: () => (/* binding */ De),\n/* harmony export */   assertType: () => (/* binding */ Zn),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ Ut),\n/* harmony export */   calcExpiry: () => (/* binding */ lt),\n/* harmony export */   capitalize: () => (/* binding */ ot),\n/* harmony export */   capitalizeWord: () => (/* binding */ xe),\n/* harmony export */   createDelayedPromise: () => (/* binding */ st),\n/* harmony export */   createExpiringPromise: () => (/* binding */ it),\n/* harmony export */   decodeTypeByte: () => (/* binding */ $),\n/* harmony export */   decrypt: () => (/* binding */ Ln),\n/* harmony export */   deriveSymKey: () => (/* binding */ kn),\n/* harmony export */   deserialize: () => (/* binding */ ee),\n/* harmony export */   encodeTypeByte: () => (/* binding */ Pe),\n/* harmony export */   encrypt: () => (/* binding */ Kn),\n/* harmony export */   engineEvent: () => (/* binding */ ft),\n/* harmony export */   enumify: () => (/* binding */ rt),\n/* harmony export */   formatAccountId: () => (/* binding */ Ee),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Pn),\n/* harmony export */   formatChainId: () => (/* binding */ ge),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ re),\n/* harmony export */   formatIdTarget: () => (/* binding */ at),\n/* harmony export */   formatMessage: () => (/* binding */ Cn),\n/* harmony export */   formatMessageContext: () => (/* binding */ Xn),\n/* harmony export */   formatRelayParams: () => (/* binding */ We),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ Jn),\n/* harmony export */   formatTopicTarget: () => (/* binding */ ct),\n/* harmony export */   formatUA: () => (/* binding */ Me),\n/* harmony export */   formatUri: () => (/* binding */ Nt),\n/* harmony export */   generateKeyPair: () => (/* binding */ jn),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ Dn),\n/* harmony export */   getAccountsChains: () => (/* binding */ A),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ Rn),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ be),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Tn),\n/* harmony export */   getAppMetadata: () => (/* binding */ zn),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ dn),\n/* harmony export */   getChainFromAccount: () => (/* binding */ Ne),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Oe),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ K),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ An),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Un),\n/* harmony export */   getDidAddress: () => (/* binding */ we),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ L),\n/* harmony export */   getDidChainId: () => (/* binding */ Se),\n/* harmony export */   getEnvironment: () => (/* binding */ R),\n/* harmony export */   getHttpUrl: () => (/* binding */ Qn),\n/* harmony export */   getInternalError: () => (/* binding */ N),\n/* harmony export */   getJavascriptID: () => (/* binding */ Ve),\n/* harmony export */   getJavascriptOS: () => (/* binding */ ke),\n/* harmony export */   getLastItems: () => (/* binding */ Le),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ _n),\n/* harmony export */   getNamespacesChains: () => (/* binding */ Je),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Ze),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Qe),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ pn),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ fn),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ Yn),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ yt),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ mt),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ At),\n/* harmony export */   getSdkError: () => (/* binding */ U),\n/* harmony export */   getUniqueValues: () => (/* binding */ Y),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ pt),\n/* harmony export */   hasOverlap: () => (/* binding */ O),\n/* harmony export */   hashKey: () => (/* binding */ Vn),\n/* harmony export */   hashMessage: () => (/* binding */ Mn),\n/* harmony export */   isBrowser: () => (/* binding */ q),\n/* harmony export */   isCaipNamespace: () => (/* binding */ oe),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ un),\n/* harmony export */   isExpired: () => (/* binding */ dt),\n/* harmony export */   isNode: () => (/* binding */ te),\n/* harmony export */   isOnline: () => (/* binding */ Zt),\n/* harmony export */   isProposalStruct: () => (/* binding */ Dt),\n/* harmony export */   isReactNative: () => (/* binding */ j),\n/* harmony export */   isSessionCompatible: () => (/* binding */ $t),\n/* harmony export */   isSessionStruct: () => (/* binding */ kt),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ Fn),\n/* harmony export */   isUndefined: () => (/* binding */ w),\n/* harmony export */   isValidAccountId: () => (/* binding */ en),\n/* harmony export */   isValidAccounts: () => (/* binding */ rn),\n/* harmony export */   isValidActions: () => (/* binding */ sn),\n/* harmony export */   isValidArray: () => (/* binding */ D),\n/* harmony export */   isValidChainId: () => (/* binding */ k),\n/* harmony export */   isValidChains: () => (/* binding */ nn),\n/* harmony export */   isValidController: () => (/* binding */ Vt),\n/* harmony export */   isValidErrorReason: () => (/* binding */ Ft),\n/* harmony export */   isValidEvent: () => (/* binding */ Bt),\n/* harmony export */   isValidId: () => (/* binding */ Lt),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ on),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ ce),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ tn),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ ie),\n/* harmony export */   isValidNamespaces: () => (/* binding */ cn),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Gt),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ zt),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Wt),\n/* harmony export */   isValidNumber: () => (/* binding */ G),\n/* harmony export */   isValidObject: () => (/* binding */ B),\n/* harmony export */   isValidParams: () => (/* binding */ xt),\n/* harmony export */   isValidRelay: () => (/* binding */ an),\n/* harmony export */   isValidRelays: () => (/* binding */ Kt),\n/* harmony export */   isValidRequest: () => (/* binding */ Ht),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ Qt),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Mt),\n/* harmony export */   isValidResponse: () => (/* binding */ qt),\n/* harmony export */   isValidString: () => (/* binding */ h),\n/* harmony export */   isValidUrl: () => (/* binding */ jt),\n/* harmony export */   mapEntries: () => (/* binding */ tt),\n/* harmony export */   mapToObj: () => (/* binding */ et),\n/* harmony export */   mergeArrays: () => (/* binding */ S),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ se),\n/* harmony export */   objToMap: () => (/* binding */ nt),\n/* harmony export */   parseAccountId: () => (/* binding */ z),\n/* harmony export */   parseChainId: () => (/* binding */ ve),\n/* harmony export */   parseContextNames: () => (/* binding */ Ke),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ ut),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ Xe),\n/* harmony export */   parseRelayParams: () => (/* binding */ Be),\n/* harmony export */   parseTopic: () => (/* binding */ Ge),\n/* harmony export */   parseUri: () => (/* binding */ bt),\n/* harmony export */   serialize: () => (/* binding */ Te),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ mn),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ Xt),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ yn),\n/* harmony export */   validateDecoding: () => (/* binding */ xn),\n/* harmony export */   validateEncoding: () => (/* binding */ Re)\n/* harmony export */ });\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/../node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/../node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/../node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/../node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ \"(ssr)/../node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/../node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/../node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! query-string */ \"(ssr)/../node_modules/@walletconnect/utils/node_modules/query-string/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/../node_modules/@walletconnect/relay-api/dist/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst M = \":\";\nfunction ve(e) {\n    const [n, t] = e.split(M);\n    return {\n        namespace: n,\n        reference: t\n    };\n}\nfunction ge(e) {\n    const { namespace: n, reference: t } = e;\n    return [\n        n,\n        t\n    ].join(M);\n}\nfunction z(e) {\n    const [n, t, r] = e.split(M);\n    return {\n        namespace: n,\n        reference: t,\n        address: r\n    };\n}\nfunction Ee(e) {\n    const { namespace: n, reference: t, address: r } = e;\n    return [\n        n,\n        t,\n        r\n    ].join(M);\n}\nfunction Y(e, n) {\n    const t = [];\n    return e.forEach((r)=>{\n        const o = n(r);\n        t.includes(o) || t.push(o);\n    }), t;\n}\nfunction be(e) {\n    const { address: n } = z(e);\n    return n;\n}\nfunction Ne(e) {\n    const { namespace: n, reference: t } = z(e);\n    return ge({\n        namespace: n,\n        reference: t\n    });\n}\nfunction Pn(e, n) {\n    const { namespace: t, reference: r } = ve(n);\n    return Ee({\n        namespace: t,\n        reference: r,\n        address: e\n    });\n}\nfunction Tn(e) {\n    return Y(e, be);\n}\nfunction Oe(e) {\n    return Y(e, Ne);\n}\nfunction Rn(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...o.accounts);\n    }), t;\n}\nfunction An(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...Oe(o.accounts));\n    }), t;\n}\nfunction Un(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...K(r, o));\n    }), t;\n}\nfunction K(e, n) {\n    return e.includes(\":\") ? [\n        e\n    ] : n.chains || [];\n}\nconst L = (e)=>e?.split(\":\"), Se = (e)=>{\n    const n = e && L(e);\n    if (n) return n[3];\n}, _n = (e)=>{\n    const n = e && L(e);\n    if (n) return n[2] + \":\" + n[3];\n}, we = (e)=>{\n    const n = e && L(e);\n    if (n) return n.pop();\n}, Cn = (e, n)=>{\n    const t = `${e.domain} wants you to sign in with your Ethereum account:`, r = we(n), o = e.statement, s = `URI: ${e.aud}`, i = `Version: ${e.version}`, l = `Chain ID: ${Se(n)}`, d = `Nonce: ${e.nonce}`, c = `Issued At: ${e.iat}`, u = e.resources && e.resources.length > 0 ? `Resources:\n${e.resources.map((a)=>`- ${a}`).join(`\n`)}` : void 0;\n    return [\n        t,\n        r,\n        \"\",\n        o,\n        \"\",\n        s,\n        i,\n        l,\n        d,\n        c,\n        u\n    ].filter((a)=>a != null).join(`\n`);\n}, J = \"base10\", p = \"base16\", x = \"base64pad\", F = \"utf8\", Q = 0, _ = 1, $n = 0, Ie = 1, Z = 12, X = 32;\nfunction jn() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.secretKey, p),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.publicKey, p)\n    };\n}\nfunction Dn() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(X);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e, p);\n}\nfunction kn(e, n) {\n    const t = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, p), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(n, p), !0), r = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.SHA256, t).expand(X);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r, p);\n}\nfunction Vn(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, p));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n, p);\n}\nfunction Mn(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, F));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n, p);\n}\nfunction Pe(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${e}`, J);\n}\nfunction $(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e, J));\n}\nfunction Kn(e) {\n    const n = Pe(typeof e.type < \"u\" ? e.type : Q);\n    if ($(n) === _ && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const t = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.senderPublicKey, p) : void 0, r = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.iv, p) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(Z), o = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey, p)).seal(r, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.message, F));\n    return Te({\n        type: n,\n        sealed: o,\n        iv: r,\n        senderPublicKey: t\n    });\n}\nfunction Ln(e) {\n    const n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey, p)), { sealed: t, iv: r } = ee(e.encoded), o = n.open(r, t);\n    if (o === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o, F);\n}\nfunction Te(e) {\n    if ($(e.type) === _) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), x);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), x);\n}\nfunction ee(e) {\n    const n = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, x), t = n.slice($n, Ie), r = Ie;\n    if ($(t) === _) {\n        const l = r + X, d = l + Z, c = n.slice(r, l), u = n.slice(l, d), a = n.slice(d);\n        return {\n            type: t,\n            sealed: a,\n            iv: u,\n            senderPublicKey: c\n        };\n    }\n    const o = r + Z, s = n.slice(r, o), i = n.slice(o);\n    return {\n        type: t,\n        sealed: i,\n        iv: s\n    };\n}\nfunction xn(e, n) {\n    const t = ee(e);\n    return Re({\n        type: $(t.type),\n        senderPublicKey: typeof t.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t.senderPublicKey, p) : void 0,\n        receiverPublicKey: n?.receiverPublicKey\n    });\n}\nfunction Re(e) {\n    const n = e?.type || Q;\n    if (n === _) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: n,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction Fn(e) {\n    return e.type === _ && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nvar Hn = Object.defineProperty, Ae = Object.getOwnPropertySymbols, qn = Object.prototype.hasOwnProperty, Bn = Object.prototype.propertyIsEnumerable, Ue = (e, n, t)=>n in e ? Hn(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, _e = (e, n)=>{\n    for(var t in n || (n = {}))qn.call(n, t) && Ue(e, t, n[t]);\n    if (Ae) for (var t of Ae(n))Bn.call(n, t) && Ue(e, t, n[t]);\n    return e;\n};\nconst Ce = \"ReactNative\", m = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, H = \" \", Gn = \":\", $e = \"/\", ne = 2, Wn = 1e3, je = \"js\";\nfunction te() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction j() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)() && navigator.product === Ce;\n}\nfunction q() {\n    return !te() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)();\n}\nfunction R() {\n    return j() ? m.reactNative : te() ? m.node : q() ? m.browser : m.unknown;\n}\nfunction De(e, n) {\n    let t = query_string__WEBPACK_IMPORTED_MODULE_9__.parse(e);\n    return t = _e(_e({}, t), n), e = query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(t), e;\n}\nfunction zn() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction Yn(e, n) {\n    var t;\n    const r = R(), o = {\n        protocol: e,\n        version: n,\n        env: r\n    };\n    return r === \"browser\" && (o.host = ((t = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)()) == null ? void 0 : t.host) || \"unknown\"), o;\n}\nfunction ke() {\n    if (R() === m.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: t, Version: r } = global.Platform;\n        return [\n            t,\n            r\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();\n    if (e === null) return \"unknown\";\n    const n = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        n,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        n,\n        e.version\n    ].join(\"-\");\n}\nfunction Ve() {\n    var e;\n    const n = R();\n    return n === m.browser ? [\n        n,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : n;\n}\nfunction Me(e, n, t) {\n    const r = ke(), o = Ve();\n    return [\n        [\n            e,\n            n\n        ].join(\"-\"),\n        [\n            je,\n            t\n        ].join(\"-\"),\n        r,\n        o\n    ].join(\"/\");\n}\nfunction Jn({ protocol: e, version: n, relayUrl: t, sdkVersion: r, auth: o, projectId: s, useOnCloseEvent: i }) {\n    const l = t.split(\"?\"), d = Me(e, n, r), c = {\n        auth: o,\n        ua: d,\n        projectId: s,\n        useOnCloseEvent: i || void 0\n    }, u = De(l[1] || \"\", c);\n    return l[0] + \"?\" + u;\n}\nfunction Qn(e) {\n    let n = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const t = typeof n < \"u\" ? e.split(\"://\")[1] : e;\n    return n = n === \"wss\" ? \"https\" : \"http\", [\n        n,\n        t\n    ].join(\"://\");\n}\nfunction Zn(e, n, t) {\n    if (!e[n] || typeof e[n] !== t) throw new Error(`Missing or invalid \"${n}\" param`);\n}\nfunction Ke(e, n = ne) {\n    return Le(e.split($e), n);\n}\nfunction Xn(e) {\n    return Ke(e).join(H);\n}\nfunction O(e, n) {\n    return e.filter((t)=>n.includes(t)).length === e.length;\n}\nfunction Le(e, n = ne) {\n    return e.slice(Math.max(e.length - n, 0));\n}\nfunction et(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction nt(e) {\n    return new Map(Object.entries(e));\n}\nfunction tt(e, n) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        t[r] = n(e[r]);\n    }), t;\n}\nconst rt = (e)=>e;\nfunction xe(e) {\n    return e.trim().replace(/^\\w/, (n)=>n.toUpperCase());\n}\nfunction ot(e) {\n    return e.split(H).map((n)=>xe(n)).join(H);\n}\nfunction st(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES, n) {\n    const t = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);\n    let r, o, s;\n    return {\n        resolve: (i)=>{\n            s && r && (clearTimeout(s), r(i));\n        },\n        reject: (i)=>{\n            s && o && (clearTimeout(s), o(i));\n        },\n        done: ()=>new Promise((i, l)=>{\n                s = setTimeout(()=>{\n                    l(new Error(n));\n                }, t), r = i, o = l;\n            })\n    };\n}\nfunction it(e, n, t) {\n    return new Promise(async (r, o)=>{\n        const s = setTimeout(()=>o(new Error(t)), n);\n        try {\n            const i = await e;\n            r(i);\n        } catch (i) {\n            o(i);\n        }\n        clearTimeout(s);\n    });\n}\nfunction re(e, n) {\n    if (typeof n == \"string\" && n.startsWith(`${e}:`)) return n;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof n != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${n}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof n != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${n}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction ct(e) {\n    return re(\"topic\", e);\n}\nfunction at(e) {\n    return re(\"id\", e);\n}\nfunction ut(e) {\n    const [n, t] = e.split(\":\"), r = {\n        id: void 0,\n        topic: void 0\n    };\n    if (n === \"topic\" && typeof t == \"string\") r.topic = t;\n    else if (n === \"id\" && Number.isInteger(Number(t))) r.id = Number(t);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);\n    return r;\n}\nfunction lt(e, n) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.fromMiliseconds)((n || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e));\n}\nfunction dt(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e);\n}\nfunction ft(e, n) {\n    return `${e}${n ? `:${n}` : \"\"}`;\n}\nfunction S(e = [], n = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...n\n        ])\n    ];\n}\nasync function pt({ id: e, topic: n, wcDeepLink: t }) {\n    try {\n        if (!t) return;\n        const r = typeof t == \"string\" ? JSON.parse(t) : t;\n        let o = r?.href;\n        if (typeof o != \"string\") return;\n        o.endsWith(\"/\") && (o = o.slice(0, -1));\n        const s = `${o}/wc?requestId=${e}&sessionTopic=${n}`, i = R();\n        i === m.browser ? s.startsWith(\"https://\") ? window.open(s, \"_blank\", \"noreferrer noopener\") : window.open(s, \"_self\", \"noreferrer noopener\") : i === m.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(s);\n    } catch (r) {\n        console.error(r);\n    }\n}\nconst Fe = \"irn\";\nfunction mt(e) {\n    return e?.relay || {\n        protocol: Fe\n    };\n}\nfunction yt(e) {\n    const n = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];\n    if (typeof n > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return n;\n}\nvar ht = Object.defineProperty, He = Object.getOwnPropertySymbols, vt = Object.prototype.hasOwnProperty, gt = Object.prototype.propertyIsEnumerable, qe = (e, n, t)=>n in e ? ht(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, Et = (e, n)=>{\n    for(var t in n || (n = {}))vt.call(n, t) && qe(e, t, n[t]);\n    if (He) for (var t of He(n))gt.call(n, t) && qe(e, t, n[t]);\n    return e;\n};\nfunction Be(e, n = \"-\") {\n    const t = {}, r = \"relay\" + n;\n    return Object.keys(e).forEach((o)=>{\n        if (o.startsWith(r)) {\n            const s = o.replace(r, \"\"), i = e[o];\n            t[s] = i;\n        }\n    }), t;\n}\nfunction bt(e) {\n    const n = e.indexOf(\":\"), t = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, r = e.substring(0, n), o = e.substring(n + 1, t).split(\"@\"), s = typeof t < \"u\" ? e.substring(t) : \"\", i = query_string__WEBPACK_IMPORTED_MODULE_9__.parse(s);\n    return {\n        protocol: r,\n        topic: Ge(o[0]),\n        version: parseInt(o[1], 10),\n        symKey: i.symKey,\n        relay: Be(i)\n    };\n}\nfunction Ge(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction We(e, n = \"-\") {\n    const t = \"relay\", r = {};\n    return Object.keys(e).forEach((o)=>{\n        const s = t + n + o;\n        e[o] && (r[s] = e[o]);\n    }), r;\n}\nfunction Nt(e) {\n    return `${e.protocol}:${e.topic}@${e.version}?` + query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(Et({\n        symKey: e.symKey\n    }, We(e.relay)));\n}\nvar Ot = Object.defineProperty, St = Object.defineProperties, wt = Object.getOwnPropertyDescriptors, ze = Object.getOwnPropertySymbols, It = Object.prototype.hasOwnProperty, Pt = Object.prototype.propertyIsEnumerable, Ye = (e, n, t)=>n in e ? Ot(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, Tt = (e, n)=>{\n    for(var t in n || (n = {}))It.call(n, t) && Ye(e, t, n[t]);\n    if (ze) for (var t of ze(n))Pt.call(n, t) && Ye(e, t, n[t]);\n    return e;\n}, Rt = (e, n)=>St(e, wt(n));\nfunction A(e) {\n    const n = [];\n    return e.forEach((t)=>{\n        const [r, o] = t.split(\":\");\n        n.push(`${r}:${o}`);\n    }), n;\n}\nfunction Je(e) {\n    const n = [];\n    return Object.values(e).forEach((t)=>{\n        n.push(...A(t.accounts));\n    }), n;\n}\nfunction Qe(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        A(r.accounts).includes(n) && t.push(...r.methods);\n    }), t;\n}\nfunction Ze(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        A(r.accounts).includes(n) && t.push(...r.events);\n    }), t;\n}\nfunction At(e, n) {\n    const t = cn(e, n);\n    if (t) throw new Error(t.message);\n    const r = {};\n    for (const [o, s] of Object.entries(e))r[o] = {\n        methods: s.methods,\n        events: s.events,\n        chains: s.accounts.map((i)=>`${i.split(\":\")[0]}:${i.split(\":\")[1]}`)\n    };\n    return r;\n}\nfunction Ut(e) {\n    const { proposal: { requiredNamespaces: n, optionalNamespaces: t = {} }, supportedNamespaces: r } = e, o = se(n), s = se(t), i = {};\n    Object.keys(r).forEach((c)=>{\n        const u = r[c].chains, a = r[c].methods, b = r[c].events, I = r[c].accounts;\n        u.forEach((y)=>{\n            if (!I.some((f)=>f.includes(y))) throw new Error(`No accounts provided for chain ${y} in namespace ${c}`);\n        }), i[c] = {\n            chains: u,\n            methods: a,\n            events: b,\n            accounts: I\n        };\n    });\n    const l = un(n, i, \"approve()\");\n    if (l) throw new Error(l.message);\n    const d = {};\n    return !Object.keys(n).length && !Object.keys(t).length ? i : (Object.keys(o).forEach((c)=>{\n        const u = r[c].chains.filter((y)=>{\n            var f, v;\n            return (v = (f = o[c]) == null ? void 0 : f.chains) == null ? void 0 : v.includes(y);\n        }), a = r[c].methods.filter((y)=>{\n            var f, v;\n            return (v = (f = o[c]) == null ? void 0 : f.methods) == null ? void 0 : v.includes(y);\n        }), b = r[c].events.filter((y)=>{\n            var f, v;\n            return (v = (f = o[c]) == null ? void 0 : f.events) == null ? void 0 : v.includes(y);\n        }), I = u.map((y)=>r[c].accounts.filter((f)=>f.includes(`${y}:`))).flat();\n        d[c] = {\n            chains: u,\n            methods: a,\n            events: b,\n            accounts: I\n        };\n    }), Object.keys(s).forEach((c)=>{\n        var u, a, b, I, y, f;\n        if (!r[c]) return;\n        const v = (a = (u = s[c]) == null ? void 0 : u.chains) == null ? void 0 : a.filter((P)=>r[c].chains.includes(P)), hn = r[c].methods.filter((P)=>{\n            var T, C;\n            return (C = (T = s[c]) == null ? void 0 : T.methods) == null ? void 0 : C.includes(P);\n        }), vn = r[c].events.filter((P)=>{\n            var T, C;\n            return (C = (T = s[c]) == null ? void 0 : T.events) == null ? void 0 : C.includes(P);\n        }), gn = v?.map((P)=>r[c].accounts.filter((T)=>T.includes(`${P}:`))).flat();\n        d[c] = {\n            chains: S((b = d[c]) == null ? void 0 : b.chains, v),\n            methods: S((I = d[c]) == null ? void 0 : I.methods, hn),\n            events: S((y = d[c]) == null ? void 0 : y.events, vn),\n            accounts: S((f = d[c]) == null ? void 0 : f.accounts, gn)\n        };\n    }), d);\n}\nfunction oe(e) {\n    return e.includes(\":\");\n}\nfunction Xe(e) {\n    return oe(e) ? e.split(\":\")[0] : e;\n}\nfunction se(e) {\n    var n, t, r;\n    const o = {};\n    if (!B(e)) return o;\n    for (const [s, i] of Object.entries(e)){\n        const l = oe(s) ? [\n            s\n        ] : i.chains, d = i.methods || [], c = i.events || [], u = Xe(s);\n        o[u] = Rt(Tt({}, o[u]), {\n            chains: S(l, (n = o[u]) == null ? void 0 : n.chains),\n            methods: S(d, (t = o[u]) == null ? void 0 : t.methods),\n            events: S(c, (r = o[u]) == null ? void 0 : r.events)\n        });\n    }\n    return o;\n}\nconst _t = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, Ct = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction N(e, n) {\n    const { message: t, code: r } = Ct[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction U(e, n) {\n    const { message: t, code: r } = _t[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction D(e, n) {\n    return Array.isArray(e) ? typeof n < \"u\" && e.length ? e.every(n) : !0 : !1;\n}\nfunction B(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction w(e) {\n    return typeof e > \"u\";\n}\nfunction h(e, n) {\n    return n && w(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction G(e, n) {\n    return n && w(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction $t(e, n) {\n    const { requiredNamespaces: t } = n, r = Object.keys(e.namespaces), o = Object.keys(t);\n    let s = !0;\n    return O(o, r) ? (r.forEach((i)=>{\n        const { accounts: l, methods: d, events: c } = e.namespaces[i], u = A(l), a = t[i];\n        (!O(K(i, a), u) || !O(a.methods, d) || !O(a.events, c)) && (s = !1);\n    }), s) : !1;\n}\nfunction k(e) {\n    return h(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction en(e) {\n    if (h(e, !1) && e.includes(\":\")) {\n        const n = e.split(\":\");\n        if (n.length === 3) {\n            const t = n[0] + \":\" + n[1];\n            return !!n[2] && k(t);\n        }\n    }\n    return !1;\n}\nfunction jt(e) {\n    if (h(e, !1)) try {\n        return typeof new URL(e) < \"u\";\n    } catch  {\n        return !1;\n    }\n    return !1;\n}\nfunction Dt(e) {\n    var n;\n    return (n = e?.proposer) == null ? void 0 : n.publicKey;\n}\nfunction kt(e) {\n    return e?.topic;\n}\nfunction Vt(e, n) {\n    let t = null;\n    return h(e?.publicKey, !1) || (t = N(\"MISSING_OR_INVALID\", `${n} controller public key should be a string`)), t;\n}\nfunction ie(e) {\n    let n = !0;\n    return D(e) ? e.length && (n = e.every((t)=>h(t, !1))) : n = !1, n;\n}\nfunction nn(e, n, t) {\n    let r = null;\n    return D(n) && n.length ? n.forEach((o)=>{\n        r || k(o) || (r = U(\"UNSUPPORTED_CHAINS\", `${t}, chain ${o} should be a string and conform to \"namespace:chainId\" format`));\n    }) : k(e) || (r = U(\"UNSUPPORTED_CHAINS\", `${t}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), r;\n}\nfunction tn(e, n, t) {\n    let r = null;\n    return Object.entries(e).forEach(([o, s])=>{\n        if (r) return;\n        const i = nn(o, K(o, s), `${n} ${t}`);\n        i && (r = i);\n    }), r;\n}\nfunction rn(e, n) {\n    let t = null;\n    return D(e) ? e.forEach((r)=>{\n        t || en(r) || (t = U(\"UNSUPPORTED_ACCOUNTS\", `${n}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : t = U(\"UNSUPPORTED_ACCOUNTS\", `${n}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), t;\n}\nfunction on(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = rn(r?.accounts, `${n} namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction sn(e, n) {\n    let t = null;\n    return ie(e?.methods) ? ie(e?.events) || (t = U(\"UNSUPPORTED_EVENTS\", `${n}, events should be an array of strings or empty array for no events`)) : t = U(\"UNSUPPORTED_METHODS\", `${n}, methods should be an array of strings or empty array for no methods`), t;\n}\nfunction ce(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = sn(r, `${n}, namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction Mt(e, n, t) {\n    let r = null;\n    if (e && B(e)) {\n        const o = ce(e, n);\n        o && (r = o);\n        const s = tn(e, n, t);\n        s && (r = s);\n    } else r = N(\"MISSING_OR_INVALID\", `${n}, ${t} should be an object with data`);\n    return r;\n}\nfunction cn(e, n) {\n    let t = null;\n    if (e && B(e)) {\n        const r = ce(e, n);\n        r && (t = r);\n        const o = on(e, n);\n        o && (t = o);\n    } else t = N(\"MISSING_OR_INVALID\", `${n}, namespaces should be an object with data`);\n    return t;\n}\nfunction an(e) {\n    return h(e.protocol, !0);\n}\nfunction Kt(e, n) {\n    let t = !1;\n    return n && !e ? t = !0 : e && D(e) && e.length && e.forEach((r)=>{\n        t = an(r);\n    }), t;\n}\nfunction Lt(e) {\n    return typeof e == \"number\";\n}\nfunction xt(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction Ft(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !G(e.code, !1) || !e.message || !h(e.message, !1));\n}\nfunction Ht(e) {\n    return !(w(e) || !h(e.method, !1));\n}\nfunction qt(e) {\n    return !(w(e) || w(e.result) && w(e.error) || !G(e.id, !1) || !h(e.jsonrpc, !1));\n}\nfunction Bt(e) {\n    return !(w(e) || !h(e.name, !1));\n}\nfunction Gt(e, n) {\n    return !(!k(n) || !Je(e).includes(n));\n}\nfunction Wt(e, n, t) {\n    return h(t, !1) ? Qe(e, n).includes(t) : !1;\n}\nfunction zt(e, n, t) {\n    return h(t, !1) ? Ze(e, n).includes(t) : !1;\n}\nfunction un(e, n, t) {\n    let r = null;\n    const o = Yt(e), s = Jt(n), i = Object.keys(o), l = Object.keys(s), d = ln(Object.keys(e)), c = ln(Object.keys(n)), u = d.filter((a)=>!c.includes(a));\n    return u.length && (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${u.toString()}\n      Received: ${Object.keys(n).toString()}`)), O(i, l) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces chains don't satisfy required namespaces.\n      Required: ${i.toString()}\n      Approved: ${l.toString()}`)), Object.keys(n).forEach((a)=>{\n        if (!a.includes(\":\") || r) return;\n        const b = A(n[a].accounts);\n        b.includes(a) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces accounts don't satisfy namespace accounts for ${a}\n        Required: ${a}\n        Approved: ${b.toString()}`));\n    }), i.forEach((a)=>{\n        r || (O(o[a].methods, s[a].methods) ? O(o[a].events, s[a].events) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces events don't satisfy namespace events for ${a}`)) : r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces methods don't satisfy namespace methods for ${a}`));\n    }), r;\n}\nfunction Yt(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        var r;\n        t.includes(\":\") ? n[t] = e[t] : (r = e[t].chains) == null || r.forEach((o)=>{\n            n[o] = {\n                methods: e[t].methods,\n                events: e[t].events\n            };\n        });\n    }), n;\n}\nfunction ln(e) {\n    return [\n        ...new Set(e.map((n)=>n.includes(\":\") ? n.split(\":\")[0] : n))\n    ];\n}\nfunction Jt(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        if (t.includes(\":\")) n[t] = e[t];\n        else {\n            const r = A(e[t].accounts);\n            r?.forEach((o)=>{\n                n[o] = {\n                    accounts: e[t].accounts.filter((s)=>s.includes(`${o}:`)),\n                    methods: e[t].methods,\n                    events: e[t].events\n                };\n            });\n        }\n    }), n;\n}\nfunction Qt(e, n) {\n    return G(e, !1) && e <= n.max && e >= n.min;\n}\nfunction Zt() {\n    const e = R();\n    return new Promise((n)=>{\n        switch(e){\n            case m.browser:\n                n(dn());\n                break;\n            case m.reactNative:\n                n(fn());\n                break;\n            case m.node:\n                n(pn());\n                break;\n            default:\n                n(!0);\n        }\n    });\n}\nfunction dn() {\n    return q() && navigator?.onLine;\n}\nasync function fn() {\n    if (j() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction pn() {\n    return !0;\n}\nfunction Xt(e) {\n    switch(R()){\n        case m.browser:\n            mn(e);\n            break;\n        case m.reactNative:\n            yn(e);\n            break;\n        case m.node:\n            break;\n    }\n}\nfunction mn(e) {\n    !j() && q() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction yn(e) {\n    j() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((n)=>e(n?.isConnected));\n}\nconst ae = {};\nclass er {\n    static get(n) {\n        return ae[n];\n    }\n    static set(n, t) {\n        ae[n] = t;\n    }\n    static delete(n) {\n        delete ae[n];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/utils/node_modules/query-string/index.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@walletconnect/utils/node_modules/query-string/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"(ssr)/../node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"(ssr)/../node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"(ssr)/../node_modules/split-on-first/index.js\");\nconst filterObject = __webpack_require__(/*! filter-obj */ \"(ssr)/../node_modules/filter-obj/index.js\");\nconst isNullOrUndefined = (value)=>value === null || value === undefined;\nconst encodeFragmentIdentifier = Symbol(\"encodeFragmentIdentifier\");\nfunction encoderForArrayFormat(options) {\n    switch(options.arrayFormat){\n        case \"index\":\n            return (key)=>(result, value)=>{\n                    const index = result.length;\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \"[\",\n                                index,\n                                \"]\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"[\",\n                            encode(index, options),\n                            \"]=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"bracket\":\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \"[]\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"[]=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"colon-list-separator\":\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            [\n                                encode(key, options),\n                                \":list=\"\n                            ].join(\"\")\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \":list=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n        case \"comma\":\n        case \"separator\":\n        case \"bracket-separator\":\n            {\n                const keyValueSep = options.arrayFormat === \"bracket-separator\" ? \"[]=\" : \"=\";\n                return (key)=>(result, value)=>{\n                        if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                            return result;\n                        }\n                        // Translate null to an empty string so that it doesn't serialize as 'null'\n                        value = value === null ? \"\" : value;\n                        if (result.length === 0) {\n                            return [\n                                [\n                                    encode(key, options),\n                                    keyValueSep,\n                                    encode(value, options)\n                                ].join(\"\")\n                            ];\n                        }\n                        return [\n                            [\n                                result,\n                                encode(value, options)\n                            ].join(options.arrayFormatSeparator)\n                        ];\n                    };\n            }\n        default:\n            return (key)=>(result, value)=>{\n                    if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === \"\") {\n                        return result;\n                    }\n                    if (value === null) {\n                        return [\n                            ...result,\n                            encode(key, options)\n                        ];\n                    }\n                    return [\n                        ...result,\n                        [\n                            encode(key, options),\n                            \"=\",\n                            encode(value, options)\n                        ].join(\"\")\n                    ];\n                };\n    }\n}\nfunction parserForArrayFormat(options) {\n    let result;\n    switch(options.arrayFormat){\n        case \"index\":\n            return (key, value, accumulator)=>{\n                result = /\\[(\\d*)\\]$/.exec(key);\n                key = key.replace(/\\[\\d*\\]$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = {};\n                }\n                accumulator[key][result[1]] = value;\n            };\n        case \"bracket\":\n            return (key, value, accumulator)=>{\n                result = /(\\[\\])$/.exec(key);\n                key = key.replace(/\\[\\]$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = [\n                        value\n                    ];\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n        case \"colon-list-separator\":\n            return (key, value, accumulator)=>{\n                result = /(:list)$/.exec(key);\n                key = key.replace(/:list$/, \"\");\n                if (!result) {\n                    accumulator[key] = value;\n                    return;\n                }\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = [\n                        value\n                    ];\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n        case \"comma\":\n        case \"separator\":\n            return (key, value, accumulator)=>{\n                const isArray = typeof value === \"string\" && value.includes(options.arrayFormatSeparator);\n                const isEncodedArray = typeof value === \"string\" && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n                value = isEncodedArray ? decode(value, options) : value;\n                const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item)=>decode(item, options)) : value === null ? value : decode(value, options);\n                accumulator[key] = newValue;\n            };\n        case \"bracket-separator\":\n            return (key, value, accumulator)=>{\n                const isArray = /(\\[\\])$/.test(key);\n                key = key.replace(/\\[\\]$/, \"\");\n                if (!isArray) {\n                    accumulator[key] = value ? decode(value, options) : value;\n                    return;\n                }\n                const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item)=>decode(item, options));\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = arrayValue;\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], arrayValue);\n            };\n        default:\n            return (key, value, accumulator)=>{\n                if (accumulator[key] === undefined) {\n                    accumulator[key] = value;\n                    return;\n                }\n                accumulator[key] = [].concat(accumulator[key], value);\n            };\n    }\n}\nfunction validateArrayFormatSeparator(value) {\n    if (typeof value !== \"string\" || value.length !== 1) {\n        throw new TypeError(\"arrayFormatSeparator must be single character string\");\n    }\n}\nfunction encode(value, options) {\n    if (options.encode) {\n        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n    }\n    return value;\n}\nfunction decode(value, options) {\n    if (options.decode) {\n        return decodeComponent(value);\n    }\n    return value;\n}\nfunction keysSorter(input) {\n    if (Array.isArray(input)) {\n        return input.sort();\n    }\n    if (typeof input === \"object\") {\n        return keysSorter(Object.keys(input)).sort((a, b)=>Number(a) - Number(b)).map((key)=>input[key]);\n    }\n    return input;\n}\nfunction removeHash(input) {\n    const hashStart = input.indexOf(\"#\");\n    if (hashStart !== -1) {\n        input = input.slice(0, hashStart);\n    }\n    return input;\n}\nfunction getHash(url) {\n    let hash = \"\";\n    const hashStart = url.indexOf(\"#\");\n    if (hashStart !== -1) {\n        hash = url.slice(hashStart);\n    }\n    return hash;\n}\nfunction extract(input) {\n    input = removeHash(input);\n    const queryStart = input.indexOf(\"?\");\n    if (queryStart === -1) {\n        return \"\";\n    }\n    return input.slice(queryStart + 1);\n}\nfunction parseValue(value, options) {\n    if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === \"string\" && value.trim() !== \"\") {\n        value = Number(value);\n    } else if (options.parseBooleans && value !== null && (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\")) {\n        value = value.toLowerCase() === \"true\";\n    }\n    return value;\n}\nfunction parse(query, options) {\n    options = Object.assign({\n        decode: true,\n        sort: true,\n        arrayFormat: \"none\",\n        arrayFormatSeparator: \",\",\n        parseNumbers: false,\n        parseBooleans: false\n    }, options);\n    validateArrayFormatSeparator(options.arrayFormatSeparator);\n    const formatter = parserForArrayFormat(options);\n    // Create an object with no prototype\n    const ret = Object.create(null);\n    if (typeof query !== \"string\") {\n        return ret;\n    }\n    query = query.trim().replace(/^[?#&]/, \"\");\n    if (!query) {\n        return ret;\n    }\n    for (const param of query.split(\"&\")){\n        if (param === \"\") {\n            continue;\n        }\n        let [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, \" \") : param, \"=\");\n        // Missing `=` should be `null`:\n        // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n        value = value === undefined ? null : [\n            \"comma\",\n            \"separator\",\n            \"bracket-separator\"\n        ].includes(options.arrayFormat) ? value : decode(value, options);\n        formatter(decode(key, options), value, ret);\n    }\n    for (const key of Object.keys(ret)){\n        const value = ret[key];\n        if (typeof value === \"object\" && value !== null) {\n            for (const k of Object.keys(value)){\n                value[k] = parseValue(value[k], options);\n            }\n        } else {\n            ret[key] = parseValue(value, options);\n        }\n    }\n    if (options.sort === false) {\n        return ret;\n    }\n    return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key)=>{\n        const value = ret[key];\n        if (Boolean(value) && typeof value === \"object\" && !Array.isArray(value)) {\n            // Sort object keys, not values\n            result[key] = keysSorter(value);\n        } else {\n            result[key] = value;\n        }\n        return result;\n    }, Object.create(null));\n}\nexports.extract = extract;\nexports.parse = parse;\nexports.stringify = (object, options)=>{\n    if (!object) {\n        return \"\";\n    }\n    options = Object.assign({\n        encode: true,\n        strict: true,\n        arrayFormat: \"none\",\n        arrayFormatSeparator: \",\"\n    }, options);\n    validateArrayFormatSeparator(options.arrayFormatSeparator);\n    const shouldFilter = (key)=>options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === \"\";\n    const formatter = encoderForArrayFormat(options);\n    const objectCopy = {};\n    for (const key of Object.keys(object)){\n        if (!shouldFilter(key)) {\n            objectCopy[key] = object[key];\n        }\n    }\n    const keys = Object.keys(objectCopy);\n    if (options.sort !== false) {\n        keys.sort(options.sort);\n    }\n    return keys.map((key)=>{\n        const value = object[key];\n        if (value === undefined) {\n            return \"\";\n        }\n        if (value === null) {\n            return encode(key, options);\n        }\n        if (Array.isArray(value)) {\n            if (value.length === 0 && options.arrayFormat === \"bracket-separator\") {\n                return encode(key, options) + \"[]\";\n            }\n            return value.reduce(formatter(key), []).join(\"&\");\n        }\n        return encode(key, options) + \"=\" + encode(value, options);\n    }).filter((x)=>x.length > 0).join(\"&\");\n};\nexports.parseUrl = (url, options)=>{\n    options = Object.assign({\n        decode: true\n    }, options);\n    const [url_, hash] = splitOnFirst(url, \"#\");\n    return Object.assign({\n        url: url_.split(\"?\")[0] || \"\",\n        query: parse(extract(url), options)\n    }, options && options.parseFragmentIdentifier && hash ? {\n        fragmentIdentifier: decode(hash, options)\n    } : {});\n};\nexports.stringifyUrl = (object, options)=>{\n    options = Object.assign({\n        encode: true,\n        strict: true,\n        [encodeFragmentIdentifier]: true\n    }, options);\n    const url = removeHash(object.url).split(\"?\")[0] || \"\";\n    const queryFromUrl = exports.extract(object.url);\n    const parsedQueryFromUrl = exports.parse(queryFromUrl, {\n        sort: false\n    });\n    const query = Object.assign(parsedQueryFromUrl, object.query);\n    let queryString = exports.stringify(query, options);\n    if (queryString) {\n        queryString = `?${queryString}`;\n    }\n    let hash = getHash(object.url);\n    if (object.fragmentIdentifier) {\n        hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n    }\n    return `${url}${queryString}${hash}`;\n};\nexports.pick = (input, filter, options)=>{\n    options = Object.assign({\n        parseFragmentIdentifier: true,\n        [encodeFragmentIdentifier]: false\n    }, options);\n    const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);\n    return exports.stringifyUrl({\n        url,\n        query: filterObject(query, filter),\n        fragmentIdentifier\n    }, options);\n};\nexports.exclude = (input, filter, options)=>{\n    const exclusionFilter = Array.isArray(filter) ? (key)=>!filter.includes(key) : (key, value)=>!filter(key, value);\n    return exports.pick(input, exclusionFilter, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/utils/node_modules/query-string/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3dpbmRvdy1nZXR0ZXJzL2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsOEJBQThCLEdBQUdBLGlCQUFpQixHQUFHQSx3QkFBd0IsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSxvQkFBb0IsR0FBR0EsMkJBQTJCLEdBQUdBLG1CQUFtQixHQUFHQSwwQkFBMEIsR0FBR0EsNEJBQTRCLEdBQUdBLHFCQUFxQixHQUFHLEtBQUs7QUFDalUsU0FBU2EsY0FBY0MsSUFBSTtJQUN2QixJQUFJQyxNQUFNQztJQUNWLElBQUksS0FBb0UsRUFBRSxFQUV6RTtJQUNELE9BQU9EO0FBQ1g7QUFDQWYscUJBQXFCLEdBQUdhO0FBQ3hCLFNBQVNELHFCQUFxQkUsSUFBSTtJQUM5QixNQUFNQyxNQUFNRixjQUFjQztJQUMxQixJQUFJLENBQUNDLEtBQUs7UUFDTixNQUFNLElBQUlHLE1BQU0sQ0FBQyxFQUFFSixLQUFLLHlCQUF5QixDQUFDO0lBQ3REO0lBQ0EsT0FBT0M7QUFDWDtBQUNBZiw0QkFBNEIsR0FBR1k7QUFDL0IsU0FBU0Q7SUFDTCxPQUFPQyxxQkFBcUI7QUFDaEM7QUFDQVosMEJBQTBCLEdBQUdXO0FBQzdCLFNBQVNEO0lBQ0wsT0FBT0csY0FBYztBQUN6QjtBQUNBYixtQkFBbUIsR0FBR1U7QUFDdEIsU0FBU0Q7SUFDTCxPQUFPRyxxQkFBcUI7QUFDaEM7QUFDQVosMkJBQTJCLEdBQUdTO0FBQzlCLFNBQVNEO0lBQ0wsT0FBT0ssY0FBYztBQUN6QjtBQUNBYixvQkFBb0IsR0FBR1E7QUFDdkIsU0FBU0Q7SUFDTCxPQUFPSyxxQkFBcUI7QUFDaEM7QUFDQVosMEJBQTBCLEdBQUdPO0FBQzdCLFNBQVNEO0lBQ0wsT0FBT08sY0FBYztBQUN6QjtBQUNBYixtQkFBbUIsR0FBR007QUFDdEIsU0FBU0Q7SUFDTCxPQUFPTyxxQkFBcUI7QUFDaEM7QUFDQVosd0JBQXdCLEdBQUdLO0FBQzNCLFNBQVNEO0lBQ0wsT0FBT1MsY0FBYztBQUN6QjtBQUNBYixpQkFBaUIsR0FBR0k7QUFDcEIsU0FBU0Q7SUFDTCxPQUFPUyxxQkFBcUI7QUFDaEM7QUFDQVosOEJBQThCLEdBQUdHO0FBQ2pDLFNBQVNEO0lBQ0wsT0FBT1csY0FBYztBQUN6QjtBQUNBYix1QkFBdUIsR0FBR0UsaUJBQzFCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3dpbmRvdy1nZXR0ZXJzL2Rpc3QvY2pzL2luZGV4LmpzPzkwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZSA9IGV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyA9IGV4cG9ydHMuZ2V0Q3J5cHRvID0gZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZXhwb3J0cy5nZXRMb2NhdGlvbiA9IGV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZXhwb3J0cy5nZXROYXZpZ2F0b3IgPSBleHBvcnRzLmdldE5hdmlnYXRvck9yVGhyb3cgPSBleHBvcnRzLmdldERvY3VtZW50ID0gZXhwb3J0cy5nZXREb2N1bWVudE9yVGhyb3cgPSBleHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZXhwb3J0cy5nZXRGcm9tV2luZG93ID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0RnJvbVdpbmRvdyhuYW1lKSB7XG4gICAgbGV0IHJlcyA9IHVuZGVmaW5lZDtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93W25hbWVdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJlcyA9IHdpbmRvd1tuYW1lXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZ2V0RnJvbVdpbmRvdyA9IGdldEZyb21XaW5kb3c7XG5mdW5jdGlvbiBnZXRGcm9tV2luZG93T3JUaHJvdyhuYW1lKSB7XG4gICAgY29uc3QgcmVzID0gZ2V0RnJvbVdpbmRvdyhuYW1lKTtcbiAgICBpZiAoIXJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bmFtZX0gaXMgbm90IGRlZmluZWQgaW4gV2luZG93YCk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZ2V0RnJvbVdpbmRvd09yVGhyb3c7XG5mdW5jdGlvbiBnZXREb2N1bWVudE9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50T3JUaHJvdyA9IGdldERvY3VtZW50T3JUaHJvdztcbmZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50ID0gZ2V0RG9jdW1lbnQ7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3JPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcIm5hdmlnYXRvclwiKTtcbn1cbmV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IGdldE5hdmlnYXRvck9yVGhyb3c7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3IoKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJuYXZpZ2F0b3JcIik7XG59XG5leHBvcnRzLmdldE5hdmlnYXRvciA9IGdldE5hdmlnYXRvcjtcbmZ1bmN0aW9uIGdldExvY2F0aW9uT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZ2V0TG9jYXRpb25PclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb24gPSBnZXRMb2NhdGlvbjtcbmZ1bmN0aW9uIGdldENyeXB0b09yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiY3J5cHRvXCIpO1xufVxuZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZ2V0Q3J5cHRvT3JUaHJvdztcbmZ1bmN0aW9uIGdldENyeXB0bygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImNyeXB0b1wiKTtcbn1cbmV4cG9ydHMuZ2V0Q3J5cHRvID0gZ2V0Q3J5cHRvO1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhbFN0b3JhZ2VcIik7XG59XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZU9yVGhyb3cgPSBnZXRMb2NhbFN0b3JhZ2VPclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibG9jYWxTdG9yYWdlXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSBnZXRMb2NhbFN0b3JhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2NhbFN0b3JhZ2UiLCJnZXRMb2NhbFN0b3JhZ2VPclRocm93IiwiZ2V0Q3J5cHRvIiwiZ2V0Q3J5cHRvT3JUaHJvdyIsImdldExvY2F0aW9uIiwiZ2V0TG9jYXRpb25PclRocm93IiwiZ2V0TmF2aWdhdG9yIiwiZ2V0TmF2aWdhdG9yT3JUaHJvdyIsImdldERvY3VtZW50IiwiZ2V0RG9jdW1lbnRPclRocm93IiwiZ2V0RnJvbVdpbmRvd09yVGhyb3ciLCJnZXRGcm9tV2luZG93IiwibmFtZSIsInJlcyIsInVuZGVmaW5lZCIsIndpbmRvdyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!************************************************************************!*\
  !*** ../node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/../node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/modal-core/dist/index.js":
/*!***************************************************************!*\
  !*** ../node_modules/@walletconnect/modal-core/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: () => (/* binding */ y),\n/* harmony export */   CoreUtil: () => (/* binding */ a),\n/* harmony export */   EventsCtrl: () => (/* binding */ R),\n/* harmony export */   ExplorerCtrl: () => (/* binding */ te),\n/* harmony export */   ModalCtrl: () => (/* binding */ se),\n/* harmony export */   OptionsCtrl: () => (/* binding */ p),\n/* harmony export */   RouterCtrl: () => (/* binding */ T),\n/* harmony export */   ThemeCtrl: () => (/* binding */ ne),\n/* harmony export */   ToastCtrl: () => (/* binding */ oe)\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(ssr)/../node_modules/valtio/esm/vanilla.mjs\");\n\nconst o = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n}), T = {\n    state: o,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(o, ()=>e(o));\n    },\n    push (e, t) {\n        e !== o.view && (o.view = e, t && (o.data = t), o.history.push(e));\n    },\n    reset (e) {\n        o.view = e, o.history = [\n            e\n        ];\n    },\n    replace (e) {\n        o.history.length > 1 && (o.history[o.history.length - 1] = e, o.view = e);\n    },\n    goBack () {\n        if (o.history.length > 1) {\n            o.history.pop();\n            const [e] = o.history.slice(-1);\n            o.view = e;\n        }\n    },\n    setData (e) {\n        o.data = e;\n    }\n}, a = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        return  false ? 0 : !1;\n    },\n    isAndroid () {\n        return a.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const e = navigator.userAgent.toLowerCase();\n        return a.isMobile() && (e.includes(\"iphone\") || e.includes(\"ipad\"));\n    },\n    isHttpUrl (e) {\n        return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    isArray (e) {\n        return Array.isArray(e) && e.length > 0;\n    },\n    formatNativeUrl (e, t, s) {\n        if (a.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n        let n = e;\n        n.includes(\"://\") || (n = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), n = `${n}://`), n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    formatUniversalUrl (e, t, s) {\n        if (!a.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n        let n = e;\n        n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    async wait (e) {\n        return new Promise((t)=>{\n            setTimeout(t, e);\n        });\n    },\n    openHref (e, t) {\n        window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (e, t) {\n        try {\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: e,\n                name: t\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (e) {\n        try {\n            const [t] = e.split(\"?\");\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: t,\n                name: \"Android\"\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(a.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch  {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            typeof localStorage < \"u\" && localStorage.setItem(a.WCM_VERSION, \"2.6.2\");\n        } catch  {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var e;\n        const t = (e = T.state.data) == null ? void 0 : e.Wallet;\n        if (!t) throw new Error('Missing \"Wallet\" view data');\n        return t;\n    }\n}, _ = typeof location < \"u\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\")), r = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: _,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n}), R = {\n    state: r,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(r.events, ()=>e((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(r.events[r.events.length - 1])));\n    },\n    initialize () {\n        r.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) < \"u\" && (r.userSessionId = crypto.randomUUID());\n    },\n    setConnectedWalletId (e) {\n        r.connectedWalletId = e;\n    },\n    click (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"CLICK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    track (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"TRACK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    view (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"VIEW\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    }\n}, c = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1\n}), p = {\n    state: c,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(c, ()=>e(c));\n    },\n    setChains (e) {\n        c.chains = e;\n    },\n    setWalletConnectUri (e) {\n        c.walletConnectUri = e;\n    },\n    setIsCustomDesktop (e) {\n        c.isCustomDesktop = e;\n    },\n    setIsCustomMobile (e) {\n        c.isCustomMobile = e;\n    },\n    setIsDataLoaded (e) {\n        c.isDataLoaded = e;\n    },\n    setIsUiLoaded (e) {\n        c.isUiLoaded = e;\n    },\n    setIsAuth (e) {\n        c.isAuth = e;\n    }\n}, W = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: !1,\n    enableExplorer: !0,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n}), y = {\n    state: W,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(W, ()=>e(W));\n    },\n    setConfig (e) {\n        var t, s;\n        R.initialize(), p.setChains(e.chains), p.setIsAuth(Boolean(e.enableAuthMode)), p.setIsCustomMobile(Boolean((t = e.mobileWallets) == null ? void 0 : t.length)), p.setIsCustomDesktop(Boolean((s = e.desktopWallets) == null ? void 0 : s.length)), a.setModalVersionInStorage(), Object.assign(W, e);\n    }\n};\nvar V = Object.defineProperty, D = Object.getOwnPropertySymbols, H = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable, M = (e, t, s)=>t in e ? V(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, K = (e, t)=>{\n    for(var s in t || (t = {}))H.call(t, s) && M(e, s, t[s]);\n    if (D) for (var s of D(t))B.call(t, s) && M(e, s, t[s]);\n    return e;\n};\nconst L = \"https://explorer-api.walletconnect.com\", E = \"wcm\", O = \"js-2.6.2\";\nasync function w(e, t) {\n    const s = K({\n        sdkType: E,\n        sdkVersion: O\n    }, t), n = new URL(e, L);\n    return n.searchParams.append(\"projectId\", y.state.projectId), Object.entries(s).forEach(([i, l])=>{\n        l && n.searchParams.append(i, String(l));\n    }), (await fetch(n)).json();\n}\nconst m = {\n    async getDesktopListings (e) {\n        return w(\"/w3m/v1/getDesktopListings\", e);\n    },\n    async getMobileListings (e) {\n        return w(\"/w3m/v1/getMobileListings\", e);\n    },\n    async getInjectedListings (e) {\n        return w(\"/w3m/v1/getInjectedListings\", e);\n    },\n    async getAllListings (e) {\n        return w(\"/w3m/v1/getAllListings\", e);\n    },\n    getWalletImageUrl (e) {\n        return `${L}/w3m/v1/getWalletImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    },\n    getAssetImageUrl (e) {\n        return `${L}/w3m/v1/getAssetImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    }\n};\nvar z = Object.defineProperty, j = Object.getOwnPropertySymbols, J = Object.prototype.hasOwnProperty, q = Object.prototype.propertyIsEnumerable, k = (e, t, s)=>t in e ? z(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, F = (e, t)=>{\n    for(var s in t || (t = {}))J.call(t, s) && k(e, s, t[s]);\n    if (j) for (var s of j(t))q.call(t, s) && k(e, s, t[s]);\n    return e;\n};\nconst N = a.isMobile(), d = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n}), te = {\n    state: d,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds: e, explorerExcludedWalletIds: t } = y.state;\n        if (e === \"NONE\" || t === \"ALL\" && !e) return d.recomendedWallets;\n        if (a.isArray(e)) {\n            const s = {\n                recommendedIds: e.join(\",\")\n            }, { listings: n } = await m.getAllListings(s), i = Object.values(n);\n            i.sort((l, v)=>{\n                const b = e.indexOf(l.id), f = e.indexOf(v.id);\n                return b - f;\n            }), d.recomendedWallets = i;\n        } else {\n            const { chains: s, isAuth: n } = p.state, i = s?.join(\",\"), l = a.isArray(t), v = {\n                page: 1,\n                sdks: n ? \"auth_v1\" : void 0,\n                entries: a.RECOMMENDED_WALLET_AMOUNT,\n                chains: i,\n                version: 2,\n                excludedIds: l ? t.join(\",\") : void 0\n            }, { listings: b } = N ? await m.getMobileListings(v) : await m.getDesktopListings(v);\n            d.recomendedWallets = Object.values(b);\n        }\n        return d.recomendedWallets;\n    },\n    async getWallets (e) {\n        const t = F({}, e), { explorerRecommendedWalletIds: s, explorerExcludedWalletIds: n } = y.state, { recomendedWallets: i } = d;\n        if (n === \"ALL\") return d.wallets;\n        i.length ? t.excludedIds = i.map((x)=>x.id).join(\",\") : a.isArray(s) && (t.excludedIds = s.join(\",\")), a.isArray(n) && (t.excludedIds = [\n            t.excludedIds,\n            n\n        ].filter(Boolean).join(\",\")), p.state.isAuth && (t.sdks = \"auth_v1\");\n        const { page: l, search: v } = e, { listings: b, total: f } = N ? await m.getMobileListings(t) : await m.getDesktopListings(t), A = Object.values(b), U = v ? \"search\" : \"wallets\";\n        return d[U] = {\n            listings: [\n                ...d[U].listings,\n                ...A\n            ],\n            total: f,\n            page: l ?? 1\n        }, {\n            listings: A,\n            total: f\n        };\n    },\n    getWalletImageUrl (e) {\n        return m.getWalletImageUrl(e);\n    },\n    getAssetImageUrl (e) {\n        return m.getAssetImageUrl(e);\n    },\n    resetSearch () {\n        d.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n}, I = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1\n}), se = {\n    state: I,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(I, ()=>e(I));\n    },\n    async open (e) {\n        return new Promise((t)=>{\n            const { isUiLoaded: s, isDataLoaded: n } = p.state;\n            if (a.removeWalletConnectDeepLink(), p.setWalletConnectUri(e?.uri), p.setChains(e?.chains), T.reset(\"ConnectWallet\"), s && n) I.open = !0, t();\n            else {\n                const i = setInterval(()=>{\n                    const l = p.state;\n                    l.isUiLoaded && l.isDataLoaded && (clearInterval(i), I.open = !0, t());\n                }, 200);\n            }\n        });\n    },\n    close () {\n        I.open = !1;\n    }\n};\nvar G = Object.defineProperty, $ = Object.getOwnPropertySymbols, Q = Object.prototype.hasOwnProperty, X = Object.prototype.propertyIsEnumerable, S = (e, t, s)=>t in e ? G(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, Y = (e, t)=>{\n    for(var s in t || (t = {}))Q.call(t, s) && S(e, s, t[s]);\n    if ($) for (var s of $(t))X.call(t, s) && S(e, s, t[s]);\n    return e;\n};\nfunction Z() {\n    return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst C = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: Z() ? \"dark\" : \"light\"\n}), ne = {\n    state: C,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(C, ()=>e(C));\n    },\n    setThemeConfig (e) {\n        const { themeMode: t, themeVariables: s } = e;\n        t && (C.themeMode = t), s && (C.themeVariables = Y({}, s));\n    }\n}, g = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n}), oe = {\n    state: g,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(g, ()=>e(g));\n    },\n    openToast (e, t) {\n        g.open = !0, g.message = e, g.variant = t;\n    },\n    closeToast () {\n        g.open = !1;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/modal-core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@walletconnect/modal/dist/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/@walletconnect/modal/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(ssr)/../node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass d {\n    constructor(e){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open, this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close, this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe, this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(e), this.initUi();\n    }\n    async initUi() {\n        if (false) {}\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0c7QUFBQSxNQUFNUTtJQUFFQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLFNBQVMsR0FBQ1YsZ0VBQUNBLENBQUNXLElBQUksRUFBQyxJQUFJLENBQUNDLFVBQVUsR0FBQ1osZ0VBQUNBLENBQUNhLEtBQUssRUFBQyxJQUFJLENBQUNDLGNBQWMsR0FBQ2QsZ0VBQUNBLENBQUNlLFNBQVMsRUFBQyxJQUFJLENBQUNDLFFBQVEsR0FBQ2QsZ0VBQUNBLENBQUNlLGNBQWMsRUFBQ2YsZ0VBQUNBLENBQUNlLGNBQWMsQ0FBQ1IsSUFBR0wsaUVBQUNBLENBQUNjLFNBQVMsQ0FBQ1QsSUFBRyxJQUFJLENBQUNVLE1BQU07SUFBRTtJQUFDLE1BQU1BLFNBQVE7UUFBQyxJQUFHLEtBQWlCLEVBQUMsRUFBNEo7SUFBQTtBQUFDO0FBQWlDLENBQzdmLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JhaW5ib3draXQvLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsL2Rpc3QvaW5kZXguanM/MWRiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7TW9kYWxDdHJsIGFzIHQsVGhlbWVDdHJsIGFzIG8sQ29uZmlnQ3RybCBhcyBpLE9wdGlvbnNDdHJsIGFzIG59ZnJvbVwiQHdhbGxldGNvbm5lY3QvbW9kYWwtY29yZVwiO2NsYXNzIGR7Y29uc3RydWN0b3IoZSl7dGhpcy5vcGVuTW9kYWw9dC5vcGVuLHRoaXMuY2xvc2VNb2RhbD10LmNsb3NlLHRoaXMuc3Vic2NyaWJlTW9kYWw9dC5zdWJzY3JpYmUsdGhpcy5zZXRUaGVtZT1vLnNldFRoZW1lQ29uZmlnLG8uc2V0VGhlbWVDb25maWcoZSksaS5zZXRDb25maWcoZSksdGhpcy5pbml0VWkoKX1hc3luYyBpbml0VWkoKXtpZih0eXBlb2Ygd2luZG93PFwidVwiKXthd2FpdCBpbXBvcnQoXCJAd2FsbGV0Y29ubmVjdC9tb2RhbC11aVwiKTtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ3Y20tbW9kYWxcIik7ZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJiZWZvcmVlbmRcIixlKSxuLnNldElzVWlMb2FkZWQoITApfX19ZXhwb3J0e2QgYXMgV2FsbGV0Q29ubmVjdE1vZGFsfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbIk1vZGFsQ3RybCIsInQiLCJUaGVtZUN0cmwiLCJvIiwiQ29uZmlnQ3RybCIsImkiLCJPcHRpb25zQ3RybCIsIm4iLCJkIiwiY29uc3RydWN0b3IiLCJlIiwib3Blbk1vZGFsIiwib3BlbiIsImNsb3NlTW9kYWwiLCJjbG9zZSIsInN1YnNjcmliZU1vZGFsIiwic3Vic2NyaWJlIiwic2V0VGhlbWUiLCJzZXRUaGVtZUNvbmZpZyIsInNldENvbmZpZyIsImluaXRVaSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJzZXRJc1VpTG9hZGVkIiwiV2FsbGV0Q29ubmVjdE1vZGFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@walletconnect/modal/dist/index.js\n");

/***/ })

};
;